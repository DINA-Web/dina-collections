* Deactivate all FE filters
* Activate new filters frontend
* Implement FE support for new filters
* Create hoc to handle filter building?
** One or 2 hocs - for local and blobal.
** Local
*** 1. fetch form values
*** 2. use passed in path to select subform
*** 3. pass down method - buildLocalQuery
*** 4. inject into hoc object with queryBuilderFunctions?







TODO - SEARCH
* Add remarks search
* Solve issue with searching for old in identifier (Look into nested aggregations) https://stackoverflow.com/questions/34043808/terms-aggregation-for-nested-field-in-elastic-search




* Potentially add tags for ex identifiers
* Make click row select not go to form





* When removing place
** In RM -> list is not updated (removed item should be removed). Reference to parent id from child is kept when parent is removed. in the resource dropdown this should be visible
** Search index is not updated when update item is removed due to 404 call. Should be kept in index but request marked as deleted in result
** Fetching specimen in edit will just not get the relationship (no error but relationship not visible). The relationship should be fetched but in the dropdown it should be evident that the relationship target is deleted


TODO
* Use new query param for including deactivatedAt (tap into paranoid)
* Ensure trying to update a deleted resource result in throwing error
* Potentially add flag for adding deactivated relationships
* where to tap into deactivated display
** List all placed where this is needed
** Can it be generalized?

* Test in swagger
** Delete resource
** Fetch resource by id with and without
** Fetch all with and without
** Update

* Fix delete still visible in resource manager row after delete


* Go through ui
** List all sections affected





BE
* Repair tests
* Add log in controller wrappers for when reached
* Move identifier types to identifier service?
* Rename deactivate to delete. Potentially use sequalize internal stuff for this (paranoid)
* Write api tests for different scenario
* Fix time reporting







* Add intercept to query
* Improve getNestedItem to make it possible to specify includes better.








PRE make performance measurement
* Move validations to hooks.
* Improve error messages
* Ensure hooks are added to all controllers
* remove FE VALIDATION
* Dont compile validator schema on the fly
* Remove mock and example
* BONUS -> Create minUimal export for frontend
* BONUS -> Fix relationships and error duplications
* BONUS -> Only use schema interface for accessing schema
* BONUS -> Remove not needed spreads
POST compare performance




* Fix missing fieldKey


* Write test to make sure not possible to write to other file

* Add requestId, userId to job - create
* Use new jobCall for all create job
* Make job call ensure that operationId exists
* Make sure logging is cropping to large messages related to requests