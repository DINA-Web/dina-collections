DONE
* Make scripts to start backend in different modes incl script (app) to load all data
* Implement FE query in crud module
* Adapt search to query
* Add meta to elastic response
* Implement scroll to handle large result sets (use frontend to request scroll results)
* Clean up query crud and search (also call it not with body but aggregations and query and stuff)
* Integrate fredrik new component for localities with aggregations

TODO
* Add new mapping for idInteger (and make sure sort is working with it)


Import
* Create import data operation and controller
* Implement for all but specimen
* Create async migration for specimen with views as lookup
* Move models to resources
* Use migrator lib used by data app

CLEANUP
* Look at createObjectResponse performance
* Move utilities in lib/data to root

* Att schema and tests for models (and with that for mappings)
* Add check that model have required method in controller
* Rename aggregationFunction and filterFunction to [...]Name
* Remove search from common
* Mimic searchSpecimen structure in other services
* Add more schemas
* Force examples to be added to crud or else through error
* Potentially pass other stuff into crud query
* Fix model abstractions. Abstract away document on model level

TESTING
* Test all old crud from FE




