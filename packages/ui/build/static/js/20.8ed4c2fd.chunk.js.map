{"version":3,"sources":["apps/collectionsUi/viewModules/sourceData/Component.js","apps/collectionsUi/viewModules/sourceData/index.js"],"names":["mapDispatchToProps","getOneResourceActivity","actionCreators","resourceActivity","getOne","SourceData","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sourceData","_this2","id","sourceDataId","queryParams","includeFields","relationships","then","res","_res$attributes","attributes","resource","resourceId","setState","_this$state","header","concat","catalogNumber","Objects","AccessionNo","react_default","a","createElement","PageTemplate","dist_es","columns","textAlign","Column","className","ReadOnly","defaultExpanded","input","value","Component","connect","ownProps","_ownProps$match","match","_ownProps$match$param","params","__webpack_require__","d","__webpack_exports__","sourceData_name","constants","name"],"mappings":"6MAeMA,EAAqB,CACzBC,uBAAwBC,IAAeC,iBAAiBC,QAQpDC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,WAAY,MAHGR,mFAMC,IAAAS,EAAAN,KAClB,OAAOA,KAAKJ,MACTL,uBAAuB,CACtBgB,GAAIP,KAAKJ,MAAMY,aAEfC,YAAa,CACXC,cAAe,CACb,KACA,wBACA,sBACA,0BAGJC,cAAe,KAEhBC,KAAK,SAAAC,GAAO,IAAAC,EACkCD,EAAIE,WAAzCC,EADGF,EACHE,SAAUC,EADPH,EACOG,WAAYZ,EADnBS,EACmBT,WAC9BC,EAAKY,SAAS,CACZF,WACAC,aACAZ,kDAIC,IAAAc,EACsCnB,KAAKI,MAA1CY,EADDG,EACCH,SAAUC,EADXE,EACWF,WAAYZ,EADvBc,EACuBd,WAC1Be,EAAM,mBAAAC,OAAsBL,EAAtB,UAAAK,OAAuCJ,GAEjD,GAAiB,aAAbD,EAAyB,CAC3B,IAAMM,EACJjB,GAAcA,EAAWkB,SAAWlB,EAAWkB,QAAQC,YACrDF,IACFF,EAAM,mBAAAC,OAAsBL,EAAtB,KAAAK,OAAkCC,IAI5C,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,QAAS,EAAGC,UAAU,QAC1BN,EAAAC,EAAAC,cAACE,EAAA,EAAKG,OAAN,KACEP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAASxB,GAAce,GACvBK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACZ5B,GACCoB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,iBAAe,EAACC,MAAO,CAAEC,MAAOhC,gBAlDjCiC,aA8DVC,cA7ES,SAACnC,EAAOoC,GAAa,IAAAC,EACeD,EAAlDE,MADmCC,GAAAF,OAAA,IAAAA,EACQ,GADRA,GAC1BG,OAEjB,MAAO,CAAEpC,cAHkCmC,OAAA,IAAAA,EACC,GADDA,GAChBnC,eA8E3BlB,EAFaiD,CAGb5C,GCzFFkD,EAAAC,EAAAC,EAAA,yBAAAC,IAAAH,EAAAC,EAAAC,EAAA,8BAAAT,IAAAO,EAAAC,EAAAC,EAAA,8BAAAE,IAGA,IAAMC,EAAOD","file":"static/js/20.8ed4c2fd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header } from 'semantic-ui-react'\n\nimport actionCreators from 'coreModules/crud/actionCreators'\nimport PageTemplate from 'coreModules/commonUi/components/PageTemplate'\nimport ReadOnly from 'coreModules/form/components/inputs/CustomData/ReadOnly'\n\nconst mapStateToProps = (state, ownProps) => {\n  const { match: { params: { sourceDataId } = {} } = {} } = ownProps\n\n  return { sourceDataId }\n}\n\nconst mapDispatchToProps = {\n  getOneResourceActivity: actionCreators.resourceActivity.getOne,\n}\n\nconst propTypes = {\n  getOneResourceActivity: PropTypes.func.isRequired,\n  sourceDataId: PropTypes.string.isRequired,\n}\n\nclass SourceData extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sourceData: null,\n    }\n  }\n  componentDidMount() {\n    return this.props\n      .getOneResourceActivity({\n        id: this.props.sourceDataId,\n\n        queryParams: {\n          includeFields: [\n            'id',\n            'attributes.sourceData',\n            'attributes.resource',\n            'attributes.resourceId',\n          ],\n        },\n        relationships: [],\n      })\n      .then(res => {\n        const { resource, resourceId, sourceData } = res.attributes\n        this.setState({\n          resource,\n          resourceId,\n          sourceData,\n        })\n      })\n  }\n  render() {\n    const { resource, resourceId, sourceData } = this.state\n    let header = `Source data for ${resource}. Id: ${resourceId}`\n\n    if (resource === 'specimen') {\n      const catalogNumber =\n        sourceData && sourceData.Objects && sourceData.Objects.AccessionNo\n      if (catalogNumber) {\n        header = `Source data for ${resource} ${catalogNumber}`\n      }\n    }\n\n    return (\n      <PageTemplate>\n        <Grid columns={1} textAlign=\"left\">\n          <Grid.Column>\n            <Header>{sourceData && header}</Header>\n            <div className=\"ui form\">\n              {sourceData && (\n                <ReadOnly defaultExpanded input={{ value: sourceData }} />\n              )}\n            </div>\n          </Grid.Column>\n        </Grid>\n      </PageTemplate>\n    )\n  }\n}\n\nSourceData.propTypes = propTypes\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourceData)\n","import * as constants from './constants'\nimport Component from './Component'\n\nconst name = constants.MODULE_NAME\n\nexport { Component, constants, name }\n"],"sourceRoot":""}