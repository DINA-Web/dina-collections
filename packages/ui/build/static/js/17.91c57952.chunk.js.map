{"version":3,"sources":["apps/collectionsUi/viewModules/settings/Component.js","apps/collectionsUi/viewModules/settings/index.js"],"names":["ModuleTranslate","createModuleTranslate","mapDispatchToProps","updateUserPreference","connect","undefined","props","react_default","a","createElement","PageTemplate","dist_es","name","capitalize","textKey","padded","color","Header","Row","HeaderCell","Body","Cell","components","onChange","language","__webpack_require__","d","__webpack_exports__","settings_name","Component","constants","translations"],"mappings":"+WAYMA,EAAkBC,gCAAsB,YAExCC,EAAqB,CACzBC,6CAkDaC,mBACbC,EACAH,EAFaE,CA3CE,SAAAE,GACf,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,KAAK,YACXL,EAAAC,EAAAC,cAACT,EAAD,CAAiBa,YAAU,EAACC,QAAQ,YAEtCP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASI,QAAM,GACbR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOK,MAAM,SACXT,EAAAC,EAAAC,cAACE,EAAA,EAAMM,OAAP,KACEV,EAAAC,EAAAC,cAACE,EAAA,EAAMO,IAAP,KACEX,EAAAC,EAAAC,cAACE,EAAA,EAAMQ,WAAP,KACEZ,EAAAC,EAAAC,cAACT,EAAD,CAAiBa,YAAU,EAACC,QAAQ,qBAEtCP,EAAAC,EAAAC,cAACE,EAAA,EAAMQ,WAAP,KACEZ,EAAAC,EAAAC,cAACT,EAAD,CAAiBa,YAAU,EAACC,QAAQ,mBAI1CP,EAAAC,EAAAC,cAACE,EAAA,EAAMS,KAAP,KACEb,EAAAC,EAAAC,cAACE,EAAA,EAAMO,IAAP,KACEX,EAAAC,EAAAC,cAACE,EAAA,EAAMU,KAAP,KACEd,EAAAC,EAAAC,cAACT,EAAD,CAAiBa,YAAU,EAACC,QAAQ,oBAEtCP,EAAAC,EAAAC,cAACE,EAAA,EAAMU,KAAP,KACG,IACDd,EAAAC,EAAAC,cAACa,EAAA,eAAD,CACEN,MAAM,QACNO,SAAU,SAAAC,GACRlB,EAAMH,qBAAqB,WAAYqB,wBCnD3DC,EAAAC,EAAAC,EAAA,yBAAAC,IAAAH,EAAAC,EAAAC,EAAA,8BAAAE,IAAAJ,EAAAC,EAAAC,EAAA,8BAAAG,IAAAL,EAAAC,EAAAC,EAAA,iCAAAI,IAIA,IAAMnB,EAAOkB","file":"static/js/17.91c57952.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Segment, Icon, Table } from 'semantic-ui-react'\n\nimport PageTemplate from 'coreModules/commonUi/components/PageTemplate'\nimport { updateUserPreference } from 'coreModules/user/actionCreators'\nimport {\n  LanguageSelect,\n  createModuleTranslate,\n} from 'coreModules/i18n/components'\n\nconst ModuleTranslate = createModuleTranslate('settings')\n\nconst mapDispatchToProps = {\n  updateUserPreference,\n}\n\nconst propTypes = {\n  updateUserPreference: PropTypes.func.isRequired,\n}\n\nconst Settings = props => {\n  return (\n    <PageTemplate>\n      <h1>\n        <Icon name=\"options\" />\n        <ModuleTranslate capitalize textKey=\"header\" />\n      </h1>\n      <Segment padded>\n        <Table color=\"green\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <ModuleTranslate capitalize textKey=\"table.parameter\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <ModuleTranslate capitalize textKey=\"table.value\" />\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <ModuleTranslate capitalize textKey=\"table.language\" />\n              </Table.Cell>\n              <Table.Cell>\n                {' '}\n                <LanguageSelect\n                  color=\"green\"\n                  onChange={language => {\n                    props.updateUserPreference('language', language)\n                  }}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Segment>\n    </PageTemplate>\n  )\n}\n\nSettings.propTypes = propTypes\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Settings)\n","import * as constants from './constants'\nimport Component from './Component'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport { Component, constants, name, translations }\n"],"sourceRoot":""}