{"version":3,"sources":["coreModules/formSupport/selectors.js","coreModules/formSupport/globalSelectors.js","coreModules/i18n/utilities.js","domainModules/agent/constants.js","coreModules/search/keyObjectModule.js","coreModules/i18n/globalSelectors.js","domainModules/locality/constants.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/Base/DeleteRecordButton.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/Base/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/shared/RecordNavigationBar/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/shared/ResultOptionsBar/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TableView/InfiniteTableHeader.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TableView/InfiniteTableRow.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TableView/InfiniteTable.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TableView/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TreeView/ListItem/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/collection/TreeView/index.js","coreModules/resourceManager/utilities/buildList.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/CreateItemActionBar.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/EditItemActionBar.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/CreateItemColumn/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/EditItemColumn/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/index.js","coreModules/resourceManager/utilities/getTableWidth.js","coreModules/resourceManager/components/ResourceManager/FilterColumn/BottomBar/index.js","coreModules/resourceManager/components/ResourceManager/FilterColumn/index.js","coreModules/resourceManager/components/ResourceManager/picker/Header/index.js","coreModules/resourceManager/components/ResourceManager/picker/ActionBar/index.js","coreModules/resourceManager/components/ResourceManager/index.js","coreModules/resourceManager/components/index.js","coreModules/bootstrap/actionTypes.js","coreModules/user/actionCreators/getUser.js","coreModules/user/actionCreators/getUserPreferences.js","coreModules/user/actionCreators/updateUserPreferences.js","coreModules/user/actionCreators/updateUserPreference.js","coreModules/user/actionCreators/index.js","coreModules/commonUi/constants.js","coreModules/resourceManager/keyObjectModule.js","domainModules/collectionMammals/keyObjectModule.js","coreModules/formSupport/keyObjectModule.js","coreModules/bootstrap/utilities/includesModule.js","coreModules/bootstrap/utilities/registerModuleProperty.js","coreModules/bootstrap/utilities/setModuleConfig.js","coreModules/bootstrap/utilities/getModuleConfig.js","coreModules/bootstrap/utilities/unregisterModuleProperty.js","coreModules/bootstrap/utilities/index.js","coreModules/layout/constants.js","coreModules/user/constants.js","coreModules/size/actionTypes.js","coreModules/form/components/parts/ReduxFormFieldComponents/index.js","coreModules/form/components/parts/StaticContent/IconButton/index.js","coreModules/form/components/parts/StaticContent/RecordHistoryEvents/EventRow.js","coreModules/form/components/parts/StaticContent/RecordHistoryEvents/index.js","coreModules/form/utilities/wrapStaticContentParts.js","coreModules/form/components/parts/StaticContent/index.js","coreModules/form/components/parts/index.js","coreModules/form/utilities/errorTransformations/createMapRequiredStrings.js","coreModules/form/utilities/errorTransformations/mapParentError.js","coreModules/form/utilities/errorTransformations/index.js","utilities/getSecondArgument/index.js","coreModules/form/components/units/legacyData/index.js","coreModules/form/components/units/recordHistoryEvents/index.js","coreModules/form/components/units/index.js","coreModules/size/constants.js","utilities/stateHelper/immutableUtilities/index.js","utilities/stateHelper/index.js","coreModules/notifications/globalSelectors.js","coreModules/form/components/migrate/ButtonCopyPasteField.js","coreModules/form/components/ConfirmationPopup/index.js","coreModules/form/components/fields/Coordinates/CoordinateInput.js","coreModules/form/components/fields/Coordinates/index.js","coreModules/form/components/migrate/DisplaySearchResult.js","coreModules/form/components/inputs/DropdownSearch/Base/index.js","coreModules/form/components/inputs/DropdownSearch/Connect/index.js","coreModules/form/components/inputs/DropdownSearch/IdText/index.js","coreModules/form/components/inputs/DropdownSearch/Local/index.js","coreModules/form/components/inputs/DropdownSearch/Resource/index.js","coreModules/form/components/fields/DropdownSearch/index.js","coreModules/form/components/Form/index.js","coreModules/form/components/FormModal/index.js","coreModules/form/components/FormRow/FormSectionNavigation/Item.js","coreModules/form/components/FormRow/FormSectionNavigation/index.js","coreModules/form/components/Unit/index.js","coreModules/form/components/Section/index.js","coreModules/form/components/FormRow/FormSectionView/index.js","coreModules/form/components/FormRow/index.js","coreModules/formSupport/actionCreators/validateSections.js","coreModules/form/components/migrate/FormTable/FormTableHeaderRow.js","coreModules/form/components/migrate/FormTable/index.js","coreModules/form/components/migrate/InputDatePart/SearchInputWithResults.js","coreModules/form/components/migrate/InputDatePart/dateOptions.js","coreModules/form/components/migrate/InputDatePart/index.js","coreModules/form/components/inputs/MultipleSearchSelectionDropdown/Base/index.js","coreModules/form/components/inputs/MultipleSearchSelectionDropdown/Connect/index.js","coreModules/form/components/inputs/MultipleSearchSelectionDropdown/Local/index.js","coreModules/form/components/fields/MultipleSearchSelectionDropdown/index.js","coreModules/form/components/inputs/Search/Base/DefaultResultRenderer.js","coreModules/form/components/inputs/Search/Base/index.js","coreModules/form/components/inputs/Search/Connect/index.js","coreModules/form/components/fields/Search/index.js","coreModules/form/components/fields/DropdownSearch/TogglableDropdownSearch.js","coreModules/form/components/index.js","coreModules/form/components/FieldTemplate/FieldLabel.js","coreModules/error/components/FormSchemaError.js","coreModules/error/components/ConnectedFormSchemaError.js","coreModules/error/components/ErrorBoundary/FullPageError.js","coreModules/error/components/ErrorBoundary/index.js","coreModules/error/components/FormFieldError.js","coreModules/error/components/index.js","coreModules/keyboardShortcuts/components/KeyboardShortcuts/index.js","coreModules/keyboardShortcuts/components/ShortcutsDisplay.js","coreModules/keyboardShortcuts/components/index.js","coreModules/form/utilities/wrapReduxFormFieldParts.js","utilities/keyObjectModuleFactory/createActionCreators.js","utilities/keyObjectModuleFactory/utilities.js","utilities/keyObjectModuleFactory/createKeySpecifications.js","utilities/keyObjectModuleFactory/createReducer.js","utilities/keyObjectModuleFactory/createSelectors.js","utilities/keyObjectModuleFactory/index.js","utilities/keyObjectModuleFactory/createConstants.js","utilities/keyObjectModuleFactory/extractActionTypes.js","utilities/keyObjectModuleFactory/createGlobalSelectors.js","coreModules/notifications/actionTypes.js","coreModules/keyboardShortcuts/actionCreators/registerKeyboardShortcut.js","coreModules/keyboardShortcuts/actionCreators/setLayer.js","coreModules/keyboardShortcuts/actionCreators/setShortcutsModalHidden.js","coreModules/keyboardShortcuts/actionCreators/setShortcutsModalVisible.js","coreModules/keyboardShortcuts/actionCreators/toggleShortcutsModal.js","coreModules/keyboardShortcuts/actionCreators/unregisterKeyboardShortcut.js","coreModules/keyboardShortcuts/actionCreators/index.js","utilities/endpointFactory/client.js","registerServiceWorker.js","apps/collectionsUi/viewModules/app/Async.js","apps/collectionsUi/viewModules/dataViewer/Async.js","apps/collectionsUi/viewModules/docs/Async.js","apps/collectionsUi/config/index.js","apps/collectionsUi/initialModules.js","apps/collectionsUi/viewModules/public/Async.js","apps/collectionsUi/main.js","apps/collectionsUi/viewModules/index.js","domainModules/agent/components/AgentManager/Query.js","domainModules/agent/components/index.js","domainModules/taxon/components/TaxonNameDropdownSearch/index.js","coreModules/form/components/parts/StaticContent/AddButton/index.js","coreModules/crud/createCrudModule/factories/actionCreators/utilities/getActionActionTypes.js","coreModules/crud/createCrudModule/factories/actionCreators/utilities/getActionActionType.js","coreModules/crud/createCrudModule/factories/actionCreators/createFactory.js","coreModules/crud/createCrudModule/factories/actionCreators/delFactory.js","coreModules/crud/createCrudModule/factories/actionCreators/dispatchIncludedActions.js","coreModules/crud/createCrudModule/factories/actionCreators/getManyFactory.js","coreModules/crud/createCrudModule/factories/actionCreators/getOneFactory.js","coreModules/crud/createCrudModule/factories/actionCreators/queryFactory/createCallParams.js","coreModules/crud/createCrudModule/factories/actionCreators/queryFactory/index.js","coreModules/crud/createCrudModule/factories/actionCreators/updateFactory.js","coreModules/crud/createCrudModule/factories/actionCreators/index.js","coreModules/crud/createCrudModule/factories/actionCreators/queryFactory/performQuery.js","coreModules/crud/createCrudModule/factories/actionHandlers/updateStateWithOneFactory.js","coreModules/crud/createCrudModule/factories/actionHandlers/createItemUpdatePath.js","coreModules/crud/createCrudModule/factories/actionHandlers/updateStateWithManyFactory.js","coreModules/crud/createCrudModule/factories/actionHandlers/updateStateRemoveOneFactory.js","coreModules/crud/createCrudModule/factories/actionHandlers/index.js","coreModules/crud/createCrudModule/factories/actionTypes/index.js","coreModules/crud/createCrudModule/factories/actionTypes/createActionType.js","coreModules/crud/createCrudModule/factories/actionTypes/createSetIncludedActionType.js","coreModules/crud/createCrudModule/factories/coreReducer/index.js","coreModules/crud/createCrudModule/factories/globalSelectors/index.js","coreModules/crud/createCrudModule/factories/globalSelectors/createGetRelationshipItem.js","coreModules/crud/createCrudModule/factories/globalSelectors/createGetRelationshipItems.js","coreModules/crud/createCrudModule/factories/globalSelectors/createGetRelationshipItemOrItems.js","coreModules/crud/createCrudModule/factories/resourceReducer/index.js","coreModules/crud/createCrudModule/factories/selectors/createCustomSelectors.js","coreModules/crud/createCrudModule/factories/selectors/index.js","coreModules/crud/createCrudModule/factories/selectors/getLocalState.js","coreModules/crud/createCrudModule/factories/dux/index.js","coreModules/crud/createCrudModule/factories/specification/createResourceSpecification.js","coreModules/crud/createCrudModule/factories/specification/createOperationSpecification.js","coreModules/crud/createCrudModule/factories/specification/index.js","coreModules/crud/config.js","coreModules/crud/crudModule.js","coreModules/crud/createCrudModule/index.js","coreModules/notifications/actionCreators/removeNotification.js","coreModules/notifications/actionCreators/index.js","coreModules/keyboardShortcuts/globalSelectors.js","coreModules/form/components/parts/factories/createAgentInputs/index.js","coreModules/form/components/parts/factories/createRangeDate/index.js","coreModules/form/components/parts/factories/createRangeDateWithRemarks/index.js","coreModules/form/components/parts/factories/createSingleDate/index.js","coreModules/form/components/parts/factories/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleCancelCreate/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleCreateSubmit/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleDelete/InspectRelationsModal/ListItem.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleDelete/InspectRelationsModal/RelationshipList.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleDelete/InspectRelationsModal/ModalContent.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleDelete/InspectRelationsModal/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleDelete/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleEditSubmit/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/createHandleUndoChanges/index.js","coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents/index.js","coreModules/bootstrap/higherOrderComponents/createAsyncView.js","coreModules/bootstrap/higherOrderComponents/index.js","coreModules/i18n/components/MarkdownToHtmlAsync.js","coreModules/form/higherOrderComponents/wrapInFieldTemplate.js","domainModules/taxon/components/TaxonDropdownSearch/index.js","coreModules/layout/globalSelectors.js","utilities/log/index.js","domainModules/taxon/components/TaxonDropdownPickerSearch/index.js","coreModules/notifications/utilities/buildNotification.js","coreModules/notifications/schemas.js","coreModules/notifications/actionCreators/createNotification.js","coreModules/devToolsExtension/index.js","coreModules/i18n/components/Translate.js","coreModules/i18n/components/ModuleTranslate.js","coreModules/i18n/components/createModuleTranslate.js","coreModules/i18n/components/LanguageSelect.js","coreModules/i18n/components/Markdown.js","coreModules/i18n/components/index.js","coreModules/documentation/utilities/createModelLink.js","coreModules/form/components/inputs/Input/Text/index.js","coreModules/i18n/actionTypes.js","coreModules/user/actionCreators/logout.js","coreModules/user/endpoints.js","coreModules/form/components/fields/Input/index.js","coreModules/form/components/fields/TextArea/index.js","domainModules/locality/components/LocalityDropdownSearch/index.js","domainModules/curatedList/globalSelectors.js","coreModules/form/components/fields/Date/DatePart/index.js","coreModules/form/components/fields/Date/RangeDate/DateTypeRadios.js","coreModules/form/components/fields/Date/RangeDate/index.js","coreModules/form/components/fields/Date/utilities/index.js","coreModules/form/components/TogglableField/DefaultRenderEmptyState.js","coreModules/form/components/TogglableField/index.js","coreModules/form/components/TogglableField/DefaultRenderResult.js","coreModules/routing/higherOrderComponents/injectNavigationItems.js","coreModules/routing/higherOrderComponents/injectActiveLocationDescription.js","coreModules/routing/higherOrderComponents/index.js","coreModules/i18n/actionCreators/setLanguage.js","coreModules/i18n/actionCreators/index.js","domainModules/agent/components/AgentManager/Local.js","domainModules/agent/components/AgentDropdownPickerSearch/index.js","coreModules/crud/actionCreators/createNestedItem.js","coreModules/form/components/inputs/Checkbox/index.js","coreModules/form/components/parts/StaticContent/TranslatedHeader/index.js","domainModules/taxon/utilities.js","domainModules/taxon/components/ScientificNamesTable/TaxonNameRow.js","domainModules/taxon/components/ScientificNamesTable/NewTaxonNameRow.js","domainModules/taxon/components/ScientificNamesTable/index.js","domainModules/taxon/components/VernacularNamesTable/Row.js","domainModules/taxon/components/VernacularNamesTable/index.js","domainModules/taxon/components/formParts/index.js","coreModules/bootstrap/components/DefaultLoader.js","coreModules/bootstrap/components/DefaultLoadingError.js","coreModules/bootstrap/components/DefaultWrapper.js","coreModules/bootstrap/components/index.js","coreModules/layout/utilities/calculateColumnWidths.js","coreModules/layout/utilities/emToPixels.js","coreModules/layout/utilities/index.js","domainModules/curatedList/components/FeatureObservationDropdownSearch/index.js","domainModules/curatedList/components/index.js","coreModules/formSupport/utilities/reduceFieldSpecsToNodeFieldNamesMap.js","coreModules/formSupport/utilities/reduceFieldSpecsToUnitFieldNamesMap.js","coreModules/formSupport/utilities/reduceFieldSpecsToSectionFieldNamesMap.js","coreModules/formSupport/utilities/transformFormSpecToFieldMap.js","coreModules/formSupport/utilities/index.js","coreModules/crud/higherOrderComponents/createBatchFetchItems.js","coreModules/crud/higherOrderComponents/createEnsureAllItemsFetched.js","coreModules/crud/higherOrderComponents/createGetItemById.js","coreModules/crud/higherOrderComponents/createGetNestedItemById.js","coreModules/api/actionTypes.js","coreModules/api/actionCreators/callOperation.js","coreModules/crud/higherOrderComponents/createGetResourceCount.js","coreModules/crud/higherOrderComponents/index.js","domainModules/locality/components/LocalityDropdownPickerSearch/index.js","domainModules/taxon/components/AcceptedTaxonNameDropdownPickerSearch/index.js","domainModules/storage/constants.js","utilities/extractProps/index.js","config/index.js","coreModules/form/higherOrderComponents/createLinkFieldErrors.js","coreModules/form/higherOrderComponents/injectIsLatestActiveField.js","coreModules/form/higherOrderComponents/injectSearchOptions.js","coreModules/form/higherOrderComponents/pathBuilder.js","coreModules/form/higherOrderComponents/withUnsubmittedFormConfirmation.js","coreModules/form/higherOrderComponents/wrapInColumn.js","coreModules/form/higherOrderComponents/index.js","coreModules/form/components/FieldTemplate/FieldError.js","coreModules/form/components/FieldTemplate/index.js","domainModules/storage/schemas.js","domainModules/storage/components/formParts/PreparationTypesTable/PreparationTypeRow.js","domainModules/storage/components/formParts/PreparationTypesTable/NewPreparationTypeRow.js","domainModules/storage/components/formParts/PreparationTypesTable/index.js","domainModules/storage/components/StorageLocationDropdownSearch/index.js","domainModules/storage/components/StorageLocationDropdownPickerSearch/index.js","domainModules/storage/components/StorageLocationLevelDropdown/index.js","domainModules/storage/components/formParts/TaxaTable/TaxonRow.js","domainModules/storage/components/formParts/TaxaTable/NewTaxonRow.js","domainModules/storage/components/formParts/TaxaTable/index.js","domainModules/storage/components/formParts/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/sectionSpecs/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/sectionSpecs/storageLocation/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/unitSpecs/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/unitSpecs/connectedPreparationTypes/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/unitSpecs/connectedTaxa/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/unitSpecs/storageLocationRoot/index.js","domainModules/storage/components/StorageLocationManager/item/BaseForm/index.js","domainModules/storage/components/StorageLocationManager/item/CreateForm.js","domainModules/storage/components/StorageLocationManager/item/EditForm.js","domainModules/storage/components/StorageLocationManager/filter/Form.js","domainModules/storage/components/StorageLocationManager/filter/buildFilterQuery.js","domainModules/storage/components/StorageLocationManager/tableColumnSpecifications.js","domainModules/storage/components/StorageLocationManager/ItemTitle.js","domainModules/storage/components/StorageLocationManager/Base.js","domainModules/storage/components/StorageLocationManager/Local.js","domainModules/storage/components/StorageLocationManager/Query.js","domainModules/storage/components/index.js","coreModules/bootstrap/actionCreators/registerModules.js","domainModules/taxon/constants.js","coreModules/i18n/components/I18nProvider.js","coreModules/i18n/selectors.js","coreModules/notifications/selectors.js","coreModules/size/selectors.js","coreModules/routing/constants.js","coreModules/keyboardShortcuts/selectors.js","coreModules/user/actionCreators/login.js","coreModules/user/selectors.js","coreModules/form/higherOrderComponents/injectHelpNotificationProps.js","coreModules/api/actionCreators/downloadFile.js","coreModules/crud/actionTypes.js","coreModules/form/higherOrderComponents/injectErrorKeys.js","coreModules/form/globalSelectors.js","coreModules/form/selectors.js","coreModules/form/higherOrderComponents/injectLabelKey.js","coreModules/form/higherOrderComponents/injectParameterKey.js","coreModules/form/components/migrate/HelpTextNotification.js","coreModules/formSupport/constants.js","domainModules/agent/components/AgentDropdownSearch/index.js","coreModules/form/components/fields/Checkbox/index.js","coreModules/form/components/fields/Radio/index.js","coreModules/form/components/fields/RadioBoolean/index.js","coreModules/form/components/inputs/TextArea/index.js","coreModules/form/components/fields/Date/SingleDate/index.js","coreModules/form/components/fields/CustomData/index.js","coreModules/crud/actionCreators/index.js","domainModules/agent/components/TogglableAgentDropdownPickerSearch/index.js","domainModules/agent/components/AgentIdTextResult/index.js","domainModules/curatedList/components/CauseOfDeathDropdownSearch/index.js","domainModules/curatedList/components/EstablishmentMeansTypeRadioGroup/index.js","domainModules/curatedList/components/TypeSpecimenTypeDropdownSearch/index.js","domainModules/taxon/components/RankDropdown/index.js","domainModules/taxon/components/TaxonNameTaxonStatus/index.js","domainModules/curatedList/globalSelectorFactories.js","domainModules/curatedList/components/PreparationTypeDropdownSearch/index.js","coreModules/resourceManager/higherOrderComponents/createInjectItemTitle/index.js","coreModules/resourceManager/higherOrderComponents/createInjectItemTitle/DefaultItemTitle.js","coreModules/resourceManager/higherOrderComponents/createLocalState.js","coreModules/resourceManager/higherOrderComponents/createNavigationState.js","coreModules/resourceManager/higherOrderComponents/createPickerWrapper.js","coreModules/resourceManager/higherOrderComponents/createQueryState.js","coreModules/resourceManager/actionTypes.js","coreModules/resourceManager/actionCreators/index.js","coreModules/resourceManager/higherOrderComponents/createResourceManagerWrapper.js","coreModules/resourceManager/higherOrderComponents/index.js","domainModules/collectionMammals/globalSelectors.js","coreModules/search/actionCreators/search.js","coreModules/search/actionCreators/syncSearch.js","coreModules/search/actionCreators/index.js","coreModules/form/components/fields/Remarks/RemarksWrapper.js","coreModules/form/components/fields/Remarks/index.js","domainModules/taxon/components/TaxonResult/index.js","domainModules/taxon/components/TogglableTaxonDropdownPickerSearch/index.js","coreModules/commonUi/index.js","coreModules/crud/actionCreators/clearNestedCache.js","coreModules/resourceManager/constants.js","coreModules/localStorage/index.js","coreModules/logger/index.js","coreModules/routing/index.js","coreModules/form/components/parts/StaticContent/TranslatedHeaderWithHelpIcon/index.js","coreModules/bootstrap/utilities/createSerializedModuleMap.js","coreModules/bootstrap/utilities/startListeners.js","coreModules/bootstrap/utilities/createMiddlewareMap.js","coreModules/bootstrap/utilities/createRootReducer.js","coreModules/bootstrap/utilities/createConfigValidation.js","coreModules/bootstrap/utilities/createModuleMap.js","coreModules/bootstrap/utilities/createListeners.js","coreModules/bootstrap/utilities/updateModuleState.js","coreModules/bootstrap/utilities/createMiddlewareArray.js","coreModules/bootstrap/utilities/createRegisterModules.js","coreModules/bootstrap/utilities/createUnregisterModules.js","coreModules/bootstrap/actionCreators/unregisterModules.js","coreModules/bootstrap/enhancer.js","coreModules/bootstrap/utilities/createAsyncRegisterModules.js","coreModules/bootstrap/utilities/createAsyncUnregisterModules.js","coreModules/bootstrap/utilities/createEnhancerStateManager.js","coreModules/index.js","domainModules/index.js","store/index.js","domainModules/agent/schemas.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/agentBirthAndDeath/index.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/agentContactDetails/index.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/agentNameDetails/index.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/agentRoles/index.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/index.js","domainModules/agent/components/AgentManager/item/BaseForm/unitSpecs/agentRoot/index.js","domainModules/agent/components/AgentManager/item/BaseForm/sectionSpecs/index.js","domainModules/agent/components/AgentManager/item/BaseForm/sectionSpecs/agent/index.js","domainModules/agent/components/AgentManager/item/BaseForm/index.js","domainModules/agent/components/AgentManager/item/CreateForm.js","domainModules/agent/components/AgentManager/item/BaseForm/transformations/input/index.js","domainModules/agent/components/AgentManager/item/EditForm.js","domainModules/agent/components/AgentManager/filter/Form.js","domainModules/agent/components/AgentManager/filter/buildFilterQuery.js","domainModules/agent/components/AgentManager/item/BaseForm/transformations/output/index.js","domainModules/agent/components/AgentManager/tableColumnSpecifications.js","domainModules/agent/components/AgentManager/ItemTitle.js","domainModules/agent/components/AgentManager/Base.js","coreModules/i18n/higherOrderComponents/withI18n.js","coreModules/i18n/higherOrderComponents/index.js","coreModules/size/actionCreators/setBreakpoint.js","coreModules/size/actionCreators/setHeight.js","coreModules/size/actionCreators/setWidth.js","coreModules/size/listener.js","coreModules/size/schemas.js","coreModules/size/reducer.js","coreModules/size/index.js","coreModules/user/notifications.js","coreModules/user/shortcuts.js","coreModules/user/middleware.js","coreModules/user/reducer.js","coreModules/user/index.js","coreModules/notifications/notifications.js","coreModules/notifications/middleware.js","coreModules/notifications/reducer.js","coreModules/notifications/index.js","coreModules/i18n/constants.js","coreModules/i18n/schemas.js","coreModules/i18n/reducer.js","coreModules/i18n/index.js","coreModules/error/constants.js","coreModules/error/notifications/index.js","coreModules/error/middleware.js","coreModules/error/index.js","domainModules/agent/components/AgentRolesAccordion/AgentRoleContent.js","domainModules/agent/components/AgentRolesAccordion/AgentRoleTitle.js","domainModules/agent/components/AgentRolesAccordion/index.js","domainModules/agent/components/formParts/index.js","coreModules/crud/reducer.js","coreModules/crud/selectors.js","coreModules/crud/index.js","coreModules/keyboardShortcuts/constants.js","coreModules/keyboardShortcuts/reducer.js","coreModules/keyboardShortcuts/index.js","coreModules/layout/higherOrderComponents/createApplicationLayer.js","coreModules/layout/higherOrderComponents/index.js","coreModules/crud/globalSelectors.js","coreModules/bootstrap/index.js","coreModules/bootstrap/constants.js","coreModules/api/middleware.js","coreModules/api/index.js","coreModules/api/constants.js","coreModules/layout/middleware.js","coreModules/layout/index.js","coreModules/keyboardShortcuts/higherOrderComponents/createShortcutLayer.js","coreModules/keyboardShortcuts/higherOrderComponents/index.js","domainModules/locality/components/GeographicLevelDropdown/index.js","domainModules/locality/components/formParts/index.js","coreModules/crud/constants.js","coreModules/commonUi/components/Accordion/index.js","coreModules/commonUi/components/ColumnRowHeader/index.js","coreModules/commonUi/components/DateString/index.js","coreModules/commonUi/components/Footer.js","coreModules/commonUi/components/LayerModal/ModalContentWrapper.js","coreModules/commonUi/components/LayerModal/index.js","coreModules/commonUi/components/ThreeColumnGrid/index.js","coreModules/commonUi/components/TranslatedLabel.js","coreModules/commonUi/components/index.js","utilities/Dependor/index.js","coreModules/user/actionTypes.js","coreModules/search/components/TagTypeDropdown/index.js","coreModules/search/components/FeatureTypeRange/index.js","coreModules/search/components/MultipleChoiceCheckboxes/Local.js","coreModules/search/components/MultipleChoiceCheckboxes/Field.js","coreModules/search/components/MultipleSearchTagsSelect/TagGroup.js","coreModules/search/components/MultipleSearchTagsSelect/selectors.js","coreModules/search/components/MultipleSearchTagsSelect/RefineTagSelection.js","coreModules/search/components/MultipleSearchTagsSelect/RefineTagSelectionButton.js","coreModules/search/components/MultipleSearchTagsSelect/index.js","coreModules/search/components/MultipleSearchTagsSelect/Field.js","coreModules/search/components/NoResultsFound/index.js","coreModules/search/components/SearchPreview/Field.js","coreModules/search/components/TagTypeDropdown/Field.js","coreModules/search/components/index.js","coreModules/layout/components/NavigationSidebar/SidebarNavItem.js","coreModules/layout/components/NavigationSidebar/SidebarNavItemGroup.js","coreModules/layout/components/NavigationSidebar/index.js","coreModules/layout/components/AppNavigationSidebar/index.js","coreModules/layout/components/Block/Header/Title/index.js","coreModules/layout/components/Block/Header/index.js","coreModules/layout/components/Block/Content/index.js","coreModules/layout/components/Block/index.js","coreModules/layout/components/ColumnLayout/index.js","coreModules/layout/components/InformationSidebar/index.js","coreModules/layout/components/RowLayout/index.js","coreModules/layout/components/TopMenu/UserMenu.js","coreModules/layout/components/TopMenu/index.js","coreModules/layout/components/ViewWrap.js","coreModules/layout/components/index.js","coreModules/form/constants.js","coreModules/commonUi/components/PageTemplate.js","coreModules/user/higherOrderComponents/requireLoggedIn.js","coreModules/user/higherOrderComponents/requireLoggedOut.js","coreModules/user/higherOrderComponents/index.js","domainModules/taxon/schemas.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/unitSpecs/index.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/unitSpecs/scientificNameRoot/index.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/unitSpecs/taxonStatus/index.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/sectionSpecs/index.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/sectionSpecs/scientificName/index.js","domainModules/taxon/components/TaxonNameManager/item/BaseForm/index.js","domainModules/taxon/components/TaxonNameManager/item/CreateForm.js","domainModules/taxon/components/TaxonNameManager/item/EditForm.js","domainModules/taxon/components/TaxonNameManager/filter/Form.js","domainModules/taxon/components/TaxonNameManager/filter/buildFilterQuery.js","domainModules/taxon/components/TaxonNameManager/tableColumnSpecifications.js","domainModules/taxon/components/TaxonNameManager/Base.js","domainModules/taxon/components/TaxonNameManager/Local.js","domainModules/taxon/components/TaxonManager/item/BaseForm/unitSpecs/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/unitSpecs/scientificNames/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/unitSpecs/taxonRoot/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/unitSpecs/vernacularNames/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/sectionSpecs/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/sectionSpecs/taxon/index.js","domainModules/taxon/components/TaxonManager/item/BaseForm/transformations/syncErrors/mapAcceptedTaxonNameError.js","domainModules/taxon/components/TaxonManager/item/BaseForm/index.js","domainModules/taxon/components/TaxonManager/item/CreateForm.js","domainModules/taxon/components/TaxonManager/item/EditForm.js","domainModules/taxon/components/TaxonManager/filter/Form.js","domainModules/taxon/components/TaxonManager/filter/buildFilterQuery.js","domainModules/taxon/components/TaxonManager/tableColumnSpecifications.js","domainModules/taxon/components/TaxonManager/ItemTitle.js","domainModules/taxon/components/TaxonManager/Base.js","domainModules/taxon/components/TaxonManager/Local.js","domainModules/taxon/components/TaxonManager/Query.js","domainModules/taxon/components/TaxonNameDropdownPickerSearch/index.js","domainModules/taxon/components/TaxonNameManager/Query.js","domainModules/taxon/components/index.js","apps/collectionsUi/viewModules/app/constants.js","apps/collectionsUi/viewModules/dataViewer/constants.js","apps/collectionsUi/viewModules/docs/constants.js","coreModules/documentation/components/GeneralDocs.js","coreModules/documentation/components/VersionOverview.js","apps/collectionsUi/viewModules/public/constants.js","coreModules/search/utilities/queryBuilderFactory/utilities/index.js","coreModules/search/utilities/queryBuilderFactory/createHigherOrderComponents/createFieldHocFactory.js","coreModules/search/utilities/queryBuilderFactory/createHigherOrderComponents/createFormHocFactory.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/AgeAndStage/querySpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/numberRangeSpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Agent/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Bones/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/CollectingCondition/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/DatePeriod/querySpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/dateRangeSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Identifier/querySpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/featureRangeSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Length/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Locality/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/PhysicalObject/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Remarks/querySpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/previewSearchSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Sex/querySpecification.js","coreModules/search/utilities/queryBuilderFactory/utilities/factories/stringSpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Storage/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Taxonomy/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Weight/querySpecification.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/queryBuilder.js","coreModules/search/utilities/queryBuilderFactory/index.js","coreModules/search/utilities/queryBuilderFactory/createSelectors/index.js","coreModules/search/utilities/queryBuilderFactory/createHigherOrderComponents/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/input/transformFeatureObservations.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/input/index.js","domainModules/collectionMammals/schemas.js","domainModules/collectionMammals/components/CatalogNumberModal/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/output/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/output/transformFeatureObservations.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/output/transformOriginInformation.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/transformations/syncErrors/mapCollectionItemsErrors.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/acquisition/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/collectingDate/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/collectingDeathRoot/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/collectingLocation/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/collectorExpedition/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/death/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/determinations/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/features/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/identifiers/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/localityOriginRoot/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/origin/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/factories/createPhysicalObjectsByCategory/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/physicalObjectsOtherPreparation/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/physicalObjectsRoot/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/physicalObjectsSkeleton/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/physicalObjectsSkin/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/physicalObjectsWetPreparation/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/recordHistoryExternalEvents/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/specimenRoot/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/taxonomyRoot/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/taxonOtherName/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/taxonPreferredName/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/unitSpecs/typeStatus/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/basicInformation/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/taxonomy/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/localityOrigin/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/collectingDeath/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/physicalObjects/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/sectionSpecs/features/index.js","domainModules/curatedList/components/formParts/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CollectingLocality/CollectingPosition.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CollectingLocality/VerticalPosition.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CollectingLocality/PositionModal.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CollectingLocality/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CustomTaxonNamesTable/Row.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/CustomTaxonNamesTable/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion/DeterminationContent.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion/DeterminationTitle.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/FeatureObservations/FeatureObservationsTableRow.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/FeatureObservations/FeatureObservationsTable.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/FeatureObservations/FeatureObservationsTitle.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/FeatureObservations/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/IdentifiersTable/Row.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/IdentifiersTable/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentForm/FormActions.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentForm/Base.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentForm/Edit.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentItem.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentForm/Create.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentForm/Test.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/CuratorialAssessmentsList.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/PhysicalObjectContent.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/PhysicalObjectTitle.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/PhysicalObjectsAccordion/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/RecordHistoryExternalEvents/Fields.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/RecordHistoryExternalEvents/EventRow.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/RecordHistoryExternalEvents/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/SelectiveBreeding/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/formParts/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/RecordForm/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/CreateSpecimen/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/EditSpecimen/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/tableColumnSpecifications/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultOptionsBar/CsvExporter.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultOptionsBar/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultTableSettings/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultTableView/InfiniteTableRow.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultTableView/InfiniteTable.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultTableView/InfiniteTableHeader.js","domainModules/collectionMammals/components/MammalManager/MainColumn/ResultTableView/index.js","domainModules/collectionMammals/components/MammalManager/MainColumn/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/BottomBar/index.js","domainModules/collectionMammals/utilities/buildQuery.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/AgeAndStage/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Agent/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Bones/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/CollectingCondition/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/DatePeriod/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Identifier/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Length/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Locality/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/PhysicalObject/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Remarks/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Sex/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Storage/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Taxonomy/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/Weight/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterFormSections/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterContent.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/FilterTitle.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/Filters/index.js","domainModules/collectionMammals/components/MammalManager/FilterColumn/index.js","domainModules/collectionMammals/components/MammalManager/index.js","coreModules/user/globalSelectors.js","domainModules/locality/schemas.js","domainModules/locality/components/LocalityManager/item/BaseForm/sectionSpecs/index.js","domainModules/locality/components/LocalityManager/item/BaseForm/sectionSpecs/place/index.js","domainModules/locality/components/LocalityManager/item/BaseForm/unitSpecs/index.js","domainModules/locality/components/LocalityManager/item/BaseForm/unitSpecs/place/index.js","domainModules/locality/components/LocalityManager/item/BaseForm/index.js","domainModules/locality/components/LocalityManager/item/CreateForm.js","domainModules/locality/components/LocalityManager/item/EditForm.js","domainModules/locality/components/LocalityManager/filter/Form.js","domainModules/locality/components/LocalityManager/filter/buildFilterQuery.js","domainModules/locality/components/LocalityManager/tableColumnSpecifications.js","domainModules/locality/components/LocalityManager/ItemTitle.js","domainModules/locality/components/LocalityManager/Base.js","domainModules/locality/components/LocalityManager/Local.js","domainModules/locality/components/LocalityManager/Query.js","domainModules/locality/components/index.js","coreModules/documentation/utilities/extractModelFromSpecification.js","coreModules/documentation/utilities/getPropertyIsArray.js","coreModules/documentation/utilities/getPropertyIsModel.js","coreModules/documentation/utilities/getPropertyIsAnyOf.js","coreModules/documentation/utilities/getAnyOfLinksFromProperty.js","coreModules/documentation/utilities/getArrayLinkFromProperty.js","coreModules/documentation/utilities/getModelLinkFromProperty.js","coreModules/documentation/components/DataModel/Type.js","coreModules/documentation/utilities/createParameterLink.js","coreModules/documentation/components/DataModel/PropertyOverview.js","coreModules/documentation/utilities/getPropertySummary.js","coreModules/documentation/components/DataModel/Model.js","coreModules/documentation/components/DataModel/Property.js","coreModules/documentation/components/DataModel/index.js","coreModules/user/components/LoginForm.js","coreModules/user/schemas.js","coreModules/user/components/index.js","coreModules/documentation/components/Nav.js","coreModules/documentation/utilities/getAvailableSchemaVersions.js","coreModules/form/utilities/radioTransformations.js","coreModules/form/utilities/createErrorKeys.js","coreModules/form/utilities/createHelpNotificationProps.js","coreModules/documentation/constants.js","coreModules/allModules.js","domainModules/curatedList/index.js","domainModules/allModules.js","utilities/test/defaultTestConfig.js","utilities/test/setupTestComponent.js","utilities/test/createTestStore.js","coreModules/form/utilities/createInputTest.js","coreModules/form/utilities/createLabelKey.js","coreModules/form/utilities/createParameterKey.js","coreModules/form/utilities/createUpdateFormPartStatus.js","coreModules/form/utilities/handleReduxFormSubmitError.js","coreModules/form/utilities/index.js","coreModules/crud/keyObjectModule.js","coreModules/search/constants.js","coreModules/notifications/constants.js","domainModules/collectionMammals/constants.js","domainModules/curatedList/constants.js","coreModules/notifications/components/Flash.js","coreModules/notifications/components/FormFieldHelpIcon.js","coreModules/notifications/components/Inline/Body.js","coreModules/notifications/components/Inline/index.js","coreModules/notifications/components/Modal.js","coreModules/notifications/components/NotificationDisplay.js","coreModules/notifications/components/index.js","coreModules/form/components/inputs/CustomData/ReadOnly/index.js","coreModules/size/higherOrderComponents/createInjectScrollLeft.js","coreModules/size/higherOrderComponents/injectWindowHeight.js","coreModules/size/higherOrderComponents/injectWindowWidth.js","coreModules/size/higherOrderComponents/index.js","utilities/wrapSelectors/index.js","coreModules/layout/keyObjectModule.js","coreModules/keyboardShortcuts/actionTypes.js","coreModules/formSupport/index.js","coreModules/crud/utilities.js","coreModules/resourceManager/index.js","coreModules/search/index.js","domainModules/agent/index.js","domainModules/locality/index.js","domainModules/storage/index.js","coreModules/size/globalSelectors.js","domainModules/collectionMammals/actionTypes.js","domainModules/collectionMammals/actionCreators/clearSearchParameters.js","utilities/transformations/flattenObjectResponse/index.js","utilities/transformations/flattenJsonApiData/index.js","domainModules/collectionMammals/endpoints.js","domainModules/collectionMammals/actionCreators/lookupMammals.js","utilities/transformations/flattenArrayResponse/index.js","domainModules/collectionMammals/actionCreators/updateSearchParameter.js","domainModules/collectionMammals/index.js","domainModules/taxon/actionTypes.js","domainModules/taxon/selectors.js","domainModules/taxon/globalSelectors.js","domainModules/taxon/middleware.js","domainModules/taxon/reducer/lookup/index.js","domainModules/taxon/reducer/index.js","domainModules/taxon/index.js","coreModules/form/notifications/index.js","coreModules/form/reducer.js","coreModules/form/index.js","coreModules/search/higherOrderComponents/createInjectSearch.js","coreModules/search/higherOrderComponents/createInjectSearchResult.js","coreModules/search/higherOrderComponents/index.js","coreModules/form/components/FieldWrapper/index.js"],"names":["getLocalState","state","formSupport","getFormSpec","_ref","formName","getSectionFieldNamesMap","createSelector","formSpec","reduceFieldSpecsToSectionFieldNamesMap","Object","values","getUnitFieldNamesMap","reduceFieldSpecsToUnitFieldNamesMap","getUnitInitiallyHiddenFieldNamesMap","initiallyHiddenFields","filter","_ref2","initiallyHidden","getUnitInitiallyHiddenFieldNames","_ref3","unit","getAnyFieldIsInvalid","fieldNames","_ref3$requireTouched","requireTouched","asyncErrors","getFormAsyncErrors","formMeta","getFormMeta","syncErrors","getFormSyncErrors","submitErrors","getFormSubmitErrors","formValues","getFormValues","_loop","index","fieldName","fieldNameParts","split","length","fieldArray","objectPath","get","fieldNamesWithIndex","map","_","fieldNameIndex","replace","concat","v","fieldMeta","isTouched","touched","_ret","computeSectionIsInvalid","_ref5","arguments","undefined","sectionName","sectionFieldNames","selectors","__webpack_exports__","objectSpread","wrapSelectors","getInitiallyHiddenFieldsHaveValue","_ref$baseValues","baseValues","compareInitiallyHiddenWithBaseValues","formValueSelector","initiallyHiddenFieldNames","value","initialValue","isEmpty","isEqual","getSectionIsDirty","getIsDirty","isDirty","apply","toConsumableArray","getSectionIsInvalid","_ref4","sectionInvalidStatus","formSupportKeyObjectSelectors","getSectionsInValidStatus","_ref6","sectionSpecs","_ref7","name","__webpack_require__","d","getTranslationByPath","capitalizeFirstLetter","buildTextKeys","markdownToHtmlAsync","outputIsATextKey","_utilities_stateHelper__WEBPACK_IMPORTED_MODULE_0__","interpolationRegex","translationByPathGetter","createGetter","translations","fallbackLanguage","language","params","inputTextKey","textKey","inputTextKeys","textKeys","translation","reduce","foundTranslation","fallbackTranslation","join","console","warn","string","resultString","stringParameters","match","forEach","stringParameter","cleanParameter","toString","format","charAt","toUpperCase","slice","buildModuleTextKey","module","scope","modules","push","markdown","Promise","all","e","then","t","bind","renderer","output","indexOf","r","MODULE_NAME","ALL","PERSON","ORGANIZATION","OTHER","UNKNOWN","AGENT_TYPE_OPTIONS","common_es5_stringFormatters__WEBPACK_IMPORTED_MODULE_0__","agentType","key","text","actionCreators","actionTypes","globalSelectors","reducer","utilities_keyObjectModuleFactory__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","keyObjectModuleFactory","keys","constants","utilities_wrapSelectors__WEBPACK_IMPORTED_MODULE_0__","_selectors__WEBPACK_IMPORTED_MODULE_1__","CONTINENT","COUNTRY","DISTRICT","PROVINCE","PLANET","DeleteRecordButton","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","assertThisInitialized","handleDelete","handleOpen","open","setState","onDelete","_this2","loading","react_default","a","createElement","Fragment","react_router_dom_es","message","setTimeout","when","dist_es","onClose","size","trigger","basic","onClick","style","float","pointerEvents","type","Header","Content","Column","Actions","textAlign","primary","PureComponent","defaultProps","ModuleTranslate","createModuleTranslate","hasError","schemaErrors","errors","textStyle","marginLeft","marginTop","loadingDelete","nestedItem","onCancelCreate","onSubmit","onUndoChanges","RecordActionBar","_PureComponent","inherits","createClass","_this$props","hasSyncErrors","invalid","handleCancelCreate","handleSubmit","handleUndoChanges","pristine","submitting","isRoot","displayChangedMessage","padded","verticalAlign","disabled","config","isDevelopment","components","form","Base_DeleteRecordButton","compose","connect","isInvalid","isPristine","isSubmitting","Slider","handleKeyDown","ReactRangeSlider","currentTableRowNumber","numberOfListItems","onOpenNewRecordForm","onSelectNextRecord","onSelectPreviousRecord","onSetCurrentTableRowNumber","onShowAllRecords","showNewRecordButton","showRecordInput","showShowAllButton","showSlider","totalNumberOfRecords","RecordNavigationBar","_Component","sliderRowNumber","_this3","isLargeScreen","handleOpenNewRecordForm","handleSelectNextRecord","handleSelectPreviousRecord","handleSetCurrentTableRowNumber","handleShowAllRecords","sliderValue","isShowingAll","Row","className","Group","icon","event","fluid","max","min","onChange","target","width","RecordNavigationBar_Slider","newTableRowNumber","onChangeComplete","step","tooltip","fontWeight","color","fontStyle","Component","sizeSelectors","getIsLarge","ResultOptionsBar","createItemActive","editItemActive","itemEnabled","handleFormTabClick","onFormTabClick","handleListTabClick","onListTabClick","handleToggleFilters","onToggleFilters","handleTreeTabClick","onTreeTabClick","tableActive","treeActive","treeEnabled","attached","position","tabular","Item","active","link","Menu","InfiniteTableHeader","height","scrollLeft","tableColumnSpecifications","left","label","columnWidth","i18n_components","capitalize","createInjectScrollLeft","InfiniteTableRow","background","itemId","onClickRow","rowNumber","preventDefault","emToPixels","buildText","fieldPath","Array","isArray","overflow","textOverflow","whiteSpace","inverted","createGetNestedItemById","refresh","shouldFetch","focusedIndex","focusedItemId","listItems","tableBatchFetchOptions","itemsRenderer","items","ref","InfiniteTable","list","setListRef","element","scroll","renderItem","prevProps","prevCurrentTableRowNumber","prevFocusedItemId","_this$list$getVisible","getVisibleRange","firstVisibleRow","slicedToArray","scrollTo","scrollAround","_this$props2","fetchItemById","managerScope","resource","id","resolveRelationships","relationships","TableView_InfiniteTableRow","namespace","_this$props3","react_list_default","itemRenderer","paddingTop","content","createBatchFetchItems","includeFields","rows","borderBottom","ResultTableView","renderRow","TableView_InfiniteTableHeader","search_components","TableView_InfiniteTable","assign","Error","layout_components","indentation","isExpandable","itemTitle","level","ListItem","isExpanded","isFocused","onToggleRow","triangleIcon","padding","stopPropagation","paddingRight","createInjectItemTitle","ItemTitle","TreeView","baseItems","expandedIds","itemsObject","showAll","prevBaseItems","prevExpandedIds","prevItemsObject","prevShowAll","_ref$expandedIds","_ref$showAll","walk","_ref2$level","_ref2$items","item","children","data","mappedChildren","childId","child","buildList","setListItems","itemFetchOptions","TreeView_ListItem","crudSelectors","getItemsObject","createHandleCreateSubmit","createHandleCancelCreate","createHandleDelete","createHandleEditSubmit","createHandleUndoChanges","CreateItemColumn","availableHeight","renderCreateForm","extractedProps","extractProps","CreateItemActionBar","buildEditItemHeaders","itemHeader","itemSubHeader","group","relationshipsToCheckBeforeDelete","EditItemColumn","_buildEditItemHeaders","renderEditForm","EditItemActionBar","createGetNestedItemHocInput","fetchRelationshipsBeforeDelete","recordNavigationHeight","recordOptionsHeight","transformOutput","MainColumn","getRows","memoize","isPicker","paddingLeft","shared_RecordNavigationBar","collection_TreeView","_ref$includeColumns","includeColumns","totalWidth","includes","getTableWidth","TableView","item_EditItemColumn","_this$props4","item_CreateItemColumn","shared_ResultOptionsBar","onInteraction","NAVIGATE_LIST","NAVIGATE_TREE","_this$props5","injectWindowHeight","BottomBar","handleReset","onUpdateFilterValues","filterHeader","filterValues","FilterColumn","CLOSE_ITEM_VIEW","commonUi_components","_this$props$filterVal","initialValues","renderFilterForm","FilterColumn_BottomBar","ItemHeader","onClosePicker","pickerTitle","handlePickItem","shortcuts","command","description","onPress","excludeRootNode","onPickItem","keyboardShortcuts_components","activeInLayer","TOP_NAVBAR_HEIGHT","PICKER_MODAL_PADDING","PICKER_HEADER_HEIGHT","PICKER_ACTION_BAR_HEIGHT","rightSidebarWidth","ResourceManager","getColumns","filterColumnWidth","filterActive","rightSidebarIsOpen","columns","filterColumnStyle","borderLeft","zIndex","renderColumn","columnHeight","ResourceManager_MainColumn","ResourceManager_FilterColumn","ActionBar","createResourceManagerWrapper","windowHeight","layoutSelectors","getRightSidebarIsOpen","Base","components_ResourceManager","BOOTSTRAP_REGISTER_MODULES","BOOTSTRAP_UNREGISTER_MODULES","getUser","dispatch","getState","apiClient","USER_GET_USER_REQUEST","GET_USER","response","payload","USER_GET_USER_SUCCESS","error","USER_GET_USER_FAIL","getUserPreferences","USER_GET_USER_PREFERENCES_REQUEST","resolve","reject","userPreferences","utils","getItem","USER_PREFERENCES_KEY","err","USER_GET_USER_PREFERENCES_SUCCESS","catch","USER_GET_USER_PREFERENCES_FAIL","updateUserPreferences","preferences","USER_UPDATE_USER_PREFERENCES_REQUEST","setItem","USER_UPDATE_USER_PREFERENCES_SUCCESS","USER_UPDATE_USER_PREFERENCES_FAIL","updateUserPreference","currentPreferences","defineProperty","login","logout","ALL_COLLAPSED","ALL_EXPANDED","FIRST_EXPANDED","MULTI","SINGLE","actionPrefix","activeFormSectionIndex","filterColumnIsOpen","mainColumnActiveTab","showAllFormSections","includesModule","action","moduleName","registerModuleProperty","customRegisterKey","_ref$ignoreModuleName","ignoreModuleNames","property","_ref$scopeUnderModule","scopeUnderModules","statePath","currentPropertyObject","mergedPropertyObject","obj","immutable","set","setModuleConfig","getModuleConfig","unregisterModuleProperty","newObj","pixelsPerEm","APPLICATION_LAYER_VIEW","APPLICATION_LAYER_MODAL","AUTH_TOKEN_KEY","SIZE_SET_BREAKPOINT","SIZE_SET_HEIGHT","SIZE_SET_WIDTH","wrapReduxFormFieldParts","Checkbox","CustomData","Input","Radio","RadioBoolean","RangeDate","Remarks","SingleDate","TextArea","IconButton","handleClick","includeSourceLink","recordHistoryId","username","EventRow","eventType","timestamp","eventTimestamp","getYMDHMSFromTimestamp","eventRow","href","createdEvent","lastModifiedEvent","RecordHistoryEvents","moduleTranslate","i18n","hasEvents","TranslatedHeader","as","RecordHistoryEvents_EventRow","hasSourceData","srcCreatedAt","srcUpdatedAt","componentMap","withI18n","resourceActivities","find","wrapStaticContentParts","AddButton","TranslatedHeaderWithHelpIcon","componentName","wrapInColumn","ReduxFormFieldComponents","StaticContent","createMapRequiredStrings","fieldPaths","transformedSyncErrors","path","errorPath","errorCode","fullPath","mapParentError","parentError","parentIdError","parent","errorTransformations_createMapRequiredStrings","errorTransformations_mapParentError","getSecondArgument","secondArg","legacyData","parts","componentProps","wrapInField","recordHistoryEvents","SIZE_SMALL","SIZE_MEDIUM","SIZE_LARGE","buildPath","segments","pathArguments","arr","segment","parameter","arg","createSetter","arg1","arg2","createDeleter","res","del","iterpolatedSegments","pop","newSubpath","subResult","immutableReplace","newPath","oldPath","immutableUtilities_createDeleter","immutableUtilities_createGetter","immutableUtilities_createSetter","immutableUtilities_immutableReplace","ButtonCopyPasteField","arrowIcon","buttonClassNames","buttonText","changeFieldValue","copyField","copyValue","pasteField","Field","FieldLabel","htmlFor","labelPosition","newValueSelector","hideOnScroll","iconName","ConfirmationPopup","handleClosePopup","handleOpenPopup","popupOpen","cursor","cancelButtonText","header","handleConfirmation","onConfirm","confirmButtonText","on","onOpen","renderTrigger","updateCoordinateWithDirection","coordinate","direction","initialDirection","CoordinateInput","handleDirectionChange","handleNumberBlur","handleNumberChange","number","_this$props$input","input","onBlur","coordinateLabel","_this$props$input2","meta","options","startsWith","FieldTemplate","enableHelpNotifications","subLabel","defaultValue","latitudeOptions","longitudeOptions","getInitialDirection","coordinateType","getIntialValue","Coordinates","latitudeLabel","longitudeLabel","display","FieldWrapper","component","DisplaySearchResult","title","deleteUndefinedProperties","createDeleteProperties","closeIconStyle","bottom","fontSize","lineHeight","margin","right","top","containerStyle","autoComplete","disableClearValue","displayAsButton","focusOnMount","initialText","isLoading","mountHidden","isTest","placeholder","searchQuery","selectedOption","DropdownSearchInput","handleClear","handleSearchChange","handleOnBlur","handleOnChange","handleFocus","onSearchChange","inputName","updatedValue","normalized","textI","hiddenInputName","borderRadius","button","search","selection","selectOnBlur","selectOnNavigation","getSelectedOption","CustomDropdownSearchInput","rest","objectWithoutProperties","getSearchQuery","getOptions","DropdownSearchIdTextInput","pathToIdInValue","pathToTextInValue","updateSelectedOption","requireEitherOr","selectedOptionId","selectedOptionText","limit","injectSearchOptions","enablePlainTextOption","filterOptions","parse","createSelectedOptionSelector","DropdownSearchLocalInput","filteredOptions","getFilteredOptions","optionSelector","nextProps","noOptionsNow","hasOptionsNext","nextOptions","currentOptions","lowerCaseSearchQuery","toLowerCase","firstLetterMatches","otherMatches","splice","_this$state","baseFilter","extractValue","attributes","filterFunctionName","include","nestItems","onSearchQueryChange","searchWithQuery","DropdownSearchResource","leftButton","rightButton","Select","DropdownSearchConnectInput","_extractProps","fieldTemplatePropKeys","fieldTemplateProps","mapDispatchToProps","setFormSpec","getAllowTransition","setFormRef","unsavedChangesMessage","Form","transformFormSpecToFieldMap","withUnsubmittedFormConfirmation","FormModal","renderModal","FormSectionNavigationItem","handleSetActiveFormSection","onSetActiveFormSection","sectionIsInvalid","Title","Description","formSupportSelectors","activeStyle","backgroundColor","borderColor","inactiveStyle","propTypes","PropTypes","isRequired","node","bool","func","onShowAllFormSections","arrayOf","shape","showSectionsInNavigation","subHeader","FormSectionNavigation","handleShowAllFormSections","block","inline","Subheader","vertical","sub","customParts","initiallyHiddenFieldsHaveValue","removeArrayFieldByIndex","Unit","showInitiallyHiddenParts","unitSpec","allParts","formParts","containsReduxFormField","initiallyShown","partPropsRest","Section","sectionSpec","units","components_Unit","object","objectOf","onGoToNextSection","onGoToPreviousSection","FormSectionView","renderActiveSection","renderAllSections","sectionIndex","components_Section","handleGoToNextSection","handleGoToPreviousSection","container","log","createLog","setActiveFormSectionIndex","formSupportKeyObjectActionCreators","setShowAllFormSections","validateSections","sectionFieldNamesMap","sectionNames","validity","passthroughProps","resourceIdPathParamKey","sectionId","FormRow","handleSectionIdUpdate","Number","isInteger","_this$props$match","url","formSectionNavigationPropTypes","FormRow_FormSectionNavigation","formSectionViewPropTypes","FormRow_FormSectionView","render","onRemoteSubmit","handleRemoteSubmit","specimenId","withRouter","FormTableHeaderRow","columnHeaderTextKeys","HeaderCell","footer","numberOfItemsToSkip","FormTable","numberOfRows","rowIndices","celled","compact","striped","FormTable_FormTableHeaderRow","Body","errorScope","helpNotificationProps","helpText","required","resultRenderer","SearchInputWithResults","handleResultSelect","_ref$meta","results","displayError","onResultSelect","hidden","result","error_components","days","months","years","currentYear","Date","getFullYear","day","String","month","year","mapToSemanticUiFormat","getDateSuggestions","datePart","controlledValue","beginsWithSameDigits","createStringMatch","DAY","MONTH","YEAR","InputDatePart","InputDatePart_SearchInputWithResults","noResultsMessage","selectedOptions","MultipleSearchSelectionDropdownInput","_this$props$options","optionsInput","_this$props$selectedO","widht","multiple","MultipleSearchSelectionConnectInput","MultipleSearchSelectionDropdown_Base","getSelectedOptions","MultipleSearchSelectionLocalInput","MultipleSearchSelectionDropdownField","MultipleSearchSelectionDropdownConnectInput","MultipleSearchSelectionDropdownLocalInput","DefaultAutocompleteResult","DefaultResultRenderer","SearchBase","ConnectSearchInput","Search_Base","getSearchLoading","Search","TogglableDropdownSearch","renderInput","DropdownSearch","TogglableField","migrate_ButtonCopyPasteField","components_ConfirmationPopup","fields_Coordinates","migrate_DisplaySearchResult","components_Form","components_FormModal","components_FormRow","migrate_FormTable","HelpTextNotification","migrate_InputDatePart","Text","MultipleSearchSelectionDropdown","fields_Search","inputs_TextArea","DropdownSearch_TogglableDropdownSearch","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","coreModules_i18n_components__WEBPACK_IMPORTED_MODULE_1__","coreModules_notifications_components__WEBPACK_IMPORTED_MODULE_2__","_higherOrderComponents_injectHelpNotificationProps__WEBPACK_IMPORTED_MODULE_3__","_higherOrderComponents_injectLabelKey__WEBPACK_IMPORTED_MODULE_4__","translatedLabel","labelKey","helpIconWrapperStyle","injectLabelKey","injectHelpNotificationProps","FormSchemaError","negative","JSON","stringify","ConnectedFormSchemaError","components_FormSchemaError","info","FullPageError","window","location","reload","secondary","FallbackComponent","ErrorBoundary","stringifiedError","stringifiedInfo","navigator","sendBeacon","URL","source","stack","ErrorBoundary_FullPageError","FormFieldError","warning","classNames","transform","components_ConnectedFormSchemaError","components_ErrorBoundary","components_FormFieldError","registerKeyboardShortcut","unregisterKeyboardShortcut","layer","KeyboardShortcuts","getHandler","getParamsHandler","addShortcuts","removeShortcuts","shortcut","generalActiveInLayer","onPressSwitch","specificActiveInLayer","handler","_this4","cmd","_this5","Mousetrap","unbind","propsToForward","Children","cloneElement","getLayer","isAppleDevice","test","platform","modKeyAlias","altKeyAlias","setShortcutsModalHidden","setShortcutsModalVisible","toggleShortcutsModal","shortcutsList","getShortcutsList","showShortcutInfo","getShowInfo","components_KeyboardShortcuts","closeOnDocumentClick","Cell","components_ShortcutsDisplay","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","createDelActionCreators","delKeySpecifications","delActionCreators","actionCreator","delKeySpecification","actionType","_delKeySpecification$","parameters","hasParameters","expectedNumberOfArgs","_len","rawArgs","_key","args","from","numberOfArgs","inputParams","parameterKey","createDelActionCreator","createSetActionCreators","setKeySpecifications","setActionCreators","setKeySpecification","_setKeySpecification$","_len2","_key2","_args2","createSetActionCreator","getCleanKey","createActionType","actionVerb","getActionTypeFromKey","createSpecification","subKey","isParameterKey","cleanKey","getParametersFromKey","createVerbKeySpecifications","setActionTypes","verb","createDelActionHandlers","delHandlersCreators","delActionHandler","deleter","_ref$parameters","newState","createDelActionHandler","createSetActionHandlers","setHandlersCreators","setActionHandler","setter","_ref2$parameters","createSetActionHandler","createReducer","keySpecifications","_ref3$initialValues","delActionHandlers","setActionHandlers","actionHandlers","keySpecification","reducerKey","getter","actionPrefixInput","_ref$keys","createConstants","createKeySpecifications","createActionCreators","selector","createSelectors","innerKey","extractActionTypes","createGlobalSelectors","NOTIFICATIONS_CREATE_NOTIFICATION","NOTIFICATIONS_REMOVE_NOTIFICATION","KEYBOARD_SHORTCUTS_REGISTER","setLayer","KEYBOARD_SHORTCUTS_SET_LAYER","KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN","KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE","KEYBOARD_SHORTCUTS_UNREGISTER","createFrontendApiClientValidator","require","createEndpointFactory","exports","createApiClientValidator","importFaker","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createAsyncView","view","history","createHistory","api","enableEndpointMocks","rootConfig","mock","validateInput","validateOutput","devToolsExtension","availableLanguages","defaultLanguage","common","yes","en","sv","logger","collapsed","diff","routing","breakpoints","maxWidth","store","createStore","viewOrder","ReactDOM","react_redux_es","react_router_redux_es","es","DataViewer","App","Docs","Public","notifications_components","displayType","document","getElementById","enableServiceWorker","isProduction","publicUrl","origin","addEventListener","fetch","status","headers","ready","unregister","checkValidServiceWorker","registerServiceWorker","createQueryState","createNavigationState","LocalityManager","AgentDropdownPickerSearch","AgentDropdownSearch","AgentIdTextResult","Query","TogglableAgentDropdownPickerSearch","taxonNameType","SCIENTIFIC","TaxonNameDropdownSearch","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","VERNACULAR","react__WEBPACK_IMPORTED_MODULE_6___default","coreModules_form_components__WEBPACK_IMPORTED_MODULE_7__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","coreModules_i18n_components__WEBPACK_IMPORTED_MODULE_2__","dep","Dependor","getActionActionType","operationType","resourceActionTypes","getActionActionTypes","fail","API_ACTION_TYPE_FAIL","request","API_ACTION_TYPE_REQUEST","success","API_ACTION_TYPE_SUCCESS","groupIncluded","included","typeMap","dispatchIncludedActions","setIncluded","createCallParams","aggregations","_ref$batchLimit","batchLimit","_ref$batchNumber","batchNumber","excludeFields","idsInMeta","includeDeactivated","_ref$lastBatchOffset","lastBatchOffset","totalLimit","multipleBatches","query","scrollId","sort","useScroll","offset","Math","body","factoryMap","_factoryMap","OPERATION_TYPE_CREATE","operationId","_ref$options","rawItem","_ref2$nested","nested","_ref2$throwError","throwError","_ref2$options","optionsOverride","debug","nestedToCoreSync","callParams","create","OPERATION_TYPE_DEL","pathParams","OPERATION_TYPE_GET_MANY","operationActionTypes","ids","isLookup","_ref2$numberOfEntries","numberOfEntriesEachBatch","_ref2$queryParams","queryParams","queryParamsInput","_ref2$removeFromState","removeFromState","_ref2$storeInState","storeInState","lastBatchIncluded","lastBatchItems","lastBatchCallParams","isLastBatch","batchExecute","createBatch","numberOfBatchEntries","startCount","getMany","execute","maxNumberOfBatches","numberOfEntries","OPERATION_TYPE_GET_ONE","_ref2$relationships","queryParamInput","getOne","OPERATION_TYPE_QUERY","_ref2$limit","_ref2$offset","lastScrollId","nFetchedItems","_ref2$nResponseItems","nResponseItems","_ref2$nTotalItems","nTotalItems","_lastBatchCallParams$","lastOffset","lastLimit","doAnotherCall","performQuery","OPERATION_TYPE_UPDATE","update","createItemUpdatePath","updateStateRemoveOneFactory","updatedItems","updateStateWithManyFactory","newItems","currentItem","updateStateWithOneFactory","updatePath","_ref$apiActionType","apiActionType","_ref$operationType","_ref$resource","camelCaseToUpperSnakeCase","createActionTypes","_ref$resourceSpecific","resourceSpecification","operations","includedActionTypes","ACTION_KEY_SET_INCLUDED","createSetIncludedActionType","operationsActionTypes","operation","apiActionTypes","apiActionTypeKey","combineReducers","_ref$resourceSelector","resourceSelectors","getGlobalSelectors","resourceBaseGlobalSelectors","getRelationshipItem","relationKey","getRelationshipObject","relationshipItemId","relationshipItemType","relationshipSelectors","createGetRelationshipItem","getRelationshipItems","relationshipItems","getRelationshipObjects","relatonshipItem","createGetRelationshipItems","getRelationshipItemOrItems","getRelationshipFormat","createGetRelationshipItemOrItems","createCustomSelector","customSelectorInput","ALL_CUSTOM_SELECTOR_TYPES","SELECTOR_TYPE_GET_ALL_AS_OPTIONS","_customSelectorInput$","doNotCapitalize","_customSelectorInput$2","parameterPath","translated","getAll","currentLanguage","createGetAllAsOptionsSelector","createCustomSelectors","_ref3$customSelectors","customSelectorsInput","customSelectors","_createCustomSelector","RESOURCES_NAMESPACE","dux","specification","resourceReducers","resources","resourceActionHandlers","includedActionHandles","operationsActionHandlers","actionHandler","createActionHandlers","resourceActionCreators","actionCreatorFactory","getLocalResourceState","localState","getOneByLid","lid","selectorName","resourceGlobalSelectors","resourceReducer","_ref$resourceActionHa","initialState","createResourceReducer","createCoreReducer","createOperationSpecification","operationConfig","resourceName","createResourceSpecification","resourceConfig","operationSpecifications","crudModule","causeOfDeathType","customTaxonNameType","establishmentMeansType","exportJob","featureType","identifierType","normalizedAgent","relationshipsToModify","physicalObject","place","preparationType","resourceActivity","searchSpecimen","specimen","includesToModify","storageLocation","taxon","taxonName","typeSpecimenType","user","removeNotification","sequentialId","createNotification","createAgentInputs","baseName","_ref$buttonTextKey","buttonTextKey","model","_ref$module","columnProps","displayEmptyStateLabel","displayResultLabel","relativeNames","createRangeDate","displayDateTypeRadios","displayEndDateLabel","displayLabel","displayStartDateLabel","displaySubLabels","endDateLabel","initialDateType","startDateLabel","createRangeDateWithRemarks","emptyStateTextKey","resultPrefixTextKey","createSingleDate","ComposedComponent","CancelCreateHandler","CREATE_CANCEL","mapStateToProps","reset","resetActionCreator","startSubmit","startSubmitActionCreator","stopSubmit","stopSubmitActionCreator","CreateSubmitHandler","fetchResourceCount","crudActionCreators","CREATE_SUCCESS","handleReduxFormSubmitError","createGetResourceCount","getHref","createGetItemById","idPath","rel","floated","RelationshipList","divided","InspectRelationsModal_ListItem","ModalContent","sortedRelationships","relationshipKey","customNumberOfItems","numberOfItems","relationshipResource","InspectRelationsModal_RelationshipList","InspectRelationsModal","recordHeader","InspectRelationsModal_ModalContent","createNotificationActionCreator","DeleteHandler","deleteItemOrShowRelationships","handleModalClose","handleModalOpen","relationshipKeys","emptyFlag","ttl","DEL_SUCCESS","createHandleDelete_InspectRelationsModal","EditSubmitHandler","fetchOneItemById","EDIT_SUCCESS","resetAC","UndoChangesHandler","higherOrderComponents_createHandleCancelCreate","higherOrderComponents_createHandleCreateSubmit","higherOrderComponents_createHandleDelete","higherOrderComponents_createHandleEditSubmit","higherOrderComponents_createHandleUndoChanges","_ref$Loader","Loader","DefaultLoader","_ref$LoadingError","LoadingError","DefaultLoadingError","modulesLoader","viewLoader","_ref$Wrapper","Wrapper","DefaultWrapper","load","contextTypes","AsyncLoader","FetchedComponent","loadingError","loadingFailed","mounting","mount","context","registerModules","unmount","unregisterModules","MarkdownToHtmlAsync","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","html","react__WEBPACK_IMPORTED_MODULE_5___default","dangerouslySetInnerHTML","__html","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fieldTemplateDefaultProps","wrapInFieldTemplate","WrappedInFieldTemplate","parameterKeyInput","createParameterKey","fieldLabel","react__WEBPACK_IMPORTED_MODULE_1___default","coreModules_form_components_FieldTemplate_FieldLabel__WEBPACK_IMPORTED_MODULE_4__","coreModules_form_components_FieldTemplate__WEBPACK_IMPORTED_MODULE_3__","extractText","acceptedTaxonName","rank","TaxonDropdownSearch","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","coreModules_notifications_globalSelectors__WEBPACK_IMPORTED_MODULE_0__","_keyObjectModule__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","globalState","notificationSelectors","getPrioritizedNotificationByDisplayType","getApplicationInModalLayer","layoutGlobalSelectors","applicationLayer","getApplicationInViewLayer","getRightSidebarIsClosed","priorityMap","alert","crit","emerg","notice","shortCuts","createShortcutLogFunction","count","countMessage","createLevelLogFunction","priority","priorityLog","shortcutLog","shourcutKey","TaxonManager","setLocalManager","InjectedTaxonManager","fieldSearchQuery","fieldValue","TaxonDropdownPickerSearch","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","onPickerButtonClick","pickerActive","initialFilterValues","coreModules_commonUi_components__WEBPACK_IMPORTED_MODULE_8__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","initialItemId","picker","_TaxonDropdownSearch__WEBPACK_IMPORTED_MODULE_10__","createPickerWrapper","defaultSpecifications","buildNotification","notificationSpecification","COLLISION_REPLACE","COLLISION_STACK","specificationOverrides","getSpecificationByType","enhancer","config__WEBPACK_IMPORTED_MODULE_0__","getDevToolsExtensionEnhancer","fallback","Translate","markdownOutput","moduleInput","modulesInput","components_Translate","_ref$scope","esm_extends","components_ModuleTranslate","setLanguage","setLanguageActionCreator","LanguageSelect","customOnChange","languageOptions","availableLanguage","floating","labeled","renderLabel","i18nLocalSelectors","getAvailableLanguages","getLanguage","Markdown","I18nProvider","components_LanguageSelect","components_Markdown","createModelLink","_ref$version","version","modelName","iconPosition","TextInput","focus","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","I18N_SET_LANGUAGE","I18N_SET_TRANSLATIONS","redux_module_local_storage__WEBPACK_IMPORTED_MODULE_0__","_actionTypes__WEBPACK_IMPORTED_MODULE_1__","localStorageAC","removeItem","USER_LOG_OUT_SUCCESS","LOG_IN","utilities_endpointFactory_client__WEBPACK_IMPORTED_MODULE_0__","utilities_endpointFactory_client__WEBPACK_IMPORTED_MODULE_0___default","utilities_stateHelper__WEBPACK_IMPORTED_MODULE_1__","createEndpoint","mapResponse","methodName","pathname","utilities_extractProps__WEBPACK_IMPORTED_MODULE_1__","_inputs_Input_Text__WEBPACK_IMPORTED_MODULE_2__","_FieldTemplate__WEBPACK_IMPORTED_MODULE_3__","castType","_inputs_TextArea__WEBPACK_IMPORTED_MODULE_2__","LocalityDropdownSearch","getPreparationTypes","globalCrudSelectors","getFeatureTypes","getFeatureTypesObject","createDropdownSelector","categoryFilter","numberOfResults","preparationTypes","mappedPreparationTypes","category","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","getDropdownSkeletonOptions","SKELETON","getDropdownSkinOptions","SKIN","getDropdownWetPreparationOptions","WET_PREPARATION","getDropdownOtherPreparationOptions","OTHER_PREPARATION","getGroupedFeatureTypeIds","featureTypes","groupToIdsMap","getFeatureTypesInGroups","groups","featureTypesObject","groupsString","featureTypeIds","groupFeatureTypes","getNumberOfFeatureTypesInGroups","getPreparationTypeOptions","deleteEmptyStringProperties","inputYearStyle","inputMonthStyle","inputDayStyle","displaySubLabel","isEndDate","isStartDate","setYearInputRef","DatePart","handleOnFocus","field","updatedDatePartValues","interpretedTimestamp","getTimestampFromYMD","onFocus","DateTypeRadios","currentDateType","dateType","dateTypes","handleDateTypeChange","onDateTypeChange","marginBottom","checked","SELECTABLE_DATE_TYPES","RANGE","LATEST","onePartErrorFieldStyle","onePartErrorLabelStyle","twoPartErrorLabelStyle","datePartStyle","datePartSeparatorStyle","componentErrors","DateRange","getFieldInput","setStartYearInputRef","setEndYearInputRef","handleFocusEndYear","handleFocusStartYear","nextDateType","datePartName","startYearInput","endYearInput","currentRangeValue","previousDateType","startDate","endDate","getEarliestTimestamp","getRangeValueAfterDateTypeChange","updatedDatePartName","updatedDatePartValue","newValue","getRangeValue","errorStyle","RangeDate_DateTypeRadios","Date_DatePart","DefaultRenderEmptyState","isLatestActiveField","setAsLatestActiveField","hasCustomText","forceRenderInput","forceRenderResult","getHasValue","renderEmptyState","renderResult","_props$input","injectIsLatestActiveField","injectNavigationItems","WithNavigationItems","navigationItems","NAVIGATION_ITEMS","getActiveLocationTitleKey","exactMatch","bestMatch","injectActiveLocationDescription","exact","activeLocationTitleKey","WithActiveLocationDescription","activeLocationSubtitle","activeLocationTitle","higherOrderComponents_injectActiveLocationDescription","higherOrderComponents_injectNavigationItems","createLocalState","reportPickerActive","fullName","Local","requireEitherIdOrValue","createNestedItem","common_es5_formatObject_coreToNestedSync__WEBPACK_IMPORTED_MODULE_0__","common_es5_formatObject_coreToNestedSync__WEBPACK_IMPORTED_MODULE_0___default","coreModules_crud_globalSelectors__WEBPACK_IMPORTED_MODULE_1__","coreModules_crud_utilities__WEBPACK_IMPORTED_MODULE_2__","setNestedItemActionCreator","keyObjectActionCreators","_ref$relationships","_ref$resolveRelations","_ref$storeResult","storeResult","parentRelationships","relationship","childrenRelationships","coreToNestedSync","getItemByTypeId","getItemByTypeRelationships","getOneSelector","getOneByLidSelector","dependencyItem","itemWithRelationships","getItemWithSpecificedRelationships","CheckboxInput","reduxFormOnChange","inputRest","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","mapTaxonNameToOption","createListItem","nameType","stateIndex","stateType","createListArray","_ref3$taxonNames","taxonNames","createSortedNameList","synonyms","vernacularNames","ACCEPTED","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","SYNONYM","TaxonNameRow","handleRemove","DISCONNECT_TAXON_NAME","_ref$attributes","rubinNumber","positive","SET_TAXON_NAME_AS_ACCEPTED","to","NewTaxonNameRow","handleChange","ADD_SYNONYM","isFirstName","enableHelpNotification","arrayPush","arrayRemove","arrayUnshift","change","ScientificNamesTable","connectingScientificName","scientificNames","handleInteraction","setTaxonNameAsAccepted","disconnectTaxonName","addSynonym","currentAcceptedName","setTaxonNameAsSynonym","unshift","_ref4$unshift","existingTaxonNameListItem","interactionType","_ref8","taxonItem","ScientificNamesTable_TaxonNameRow","ScientificNamesTable_NewTaxonNameRow","VernacularNamesTableRow","getTranslationPath","getPath","pathBuilder","changeFormValue","removeArrayField","VernacularNamesTable","vernacularName","RankDropdown","TaxonNameDropdownPickerSearch","TaxonNameTaxonStatus","TogglableTaxonDropdownPickerSearch","opacity","transition","components_DefaultLoader","components_DefaultLoadingError","components_DefaultWrapper","em","mapSelectablesToDropdownOptions","selectables","FeatureObservationDropdownSearch","rawOptions","i18nSelectors","getDefaultLanguage","CauseOfDeathDropdownSearch","EstablishmentMeansTypeRadioGroup","components_FeatureObservationDropdownSearch","PreparationTypeDropdownSearch","TypeSpecimenTypeDropdownSearch","reduceFieldSpecsToNodeFieldNamesMap","fieldSpecs","bySection","_ref$byUnit","byUnit","_ref$useBaseName","useBaseName","fieldSpec","section","nodeName","formMap","sectionMap","unitName","unitMap","part","subFields","relativeName","hocInput","_hocInput$fetchInterv","fetchInterval","_hocInput$maxBatchSiz","maxBatchSize","_hocInput$maxNumberOf","_hocInput$refetch","refetch","array","BatchFetchItems","registeredIds","batches","getBatchIsFull","getCurrentBatch","addBatch","addId","addIdToBatch","isFetchedOrRegistered","_extractProps$extract","defaults","getManyActionCreator","setInterval","batchesToFetch","promises","batch","createEnsureAllItemsFetched","_propTypes","_defaultProps","_hocInput$allItemsFet","allItemsFetchedKey","_hocInput$allItemsFet2","allItemsFetchingKey","_hocInput$include","allItemsFetchedSelector","keyObjectGlobalSelectors","allItemsFetchingSelector","setAllItemsFetched","setAllItemsFetching","EnsureAllItemsFetched","fetched","fetching","_flags","flags","_hocInput$idPath","itemKey","_hocInput$refresh","_hocInput$shouldFetch","GetItemById","_extractProps2$extrac","_extractProps2$extrac2","_extractProps2$extrac3","getOneActionCreator","_extractProps3$extrac","_extractProps3$extrac2","_extractProps3$extrac3","ownProps","_extractProps$extract2","injectRelationships","relationshipsToInject","relationshipObjectOrArray","nestedItemKey","hocInputRelationships","hocInputResource","getItemById","clearNestedCache","GetNestedItemById","createNestedItemIfNeeded","clearNestedCacheNamespace","injectedNamspace","getNestedItem","API_CALL_OPERATION_REQUEST","API_CALL_OPERATION_SUCCESS","API_CALL_OPERATION_FAIL","callOperation","_ref$throwError","debouncedResourceCountGetters","setResourceCountGetter","getResourceCountGetter","_hocInput$filter","filterHocInput","resourceHocInput","_hocInput$resourceCou","resourceCountFetchedKey","_hocInput$resourceCou2","resourceCountFetchingKey","_hocInput$resourceCou3","resourceCountKey","resourceCountSelector","resourceCountFetchedSelector","resourceCountFetchingSelector","setResourceCountAC","setResourceCountFetchedAC","setResourceCountFetchingAC","getCount","setResourceCount","setResourceCountFetched","setResourceCountFetching","createDebouncedGetCount","debounce","leading","maxWait","extractResourceCountParams","filterResourceCount","resourceProp","callOperationAC","ResourceCountGetter","pollCount","clearInterval","higherOrderComponents_createBatchFetchItems","higherOrderComponents_createEnsureAllItemsFetched","higherOrderComponents_createGetItemById","higherOrderComponents_createGetNestedItemById","higherOrderComponents_createGetResourceCount","injected","LocalityDropdownPickerSearch","_LocalityDropdownSearch__WEBPACK_IMPORTED_MODULE_10__","AcceptedTaxonNameDropdownPickerSearch","_TaxonNameDropdownSearch__WEBPACK_IMPORTED_MODULE_10__","extractPickedId","ADD_NEW_TAXON_NAME","ADD_NEW_PREPARATION_TYPE","DISCONNECT_PREPARATION_TYPE","SET_TAXON_NAME_INSPECT","_ref$props","_ref$defaults","defaultsProvided","propName","auth","process","env","mountApp","MOUNT_APP","reduxLogger","enabled","showDiff","REACT_APP_ENABLE_REDUX_LOGGER_DIFF","testUi","REACT_APP_TEST_UI","linkedFieldErrorValues","clearSubmitErrors","clearSubmitErrorsActionCreator","createLinkFieldErrors","_ref$fieldPaths","anyLinkedFieldHasErrors","LinkFieldErrors","nextLinkedFieldErrorValues","anyLinkedFieldChanged","prevValue","nextValue","omit","getIsLatestActiveField","currentActiveFormField","isActiveNow","formSelectors","getFormActive","LatestActiveFieldInjector","mapItemToOption","mapTextToOption","textAttributeName","_hocInput$enablePlain","enablePlainTextOptionHocInput","SearchOptionsInjector","handleSearchQueryChange","suffix","prevState","option","optionWithOtherValues","filters","buildOptionsFromResponse","skipPlainTextOption","_ref2$skipPlainTextOp","enablePlainTextOptionProp","_ref4$filters","_this$props2$nestItem","and","filterFunction","getManySearch","nestedItems","createInjectSearch","storeSearchResult","nodeType","translationPath","childContextTypes","parentPath","_ref$nameLast","nameLast","buildTranslationPath","pathBuilderFactory","_ref3$nodeType","PathBuilder","parentTranslationPath","_ref$preventLeavingDi","preventLeavingDirty","_ref$preventLeavingFo","preventLeavingForm","dirty","preventTransition","getAllowTransitionDefault","unsavedChangesMessageDefault","UnsubmittedFormConfirmation","handleBeforeUnload","removeEventListener","returnValue","getAllowTransitionOverride","ColumnWrapper","clear","cleanedColumnProps","injectErrorKeys","injectParameterKey","higherOrderComponents_injectSearchOptions","higherOrderComponents_withUnsubmittedFormConfirmation","higherOrderComponents_wrapInColumn","oneOfType","displayErrorInput","displayWarning","FieldError","models","schemaInterface","getModels","formModels","updatedModels","minLength","properties","createFormModels","PreparationTypeRow","handleDisconnect","disconnectPreparationType","_ref$attributes$name","nameEn","form_components","NewPreparationTypeRow","addPreparationType","PreparationTypesTable","connectingPreparationType","PreparationTypesTable_PreparationTypeRow","PreparationTypesTable_NewPreparationTypeRow","StorageLocationDropdownSearch","extractNameWithFirstLevelParent","StorageLocationManager","StorageLocationDropdownPickerSearch","StorageLocationDropdownPickerSearch_StorageLocationManager","components_StorageLocationDropdownSearch","dropdownOptions","LEVEL_ROOM","LEVEL_MOUNTING_WALL","LEVEL_CABINET","LEVEL_SHELF","LEVEL_INSTITUTION","StorageLocationLevelDropdown","disableLevels","filteredDropdownOptions","valueIsDisabled","disconnectName","addName","AcceptedTaxonNamesTable","connectingTaxon","taxa","TaxonRow","NewTaxonRow","TaxaTable","connectedPreparationTypes","connectedTaxa","storageLocationRoot","formActionBarHeight","BaseForm","formValueSelectorFactory","reduxForm","enableReinitialize","validate","customFormValidator","Create","item_BaseForm","displayBackButton","displayResetButton","Edit","noop","destroyOnUnmount","buildFilterQuery","findParentWithSpecificGroup","deactivatedAt","_ref$nestedItem","_nestedItem$parent","parentName","parentIsRoot","marginRight","baseTreeFilter","sortOrder","getManyPhysicalObject","getManySpecimen","getManyStorageLocation","getChildren","getSpecimens","parentId","storageLocationId","physicalObjects","physicalObjectIds","specimens","onNavigation","EditForm","CreateForm","components_StorageLocationDropdownPickerSearch","LocalStorageLocationManager","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","CLASS","FAMILY","GENUS","MISSING_RANK","ORDER","ROOT_TAXON_NAME","SET_TAXON_INSPECT","SPECIES","SUBSPECIES","SET_TAXON_NAME_AS_SYNONYM","ADD_VERNACULAR_NAME","DROPDOWN_FILTER_OPTIONS","only","getMarkdown","getTranslations","getMarkdownModules","getMarkdownKeysByPath","getTranslationsModules","object_path__WEBPACK_IMPORTED_MODULE_0__","object_path__WEBPACK_IMPORTED_MODULE_0___default","notifications","getSpecifications","specifications","getSpecificationArrayWithTerminateActions","registeredNotification","terminateActions","getSpecificationArrayWithTriggerActions","triggerActions","getSpecificationTerminateActionMap","registeredNotifications","terminateActionMap","_ref$terminateActions","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","getSpecificationTriggerActionMap","triggerActionMap","_ref2$triggerActions","getNotifications","activeNotifications","getNotificationsInArray","sequentialIds","getNotificationsByType","activeNotificationsArray","selectedType","getNotificationsByDisplayType","selectedDisplayType","getHighestPriorityAndOldestNotification","highestSoFar","newCandidate","getBreakpoints","getCurrentBreakpoint","getBreakpointByWidth","getSize","getIsSmall","getIsMedium","getHeight","getWidth","_constants__WEBPACK_IMPORTED_MODULE_0__","currentBreakpoint","i","breakpoint","getShortcuts","reselect__WEBPACK_IMPORTED_MODULE_0__","keyboardShortcuts","shortcutsMap","showInfo","logIn","_endpoints__WEBPACK_IMPORTED_MODULE_1__","password","client_id","grant_type","USER_LOG_IN_REQUEST","USER_LOG_IN_SUCCESS","USER_LOG_IN_FAIL","getUserLoggedIn","getName","getUsername","getUserLoading","getAuthToken","getConfig","getGetUserUrl","getLoginUrl","getUserPreferencesLanguage","authObject","accessToken","getUserUrl","loginUrl","HelpNotificationPropsInjector","createHelpNotificationProps","downloadFile","fileUrl","fileName","_crudModule__WEBPACK_IMPORTED_MODULE_0__","errorKeys","ErrorKeysInjector","createErrorKeys","currentErrorCode","nextErrorCode","getFormState","utilities_getSecondArgument__WEBPACK_IMPORTED_MODULE_1__","formState","LabelKeyInjector","createLabelKey","ParameterKeyInjector","disambiguatingDescription","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_7___default","coreModules_form_components__WEBPACK_IMPORTED_MODULE_10__","CheckboxField","_FieldTemplate_FieldLabel__WEBPACK_IMPORTED_MODULE_5__","_inputs_Checkbox__WEBPACK_IMPORTED_MODULE_4__","RadioField","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","selectedValue","radioOptions","_FieldTemplate__WEBPACK_IMPORTED_MODULE_8__","radio","TextAreaInput","autoHeight","_RangeDate__WEBPACK_IMPORTED_MODULE_2__","_inputs_CustomData_ReadOnly__WEBPACK_IMPORTED_MODULE_2__","ReadOnly","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","removeForceRenderResult","_AgentDropdownPickerSearch__WEBPACK_IMPORTED_MODULE_9__","_AgentIdTextResult__WEBPACK_IMPORTED_MODULE_10__","coreModules_form_components__WEBPACK_IMPORTED_MODULE_8__","includeVerbatimAgent","textOnly","agentNameSuffix","inputText","textV","agentName","coreModules_form_components__WEBPACK_IMPORTED_MODULE_13__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","allDeathTypeFetched","causeOfDeathTypeOptions","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","getAllAsOptions","establishmentMeansTypeOptions","allTypeFetched","coreModules_i18n_components__WEBPACK_IMPORTED_MODULE_11__","allTypeSpecimenTypeFetched","typeSpecimenTypeOptions","coreModules_form_components__WEBPACK_IMPORTED_MODULE_9__","redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","object_path__WEBPACK_IMPORTED_MODULE_3__","object_path__WEBPACK_IMPORTED_MODULE_3___default","coreModules_crud_higherOrderComponents__WEBPACK_IMPORTED_MODULE_4__","coreModules_i18n_higherOrderComponents__WEBPACK_IMPORTED_MODULE_5__","nestedTaxonName","synonymToAcceptedTaxonName","acceptedToTaxonId","rankString","synonymToTaxonId","acceptedTaxonNameRank","makeGetFeatureTypesInGroups","allPreparationTypesFetched","preparationTypeOptions","InjectItemTitle","filterColumn","mainColumn","LocalState","replaceLocalState","updateLocalState","clearLocalState","newPartialState","updatedState","param","clearState","replaceState","updateState","createResourceUrlState","NavigationState","navigateCreate","navigateEdit","navigateList","navigateRoot","navigateTree","handleNavigation","closeItemView","ITEM_SELECT","NAVIGATE_CREATE","NAVIGATE_ROOT","NAVIGATE_FILTER","navigateFilter","goBack","disablePrompt","_state$mainColumn","defaultExtractPickedId","blur","_ref$extractPickedId","_ref$pathToIdInValue","_ref$pathToTextInValu","_ref$requireEitherIdO","PickerWrapper","handleOnClose","handlePickerButtonClick","setPickerActive","pickItem","PICKER_CLOSE","PICKER_PICK_ITEM","pathToIdInValueOverride","pathToTextInValueOverride","textPath","isObjectValue","baseValue","createQueryNavigationState","routerGoBack","routerPush","QueryNavigationState","getQueryParams","replaceQueryParams","updateQueryParams","clearQueryParams","parsedQuery","queryString","parsedValue","newQueryObject","queryObject","updateQueryParamsQueryObject","RESOURCE_MANAGER_OPEN","RESOURCE_MANAGER_CLOSE","close","clearResourceState","delFocusIdWhenLoaded","resetForm","setBaseItems","setCurrentTableRowNumber","setExpandedIds","setFilterValues","setFocusIdWhenLoaded","setShowAll","focusIdWhenLoaded","nestedCacheNamespaces","ResourceManagerWrapper","expandAncestorsForItemId","fetchTreeBase","findRowNumberById","focusRowWithId","getNestedCacheNamespaces","handleClickRow","handleClosePicker","handleSelectPrev","handleSetCurrentTableRow","handleToggleCurrentRow","handleToggleRow","handleUpdateFilterValues","selectCurrentRow","tableSearch","resetFilters","mountTableView","updateTableView","transitionToTableView","transitionFromTableView","mountTreeView","updateTreeView","transitionToTreeView","transitionFromTreeView","mountEditItemView","updateEditItemView","transitionToEditItemView","transitionFromEditItemView","namespaces","getActiveViews","activeView","transitions","getTransitions","skipTableSearch","keyNameMap","activeViews","ancestorsToId","updatedExpandedIds","_this6","matchingIndex","_this$props6","listItem","_this$props7","_this$props8","nextRowAvailable","_this$props9","prevRowAvailable","_this$props10","_this$props11","mode","_this$props12","newFocusedIndex","_this$props13","currentFocusedIndex","_this7","_this$props14","_this$props15","_this$props16","prevListItems","_this$props17","_this$props18","_this$props19","_this$props20","_this$props21","prevFocusedIndex","_this$props22","onToggleCurrentRow","resourceCount","createShortcutLayer","higherOrderComponents_createInjectItemTitle","higherOrderComponents_createLocalState","higherOrderComponents_createPickerWrapper","higherOrderComponents_createResourceManagerWrapper","createGetCatalogNumber","catalogNumberIdentifier","identifier","_ref$idsInMeta","_ref$limit","_ref$storeSearchResul","updateSearchResult","queryAc","syncSearch","setLastUpdatedAt","lastUpdatedAt","nextLastUpdatedAt","getCurrentUTCTimestamp","resourcesToRemoveQueryParams","deactivated","updatedAfter","RemarksWrapper","resultPrefix","RemarksInput","Remarks_RemarksWrapper","remarkSegments","getParentAcceptedTaxonNames","getAcceptedTaxonNameFromTaxon","reverse","TaxonResult","parentAcceptedTaxonNames","components_TaxonResult","_components__WEBPACK_IMPORTED_MODULE_0__","_translations_json__WEBPACK_IMPORTED_MODULE_1__","_keyObjectModule__WEBPACK_IMPORTED_MODULE_0__","delNestedObjectNamspace","delNestedCache","nestedCache","namesp","SEARCH_SUCCESS","middleware","redux_logger__WEBPACK_IMPORTED_MODULE_1__","createLogger","react_router_redux__WEBPACK_IMPORTED_MODULE_0__","_higherOrderComponents__WEBPACK_IMPORTED_MODULE_2__","coreModules_notifications_components__WEBPACK_IMPORTED_MODULE_1__","_TranslatedHeader__WEBPACK_IMPORTED_MODULE_2__","createSerializedModuleMap","startListeners","listenerMap","middlewareApi","listener","started","start","stop","createMiddlewares","middlewares","middlewareFactory","extractReducers","moduleMap","reducers","_moduleMap$key","addModuleToValidations","validations","moduleSchemas","schemas","moduleConfigSchema","extractConfigSchemas","validateConfigWithSchema","configSchemas","moduleSchema","moduleConfig","createSystemFrontendValidator","schema","errorMessage","createModuleMap","availableModules","_ref$moduleMap","_ref$newModules","newModules","_ref$removeModules","removeModules","createConfigValidation","validateConfig","newModuleMap","setupListeners","listeners","listenerFactory","updateModuleState","_ref$listenerMap","_ref$middlewareMap","middlewareMap","_ref$moduleOrder","moduleOrder","newMiddlewareMap","newMiddlewares","createMiddlewareMap","newMiddlewareArray","createMiddlewareArray","newReducer","createRootReducer","_ref2$newModules","_ref2$removeModules","newListeners","newListenerMap","createListeners","middlewareArray","registerModulesActionCreator","unregisterModulesActionCreator","createAsyncRegisterModules","getModuleRegisterPipe","setModuleRegisterPipe","moduleRegisterPipe","filteredModules","some","pipeModule","createAsyncUnregisterModules","getModuleUnregisterPipe","setModuleUnregisterPipe","moduleUnregisterPipe","createRegisterModules","dynamicDispatch","getModuleState","setModuleState","updateDispatch","moduleState","newModuleState","replaceReducer","createUnregisterModules","updateStoreEnhancer","_createEnhancerStateM","getAvailableModules","getDispatch","setAvailableModules","newAvailableModules","setDispatch","newDispatch","newModuleRegisterPipe","newModuleUnregisterPipe","createEnhancerStateManager","chain","createStoreMain","_ref$initialState","enhancers","hotswapStoreEnhancer","coreModuleOrder","domainModuleOrder","devToolsExtensionEnhancer","composedEnhancers","reduxCreateStore","dateRange","allOf","x-validation-date-range-end-after-start","x-validation-date-range-valid-if-not-empty","x-validation-date-range-no-orphan-day","x-validation-date-range-no-orphan-month","role","agentBirthAndDeath","agentContactDetails","agentNameDetails","agentRoles","unitSpecs","agentRoot","EnhancedForm","FORM_NAME","_ref$agent","agent","transformedAgent","setDefaultValues","getParentId","getChildrenIds","_ref$values","transformedNormalizedAgent","roles","patchedRole","getAgent","AgentManager","createWithI18n","defaultModule","defaultScope","WithI18n","translate","_ref2$scope","_ref4$module","_ref4$scope","_this$context","setBreakpoint","setHeight","setWidth","getClientHeight","innerHeight","documentElement","clientHeight","getClientWidth","innerWidth","clientWidth","updateBreakpoint","fittingBreakpoint","heightInState","widthInState","throttle","sizeEnum","additionalProperties","enum","maxItems","minItems","uniqueItems","initState","nextState","size_name","actionCreators_namespaceObject","higherOrderComponents","listener_namespaceObject","schemas_namespaceObject","LOG_IN_SUCCESS","Flash","headerKey","FIXED","code","userMiddleware","next","preferredLanguage","KEYBOARD_SHORTCUTS_TRIGGER","logoutShortcut","user_name","endpoints","notifications_namespaceObject","shortcuts_namespaceObject","SUCCESS","collision","notificationMiddleware","_action$payload","currentSequentialId","NOTIFICATION_SPECIFICATIONS","NOTIFICATIONS","notifications_name","MARKDOWN","TRANSLATIONS","i18n_name","ERROR","errorMiddleware","_ref$debug","requestError","detail","globalUserSelectors","error_name","constants_namespaceObject","AgentRoleContent","handleSetInactive","affiliation","invalidDateRange","AgentRoleTitle","headline","buildYYYYMMDD","str","AgentRolesAccordion","expandFirstItemOnMountIfEmptyOrOnlyHasKey","initialActiveMode","renderContent","AgentRolesAccordion_AgentRoleContent","renderTitle","AgentRolesAccordion_AgentRoleTitle","createLid","_combineReducers","KEY_OBJECT_NAMSPACE","keyObjectModuleReducer","crud_name","keyboardShortcuts_name","setApplicationLayer","createApplicationLayer","ApplicationLayer","parentLayer","buildAuthHeaders","authToken","Authorization","createApiMiddleware","apiClientOptions","systemValidate","validator","apiConfigInput","mapHeaders","createJsonApiClient","layoutMiddleware","LOCATION_CHANGE","keyObjectModule","ShortcutLayer","GeographicLevelDropdown","ALL_OPERATION_TYPES","delayItemRenderUntilActive","expandItemOnAdd","getShouldExpandFirstItemOnMount","getShouldRenderItem","renderActiveOnly","selectMode","styled","AccordionWrapper","handleSetActive","handleToggleActive","isActive","shouldRenderContent","hasBeenActive","indexToRender","itemsToRender","shouldRenderItem","isNaN","ColumnRowHeader","DateString","dateString","dateText","paddedMonth","paddedDay","getPaddedDateString","Footer","stackable","ModalContentWrapper","LayerModal","LayerModal_ModalContentWrapper","center","centerColumnTextAlign","leftColumnTextAlign","rightColumnTextAlign","ThreeColumnGrid","TranslatedLabel","Accordion","components_ColumnRowHeader","components_DateString","components_LayerModal","PageTemplate","components_ThreeColumnGrid","components_TranslatedLabel","getKey","testing","dependencies","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_4__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","TestDependor","_Dependor","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","originalDependencies","keysToFreeze","createFreezeFunction","USER_LOG_OUT_REQUEST","USER_LOG_OUT_FAIL","inlineDescription","tagTypeInitialOptionValue","tagTypeMatchAllOptionText","translationScope","TagTypeDropdown","fetchAvailableTags","tags","tag","tagKey","ANY","buildLocalAggregationQuery","aggregationFunctionType","valueFromParent","FeatureTypeRange","disableClearUnitValue","tagTypeDropdownPlaceholder","tagTypeInlineDescription","unitOptions","aggregationFunctionName","aggregationKey","aggregationLimit","drillDownQuery","onCheckboxChange","MultipleChoiceCheckboxes","allIds","drillDownIds","getQuery","allValues","drillDownValues","nextPropsDrillDownQuery","_ref4$getAll","currentDrillDownQuery","idsOnly","or","filterValue","aggregationFunction","newKeyValue","newValues","handleCheckboxChange","checkedValues","displayCount","otherFieldFilters","drillDownOptionsMap","handleDrillDownSearchResult","debounceSearch","allSearchResults","cancel","isChecked","checkedKey","drillDownSearchResult","drillDownOption","TagGroup","addTagTypeToText","handleDeselectAllForSearchQuery","onDeselectAllForSearchQuery","handleSelectAllForSearchQuery","onSelectAllForSearchQuery","handleToggleTagSelected","onToggleTagSelected","selected","tagTypeText","tagType","tagValue","getAllFreeTextSearchResults","searchQueryResultsMap","allResults","matchingTags","searchOption","other","optionType","getAllFreeTextQueries","getNumberOfFreeTextSearchResults","getNumberOfSelectedFreeTextResults","RefineTagSelection","numberOfSearchResults","numberOfSelectedResults","reduxFormValues","freeTextQueries","MultipleSearchTagsSelect_TagGroup","closeIcon","RefineTagSelectionButton","refineOpen","onCloseRefine","onOpenRefine","inlineRefine","tagTypeFilterEnabled","RawMultipleSearchTagsSelect","getItemsForSearchQuery","setSearchQueryResultsSelected","handleGetSearchQuery","handleCloseRefine","handleOpenRefine","handleSelectSearchQueries","handleUpdateTagFilterValue","tagTypeFilterValue","debouncedGetItemsForSearchQuery","createOptions","_ref$aggregationFunct","reduxFormValue","updatedReduxFormValues","createReduxFormValues","prevReduxFormValues","queryStrings","_searchOption$other","newReduxFormValues","newTags","itemOptions","createOption","freeTextSuffix","_ref6$prevReduxFormVa","newFieldValue","matchingTag","patchedInput","components_TagTypeDropdown","MultipleSearchTagsSelect_RefineTagSelectionButton","MultipleSearchTagsSelect_RefineTagSelection","MultipleSearchTagsSelect","SearchPreview","startValue","previews","searchString","debouncedUpdateFormValue","preview","srcField","displayPreview","overflowY","components_FeatureTypeRange","MultipleSearchTagsSelect_Field","components_NoResultsFound","SearchPreview_Field","TagTypeDropdown_Field","SidebarNavItem","navItem","_navItem$translate","activeClassName","SidebarNavItemGroup","navGroupItem","_navGroupItem$transla","SidebarNavItemGroup_ModuleTranslate","NavigationSidebar_SidebarNavItem","logoutActionCreator","NavigationSidebar","displayHome","displayLogout","animation","borderless","visible","NavigationSidebar_SidebarNavItemGroup","NavigationSidebar_ModuleTranslate","Header_Title","preContent","stacked","Block","wrapperClassNames","wrapperStyle","ColumnLayout","columnSpec","flex","minWidth","wrapperId","RowLayout","flexDirection","rowSpec","rowProps","minHeight","userSelectors","handleLogout","onLogout","UserMenu_ModuleTranslate","logoutAC","TopMenu","isOpen","toggleLeftSidebar","TopMenu_UserMenu","setLeftSidebarIsOpen","ViewWrap","isLarge","leftSidebarEnabled","leftSidebarIsOpen","leftSidebarTogglable","leftSidebarWidth","topMenuEnabled","viewWrapStyle","leftSidebarAlwaysVisible","leftSidebarStyle","WebkitTransform","getViewWrapStyle","dimmerActive","Dimmable","dimmed","components_TopMenu","onClickOutside","AppNavigationSidebar","components_Block","components_ColumnLayout","components_InformationSidebar","components_NavigationSidebar","components_RowLayout","components_ViewWrap","fullViewHeight","paddingBottom","requireLoggedInUser","mapDispathToProps","LoggedInUser","checkAuth","loggedIn","userLoading","wrappedComponent","requireLoggedOutUser","LoggedOutUser","scientificNameRoot","taxonStatus","TaxonNameManager","BaseForm_unitSpecs","taxonRoot","BaseForm_sectionSpecs","mapAcceptedTaxonNameError","allTaxonNamesFetched","TaxonManager_item_BaseForm","findParentWithSpecificRank","synonym","item_EditForm","item_CreateForm","filter_Form","TaxonNameDropdownPickerSearch_TaxonNameManager","components_TaxonNameDropdownPickerSearch","TaxonNameManager_Query","setAcceptedTaxonLocalityManager","LocalTaxonManager","setTaxonLocalityManager","LocalTaxonNameManager","GeneralDocs","_match$params$docName","docName","coreModules_i18n_components_MarkdownToHtmlAsync__WEBPACK_IMPORTED_MODULE_1__","common_es5_schemaInterface__WEBPACK_IMPORTED_MODULE_3__","getOpenApiSpec","VersionOverview","activeVersion","schemaVersion","joinSubqueries","queries","buildRootQuery","aggregation","rootQuery","createFieldHocFactory","querySpecificationsMap","any","sectionValues","FieldHoc","_ref2$input","rootQueryModifierFunction","rootQueryModifier","searchFilter","filterQuery","fieldValueSelectors","getFormSelector","otherFieldFiltersSelectors","sectionValueSelectors","createFormHocFactory","FormHoc","buildQuery","getSubQueries","createTagTypesSpecification","matchFilterFunctionName","matchFilter","tagTypes","rangeSpecification","rangeFilterFunctionName","_input$fieldValue","createNumberRangeSpecification","checkboxSpecification","createCheckboxSpecification","AgeAndStage_querySpecification","multipleSearchTagsSpecification","_ref$includeTagTypesI","includeTagTypesInAggregation","searchFilterFunctionName","tagTypeAggregationFunctionName","tagValuesAggregationFunctionName","selectedTagTypes","tagInputType","_input$limit","_input$aggregationFun","tagValuesFieldName","tagFilters","dropdownEntry","isFreeText","hasNoMatchingTag","createMultipleSearchTagsSpecification","end","createDateRangeSpecification","DatePeriod_querySpecification","featureRangeSpecification","rangeTypeAggregateTagsFunctionName","_options$fieldValue","rangeType","rangeValue","rangeUnit","createFeatureRangeSpecification","Length_querySpecification","multipleSearchTagsSpecifications","higherGeographySpecifications","appearanceCheckboxSpecification","selectiveBreedingCheckboxSpecification","Locality_querySpecification","skeletonCheckboxSpecification","skinCheckboxSpecification","wetPreparationCheckboxSpecification","otherPreparationCheckboxSpecification","PhysicalObject_querySpecification","createPreviewSearchSpecification","inputFieldName","searchPreviewAggregationFunctionName","srcFieldFieldName","srcFieldsAggregationFunctionName","_input$searchString","srcFields","_ref4$sectionValues","_ref3$sectionValues","createStringSpecification","stringSpecification","Storage_querySpecification","Taxonomy_querySpecification","Weight_querySpecification","querySpecifications","ageAndStageSpecification","agentSpecification","bonesSpecification","collectionConditionSpecification","datePeriodSpecification","identifierSpecification","lengthSpecification","localitySpecification","physicalObjectSpecification","remarksSpecification","sexSpecification","storageSpecification","taxonomySpecification","weightSpecification","querySpecification","noopSelector","fieldMatchFilterSelectors","fieldValueSelector","sectionValueSelector","subSelectors","otherFieldName","otherQueries","queryValue","createFieldHoc","createFormHoc","createHigherOrderComponents","createQueryBuilder","SPECIMEN_FILTERS_FORM_NAME","INITIAL_VALUES","featureObservations","transformInput","_ref$establishmentMea","establishmentMeansTypes","_ref$featureTypes","_ref$identifierTypes","identifierTypes","_ref$specimen","transformedSpecimen","individual","determinations","identifiers","remarks","collectingInformation","originInformation","isResultOfSelectiveBreeding","existingFeatureObservation","featureObservation","initialFeatureObservation","featureObservationUnit","transformFeatureObservations","getBaseValues","mammalFormModels","x-validation-date-range-in-the-past","x-validation-date-range-start-and-end","determination","patternProperties","/./g","$ref","latitude","x-validation-digits-and-decimal-point","x-validation-latitude","longitude","x-validation-longitude","createMammalFormModels","mustBe6Or8Digits","valid","CatalogNumberModal","handleBackToModalOne","handleCancel","handleGotoModalTwo","createManually","go","formData","patchedDetermination","customTaxonNames","taxonInformation","featureTypeId","featureObservationText","transformedFeatureType","originLocality","mappedOrigin","defaultEstablishmentMeansType","transformOriginInformation","mapCollectionItemError","collectionItem","physicalObjectErrorPath","storageLocationErrorPath","mapCollectionItemsErrors","collectionItems","acquisition","collectingDate","descriptionHeaderKey","descriptionKey","collectingDeathRoot","collectingLocation","collectorExpedition","death","unitSpecs_determinations","features","unitSpecs_identifiers","localityOriginRoot","unitSpecs_origin","createPhysicalObjectsByCategory","camelCaseCategory","camelCase","physicalObjectsOtherPreparation","physicalObjectsRoot","physicalObjectsSkeleton","physicalObjectsSkin","physicalObjectsWetPreparation","recordHistoryExternalEvents","specimenRoot","taxonomyRoot","taxonOtherName","taxonPreferredName","typeStatus","iconStyle","coordinatesVerbatim","georeferenceSourcesText","onEdit","verticalPosition","CollectingPosition","handleEditCoordinate","uncertaintyInMeters","hasDecimalCoordinates","coordinates","latNumber","lat","lonNumber","lon","abs","getCoordinates","uncertainty","maximumDepthInMeters","maximumElevationInMeters","minimumDepthInMeters","minimumElevationInMeters","collectingPosition","buildCollectingPosition","getElevation","getDepth","inputStyle","VerticalPosition","getFieldNames","PositionModal","PositionModal_ModuleTranslate","CollectingLocality_VerticalPosition","buttonStyle","CollectingLocality","hasPosition","hasVerticalPosition","hasPositionData","CollectingLocality_CollectingPosition","CollectingLocality_PositionModal","CustomTaxonNamesTableRow","customTaxonName","customTaxonNameTypeOptions","CustomTaxonNamesTable","allCustomTaxonNameTypesFetched","crudKeyObjectSelectors","DeterminationContent","skipRemoveDeterminationConfirmation","date","determinedByAgent","invalidDate","taxonNameI","taxonNameV","DeterminationsAccordion","DeterminationsAccordion_DeterminationContent","DeterminationTitle","DeterminationsAccordion_AddButton","FeatureObservationTableRow","_featureType$attribut","selectableMethods","selectableUnits","selectableValues","placeholderKey","getPlaceholder","hasSelectableMethods","hasSelectableUnits","hasSelectableValues","moreThanTwoColumns","isLengthOrWeight","getColumnWidth","labelWidth","getLabelWidth","FeatureObservationsTableRow_ModuleTranslate","defaultOptionValue","FeatureObservationsTableRow","FeatureObservationsTitle","headlineKey","GROUPS_AND_HEADLINES","FeatureObservations","allFeatureTypesFetched","FeatureObservationsTable","FeatureObservations_FeatureObservationsTitle","IdentifiersTableRow","identifierTypeOptions","IdentifiersTable","allIdentifierTypesFetched","IdentifiersTable_Row","IdentifiersTable_AddButton","displayRemoveButton","onRemove","submitButtonTextKey","FormActions","skipRemoveConfirmation","submitFailed","submitSucceeded","mobile","FormActions_ModuleTranslate","formatBooleanRadio","parseBooleanRadio","CuratorialAssessmentForm_FormActions","agentText","condition","conditionRemarks","inventoryStatusRemarks","isInStorage","EditCuratorialAssessment","arrayPath","CuratorialAssessmentItem","CuratorialAssessmentItem_ModuleTranslate","CreateCuratorialAssessment","now","moment","dateInput","FieldsForTest","CuratorialAssessmentsList","curatorialAssessments","PhysicalObjectsAccordion_CuratorialAssessmentItem","CuratorialAssessmentsList_ModuleTranslate","Test","touch","PhysicalObjectContent","showParentName","PhysicalObjectsAccordion_CuratorialAssessmentsList","PhysicalObjectContent_ModuleTranslate","curatedListSelectors","invalidStorageLocation","PhysicalObjectTitle","lastCuratorialAssessment","horizontal","categoryUnspecifiedTypeIdMap","other-preparation","UNSPECIFIED_OTHER_PREPARATION_PREPARATION_TYPE_ID","skeleton","UNSPECIFIED_SKELETON_PREPARATION_TYPE_ID","skin","UNSPECIFIED_SKIN_PREPARATION_TYPE_ID","wet-preparation","UNSPECIFIED_WET_PREPARATION_PREPARATION_TYPE_ID","getStorageLocations","PhysicalObjectsAccordion","getShouldRenderAccordion","getMatchesCategory","computer","PhysicalObjectsAccordion_PhysicalObjectContent","preparationTypeId","PhysicalObjectsAccordion_PhysicalObjectTitle","PhysicalObjectsAccordion_AddButton","Fields","resultSuffix","dateToShow","eventAgent","handleEdit","getYYYYMMDDFromTimestamp","EventRow_ModuleTranslate","agent_components","catalogCardCreationEvent","catalogCardCreationEventIndex","hasAgentOrDate","invalidInput","otherEvents","RecordHistoryExternalEvents","updatedRecordHistoryEvents","CATALOG_CARD_CREATION_DESCRIPTION","system","CATALOG_CARD","fieldsBaseName","RecordHistoryExternalEvents_EventRow","RecordHistoryExternalEvents_AddButton","RecordHistoryExternalEvents_ModuleTranslate","RecordHistoryExternalEvents_Fields","findIndex","SelectiveBreeding","RecordForm_formParts","agentParts","curatedListParts","localityParts","taxonParts","EnhancedRecordActionBar","recordActionBarHeight","borderTop","submit","catalogNumber","curatorialTaxon","redirectOnSuccess","RecordForm","handleFormSubmit","handleSubmitFromModal","createEvent","initEvent","dispatchEvent","pushRoute","filterOutput","curatorialTaxonAcceptedName","RecordForm_ModuleTranslate","components_CatalogNumberModal","keepDirtyOnReinitialize","shouldError","registeredFields","updateUnregisteredFields","createSpecimen","CreateSpecimen","establishmentMeansTypesFetched","identifierTypesFetched","MainColumn_RecordForm","formOutput","crudGlobalSelectors","updateSpecimen","EditSpecimen","nestedSpecimen","featureTypesFetched","_transformInput","collectionMammalsSelectors","tableColumnNames","includedTableColumns","createExportInfo","downloadFileActionCreator","getOneExportInfo","pollInterval","pollLimit","searchResult","CsvExporter","handleExportToCsv","exportToCsv","pollId","exportJobId","exportStatus","poll","isExporting","succeededAt","updateStatus","filePath","failedAt","_this$props2$searchRe","exportFields","column","default","exportIds","modalContent","exportModal","SPECIMENS_MAMMALS_TABLE_COLUMNS","searchSelectors","isItemViewOrSettings","isTableViewOrSettings","onExportCsv","handleSettingClick","onSettingClick","handleTableTabClick","onTableTabClick","ResultOptionsBar_CsvExporter","transformColumnNamesToFormValues","columnNames","columnName","savedValue","ResultTableSettings","handleSave","handleSetAll","initialize","transformFormValuesToColumnNames","SubmissionError","_error","error_description","ResultTableSettings_ModuleTranslate","ResultTableSettingsForm","tableColumnsToShow","handleFirstSearchResult","setFocusedSpecimenId","focusedSpecimenId","handleRowClick","ResultTableView_InfiniteTableRow","initialIndex","createInjectSearchResult","handleClickSorting","tableColumnsToSort","columnsToSort","onSaveTableColumnsToSort","sortedColumn","InfiniteTableHeader_ModuleTranslate","topOffset","renderColumnHeader","infiniteTable","ResultTableView_InfiniteTable","ResultTableView_InfiniteTableHeader","handleSaveTableColumnsToSort","SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING","recordNavigation","isCreateItemActive","resourceManager_components","recordOptions","MainColumn_ResultOptionsBar","recordNew","MainColumn_CreateSpecimen","recordEdit","MainColumn_EditSpecimen","resultTable","MainColumn_ResultTableView","resultTableSettings","MainColumn_ResultTableSettings","handleSearch","onSearchSpecimens","onResetFilters","extractFilterParams","filterType","getFilterFunction","getMultipleChoiceFilter","getAndFiltersFromFilterKeyValueMap","filterKeyValueMap","excludeKey","indexOfFirstDot","getTrimmedExcludeKey","hasFilterParams","getFilterType","acc","OBJECT_FILTER_FORM_PARTIAL_KEYS","buildRangeDateFilter","createBuildRangeFilter","typeKey","filterFormValues","keyValueFilters","objectFiltersMap","formPartialKey","filterFormPartial","andFiltersFromKeyValues","andFiltersFromObjectFilters","partialKey","ageStageFieldName","ageStageTags","buildRangeLengthFilter","ageStage","dateTypeFieldName","dateTypeTags","lengthTypeFieldName","lengthTypeTags","lengthType","weightTypeFieldName","weightTypeTags","buildRangeWeightFilter","weightType","getAndFiltersFromObjectFilters","WrappedMultipleChoiceCheckboxesField","MultipleChoiceCheckboxesField","AgeStageFilterForm","WrappedMultipleSearchTagsSelectField","MultipleSearchTagsSelectField","AgentFilterForm","BonesFilterForm","CollectingConditionFilterForm","DatePeriodFilterForm","IdentifierFilterForm","WrappedFeatureTypeRange","WeightFilterForm","LocalityFilterForm","WrappedTagTypeDropdownField","TagTypeDropdownField","WrappedSearchPreviewField","SearchPreviewField","SexFilterForm","StorageFilterForm","TaxonomyFilterForm","AgeAndStage","Agent","Bones","CollectingCondition","DatePeriod","Identifier","Length","Locality","PhysicalObject","Sex","Storage","Taxonomy","Weight","Weight_WrappedFeatureTypeRange","FilterContent","FilterFormSections","doDeepEqualInitialValuesComparison","getFormInitialValues","initialFormValues","initialSectionValues","hasChanged","hasValues","RawFilters","getDrilldownQuery","Filters_FilterContent","Filters_FilterTitle","EnhancedFilters","storage","taxonomy","weight","getFormInitialValuesFactory","main","Filters","MammalManager_MainColumn","secondaryColumnStyle","createFilter","MammalManager_FilterColumn","createRightSidebar","isSmall","getMainColumnActiveTab","delCurrentTableRowNumber","delFocusedSpecimenId","setFilterColumnIsOpen","prefetchLimit","MammalManager","handleOpenEditRecordView","handleOpenTableView","handleResetFilters","handleSearchSpecimens","handleSpecimenIdUpdate","openTableView","usePrefetchLimit","currentId","isNewRecordView","isEditRecordView","currentSpecimen","skipFilter","newIndex","isTableView","_this$props2$match","_ref8$openTableView","_ref8$skipFilter","_ref8$usePrefetchLimi","_ref9","order","_ref10","enableShowAllRecordsButton","showSelectNextRecordButton","showSelectPreviousRecordButton","_ref5$match","searchResultResourceType","specimenSearchState","filterFormIsDirty","LocalLocalityManager","extractModelFromSpecification","modelId","getPropertyIsArray","getPropertyIsModel","getPropertyIsAnyOf","anyOf","getAnyOfLinksFromProperty","Type","getArrayLinkFromProperty","len","getModelLinkFromProperty","createParameterLink","parameterName","PropertyOverview","propertyIsArray","propertyIsModel","propertyIsAnyOf","propertySummary","summary","refModelId","refModel","getPropertySummary","DataModel_Type","example","Model","DataModel_PropertyOverview","Property","DataModel","_this$props$match$par","parameterId","DataModel_Property","DataModel_Model","RawLoginForm","handleLogin","LoginForm","formValidator","components_LoginForm","availableVersions","Nav","markdownNavItems","markdownKeys","markdownKey","versionNavItems","availableVersion","modelCategories","modelNavItem","markdownNavItemsGroup","versionItemsGroup","modelItemGroups","createErrorKey","linkTo","linkTextKey","bootstrap","crud","commonUi","layout","localStorage","resourceManager","documentation","collectionMammals","curatedList","createConfig","defaultConfig","defaultTestConfig","setupTestComponent","customConfig","_ref$fullExport","fullExport","_ref$wrap","wrap","_ref$bootstrap","_ref$config","createDefaultTestConfig","_ref$modules","allCoreModules","allDomainModules","_ref$viewOrder","createTestStore","rootComponent","createInputObjectMock","overrides","jest","fn","createInputTest","inputObject","wrapper","_ref$elementToSelect","elementToSelect","_ref$getValue","getValue","_ref$initialValue","InputComponent","_ref$updateValue","updateValue","beforeEach","it","expect","toBeTruthy","toBe","simulate","calls","toEqual","toMatchObject","setProps","updatedProps","baseModel","_segments$reverse$fil","parseFloat","modelSegment","parameterSegment","createUpdateFormPartStatus","callback","childName","childStatuses","flag","parameterErrors","parameterError","utilities_createUpdateFormPartStatus","errorTransformations","INLINE","STATIC","MAMMAL_FORM_NAME","descriptionParams","headerParams","ttlTimeout","onDismiss","createNotificationAC","applicationInModalLayer","globalSizeSelectors","InlineNotificationBody","InlineWrapper","NotificationModal","activeNotification","NotificationDisplay","NotificationComponent","components_Flash","components_FormFieldHelpIcon","Inline","Modal","components_NotificationDisplay","defaultExpanded","handleOnClick","react_json_inspector__WEBPACK_IMPORTED_MODULE_7___default","elementId","ScrollLeftInjector","handleScroll","WindowHeight","injectWindowWidth","WindowWidth","windowWidth","higherOrderComponents_createInjectScrollLeft","higherOrderComponents_injectWindowHeight","higherOrderComponents_injectWindowWidth","selectorsToWrap","_Users_fo_dev_dina_dina_collections_packages_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","wrappedSelectors","leftSidebar","getRelationshipItemId","relationshipItem","getRelationshipItemIds","_ref6$relationshipKey","_translations_json__WEBPACK_IMPORTED_MODULE_3__","_keyObjectModule__WEBPACK_IMPORTED_MODULE_4__","_actionCreators__WEBPACK_IMPORTED_MODULE_0__","_translations_json__WEBPACK_IMPORTED_MODULE_2__","_keyObjectModule__WEBPACK_IMPORTED_MODULE_3__","_markdown_index_json__WEBPACK_IMPORTED_MODULE_2__","COLLECTION_MAMMALS_CLEAR_SEARCH_PARAMETERS","COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_FAIL","COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_REQUEST","COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_SUCCESS","COLLECTION_MAMMALS_LOOKUP_MAMMALS_FAIL","COLLECTION_MAMMALS_LOOKUP_MAMMALS_REQUEST","COLLECTION_MAMMALS_LOOKUP_MAMMALS_SUCCESS","COLLECTION_MAMMALS_SET_ACCORDION_ACTIVE_INDEX","COLLECTION_MAMMALS_UPDATE_SEARCH_PARAMETER","clearSearchParameters","flattenRelationships","flatRelations","flattenObjectResponse","flattenedRelationships","extractData","flattenDataAttributes","dataItem","GET_INDIVIDUAL_GROUP_BY_CATALOG_NUMBER","firstDataItem","GET_SPECIMEN","LOOKUP_MAMMALS","REGISTER_MAMMAL","UPDATE_SPECIMEN","lookupMammals","transformedResponse","responseData","flattenArrayResponse","updateSearchParameter","collectionMammals_name","actionTypes_namespaceObject","components_namespaceObject","endpoints_namespaceObject","_markdown_","TAXON_SERVICE_UPDATE_SEARCH_QUERY","getLookup","lookup","getLookupError","getLookupLoading","getLookupResult","getLookupDropdownOptions","lookupResult","getLookupSearchQueries","searchQueries","getLookupSearchQuery","getTaxa","getTaxaArray","getTaxonNames","getTaxonNamesArray","getTaxonName","getTaxonNamesSortedArray","taxaArray","_ref2$attributes","b","getTaxonNamesArrayByFilter","groupFilter","limitFilter","_filter$offset","searchQueryFilter","filteredTaxonNames","_ref3$attributes","_ref4$attributes","_ref5$attributes","getTaxonNameOptions","_ref6$attributes","getTaxonNamesWithAcceptedToTaxon","taxonObject","_ref7$attributes","acceptedToTaxon","getTaxonNameOption","getTaxaSortedArray","_ref8$attributes","_ref9$attributes","getTaxonOptions","acceptedTaxonNameId","getTaxaArrayByFilter","_filter$offset2","parentIdFilter","filteredTaxa","getTaxonAncestorsAcceptedTaxonNameById","ancestors","current","walkUp","debounceTaxonSearch","nameSearch","createTaxonMiddleware","failActionType","requestActionType","successActionType","setLookupError","setLookupLoading","setLookupResult","getInitialState","emptyResultState","emptyErrorState","taxon_name","taxon_reducer","fieldHelpTextDefaults","keyObjectModuleActionTypes","HELP_TEXT","FIELD_CHANGE_WARNING","form_constants","form_reducer","utilities","defaultExcludeFields","defaultIncludeFields","resourceInput","propResource","usedResource","excludeFieldsInput","includeFieldsInput","_ref3$useScroll","SearchResultInjector","higherOrderComponents_createInjectSearch","higherOrderComponents_createInjectSearchResult","PARSE_AS_NUMBER_TYPES","FORMAT_AS_STRING_TYPES","parseToNumber","formatToString","parseAsNumber","formatAsString","redux_form__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/main.d5726951.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nimport {\n  reduceFieldSpecsToSectionFieldNamesMap,\n  reduceFieldSpecsToUnitFieldNamesMap,\n} from './utilities'\n\nexport const getLocalState = state => state.formSupport\n\nexport const getFormSpec = (state, { formName }) => {\n  return state[formName]\n}\n\nexport const getSectionFieldNamesMap = createSelector(\n  getFormSpec,\n  formSpec => {\n    return reduceFieldSpecsToSectionFieldNamesMap(Object.values(formSpec))\n  }\n)\n\nexport const getUnitFieldNamesMap = createSelector(\n  getFormSpec,\n  formSpec => {\n    return reduceFieldSpecsToUnitFieldNamesMap(Object.values(formSpec))\n  }\n)\n\nexport const getUnitInitiallyHiddenFieldNamesMap = createSelector(\n  getFormSpec,\n  formSpec => {\n    const initiallyHiddenFields = Object.values(formSpec).filter(\n      ({ initiallyHidden }) => initiallyHidden\n    )\n\n    return reduceFieldSpecsToUnitFieldNamesMap(initiallyHiddenFields, true)\n  }\n)\n\nexport const getUnitInitiallyHiddenFieldNames = (state, { formName, unit }) => {\n  const unitInitiallyHiddenFieldNamesMap = getUnitInitiallyHiddenFieldNamesMap(\n    state,\n    { formName }\n  )\n  return unitInitiallyHiddenFieldNamesMap[unit]\n}\n","import {\n  getFormMeta,\n  getFormSyncErrors,\n  getFormAsyncErrors,\n  getFormSubmitErrors,\n  getFormValues,\n  isDirty,\n} from 'redux-form'\nimport objectPath from 'object-path'\nimport { isEmpty, isEqual } from 'lodash'\n\nimport wrapSelectors from 'utilities/wrapSelectors'\n\nimport { globalSelectors as formSupportKeyObjectSelectors } from 'coreModules/formSupport/keyObjectModule'\n\nimport * as selectors from './selectors'\n\nconst getInitiallyHiddenFieldsHaveValue = (\n  state,\n  {\n    baseValues = {},\n    compareInitiallyHiddenWithBaseValues,\n    formName,\n    formValueSelector,\n    unit,\n  }\n) => {\n  const initiallyHiddenFieldNames = selectors.getUnitInitiallyHiddenFieldNames(\n    state.formSupport,\n    {\n      formName,\n      unit,\n    }\n  )\n\n  if (!initiallyHiddenFieldNames) {\n    return undefined\n  }\n\n  for (let index = 0; index < initiallyHiddenFieldNames.length; index += 1) {\n    const fieldName = initiallyHiddenFieldNames[index]\n    const value = formValueSelector(state, fieldName)\n    const initialValue = objectPath.get(baseValues, fieldName)\n\n    const valueIsEmpty =\n      (!value && value !== 0) || (typeof value === 'object' && isEmpty(value))\n    const hasValue = !valueIsEmpty\n\n    if (hasValue) {\n      if (\n        !compareInitiallyHiddenWithBaseValues ||\n        (compareInitiallyHiddenWithBaseValues && !isEqual(initialValue, value))\n      ) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nconst getSectionIsDirty = (state, { formName, sectionName }) => {\n  const getIsDirty = isDirty(formName)\n  const sectionFieldNamesMap = selectors.getSectionFieldNamesMap(\n    state.formSupport,\n    {\n      formName,\n    }\n  )\n\n  const sectionFieldNames = sectionFieldNamesMap[sectionName]\n\n  return getIsDirty(state, ...sectionFieldNames)\n}\n\nconst getAnyFieldIsInvalid = (\n  state,\n  { fieldNames, formName, requireTouched = true }\n) => {\n  const asyncErrors = getFormAsyncErrors(formName)(state)\n  const formMeta = getFormMeta(formName)(state)\n  const syncErrors = getFormSyncErrors(formName)(state)\n  const submitErrors = getFormSubmitErrors(formName)(state)\n  const formValues = getFormValues(formName)(state)\n\n  for (let index = 0; index < fieldNames.length; index += 1) {\n    const fieldName = fieldNames[index]\n    const fieldNameParts = fieldName.split('.*.')\n\n    if (fieldNameParts.length > 1) {\n      const fieldArray = objectPath.get(formValues, fieldNameParts[0])\n\n      if (fieldArray && fieldArray.length) {\n        const fieldNamesWithIndex = fieldArray.map((_, fieldNameIndex) => {\n          return fieldName.replace('.*.', `.${fieldNameIndex}.`)\n        })\n\n        const anyInvalidRelativeField = getAnyFieldIsInvalid(state, {\n          fieldNames: fieldNamesWithIndex,\n          formName,\n          requireTouched,\n        })\n\n        if (anyInvalidRelativeField) {\n          return true\n        }\n      }\n    }\n\n    const fieldMeta = objectPath.get(formMeta, fieldName)\n\n    const hasErrors =\n      objectPath.get(syncErrors, fieldName) ||\n      objectPath.get(asyncErrors, fieldName) ||\n      objectPath.get(submitErrors, fieldName)\n\n    if (hasErrors) {\n      if (!requireTouched) {\n        return true\n      }\n      const isTouched = fieldMeta && fieldMeta.touched\n      if (requireTouched && isTouched) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nconst getSectionIsInvalid = (state, { formName, sectionName }) => {\n  const sectionInvalidStatus = formSupportKeyObjectSelectors.get[\n    'sectionNavigation.:formName.sectionInvalidStatus'\n  ](state, { formName })\n\n  if (!sectionInvalidStatus) {\n    return false\n  }\n\n  return sectionInvalidStatus[sectionName]\n}\n\nconst computeSectionIsInvalid = (\n  state,\n  { formName, requireTouched, sectionName } = {}\n) => {\n  const sectionFieldNamesMap = selectors.getSectionFieldNamesMap(\n    state.formSupport,\n    {\n      formName,\n    }\n  )\n\n  const sectionFieldNames = sectionFieldNamesMap[sectionName]\n\n  return getAnyFieldIsInvalid(state, {\n    fieldNames: sectionFieldNames,\n    formName,\n    requireTouched,\n  })\n}\n\nconst getSectionsInValidStatus = (state, { formName, sectionSpecs }) => {\n  return sectionSpecs.map(({ name: sectionName }) => {\n    return computeSectionIsInvalid(state, { formName, sectionName })\n  })\n}\n\nexport default {\n  ...wrapSelectors(selectors),\n  computeSectionIsInvalid,\n  getAnyFieldIsInvalid,\n  getInitiallyHiddenFieldsHaveValue,\n  getSectionIsDirty,\n  getSectionIsInvalid,\n  getSectionsInValidStatus,\n}\n","import { createGetter } from '../../utilities/stateHelper'\n\nconst interpolationRegex = /\\{\\{([a-zA-Z0-9_-]+)}}/g\n\nexport const format = (string, params = {}) => {\n  let resultString = string\n  const stringParameters = resultString.match(interpolationRegex)\n  if (!stringParameters) {\n    return string\n  }\n  stringParameters.forEach(stringParameter => {\n    const cleanParameter = stringParameter.replace(/[{}]/g, '')\n    if (params[cleanParameter] !== undefined) {\n      resultString = resultString.replace(\n        `${stringParameter}`,\n        params[cleanParameter].toString()\n      )\n    }\n  })\n  return resultString\n}\n\nexport const translationByPathGetter = createGetter([':textKey', ':language'])\n\nexport const getTranslationByPath = (\n  translations,\n  {\n    fallbackLanguage,\n    language,\n    params,\n    textKey: inputTextKey,\n    textKeys: inputTextKeys,\n  }\n) => {\n  const textKeys = (inputTextKeys && inputTextKeys.length && inputTextKeys) || [\n    inputTextKey,\n  ]\n\n  let translation = textKeys.reduce((foundTranslation, textKey) => {\n    if (foundTranslation) {\n      return foundTranslation\n    }\n    return translationByPathGetter(translations, {\n      language,\n      textKey,\n    })\n  }, '')\n\n  const fallbackTranslation = textKeys.join(', ')\n\n  if (!translation && fallbackLanguage) {\n    /* eslint-disable no-console */\n    console.warn(\n      `Translation for key ${fallbackTranslation} language ${language} not found trying fallback language ${fallbackLanguage}`\n    )\n    /* eslint-enable no-console */\n    return getTranslationByPath(translations, {\n      language: fallbackLanguage,\n      params,\n      textKey: inputTextKey,\n      textKeys: inputTextKeys,\n    })\n  }\n\n  translation = translation || fallbackTranslation\n\n  return params && translation ? format(translation, params) : translation\n}\n\nexport const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const buildModuleTextKey = ({ module, scope, textKey }) => {\n  if (!scope) {\n    return `modules.${module}.${textKey}`\n  }\n  return `modules.${module}.${scope}.${textKey}`\n}\n\nexport const buildTextKeys = ({ modules, scope, textKey }) => {\n  return modules.reduce((textKeys, module) => {\n    if (scope) {\n      textKeys.push(\n        buildModuleTextKey({\n          module,\n          scope,\n          textKey,\n        })\n      )\n    }\n    textKeys.push(\n      buildModuleTextKey({\n        module,\n        textKey,\n      })\n    )\n    return textKeys\n  }, [])\n}\n\nexport const asyncImportRenderer = () => {\n  return import('utilities/markdown/renderMarkdownToHtml.js')\n}\n\nexport const markdownToHtmlAsync = markdown => {\n  return asyncImportRenderer().then(renderer => {\n    return renderer(markdown)\n  })\n}\n\nexport const outputIsATextKey = ({ output, textKey, textKeys }) => {\n  return !!(\n    output === textKey ||\n    // enough to check the first entry in textKeys\n    (output && textKeys && textKeys[0] && output.indexOf(textKeys[0]) > -1)\n  )\n}\n","import { capitalizeFirstLetter } from 'common/es5/stringFormatters'\n\nexport const MODULE_NAME = 'agent'\nexport const ALL = 'all'\nexport const PERSON = 'person'\nexport const ORGANIZATION = 'organization'\nexport const OTHER = 'other'\nexport const UNKNOWN = 'unknown'\n\nconst agentTypes = [PERSON, ORGANIZATION, OTHER, UNKNOWN]\n\nexport const AGENT_TYPE_OPTIONS = agentTypes.map(agentType => {\n  return {\n    key: agentType,\n    text: capitalizeFirstLetter(agentType),\n    value: agentType,\n  }\n})\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\nimport { MODULE_NAME as name } from './constants'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n} = keyObjectModuleFactory({\n  keys: [\n    ':resource.filterState',\n    ':resource.lastUpdatedAt',\n    ':resource.searchState',\n  ],\n  name,\n})\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n}\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","export const MODULE_NAME = 'locality'\n\nexport const CONTINENT = 'continent-ocean'\nexport const COUNTRY = 'country'\nexport const DISTRICT = 'district'\nexport const PROVINCE = 'province'\nexport const PLANET = 'planet'\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Prompt } from 'react-router-dom'\nimport { Button, Grid, Modal } from 'semantic-ui-react'\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  onDelete: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  loading: false,\n}\n\nclass DeleteRecordButton extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleClose = this.handleClose.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleClose() {\n    this.setState({ open: false })\n  }\n\n  handleDelete() {\n    this.handleClose()\n    return this.props.onDelete()\n  }\n\n  handleOpen() {\n    this.setState({ open: true })\n  }\n\n  render() {\n    const { loading } = this.props\n    const { open } = this.state\n\n    return (\n      <React.Fragment>\n        <Prompt\n          message={() => {\n            // first block transition then close\n            setTimeout(this.handleClose)\n            return false\n          }}\n          when={open}\n        />\n        <Modal\n          onClose={this.handleClose}\n          open={open}\n          size=\"small\"\n          trigger={\n            /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n            !open && (\n              <Button\n                basic\n                loading={loading}\n                onClick={this.handleOpen}\n                size=\"large\"\n                style={{ float: 'right', pointerEvents: 'initial' }}\n                type=\"button\"\n              >\n                Delete record\n              </Button>\n            )\n            /* eslint-enable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n          }\n        >\n          <Modal.Header>Are you sure?</Modal.Header>\n          <Modal.Content>\n            <Grid>\n              <Grid.Column>The record will be permanently deleted.</Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions\n            style={{ pointerEvents: 'initial', textAlign: 'left' }}\n          >\n            <Button onClick={this.handleDelete} primary>\n              Yes, delete record\n            </Button>\n            <Button onClick={this.handleClose}>No, keep it</Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    )\n  }\n}\n\nDeleteRecordButton.propTypes = propTypes\nDeleteRecordButton.defaultProps = defaultProps\n\nexport default DeleteRecordButton\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  getFormSyncErrors,\n  isInvalid,\n  isPristine,\n  isSubmitting,\n} from 'redux-form'\nimport { Button, Grid } from 'semantic-ui-react'\n\nimport config from 'config'\nimport { ConnectedFormSchemaError } from 'coreModules/error/components'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport DeleteRecordButton from './DeleteRecordButton'\n\nconst ModuleTranslate = createModuleTranslate('form')\n\nconst hasError = (syncErrors = {}) => {\n  if (syncErrors.schemaErrors && syncErrors.schemaErrors.length) {\n    return true\n  }\n\n  const errors = { ...syncErrors }\n\n  delete errors.schemaErrors\n\n  return Object.keys(errors).length > 0\n}\n\nconst textStyle = { float: 'left', marginLeft: '1.25em', marginTop: '0.625em' }\n\nconst mapStateToProps = (state, { formName }) => {\n  return {\n    hasSyncErrors: hasError(getFormSyncErrors(formName)(state)),\n    invalid: isInvalid(formName)(state),\n    pristine: isPristine(formName)(state),\n    submitting: isSubmitting(formName)(state),\n  }\n}\n\nconst propTypes = {\n  formName: PropTypes.string.isRequired,\n  hasSyncErrors: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  loadingDelete: PropTypes.bool,\n  nestedItem: PropTypes.object,\n  onCancelCreate: PropTypes.func,\n  onDelete: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onUndoChanges: PropTypes.func,\n  pristine: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired,\n}\nconst defaultProps = {\n  loadingDelete: undefined,\n  nestedItem: undefined,\n  onCancelCreate: undefined,\n  onDelete: undefined,\n  onSubmit: undefined,\n  onUndoChanges: undefined,\n}\n\nexport class RecordActionBar extends PureComponent {\n  render() {\n    const {\n      formName,\n      hasSyncErrors,\n      invalid,\n      loadingDelete,\n      nestedItem,\n      onCancelCreate: handleCancelCreate,\n      onDelete: handleDelete,\n      onSubmit: handleSubmit,\n      onUndoChanges: handleUndoChanges,\n      pristine,\n      submitting,\n    } = this.props\n    const { isRoot } = nestedItem || {}\n    const displayChangedMessage = !handleCancelCreate\n    return (\n      <Grid padded style={{ pointerEvents: 'none' }} verticalAlign=\"middle\">\n        <Grid.Column>\n          <Button\n            disabled={isRoot || hasSyncErrors || invalid || pristine}\n            loading={submitting}\n            onClick={handleSubmit}\n            primary\n            size=\"large\"\n            style={{ float: 'left', pointerEvents: 'initial' }}\n            type=\"submit\"\n          >\n            <ModuleTranslate textKey=\"save\" />\n          </Button>\n          {handleCancelCreate && (\n            <Button\n              basic\n              disabled={!handleCancelCreate || submitting}\n              onClick={handleCancelCreate}\n              size=\"large\"\n              style={{ float: 'left', pointerEvents: 'initial' }}\n              type=\"button\"\n            >\n              Cancel create\n            </Button>\n          )}\n          {!handleCancelCreate && (\n            <Button\n              basic\n              disabled={!handleUndoChanges || pristine || submitting}\n              onClick={handleUndoChanges}\n              size=\"large\"\n              style={{ float: 'left', pointerEvents: 'initial' }}\n              type=\"button\"\n            >\n              Undo changes\n            </Button>\n          )}\n\n          {isRoot && (\n            <em style={textStyle}>\n              <ModuleTranslate textKey=\"notAllowedToEditRootNode\" />\n            </em>\n          )}\n          {!isRoot &&\n            !pristine &&\n            (hasSyncErrors || invalid ? (\n              <em style={textStyle}>\n                <ModuleTranslate textKey=\"issuesPreventSaving\" />\n              </em>\n            ) : (\n              displayChangedMessage && (\n                <em style={textStyle}>Unsaved changes</em>\n              )\n            ))}\n          {config.isDevelopment && <ConnectedFormSchemaError form={formName} />}\n          {handleDelete && (\n            <DeleteRecordButton\n              loading={loadingDelete}\n              onDelete={handleDelete}\n            />\n          )}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nRecordActionBar.propTypes = propTypes\nRecordActionBar.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(RecordActionBar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Icon, Grid, Input } from 'semantic-ui-react'\nimport ReactRangeSlider from 'react-rangeslider'\n\nimport sizeSelectors from 'coreModules/size/globalSelectors'\n\n/*\n * Override handleKeyDown to avoid conflict with other arrow KeyboardShortcuts\n * and fix this: https://github.com/whoisandy/react-rangeslider/pull/82\n */\nclass Slider extends ReactRangeSlider {\n  constructor(props) {\n    super(props)\n    this.handleKeyDown = () => {}\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLargeScreen: sizeSelectors.getIsLarge(state),\n  }\n}\n\nconst propTypes = {\n  currentTableRowNumber: PropTypes.number,\n  disabled: PropTypes.bool,\n  isLargeScreen: PropTypes.bool.isRequired,\n  numberOfListItems: PropTypes.number,\n  onOpenNewRecordForm: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  onSelectNextRecord: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  onSelectPreviousRecord: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  onSetCurrentTableRowNumber: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool,\n  ]),\n  onShowAllRecords: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  showNewRecordButton: PropTypes.bool,\n  showRecordInput: PropTypes.bool,\n  showShowAllButton: PropTypes.bool,\n  showSlider: PropTypes.bool,\n  totalNumberOfRecords: PropTypes.number,\n}\nconst defaultProps = {\n  currentTableRowNumber: undefined,\n  disabled: false,\n  numberOfListItems: undefined,\n  onOpenNewRecordForm: false,\n  onSelectNextRecord: false,\n  onSelectPreviousRecord: false,\n  onSetCurrentTableRowNumber: false,\n  onShowAllRecords: false,\n  showNewRecordButton: true,\n  showRecordInput: true,\n  showShowAllButton: true,\n  showSlider: true,\n  totalNumberOfRecords: undefined,\n}\n\nexport class RecordNavigationBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { sliderRowNumber: null }\n  }\n\n  render() {\n    const {\n      currentTableRowNumber,\n      disabled,\n      isLargeScreen,\n      numberOfListItems,\n      onOpenNewRecordForm: handleOpenNewRecordForm,\n      onSelectNextRecord: handleSelectNextRecord,\n      onSelectPreviousRecord: handleSelectPreviousRecord,\n      onSetCurrentTableRowNumber: handleSetCurrentTableRowNumber,\n      onShowAllRecords: handleShowAllRecords,\n      showNewRecordButton,\n      showRecordInput,\n      showShowAllButton,\n      showSlider,\n      totalNumberOfRecords,\n    } = this.props\n\n    const { sliderRowNumber } = this.state\n    const sliderValue = disabled\n      ? ''\n      : sliderRowNumber || currentTableRowNumber || ''\n    const isShowingAll =\n      !handleShowAllRecords || numberOfListItems === totalNumberOfRecords\n\n    return (\n      <Grid padded textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Row className=\"left floated\">\n          <Grid.Column>\n            <Button.Group>\n              <Button\n                disabled={disabled || !handleSelectPreviousRecord}\n                icon\n                onClick={event => handleSelectPreviousRecord(event)}\n              >\n                <Icon name=\"chevron left\" />\n              </Button>\n              <Button\n                disabled={disabled || !handleSelectNextRecord}\n                icon\n                onClick={event => handleSelectNextRecord(event)}\n              >\n                <Icon name=\"chevron right\" />\n              </Button>\n            </Button.Group>\n          </Grid.Column>\n          {showRecordInput && (\n            <Grid.Column>\n              <Input\n                className=\"center aligned bold\"\n                disabled={\n                  disabled ||\n                  !handleSetCurrentTableRowNumber ||\n                  numberOfListItems === 0\n                }\n                fluid\n                max={numberOfListItems}\n                min={numberOfListItems && 1}\n                onChange={event => {\n                  handleSetCurrentTableRowNumber(null, event.target.value)\n                }}\n                size=\"small\"\n                style={{ width: '6.5em' }}\n                type=\"number\"\n                value={sliderValue}\n              />\n            </Grid.Column>\n          )}\n          {isLargeScreen && showSlider && (\n            <Grid.Column className=\"slider-slim\">\n              <div\n                style={{\n                  width: '6.25em',\n                }}\n              >\n                <Slider\n                  max={numberOfListItems}\n                  min={numberOfListItems && 1}\n                  onChange={newTableRowNumber => {\n                    if (disabled || !handleSetCurrentTableRowNumber) {\n                      return\n                    }\n                    // those ifs are a needed hack to avoid double increment when\n                    // using hotkey directly after sliding\n                    if (newTableRowNumber === currentTableRowNumber + 1) {\n                      this.setState({\n                        sliderRowNumber: newTableRowNumber - 1,\n                      })\n                    } else if (\n                      newTableRowNumber ===\n                      currentTableRowNumber - 1\n                    ) {\n                      this.setState({\n                        sliderRowNumber: newTableRowNumber + 1,\n                      })\n                    } else {\n                      this.setState({ sliderRowNumber: newTableRowNumber })\n                    }\n                  }}\n                  onChangeComplete={() => {\n                    if (!handleSetCurrentTableRowNumber) {\n                      return\n                    }\n                    handleSetCurrentTableRowNumber(null, sliderRowNumber)\n                    this.setState({ sliderRowNumber: null })\n                  }}\n                  step={1}\n                  tooltip={false}\n                  value={sliderValue}\n                />\n              </div>\n            </Grid.Column>\n          )}\n          <Grid.Column>\n            {!disabled && (\n              <div style={{ fontWeight: 700, width: '7.25em' }}>\n                {numberOfListItems} records\n              </div>\n            )}\n          </Grid.Column>\n          <Grid.Column>\n            {!disabled && (\n              <div\n                style={{\n                  color: 'rgba(0,0,0,.6)',\n                  fontStyle: 'italic',\n                  width: '4.25em',\n                }}\n              >\n                of {totalNumberOfRecords}\n              </div>\n            )}\n          </Grid.Column>\n          <Grid.Column>\n            {showShowAllButton && (\n              <Button\n                basic\n                disabled={disabled || isShowingAll}\n                icon\n                onClick={event => handleShowAllRecords(event)}\n              >\n                <div style={{ width: '6.5625em' }}>\n                  {isShowingAll ? 'Showing all' : 'Show all'}\n                </div>\n              </Button>\n            )}\n          </Grid.Column>\n          <Grid.Column>\n            {showNewRecordButton && (\n              <Button\n                disabled={!handleOpenNewRecordForm}\n                icon\n                onClick={event => handleOpenNewRecordForm(event)}\n                primary\n              >\n                <div style={{ width: '7.5em' }}>\n                  <Icon name=\"plus\" />\n                  New record\n                </div>\n              </Button>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nRecordNavigationBar.propTypes = propTypes\nRecordNavigationBar.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(RecordNavigationBar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon, Menu } from 'semantic-ui-react'\n\nconst propTypes = {\n  createItemActive: PropTypes.bool.isRequired,\n  editItemActive: PropTypes.bool.isRequired,\n  itemEnabled: PropTypes.bool.isRequired,\n  onFormTabClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onListTabClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onToggleFilters: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onTreeTabClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  tableActive: PropTypes.bool.isRequired,\n  treeActive: PropTypes.bool.isRequired,\n  treeEnabled: PropTypes.bool.isRequired,\n}\n\nexport class ResultOptionsBar extends Component {\n  render() {\n    const {\n      createItemActive,\n      editItemActive,\n      itemEnabled,\n      onFormTabClick: handleFormTabClick,\n      onListTabClick: handleListTabClick,\n      onToggleFilters: handleToggleFilters,\n      onTreeTabClick: handleTreeTabClick,\n      tableActive,\n      treeActive,\n      treeEnabled,\n    } = this.props\n\n    return (\n      <Menu attached=\"top\" icon style={{ position: 'relative' }} tabular>\n        <Menu.Item\n          active={tableActive}\n          link\n          name=\"table\"\n          onClick={event => handleListTabClick(event)}\n        >\n          <Icon name=\"table\" />\n        </Menu.Item>\n\n        {treeEnabled && (\n          <Menu.Item\n            active={treeActive}\n            link\n            name=\"form\"\n            onClick={event => handleTreeTabClick(event)}\n          >\n            <Icon name=\"sitemap\" />\n          </Menu.Item>\n        )}\n\n        {itemEnabled && (\n          <Menu.Item\n            active={createItemActive || editItemActive}\n            link\n            name=\"form\"\n            onClick={event => handleFormTabClick(event)}\n          >\n            <Icon name=\"wordpress forms\" />\n          </Menu.Item>\n        )}\n\n        {!(createItemActive || treeActive) && (\n          <Menu.Menu className=\"icon secondary  ui\" position=\"right\">\n            <Menu.Item\n              link\n              onClick={event => handleToggleFilters(event)}\n              style={{ marginLeft: '3.125em' }}\n            >\n              <Icon disabled={!handleToggleFilters} name=\"search\" />\n            </Menu.Item>\n          </Menu.Menu>\n        )}\n      </Menu>\n    )\n  }\n}\n\nResultOptionsBar.propTypes = propTypes\n\nexport default ResultOptionsBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header } from 'semantic-ui-react'\nimport { Translate } from 'coreModules/i18n/components'\nimport { createInjectScrollLeft } from 'coreModules/size/higherOrderComponents'\n\nconst propTypes = {\n  height: PropTypes.number.isRequired,\n  scrollLeft: PropTypes.number,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n}\nconst defaultProps = {\n  scrollLeft: 0,\n}\n\nclass InfiniteTableHeader extends PureComponent {\n  render() {\n    const { height, scrollLeft, width, tableColumnSpecifications } = this.props\n\n    return (\n      <React.Fragment>\n        <Grid\n          padded\n          style={{\n            height,\n            left: -scrollLeft,\n            position: 'absolute',\n            width,\n          }}\n          textAlign=\"left\"\n          verticalAlign=\"middle\"\n        >\n          <Grid.Row>\n            {tableColumnSpecifications.map(({ label, width: columnWidth }) => {\n              return (\n                <Grid.Column key={label} style={{ width: columnWidth }}>\n                  <Header size=\"small\">\n                    <Translate capitalize textKey={label} />\n                  </Header>\n                </Grid.Column>\n              )\n            })}\n          </Grid.Row>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nInfiniteTableHeader.propTypes = propTypes\nInfiniteTableHeader.defaultProps = defaultProps\n\nexport default createInjectScrollLeft('tableScrollContainer')(\n  InfiniteTableHeader\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Dimmer, Grid, Loader } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\n\nconst propTypes = {\n  background: PropTypes.string.isRequired,\n  itemId: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n  nestedItem: PropTypes.object,\n  onClickRow: PropTypes.func.isRequired,\n  rowNumber: PropTypes.number.isRequired,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n  nestedItem: undefined,\n}\n\nconst InfiniteTableRow = ({\n  background,\n  itemId,\n  nestedItem,\n  onClickRow,\n  rowNumber,\n  tableColumnSpecifications,\n  width,\n}) => {\n  if (!nestedItem) {\n    return (\n      <Grid.Row style={{ height: emToPixels(3.5), width }}>\n        <Grid.Column style={{ width: 60 }}>\n          <Dimmer active inverted>\n            <Loader inverted size=\"mini\" />\n          </Dimmer>\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  return (\n    <Grid.Row\n      onClick={event => {\n        event.preventDefault()\n        onClickRow(rowNumber, itemId)\n      }}\n      style={{ background, height: emToPixels(3.5), width }}\n    >\n      {tableColumnSpecifications.map(\n        ({ buildText, fieldPath, label, width: columnWidth }) => {\n          let value = objectPath.get(nestedItem, fieldPath)\n\n          const runBuildText =\n            value && buildText && (Array.isArray(value) ? value.length : true)\n\n          if (runBuildText) {\n            value = buildText({ nestedItem, objectPath, value })\n          }\n\n          if (Array.isArray(value)) {\n            value = value.join('; ')\n          }\n\n          return (\n            <Grid.Column\n              key={fieldPath || label}\n              style={{\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                width: columnWidth,\n              }}\n            >\n              {value}\n            </Grid.Column>\n          )\n        }\n      )}\n    </Grid.Row>\n  )\n}\n\nInfiniteTableRow.propTypes = propTypes\nInfiniteTableRow.defaultProps = defaultProps\n\nexport default compose(\n  createGetNestedItemById({\n    refresh: false,\n    shouldFetch: false,\n  })\n)(InfiniteTableRow)\n","import React, { Component } from 'react'\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types'\nimport ReactList from 'react-list'\nimport { Dimmer, Grid, Loader } from 'semantic-ui-react'\n\nimport { createBatchFetchItems } from 'coreModules/crud/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport InfiniteTableRow from './InfiniteTableRow'\n\nconst propTypes = {\n  currentTableRowNumber: PropTypes.number.isRequired,\n  fetchItemById: PropTypes.func.isRequired,\n  focusedIndex: PropTypes.number.isRequired,\n  focusedItemId: PropTypes.string,\n  listItems: PropTypes.array,\n  managerScope: PropTypes.string.isRequired,\n  onClickRow: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n  tableBatchFetchOptions: PropTypes.object,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  focusedIndex: 0,\n  focusedItemId: undefined,\n  listItems: [],\n  tableBatchFetchOptions: {},\n}\n\nconst itemsRenderer = (items, ref) => {\n  return (\n    <div className=\"ui padded grid\" ref={ref}>\n      {items}\n    </div>\n  )\n}\n\nexport class InfiniteTable extends Component {\n  constructor(props) {\n    super(props)\n    this.list = null\n    this.setListRef = element => {\n      this.list = element\n      this.scroll()\n    }\n\n    this.renderItem = this.renderItem.bind(this)\n    this.scroll = this.scroll.bind(this)\n  }\n\n  componentDidMount() {\n    this.scroll()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.scroll(prevProps)\n  }\n\n  scroll(prevProps = {}) {\n    const { currentTableRowNumber, focusedItemId } = this.props\n\n    const {\n      currentTableRowNumber: prevCurrentTableRowNumber,\n      focusedItemId: prevFocusedItemId,\n    } = prevProps\n\n    if (\n      this.list &&\n      (currentTableRowNumber !== prevCurrentTableRowNumber ||\n        (focusedItemId && focusedItemId !== prevFocusedItemId))\n    ) {\n      const [firstVisibleRow] = this.list.getVisibleRange()\n\n      if (firstVisibleRow === undefined) {\n        setTimeout(() => this.scroll())\n      }\n\n      // this special case is to avoid that the focused row is hidden behind the\n      // table header, which is fixed positioned and therefore seen by\n      // react-list as the first row in terms of scroll position\n      if (currentTableRowNumber <= firstVisibleRow + 1) {\n        this.list.scrollTo(currentTableRowNumber - 1)\n      } else {\n        this.list.scrollAround(currentTableRowNumber)\n      }\n    }\n  }\n\n  renderItem(index) {\n    const {\n      fetchItemById,\n      focusedIndex,\n      listItems,\n      managerScope,\n      resource,\n      tableBatchFetchOptions,\n      tableColumnSpecifications,\n      width,\n    } = this.props\n    const { id } = listItems[index] || {}\n    const isFocused = focusedIndex === index\n    const background = isFocused // eslint-disable-line no-nested-ternary\n      ? '#b5b5b5'\n      : index % 2 === 0\n      ? '#e5e7e9'\n      : '#fff'\n    if (id !== undefined) {\n      fetchItemById(id)\n    }\n\n    const { resolveRelationships, relationships } = tableBatchFetchOptions\n\n    return (\n      <InfiniteTableRow\n        background={background}\n        itemId={id}\n        key={id}\n        namespace={managerScope}\n        onClickRow={this.props.onClickRow}\n        relationships={relationships}\n        resolveRelationships={resolveRelationships}\n        resource={resource}\n        rowNumber={index + 1}\n        tableColumnSpecifications={tableColumnSpecifications}\n        width={width}\n      />\n    )\n  }\n\n  render() {\n    const { listItems, width } = this.props\n\n    if (!(listItems && listItems)) {\n      return (\n        <Grid padded>\n          <Grid.Row style={{ height: emToPixels(3.5), width }}>\n            <Grid.Column style={{ paddingTop: 60, width: 150 }}>\n              <Dimmer active inverted>\n                <Loader content=\"Loading\" inverted />\n              </Dimmer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )\n    }\n\n    return (\n      <div style={{ width }}>\n        <ReactList\n          itemRenderer={this.renderItem}\n          itemsRenderer={itemsRenderer}\n          length={listItems.length}\n          ref={this.setListRef}\n          type=\"uniform\"\n        />\n      </div>\n    )\n  }\n}\n\nInfiniteTable.propTypes = propTypes\nInfiniteTable.defaultProps = defaultProps\n\nexport default compose(\n  createBatchFetchItems({\n    includeFields: ['id', 'attributes'],\n  })\n)(InfiniteTable)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { NoResultsFound } from 'coreModules/search/components/'\nimport InfiniteTableHeader from './InfiniteTableHeader'\nimport InfiniteTable from './InfiniteTable'\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  listItems: PropTypes.array.isRequired,\n  resource: PropTypes.string.isRequired,\n  tableBatchFetchOptions: PropTypes.object,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n}\nconst defaultProps = {\n  tableBatchFetchOptions: {},\n}\n\nconst rows = [\n  {\n    height: emToPixels(3.5),\n    key: 'infiniteTableHeader',\n    style: { borderBottom: '1px solid #b5b5b5', position: 'relative' },\n  },\n  {\n    id: 'tableScrollContainer',\n    key: 'tableScrollContainer',\n    style: { overflow: 'auto' },\n  },\n]\n\nclass ResultTableView extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.renderRow = this.renderRow.bind(this)\n  }\n\n  renderRow(key) {\n    const { tableColumnSpecifications, resource, width } = this.props\n\n    switch (key) {\n      case 'infiniteTableHeader': {\n        return (\n          <InfiniteTableHeader\n            height={emToPixels(3.5)}\n            resource={resource}\n            tableColumnSpecifications={tableColumnSpecifications}\n            width={width}\n          />\n        )\n      }\n      case 'tableScrollContainer': {\n        const { listItems, tableBatchFetchOptions } = this.props\n        return listItems.length === 0 ? (\n          <NoResultsFound />\n        ) : (\n          <InfiniteTable {...this.props} {...tableBatchFetchOptions} />\n        )\n      }\n      default: {\n        throw new Error(`Unknown row key: ${key}`)\n      }\n    }\n  }\n  render() {\n    return <RowLayout {...this.props} renderRow={this.renderRow} rows={rows} />\n  }\n}\n\nResultTableView.propTypes = propTypes\nResultTableView.defaultProps = defaultProps\n\nexport default ResultTableView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Dimmer, Grid, Icon, Loader } from 'semantic-ui-react'\n\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { createInjectItemTitle } from 'coreModules/resourceManager/higherOrderComponents'\n\nconst propTypes = {\n  indentation: PropTypes.number,\n  isExpandable: PropTypes.bool,\n  isExpanded: PropTypes.bool.isRequired,\n  isFocused: PropTypes.bool.isRequired,\n  itemId: PropTypes.string,\n  itemTitle: PropTypes.node,\n  level: PropTypes.number,\n  nestedItem: PropTypes.object,\n  onClickRow: PropTypes.func.isRequired,\n  onToggleRow: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  indentation: 50,\n  isExpandable: false,\n  itemId: '',\n  itemTitle: undefined,\n  level: 0,\n  nestedItem: undefined,\n}\n\nclass ListItem extends Component {\n  render() {\n    const {\n      indentation,\n      isExpandable,\n      isExpanded,\n      isFocused,\n      itemId,\n      itemTitle,\n      level,\n      nestedItem,\n      onClickRow,\n      onToggleRow,\n    } = this.props\n    const itemLoaded = !!nestedItem\n\n    const triangleIcon = isExpanded ? 'down triangle' : 'right triangle'\n\n    const background = isFocused ? '#b5b5b5' : '#fff'\n\n    if (!itemLoaded) {\n      return (\n        <Grid.Row\n          style={{ height: emToPixels(2.5), padding: emToPixels(0.75) }}\n        >\n          <Grid.Column\n            key=\"rowNumber\"\n            style={{\n              marginLeft: indentation * level,\n              paddingRight: 0,\n              width: 60,\n            }}\n            textAlign=\"right\"\n          >\n            <Dimmer active inverted>\n              <Loader inverted size=\"mini\" />\n            </Dimmer>\n          </Grid.Column>\n        </Grid.Row>\n      )\n    }\n\n    return (\n      <Grid.Row\n        onClick={event => {\n          event.preventDefault()\n          onClickRow(null, itemId)\n        }}\n        style={{\n          background,\n          height: emToPixels(2.5),\n          padding: emToPixels(0.75),\n        }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column\n          key=\"rowNumber\"\n          onClick={event => {\n            event.stopPropagation()\n            event.preventDefault()\n            if (isExpandable) {\n              onToggleRow(itemId)\n            }\n          }}\n          style={{\n            marginLeft: indentation * level,\n            paddingRight: 0,\n            width: 60,\n          }}\n          textAlign=\"right\"\n        >\n          {isExpandable && <Icon name={triangleIcon} />}\n        </Grid.Column>\n\n        <Grid.Column key=\"name\" style={{ width: 500 }} textAlign=\"left\">\n          {itemTitle}\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n}\n\nListItem.propTypes = propTypes\nListItem.defaultProps = defaultProps\n\nexport default compose(\n  createGetNestedItemById({\n    refresh: false,\n    shouldFetch: false,\n  }),\n  createInjectItemTitle()\n)(ListItem)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport ReactList from 'react-list'\nimport { Dimmer, Grid, Loader } from 'semantic-ui-react'\nimport { buildList } from 'coreModules/resourceManager/utilities'\n\nimport crudSelectors from 'coreModules/crud/globalSelectors'\nimport { createBatchFetchItems } from 'coreModules/crud/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\n\nimport ListItem from './ListItem'\n\nconst mapStateToProps = (state, { resource }) => {\n  const itemsObject = crudSelectors[resource].getItemsObject(state)\n\n  return {\n    itemsObject,\n  }\n}\n\nconst propTypes = {\n  baseItems: PropTypes.array.isRequired,\n  currentTableRowNumber: PropTypes.number.isRequired,\n  expandedIds: PropTypes.object.isRequired,\n  fetchItemById: PropTypes.func.isRequired,\n  focusedIndex: PropTypes.number.isRequired,\n  itemFetchOptions: PropTypes.object.isRequired,\n  itemsObject: PropTypes.object.isRequired,\n  ItemTitle: PropTypes.func,\n  listItems: PropTypes.array.isRequired,\n  managerScope: PropTypes.string.isRequired,\n  onClickRow: PropTypes.func.isRequired,\n  onToggleRow: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n  setListItems: PropTypes.func.isRequired,\n  showAll: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  ItemTitle: undefined,\n}\n\nconst itemsRenderer = (items, ref) => {\n  return (\n    <div className=\"ui padded grid\" ref={ref}>\n      {items}\n    </div>\n  )\n}\n\nclass TreeView extends Component {\n  constructor(props) {\n    super(props)\n    this.setListRef = element => {\n      this.list = element\n    }\n    this.renderItem = this.renderItem.bind(this)\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      baseItems,\n      currentTableRowNumber,\n      expandedIds,\n      fetchItemById,\n      itemsObject,\n      managerScope,\n      showAll,\n    } = this.props\n\n    const {\n      baseItems: prevBaseItems,\n      expandedIds: prevExpandedIds,\n      itemsObject: prevItemsObject,\n      showAll: prevShowAll,\n      currentTableRowNumber: prevCurrentTableRowNumber,\n    } = prevProps\n\n    if (\n      baseItems !== prevBaseItems ||\n      expandedIds !== prevExpandedIds ||\n      itemsObject !== prevItemsObject ||\n      showAll !== prevShowAll\n    ) {\n      const listItems = buildList({\n        baseItems,\n        expandedIds,\n        fetchItemById,\n        itemsObject,\n        showAll,\n      })\n      this.props.setListItems(listItems, { managerScope })\n    }\n\n    if (currentTableRowNumber !== prevCurrentTableRowNumber) {\n      const [firstVisibleRow] = this.list.getVisibleRange()\n      if (currentTableRowNumber <= firstVisibleRow + 1) {\n        this.list.scrollTo(currentTableRowNumber - 1)\n      } else {\n        this.list.scrollAround(currentTableRowNumber)\n      }\n    }\n  }\n\n  renderItem(index) {\n    const {\n      expandedIds,\n      focusedIndex,\n      itemFetchOptions,\n      ItemTitle,\n      listItems,\n      managerScope,\n      resource,\n    } = this.props\n\n    const { isExpandable, id: itemId, level } = listItems[index] || {}\n\n    const isExpanded = itemId && !!expandedIds[itemId]\n    const isFocused = focusedIndex === index\n\n    if (!(listItems && listItems.length)) {\n      return (\n        <Grid padded>\n          <Grid.Row style={{ height: emToPixels(3.5) }}>\n            <Grid.Column style={{ paddingTop: 60, width: 150 }}>\n              <Dimmer active inverted>\n                <Loader content=\"Loading\" inverted />\n              </Dimmer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )\n    }\n\n    return (\n      <ListItem\n        isExpandable={isExpandable}\n        isExpanded={isExpanded}\n        isFocused={isFocused}\n        itemId={itemId}\n        ItemTitle={ItemTitle}\n        key={itemId}\n        level={level}\n        namespace={managerScope}\n        onClickRow={this.props.onClickRow}\n        onToggleRow={this.props.onToggleRow}\n        resource={resource}\n        {...itemFetchOptions}\n      />\n    )\n  }\n\n  render() {\n    const { listItems } = this.props\n\n    return (\n      <ReactList\n        itemRenderer={this.renderItem}\n        itemsRenderer={itemsRenderer}\n        length={listItems.length}\n        ref={this.setListRef}\n        type=\"uniform\"\n      />\n    )\n  }\n}\n\nTreeView.defaultProps = defaultProps\nTreeView.propTypes = propTypes\n\nexport default compose(\n  connect(mapStateToProps),\n  createBatchFetchItems({\n    relationships: ['parent', 'children'],\n  })\n)(TreeView)\n","export default function buildList({\n  baseItems,\n  expandedIds = {},\n  fetchItemById,\n  itemsObject,\n  showAll = false,\n}) {\n  const list = []\n\n  const walk = ({ level = 0, items = [] }) => {\n    items.forEach(item => {\n      const { id } = item\n      const children =\n        item.relationships &&\n        item.relationships.children &&\n        item.relationships.children.data\n      const isExpandable = !!(children && children.length)\n      list.push({\n        id,\n        isExpandable,\n        level,\n      })\n\n      if (showAll || expandedIds[id]) {\n        if (children) {\n          const mappedChildren = children.map(({ id: childId }) => {\n            const child = itemsObject[childId]\n\n            if (child && child.relationships && child.relationships.children) {\n              return child\n            }\n\n            fetchItemById(childId)\n\n            return {\n              loading: true,\n            }\n          })\n          walk({ items: mappedChildren, level: level + 1 })\n        }\n      }\n    })\n  }\n\n  walk({ items: baseItems })\n  return list\n}\n","import { compose } from 'redux'\n\nimport RecordActionBar from './Base'\nimport {\n  createHandleCreateSubmit,\n  createHandleCancelCreate,\n} from './higherOrderComponents'\n\nexport default compose(\n  createHandleCreateSubmit(),\n  createHandleCancelCreate()\n)(RecordActionBar)\n","import { compose } from 'redux'\n\nimport RecordActionBar from './Base'\nimport {\n  createHandleDelete,\n  createHandleEditSubmit,\n  createHandleUndoChanges,\n} from './higherOrderComponents'\n\nexport default compose(\n  createHandleDelete(),\n  createHandleEditSubmit(),\n  createHandleUndoChanges()\n)(RecordActionBar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport extractProps from 'utilities/extractProps'\nimport { CreateItemActionBar } from '../ActionBars'\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  renderCreateForm: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n}\n\nconst rows = [\n  {\n    key: 'itemCreateForm',\n    style: { overflow: 'auto' },\n  },\n  {\n    height: emToPixels(4.625),\n    key: 'bottomBar',\n  },\n]\n\nclass CreateItemColumn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.renderRow = this.renderRow.bind(this)\n  }\n\n  renderRow(key) {\n    const { resource } = this.props\n\n    switch (key) {\n      case 'itemCreateForm': {\n        const { availableHeight, renderCreateForm } = this.props\n        return renderCreateForm({ availableHeight })\n      }\n      case 'bottomBar': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'filterResourceCount',\n            'onInteraction',\n            'resource',\n            'transformOutput',\n          ],\n          props: this.props,\n        })\n\n        return (\n          <CreateItemActionBar\n            {...extractedProps}\n            formName={`${resource}Create`}\n          />\n        )\n      }\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const { availableHeight } = this.props\n\n    return (\n      <RowLayout\n        availableHeight={availableHeight}\n        renderRow={this.renderRow}\n        rows={rows}\n      />\n    )\n  }\n}\n\nCreateItemColumn.propTypes = propTypes\n\nexport default CreateItemColumn\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport extractProps from 'utilities/extractProps'\nimport { EditItemActionBar } from '../ActionBars'\n\nconst defaultBuildItemHeaders = nestedItem => {\n  if (!nestedItem) {\n    return {}\n  }\n\n  return {\n    itemHeader: nestedItem.name,\n    itemSubHeader: capitalizeFirstLetter(nestedItem.group),\n  }\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  buildEditItemHeaders: PropTypes.func,\n  itemId: PropTypes.string.isRequired,\n  loadingDelete: PropTypes.bool,\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n  relationshipsToCheckBeforeDelete: PropTypes.arrayOf(PropTypes.string),\n  renderEditForm: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  buildEditItemHeaders: defaultBuildItemHeaders,\n  loadingDelete: false,\n  nestedItem: undefined,\n  relationshipsToCheckBeforeDelete: [],\n}\n\nconst rows = [\n  {\n    key: 'itemEditForm',\n    style: { overflow: 'auto' },\n  },\n  {\n    height: emToPixels(4.625),\n    key: 'bottomBar',\n  },\n]\n\nclass EditItemColumn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.renderRow = this.renderRow.bind(this)\n  }\n\n  renderRow(key) {\n    const { buildEditItemHeaders, nestedItem, resource } = this.props\n\n    const { itemHeader, itemSubHeader } = buildEditItemHeaders(nestedItem)\n\n    switch (key) {\n      case 'itemEditForm': {\n        const { renderEditForm } = this.props\n\n        const { extractedProps } = extractProps({\n          keys: ['availableHeight', 'nestedItem'],\n          props: this.props,\n        })\n        return renderEditForm({\n          ...extractedProps,\n          itemHeader,\n          itemSubHeader,\n        })\n      }\n      case 'bottomBar': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'fetchOneItemById',\n            'fetchRelationshipsBeforeDelete',\n            'filterResourceCount',\n            'itemId',\n            'loadingDelete',\n            'nestedItem',\n            'onInteraction',\n            'relationshipsToCheckBeforeDelete',\n            'resource',\n            'transformOutput',\n          ],\n          props: this.props,\n        })\n\n        return (\n          <EditItemActionBar\n            {...extractedProps}\n            formName={`${resource}Edit`}\n            itemHeader={itemHeader}\n            itemSubHeader={itemSubHeader}\n          />\n        )\n      }\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const { availableHeight, itemId } = this.props\n\n    return (\n      <RowLayout\n        availableHeight={availableHeight}\n        itemId={itemId}\n        renderRow={this.renderRow}\n        rows={rows}\n      />\n    )\n  }\n}\n\nEditItemColumn.defaultProps = defaultProps\nEditItemColumn.propTypes = propTypes\n\nexport default compose(createGetNestedItemById())(EditItemColumn)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { RowLayout } from 'coreModules/layout/components'\nimport memoize from 'memoize-one'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport extractProps from 'utilities/extractProps'\nimport { getTableWidth } from 'coreModules/resourceManager/utilities'\n\nimport {\n  NAVIGATE_LIST,\n  NAVIGATE_TREE,\n} from 'coreModules/resourceManager/constants'\n\nimport RecordNavigationBar from './shared/RecordNavigationBar'\nimport ResultOptionsBar from './shared/ResultOptionsBar'\nimport TableView from './collection/TableView'\nimport TreeView from './collection/TreeView'\nimport CreateItemColumn from './item/CreateItemColumn'\nimport EditItemColumn from './item/EditItemColumn'\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  createGetNestedItemHocInput: PropTypes.object,\n  createItemActive: PropTypes.bool.isRequired,\n  editItemActive: PropTypes.bool.isRequired,\n  fetchRelationshipsBeforeDelete: PropTypes.func,\n  isPicker: PropTypes.bool.isRequired,\n  onFormTabClick: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  recordNavigationHeight: PropTypes.number,\n  recordOptionsHeight: PropTypes.number,\n  resource: PropTypes.string.isRequired,\n  tableActive: PropTypes.bool.isRequired,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  transformOutput: PropTypes.func,\n  treeActive: PropTypes.bool.isRequired,\n  treeEnabled: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  createGetNestedItemHocInput: {},\n  fetchRelationshipsBeforeDelete: undefined,\n  recordNavigationHeight: emToPixels(4.25),\n  recordOptionsHeight: emToPixels(3.5625),\n  transformOutput: undefined,\n}\n\nclass MainColumn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.renderRow = this.renderRow.bind(this)\n  }\n\n  getRows = memoize(\n    (\n      tableActive,\n      treeActive,\n      treeEnabled,\n      createItemActive,\n      editItemActive,\n      recordNavigationHeight,\n      recordOptionsHeight,\n      isPicker\n    ) => {\n      const rows = []\n\n      if (!isPicker) {\n        rows.push({\n          height: `${recordNavigationHeight}px`,\n          key: 'recordNavigationBar',\n        })\n      }\n\n      rows.push({\n        height: `${recordOptionsHeight}px`,\n        key: 'resultOptionBar',\n        style: {\n          paddingLeft: '1rem',\n          paddingRight: '1rem',\n        },\n      })\n\n      if (tableActive) {\n        rows.push({\n          key: 'tableView',\n          style: { overflow: 'auto' },\n        })\n      }\n\n      if (treeActive) {\n        rows.push({\n          key: 'treeView',\n          style: { overflow: 'auto' },\n        })\n      }\n\n      if (createItemActive) {\n        rows.push({\n          key: 'createItem',\n          style: { overflow: 'auto' },\n        })\n      }\n      if (editItemActive) {\n        rows.push({\n          key: 'editItem',\n          style: { overflow: 'auto' },\n        })\n      }\n      return rows\n    }\n  )\n\n  renderRow(key) {\n    switch (key) {\n      case 'recordNavigationBar': {\n        const { createItemActive, treeActive } = this.props\n\n        const keys = [\n          'createItemActive',\n          'currentTableRowNumber',\n          'numberOfListItems',\n          'onSelectNextRecord',\n          'onSelectPreviousRecord',\n          'onSetCurrentTableRowNumber',\n          'onShowAllRecords',\n          'totalNumberOfRecords',\n          'treeActive',\n        ]\n\n        if (!createItemActive) {\n          keys.push('onOpenNewRecordForm')\n        }\n\n        const { extractedProps } = extractProps({\n          keys,\n          props: this.props,\n        })\n\n        return (\n          <RecordNavigationBar\n            {...extractedProps}\n            disabled={treeActive || createItemActive}\n          />\n        )\n      }\n      case 'treeView': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'baseItems',\n            'currentTableRowNumber',\n            'expandedIds',\n            'fetchTreeBase',\n            'focusedIndex',\n            'itemFetchOptions',\n            'ItemTitle',\n            'listItems',\n            'managerScope',\n            'onClickRow',\n            'onToggleRow',\n            'resource',\n            'setBaseItems',\n            'setFocusedIndex',\n            'setListItems',\n            'showAll',\n          ],\n          props: this.props,\n        })\n        const { itemFetchOptions } = extractedProps\n        return <TreeView {...extractedProps} {...itemFetchOptions} />\n      }\n\n      case 'tableView': {\n        const {\n          recordNavigationHeight,\n          recordOptionsHeight,\n          tableColumnSpecifications,\n          availableHeight,\n        } = this.props\n        const width = getTableWidth({ tableColumnSpecifications })\n        const { extractedProps } = extractProps({\n          keys: [\n            'currentTableRowNumber',\n            'focusedIndex',\n            'focusedItemId',\n            'listItems',\n            'managerScope',\n            'onClickRow',\n            'resource',\n            'tableBatchFetchOptions',\n            'tableColumnSpecifications',\n            'tableSearch',\n          ],\n          props: this.props,\n        })\n        return (\n          <TableView\n            {...extractedProps}\n            availableHeight={\n              availableHeight - recordNavigationHeight - recordOptionsHeight\n            }\n            width={width}\n          />\n        )\n      }\n\n      case 'editItem': {\n        const {\n          availableHeight,\n          createGetNestedItemHocInput,\n          recordNavigationHeight,\n          recordOptionsHeight,\n        } = this.props\n\n        const { extractedProps } = extractProps({\n          keys: [\n            'buildEditItemHeaders',\n            'fetchRelationshipsBeforeDelete',\n            'filterResourceCount',\n            'itemId',\n            'ItemTitle',\n            'onInteraction',\n            'relationshipsToCheckBeforeDelete',\n            'renderEditForm',\n            'resource',\n            'itemFetchOptions',\n            'transformOutput',\n          ],\n          props: this.props,\n        })\n\n        return (\n          <EditItemColumn\n            {...createGetNestedItemHocInput}\n            {...extractedProps}\n            availableHeight={\n              availableHeight - recordNavigationHeight - recordOptionsHeight\n            }\n          />\n        )\n      }\n\n      case 'createItem': {\n        const {\n          availableHeight,\n          recordNavigationHeight,\n          recordOptionsHeight,\n          transformOutput,\n        } = this.props\n        const { extractedProps } = extractProps({\n          keys: [\n            'onInteraction',\n            'filterResourceCount',\n            'resource',\n            'renderCreateForm',\n          ],\n          props: this.props,\n        })\n\n        return (\n          <CreateItemColumn\n            {...extractedProps}\n            availableHeight={\n              availableHeight - recordNavigationHeight - recordOptionsHeight\n            }\n            transformOutput={transformOutput}\n          />\n        )\n      }\n\n      case 'resultOptionBar': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'createItemActive',\n            'editItemActive',\n            'itemEnabled',\n            'onToggleFilters',\n            'tableActive',\n            'treeActive',\n            'treeEnabled',\n          ],\n          props: this.props,\n        })\n\n        return (\n          <ResultOptionsBar\n            {...extractedProps}\n            onFormTabClick={this.props.onFormTabClick}\n            onListTabClick={() => {\n              this.props.onInteraction(NAVIGATE_LIST)\n            }}\n            onTreeTabClick={() => {\n              this.props.onInteraction(NAVIGATE_TREE)\n            }}\n          />\n        )\n      }\n\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const {\n      availableHeight,\n      createItemActive,\n      editItemActive,\n      isPicker,\n      recordNavigationHeight,\n      recordOptionsHeight,\n      tableActive,\n      treeActive,\n      treeEnabled,\n    } = this.props\n    const rows = this.getRows(\n      tableActive,\n      treeActive,\n      treeEnabled,\n      createItemActive,\n      editItemActive,\n      recordNavigationHeight,\n      recordOptionsHeight,\n      isPicker\n    )\n    const { extractedProps } = extractProps({\n      keys: [\n        'baseItems',\n        'currentTableRowNumber',\n        'expandedIds',\n        'focusedIndex',\n        'isPicker',\n        'itemId',\n        'listItems',\n        'showAll',\n        'tableActive',\n        'totalNumberOfRecords',\n        'treeActive',\n      ],\n      props: this.props,\n    })\n\n    return (\n      <RowLayout\n        {...extractedProps}\n        availableHeight={availableHeight}\n        renderRow={this.renderRow}\n        rows={rows}\n      />\n    )\n  }\n}\n\nMainColumn.defaultProps = defaultProps\nMainColumn.propTypes = propTypes\n\nexport default compose(injectWindowHeight)(MainColumn)\n","export default function getTableWidth({\n  includeColumns = null,\n  tableColumnSpecifications,\n}) {\n  return tableColumnSpecifications.reduce((totalWidth, { name, width }) => {\n    if (!includeColumns || includeColumns.includes(name)) {\n      return totalWidth + width\n    }\n\n    return totalWidth\n  }, 80)\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { getFormValues, isInvalid, isPristine } from 'redux-form'\nimport { Button, Grid } from 'semantic-ui-react'\n\nconst mapStateToProps = (state, { resource }) => {\n  const formName = `${resource}Filter`\n  return {\n    formName,\n    invalid: isInvalid(formName)(state),\n    pristine: isPristine(formName)(state),\n    values: getFormValues(formName)(state),\n  }\n}\n\nconst propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  isPicker: PropTypes.bool,\n  onShowAllRecords: PropTypes.func.isRequired,\n  onUpdateFilterValues: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  values: PropTypes.object,\n}\nconst defaultProps = {\n  isPicker: false,\n  values: undefined,\n}\n\nclass BottomBar extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleReset = this.handleReset.bind(this)\n    this.state = { loading: false }\n  }\n\n  handleReset(event) {\n    event.preventDefault()\n    const { isPicker } = this.props\n    this.props.onShowAllRecords({ isPicker })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const { values } = this.props\n    this.props.onUpdateFilterValues(values)\n  }\n\n  render() {\n    const { invalid, isPicker, pristine } = this.props\n\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Button\n            disabled={invalid}\n            loading={this.state.loading}\n            onClick={this.handleSubmit}\n            size={isPicker ? 'small' : 'large'}\n            style={{ float: 'left' }}\n          >\n            Search\n          </Button>\n          <Button\n            basic\n            disabled={pristine && !isPicker}\n            onClick={this.handleReset}\n            size={isPicker ? 'small' : 'large'}\n            style={{ float: 'right' }}\n          >\n            {isPicker ? 'Show all' : 'Clear all filters'}\n          </Button>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBottomBar.propTypes = propTypes\nBottomBar.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(BottomBar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { CLOSE_ITEM_VIEW } from 'coreModules/resourceManager/constants'\nimport { ColumnRowHeader } from 'coreModules/commonUi/components'\nimport extractProps from 'utilities/extractProps'\nimport BottomBar from './BottomBar'\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  filterHeader: PropTypes.string,\n  filterValues: PropTypes.object,\n  isPicker: PropTypes.bool.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  renderFilterForm: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  filterHeader: 'Filter',\n  filterValues: undefined,\n}\nconst rows = [\n  {\n    height: emToPixels(4.25),\n    key: 'header',\n  },\n  {\n    key: 'filterForm',\n  },\n  {\n    height: emToPixels(4.625),\n    key: 'bottomBar',\n  },\n]\n\nclass FilterColumn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.renderRow = this.renderRow.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  handleClose(event) {\n    event.preventDefault()\n    this.props.onInteraction(CLOSE_ITEM_VIEW)\n  }\n\n  renderRow(key) {\n    switch (key) {\n      case 'header': {\n        const { filterHeader } = this.props\n\n        return <ColumnRowHeader text={filterHeader} />\n      }\n      case 'filterForm': {\n        const { filterValues: initialValues = {} } = this.props\n        return this.props.renderFilterForm({ initialValues })\n      }\n      case 'bottomBar': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'buildFilterQuery',\n            'isPicker',\n            'onInteraction',\n            'onUpdateFilterValues',\n            'onShowAllRecords',\n            'resource',\n          ],\n          props: this.props,\n        })\n\n        return <BottomBar {...extractedProps} />\n      }\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const { availableHeight } = this.props\n\n    return (\n      <RowLayout\n        availableHeight={availableHeight}\n        renderRow={this.renderRow}\n        rows={rows}\n      />\n    )\n  }\n}\n\nFilterColumn.defaultProps = defaultProps\nFilterColumn.propTypes = propTypes\n\nexport default FilterColumn\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header, Icon } from 'semantic-ui-react'\n\nconst propTypes = {\n  onClosePicker: PropTypes.func.isRequired,\n  pickerTitle: PropTypes.string,\n}\n\nconst defaultProps = {\n  pickerTitle: 'Picker',\n}\n\nconst ItemHeader = props => {\n  const { onClosePicker, pickerTitle } = props\n  return (\n    <Grid padded>\n      <Grid.Column>\n        <Header>\n          {pickerTitle}\n          <Icon\n            name=\"close\"\n            onClick={onClosePicker}\n            size=\"small\"\n            style={{ float: 'right' }}\n          />\n        </Header>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nItemHeader.propTypes = propTypes\nItemHeader.defaultProps = defaultProps\n\nexport default ItemHeader\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { createInjectItemTitle } from 'coreModules/resourceManager/higherOrderComponents'\nimport { Button, Grid, Header } from 'semantic-ui-react'\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\n\nconst propTypes = {\n  excludeRootNode: PropTypes.bool.isRequired,\n  itemTitle: PropTypes.node,\n  managerScope: PropTypes.string.isRequired,\n  nestedItem: PropTypes.object,\n  onPickItem: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemTitle: undefined,\n  nestedItem: undefined,\n}\n\nclass ItemHeader extends Component {\n  constructor(props) {\n    super(props)\n    this.handlePickItem = this.handlePickItem.bind(this)\n    this.shortcuts = [\n      {\n        command: 'space',\n        description: 'Picker: Select current item',\n        onPress: this.handlePickItem,\n      },\n    ]\n  }\n\n  handlePickItem() {\n    const { excludeRootNode, nestedItem } = this.props\n    const { isRoot } = nestedItem || {}\n    if (!(isRoot && excludeRootNode)) {\n      this.props.onPickItem(nestedItem.id, nestedItem)\n    }\n  }\n\n  render() {\n    const { excludeRootNode, managerScope, nestedItem, itemTitle } = this.props\n\n    const { isRoot } = nestedItem || {}\n\n    return (\n      <React.Fragment>\n        <KeyboardShortcuts\n          activeInLayer={managerScope}\n          shortcuts={this.shortcuts}\n        />\n        <Grid padded>\n          <Grid.Column>\n            <Header>\n              <Button\n                disabled={!nestedItem || (excludeRootNode && isRoot)}\n                onClick={() => this.handlePickItem(nestedItem.id, nestedItem)}\n                size=\"large\"\n                type=\"button\"\n              >\n                pick: {itemTitle}\n              </Button>\n            </Header>\n          </Grid.Column>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nItemHeader.propTypes = propTypes\nItemHeader.defaultProps = defaultProps\n\nexport default compose(\n  createGetNestedItemById({\n    refresh: false,\n    shouldFetch: false,\n  }),\n  createInjectItemTitle()\n)(ItemHeader)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport memoize from 'memoize-one'\nimport {\n  ColumnLayout,\n  InformationSidebar,\n  RowLayout,\n} from 'coreModules/layout/components'\nimport { createResourceManagerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\nimport layoutSelectors from 'coreModules/layout/globalSelectors'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport extractProps from 'utilities/extractProps'\n\nimport MainColumn from './MainColumn'\nimport FilterColumn from './FilterColumn'\nimport PickerHeader from './picker/Header'\nimport PickerActionBar from './picker/ActionBar'\n\nconst TOP_NAVBAR_HEIGHT = emToPixels(3.4375)\nconst PICKER_MODAL_PADDING = emToPixels(10)\nconst PICKER_HEADER_HEIGHT = emToPixels(3.5)\nconst PICKER_ACTION_BAR_HEIGHT = emToPixels(5)\n\nconst mapStateToProps = (state, { isPicker, windowHeight }) => {\n  const availableHeight = isPicker\n    ? windowHeight - PICKER_MODAL_PADDING\n    : windowHeight - TOP_NAVBAR_HEIGHT\n\n  const columnHeight = isPicker\n    ? availableHeight - PICKER_HEADER_HEIGHT - PICKER_ACTION_BAR_HEIGHT\n    : availableHeight\n\n  return {\n    availableHeight,\n    columnHeight,\n    filterColumnWidth: isPicker ? emToPixels(16) : emToPixels(25),\n    rightSidebarIsOpen: layoutSelectors.getRightSidebarIsOpen(state),\n  }\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  columnHeight: PropTypes.number.isRequired,\n  createItemActive: PropTypes.bool.isRequired,\n  editItemActive: PropTypes.bool.isRequired,\n  fetchRelationshipsBeforeDelete: PropTypes.func,\n  filterActive: PropTypes.bool.isRequired,\n  filterColumnWidth: PropTypes.number.isRequired,\n  focusedItemId: PropTypes.string,\n  isPicker: PropTypes.bool,\n  itemFetchOptions: PropTypes.object.isRequired,\n  itemId: PropTypes.string,\n  managerScope: PropTypes.string.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  relationshipsToCheckBeforeDelete: PropTypes.arrayOf(PropTypes.string),\n  renderEditForm: PropTypes.func.isRequired,\n  renderFilterForm: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n  rightSidebarIsOpen: PropTypes.bool.isRequired,\n  rightSidebarWidth: PropTypes.number,\n  tableActive: PropTypes.bool.isRequired,\n  tableColumnSpecifications: PropTypes.array.isRequired,\n  transformOutput: PropTypes.func,\n  treeActive: PropTypes.bool.isRequired,\n  treeEnabled: PropTypes.bool.isRequired,\n  windowHeight: PropTypes.number.isRequired,\n}\nconst defaultProps = {\n  fetchRelationshipsBeforeDelete: undefined,\n  focusedItemId: undefined,\n  isPicker: false,\n  itemId: undefined,\n  relationshipsToCheckBeforeDelete: undefined,\n  rightSidebarWidth: emToPixels(25),\n  transformOutput: undefined,\n}\n\nclass ResourceManager extends Component {\n  constructor(props) {\n    super(props)\n\n    this.getColumns = this.getColumns.bind(this)\n    this.renderColumn = this.renderColumn.bind(this)\n    this.renderRow = this.renderRow.bind(this)\n  }\n\n  getColumns = memoize(\n    (\n      createItemActive,\n      editItemActive,\n      filterColumnWidth,\n      filterActive,\n      rightSidebarIsOpen,\n      rightSidebarWidth\n    ) => {\n      const columns = [\n        {\n          key: 'mainColumn',\n        },\n      ]\n\n      const filterColumnStyle = {\n        background: 'white',\n        borderLeft: '1px solid #D4D4D5',\n        zIndex: 100,\n      }\n\n      if (filterActive) {\n        columns.push({\n          key: 'filterColumn',\n          style: filterColumnStyle,\n          width: `${filterColumnWidth}px`,\n        })\n      }\n\n      if (rightSidebarIsOpen) {\n        columns.push({\n          key: 'rightSidebar',\n          style: filterColumnStyle,\n          width: `${rightSidebarWidth}px`,\n        })\n      }\n      return columns\n    }\n  )\n\n  getRows = memoize(isPicker => {\n    return isPicker\n      ? [\n          { height: `${PICKER_HEADER_HEIGHT}px`, key: 'pickerHeader' },\n          { key: 'main' },\n          { height: `${PICKER_ACTION_BAR_HEIGHT}px`, key: 'pickerActionBar' },\n        ]\n      : [{ key: 'main' }]\n  })\n\n  renderColumn(key) {\n    switch (key) {\n      case 'mainColumn': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'availableHeight',\n            'baseItems',\n            'buildEditItemHeaders',\n            'createGetNestedItemHocInput',\n            'createItemActive',\n            'currentTableRowNumber',\n            'editItemActive',\n            'expandedIds',\n            'fetchRelationshipsBeforeDelete',\n            'fetchTreeBase',\n            'filterActive',\n            'filterResourceCount',\n            'focusedIndex',\n            'isPicker',\n            'itemEnabled',\n            'itemFetchOptions',\n            'itemId',\n            'ItemTitle',\n            'listItems',\n            'managerScope',\n            'nextRowAvailable',\n            'numberOfListItems',\n            'onClickRow',\n            'onFormTabClick',\n            'onInteraction',\n            'onOpenNewRecordForm',\n            'onSelectNextRecord',\n            'onSelectPreviousRecord',\n            'onSetCurrentTableRowNumber',\n            'onShowAllRecords',\n            'onToggleCurrentRow',\n            'onToggleFilters',\n            'onToggleRow',\n            'prevRowAvailable',\n            'relationshipsToCheckBeforeDelete',\n            'renderCreateForm',\n            'renderEditForm',\n            'resource',\n            'setListItems',\n            'showAll',\n            'tableActive',\n            'tableBatchFetchOptions',\n            'tableColumnSpecifications',\n            'tableSearch',\n            'totalNumberOfRecords',\n            'treeActive',\n            'treeEnabled',\n          ],\n          props: this.props,\n        })\n\n        const { columnHeight, transformOutput } = this.props\n        return (\n          <MainColumn\n            {...extractedProps}\n            availableHeight={columnHeight}\n            transformOutput={transformOutput}\n          />\n        )\n      }\n\n      case 'filterColumn': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'buildFilterQuery',\n            'filterHeader',\n            'filterValues',\n            'isPicker',\n            'onInteraction',\n            'onShowAllRecords',\n            'onUpdateFilterValues',\n            'renderFilterForm',\n            'resource',\n          ],\n          props: this.props,\n        })\n        const { columnHeight } = this.props\n        return (\n          <FilterColumn {...extractedProps} availableHeight={columnHeight} />\n        )\n      }\n\n      case 'rightSidebar': {\n        return <InformationSidebar />\n      }\n\n      default: {\n        throw new Error(`Unknown column: ${key}`)\n      }\n    }\n  }\n\n  renderRow(key) {\n    switch (key) {\n      case 'main': {\n        const {\n          createItemActive,\n          editItemActive,\n          filterColumnWidth,\n          filterActive,\n          rightSidebarIsOpen,\n          rightSidebarWidth,\n        } = this.props\n        const columns = this.getColumns(\n          createItemActive,\n          editItemActive,\n          filterColumnWidth,\n          filterActive,\n          rightSidebarIsOpen,\n          rightSidebarWidth\n        )\n        return (\n          <ColumnLayout\n            {...this.props}\n            columns={columns}\n            renderColumn={this.renderColumn}\n          />\n        )\n      }\n\n      case 'pickerHeader': {\n        const { extractedProps } = extractProps({\n          keys: ['onClosePicker', 'pickerTitle'],\n          props: this.props,\n        })\n\n        return <PickerHeader {...extractedProps} />\n      }\n\n      case 'pickerActionBar': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'excludeRootNode',\n            'ItemTitle',\n            'managerScope',\n            'onPickItem',\n            'resource',\n          ],\n          props: this.props,\n        })\n\n        const { managerScope, itemFetchOptions } = this.props\n\n        return (\n          <PickerActionBar\n            {...extractedProps}\n            {...itemFetchOptions}\n            itemId={this.props.focusedItemId}\n            namespace={`${managerScope}Title`}\n          />\n        )\n      }\n\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const { isPicker } = this.props\n    const rows = this.getRows(isPicker)\n\n    return <RowLayout {...this.props} renderRow={this.renderRow} rows={rows} />\n  }\n}\n\nResourceManager.propTypes = propTypes\nResourceManager.defaultProps = defaultProps\n\nexport default compose(\n  createResourceManagerWrapper(),\n  injectWindowHeight,\n  connect(mapStateToProps)\n)(ResourceManager)\n","import RecordActionBar from './ResourceManager/MainColumn/item/ActionBars/Base'\nimport RecordNavigationBar from './ResourceManager/MainColumn/shared/RecordNavigationBar'\nimport ResourceManager from './ResourceManager'\n\nexport { RecordActionBar, RecordNavigationBar, ResourceManager }\n","export const BOOTSTRAP_REGISTER_MODULES = 'BOOTSTRAP_REGISTER_MODULES'\nexport const BOOTSTRAP_UNREGISTER_MODULES = 'BOOTSTRAP_UNREGISTER_MODULES'\n","import {\n  USER_GET_USER_REQUEST,\n  USER_GET_USER_SUCCESS,\n  USER_GET_USER_FAIL,\n} from '../actionTypes'\nimport { GET_USER } from '../endpoints'\n\nexport default function getUser() {\n  return (dispatch, getState, { apiClient }) => {\n    dispatch({\n      type: USER_GET_USER_REQUEST,\n    })\n    return apiClient.call(GET_USER).then(\n      response => {\n        dispatch({\n          payload: response,\n          type: USER_GET_USER_SUCCESS,\n        })\n        return response\n      },\n      error => {\n        dispatch({\n          error: true,\n          payload: error,\n          type: USER_GET_USER_FAIL,\n        })\n      }\n    )\n  }\n}\n","import { utils } from 'redux-module-local-storage'\n\nimport { USER_PREFERENCES_KEY } from '../constants'\n\nimport {\n  USER_GET_USER_PREFERENCES_REQUEST,\n  USER_GET_USER_PREFERENCES_SUCCESS,\n  USER_GET_USER_PREFERENCES_FAIL,\n} from '../actionTypes'\n\nexport default function getUserPreferences() {\n  return dispatch => {\n    dispatch({\n      type: USER_GET_USER_PREFERENCES_REQUEST,\n    })\n\n    return new Promise((resolve, reject) => {\n      let userPreferences\n      try {\n        userPreferences = utils.getItem(USER_PREFERENCES_KEY)\n      } catch (err) {\n        return reject(err)\n      }\n\n      return resolve(userPreferences)\n    })\n      .then(userPreferences => {\n        dispatch({\n          payload: userPreferences,\n          type: USER_GET_USER_PREFERENCES_SUCCESS,\n        })\n        return userPreferences\n      })\n      .catch(error => {\n        dispatch({\n          error: true,\n          payload: error,\n          type: USER_GET_USER_PREFERENCES_FAIL,\n        })\n      })\n  }\n}\n","import { actionCreators } from 'redux-module-local-storage'\n\nimport { USER_PREFERENCES_KEY } from '../constants'\n\nimport {\n  USER_UPDATE_USER_PREFERENCES_REQUEST,\n  USER_UPDATE_USER_PREFERENCES_SUCCESS,\n  USER_UPDATE_USER_PREFERENCES_FAIL,\n} from '../actionTypes'\n\nexport default function updateUserPreferences(preferences) {\n  return dispatch => {\n    dispatch({\n      type: USER_UPDATE_USER_PREFERENCES_REQUEST,\n    })\n\n    return new Promise(resolve => {\n      dispatch(actionCreators.setItem(USER_PREFERENCES_KEY, preferences))\n      return resolve(preferences)\n    })\n      .then(userPreferences => {\n        dispatch({\n          payload: userPreferences,\n          type: USER_UPDATE_USER_PREFERENCES_SUCCESS,\n        })\n        return userPreferences\n      })\n      .catch(error => {\n        dispatch({\n          error: true,\n          payload: error,\n          type: USER_UPDATE_USER_PREFERENCES_FAIL,\n        })\n      })\n  }\n}\n","import updateUserPreferences from './updateUserPreferences'\nimport selectors from '../globalSelectors'\n\nexport default function updateUserPreference(key, value) {\n  return (dispatch, getState) => {\n    const currentPreferences = selectors.getUserPreferences(getState()) || {}\n\n    return dispatch(\n      updateUserPreferences({\n        ...currentPreferences,\n        [key]: value,\n      })\n    )\n  }\n}\n","import getUser from './getUser'\nimport getUserPreferences from './getUserPreferences'\nimport login from './login'\nimport logout from './logout'\nimport updateUserPreference from './updateUserPreference'\nimport updateUserPreferences from './updateUserPreferences'\n\nexport {\n  getUser,\n  getUserPreferences,\n  login,\n  logout,\n  updateUserPreference,\n  updateUserPreferences,\n}\n","export const ALL_COLLAPSED = 'allCollapsed'\nexport const ALL_EXPANDED = 'allExpanded'\nexport const FIRST_EXPANDED = 'firstExpanded'\nexport const MODULE_NAME = 'commonUi'\nexport const MULTI = 'multi'\nexport const SINGLE = 'single'\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  reducer,\n} = keyObjectModuleFactory({\n  actionPrefix: 'RESOURCE_MANAGER',\n  keys: [\n    ':managerScope',\n    ':managerScope.baseItems',\n    ':managerScope.currentTableRowNumber',\n    ':managerScope.expandedIds',\n    ':managerScope.focusIdWhenLoaded',\n    ':managerScope.listFilterValues',\n    ':managerScope.listItems',\n    ':managerScope.showAll',\n  ],\n  name: 'resourceManager',\n})\n\nexport { actionCreators, actionTypes, constants, globalSelectors, reducer }\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  reducer,\n} = keyObjectModuleFactory({\n  actionPrefix: 'MAMMALS',\n  initialValues: {\n    activeFormSectionIndex: null,\n    filterColumnIsOpen: false,\n    mainColumnActiveTab: 'resultTable',\n    showAllFormSections: false,\n  },\n  keys: [\n    'activeFormSectionIndex',\n    'currentTableRowNumber',\n    'filterColumnIsOpen',\n    'focusedSpecimenId',\n    'mainColumnActiveTab',\n    'showAllFormSections',\n    'totalNumberOfRecords',\n  ],\n  name: 'collectionMammals',\n})\n\nexport { actionCreators, actionTypes, constants, globalSelectors, reducer }\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\nimport { MODULE_NAME as name } from './constants'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n} = keyObjectModuleFactory({\n  keys: [\n    ':formName',\n    'sectionNavigation.:formName.sectionInvalidStatus',\n    'sectionNavigation.:formName.activeFormSectionIndex',\n    'sectionNavigation.:formName.showAllFormSections',\n  ],\n  name,\n})\n\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n}\n","export default function includesModule(action, moduleName) {\n  if (\n    action &&\n    action.payload &&\n    action.payload.modules &&\n    action.payload.modules[moduleName]\n  ) {\n    return true\n  }\n\n  return false\n}\n","import objectPath from 'object-path'\nimport immutable from 'object-path-immutable'\n\nexport default function registerModuleProperty({\n  action,\n  customRegisterKey,\n  ignoreModuleNames = false,\n  property,\n  scopeUnderModules = false,\n  state,\n}) {\n  if (!(action && action.payload)) {\n    return state\n  }\n\n  const statePath = scopeUnderModules\n    ? `${customRegisterKey || property}.modules`\n    : customRegisterKey || property\n  const currentPropertyObject = objectPath.get(state, statePath)\n  const modules = action.payload.modules || {}\n\n  const mergedPropertyObject = Object.keys(modules).reduce(\n    (obj, moduleName) => {\n      const module = modules[moduleName]\n      if (!module[property]) {\n        return obj\n      }\n\n      if (ignoreModuleNames) {\n        return {\n          ...obj,\n          ...module[property],\n        }\n      }\n\n      return {\n        ...obj,\n        [moduleName]: module[property],\n      }\n    },\n    currentPropertyObject || {}\n  )\n\n  if (mergedPropertyObject === currentPropertyObject) {\n    return state\n  }\n\n  return immutable.set(state, statePath, mergedPropertyObject)\n}\n","import getModuleConfig from './getModuleConfig'\n\nexport default function setModuleConfig({ action, state, moduleName }) {\n  const config = getModuleConfig(action, moduleName)\n  if (!config) {\n    return state\n  }\n  return {\n    ...state,\n    ...config,\n  }\n}\n","export default function getModuleConfig(action, moduleName) {\n  if (\n    action &&\n    action.payload &&\n    action.payload.config &&\n    action.payload.config[moduleName]\n  ) {\n    return action.payload.config[moduleName]\n  }\n\n  return {}\n}\n","import objectPath from 'object-path'\nimport immutable from 'object-path-immutable'\n\nexport default function unregisterModuleProperty({\n  action,\n  customRegisterKey,\n  ignoreModuleNames = false,\n  property,\n  scopeUnderModules = false,\n  state,\n}) {\n  if (!(action && action.payload)) {\n    return state\n  }\n\n  const statePath = scopeUnderModules\n    ? `${customRegisterKey || property}.modules`\n    : customRegisterKey || property\n  const currentPropertyObject = objectPath.get(state, statePath)\n\n  if (!(currentPropertyObject && Object.keys(currentPropertyObject).length)) {\n    return state\n  }\n\n  const modules = action.payload.modules || {}\n\n  const mergedPropertyObject = Object.keys(modules).reduce(\n    (obj, moduleName) => {\n      if (ignoreModuleNames && modules[moduleName][property]) {\n        const newObj = {\n          ...obj,\n        }\n\n        const keysToRemove = Object.keys(modules[moduleName][property])\n        keysToRemove.forEach(key => delete newObj[key])\n\n        return newObj\n      }\n\n      if (!obj[moduleName]) {\n        return obj\n      }\n\n      const newObj = {\n        ...obj,\n      }\n\n      delete newObj[moduleName] // eslint-disable-line no-param-reassign\n\n      return newObj\n    },\n    currentPropertyObject\n  )\n\n  if (mergedPropertyObject === currentPropertyObject) {\n    return state\n  }\n\n  return immutable.set(state, statePath, mergedPropertyObject)\n}\n","import getModuleConfig from './getModuleConfig'\nimport includesModule from './includesModule'\nimport registerModuleProperty from './registerModuleProperty'\nimport setModuleConfig from './setModuleConfig'\nimport unregisterModuleProperty from './unregisterModuleProperty'\n\nexport {\n  getModuleConfig,\n  includesModule,\n  registerModuleProperty,\n  setModuleConfig,\n  unregisterModuleProperty,\n}\n","export const MODULE_NAME = 'layout'\nexport const pixelsPerEm = 16\nexport const APPLICATION_LAYER_VIEW = 'view'\nexport const APPLICATION_LAYER_MODAL = 'modal'\n","export const MODULE_NAME = 'user'\nexport const AUTH_TOKEN_KEY = 'session'\nexport const USER_PREFERENCES_KEY = 'userPreferences'\n","export const SIZE_SET_BREAKPOINT = 'SIZE_SET_BREAKPOINT'\nexport const SIZE_SET_HEIGHT = 'SIZE_SET_HEIGHT'\nexport const SIZE_SET_WIDTH = 'SIZE_SET_WIDTH'\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport Checkbox from '../../fields/Checkbox'\nimport Input from '../../fields/Input'\nimport Radio from '../../fields/Radio'\nimport RadioBoolean from '../../fields/RadioBoolean'\nimport RangeDate from '../../fields/Date/RangeDate'\nimport Remarks from '../../fields/Remarks'\nimport SingleDate from '../../fields/Date/SingleDate'\nimport TextArea from '../../fields/TextArea'\nimport CustomData from '../../fields/CustomData'\n\nexport default wrapReduxFormFieldParts({\n  Checkbox,\n  CustomData,\n  Input,\n  Radio,\n  RadioBoolean,\n  RangeDate,\n  Remarks,\n  SingleDate,\n  TextArea,\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  icon: PropTypes.string,\n  id: PropTypes.string,\n  module: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n  textKey: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  icon: undefined,\n  id: undefined,\n  size: undefined,\n}\n\nfunction IconButton({ id, icon, module, onClick: handleClick, size, textKey }) {\n  return (\n    <Button id={id} onClick={handleClick} size={size}>\n      <Icon name={icon} />\n      <ModuleTranslate capitalize module={module} textKey={textKey} />\n    </Button>\n  )\n}\n\nIconButton.propTypes = propTypes\nIconButton.defaultProps = defaultProps\n\nexport default IconButton\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Icon } from 'semantic-ui-react'\n\nimport { getYMDHMSFromTimestamp } from 'common/es5/date'\n\nconst propTypes = {\n  eventType: PropTypes.string.isRequired,\n  includeSourceLink: PropTypes.bool,\n  recordHistoryId: PropTypes.string,\n  timestamp: PropTypes.string.isRequired,\n  username: PropTypes.string,\n}\n\nconst defaultProps = {\n  includeSourceLink: false,\n  recordHistoryId: undefined,\n  username: 'Admin',\n}\n\nclass EventRow extends PureComponent {\n  render() {\n    const {\n      eventType,\n      includeSourceLink,\n      recordHistoryId,\n      timestamp,\n      username,\n    } = this.props\n\n    const eventTimestamp = getYMDHMSFromTimestamp(timestamp)\n    let eventRow = username\n      ? `${eventType} ${username} ${eventTimestamp}`\n      : `${eventType} ${eventTimestamp}`\n    if (includeSourceLink) {\n      eventRow = (\n        <span>\n          {eventRow}{' '}\n          <a href={`/dataViewer/sourceData/${recordHistoryId}`} target=\"_blank\">\n            Source data <Icon name=\"external alternate\" />\n          </a>\n        </span>\n      )\n    }\n\n    return <Grid.Column width={16}>{eventRow}</Grid.Column>\n  }\n}\n\nEventRow.propTypes = propTypes\nEventRow.defaultProps = defaultProps\n\nexport default EventRow\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport TranslatedHeader from '../TranslatedHeader'\nimport EventRow from './EventRow'\n\nconst mapStateToProps = (_, { resourceActivities }) => {\n  if (!resourceActivities || !resourceActivities.length) {\n    return {}\n  }\n\n  return {\n    createdEvent: resourceActivities.find(({ action }) => action === 'create'),\n    lastModifiedEvent: resourceActivities.find(\n      ({ action }) => action === 'update'\n    ),\n  }\n}\n\nconst propTypes = {\n  createdEvent: PropTypes.shape({\n    srcCreatedAt: PropTypes.string,\n    username: PropTypes.string,\n  }),\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  lastModifiedEvent: PropTypes.shape({\n    srcUpdatedAt: PropTypes.string,\n    username: PropTypes.string,\n  }),\n  module: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  createdEvent: undefined,\n  lastModifiedEvent: undefined,\n}\n\nclass RecordHistoryEvents extends PureComponent {\n  render() {\n    const {\n      createdEvent,\n      lastModifiedEvent,\n      i18n: { moduleTranslate },\n      module,\n    } = this.props\n\n    const hasEvents = createdEvent || lastModifiedEvent\n\n    const username =\n      (createdEvent && createdEvent.username) || 'Admin (imported)'\n    return (\n      <React.Fragment>\n        {hasEvents && (\n          <TranslatedHeader\n            as=\"h3\"\n            module={module}\n            textKey=\"headers.recordHistory\"\n          />\n        )}\n        {createdEvent && (\n          <EventRow\n            eventType={moduleTranslate({\n              capitalize: true,\n              module,\n              textKey: 'other.createdBy',\n            })}\n            includeSourceLink={createdEvent.hasSourceData}\n            recordHistoryId={createdEvent.id}\n            timestamp={createdEvent.srcCreatedAt}\n            username={username}\n          />\n        )}\n\n        {lastModifiedEvent && (\n          <EventRow\n            eventType={moduleTranslate({\n              capitalize: true,\n              module,\n              textKey: 'other.lastModifiedBy',\n            })}\n            timestamp={lastModifiedEvent.srcUpdatedAt}\n            username={lastModifiedEvent.username}\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nRecordHistoryEvents.propTypes = propTypes\nRecordHistoryEvents.defaultProps = defaultProps\n\nexport default compose(\n  withI18n(),\n  connect(mapStateToProps)\n)(RecordHistoryEvents)\n","import { compose } from 'redux'\n\nimport { wrapInColumn } from 'coreModules/form/higherOrderComponents'\n\nexport default function wrapStaticContentParts(componentMap) {\n  return Object.keys(componentMap).reduce((obj, componentName) => {\n    return {\n      ...obj,\n      [componentName]: compose(wrapInColumn)(componentMap[componentName]),\n    }\n  }, {})\n}\n","import wrapStaticContentParts from 'coreModules/form/utilities/wrapStaticContentParts'\n\nimport AddButton from './AddButton'\nimport IconButton from './IconButton'\nimport RecordHistoryEvents from './RecordHistoryEvents'\nimport TranslatedHeader from './TranslatedHeader'\nimport TranslatedHeaderWithHelpIcon from './TranslatedHeaderWithHelpIcon'\n\nexport default wrapStaticContentParts({\n  AddButton,\n  IconButton,\n  RecordHistoryEvents,\n  TranslatedHeader,\n  TranslatedHeaderWithHelpIcon,\n})\n","import ReduxFormFieldComponents from './ReduxFormFieldComponents'\nimport StaticContent from './StaticContent'\n\nconst components = {\n  ...ReduxFormFieldComponents,\n  ...StaticContent,\n}\n\nexport default components\n","import objectPath from 'object-path'\n\nconst createMapRequiredStrings = (fieldPaths = []) => syncErrors => {\n  const transformedSyncErrors = { ...syncErrors }\n\n  fieldPaths.forEach(path => {\n    const errorPath = objectPath.get(syncErrors, `${path}.fullPath`)\n\n    if (errorPath) {\n      objectPath.set(transformedSyncErrors, path, {\n        errorCode: 'REQUIRED',\n        fullPath: errorPath,\n      })\n    }\n  })\n\n  return transformedSyncErrors\n}\n\nexport default createMapRequiredStrings\n","import objectPath from 'object-path'\n\nconst mapParentError = syncErrors => {\n  const parentError = objectPath.get(syncErrors, 'parent')\n  const parentIdError = objectPath.get(syncErrors, 'parent.id')\n\n  if (parentError || parentIdError) {\n    return {\n      ...syncErrors,\n      parent: {\n        id: {\n          errorCode: 'REQUIRED',\n          fullPath: 'parent.id',\n        },\n      },\n    }\n  }\n\n  return syncErrors\n}\n\nexport default mapParentError\n","export { default as createMapRequiredStrings } from './createMapRequiredStrings'\nexport { default as mapParentError } from './mapParentError'\n","export default function getSecondArgument(_, secondArg) {\n  return secondArg\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.legacyData',\n    },\n  },\n  {\n    componentName: 'CustomData',\n    componentProps: {\n      type: 'read-only',\n    },\n    name: 'legacyData',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'legacyData',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'RecordHistoryEvents',\n    name: 'resourceActivities',\n  },\n]\n\nexport default {\n  name: 'recordHistoryEvents',\n  parts,\n}\n","export { default as legacyData } from './legacyData'\nexport { default as recordHistoryEvents } from './recordHistoryEvents'\n","export const MODULE_NAME = 'size'\n\nexport const SIZE_SMALL = 'small'\nexport const SIZE_MEDIUM = 'medium'\nexport const SIZE_LARGE = 'large'\n","import immutable from 'object-path-immutable'\nimport objectPath from 'object-path'\n\nexport const buildPath = (segments = [], pathArguments = {}) => {\n  return segments\n    .reduce((arr, segment) => {\n      if (segment && segment.length && segment[0] === ':') {\n        if (segment.length > 1 && segment[1] === ':') {\n          const parameter = segment.slice(2)\n          if (pathArguments[parameter] === undefined) {\n            throw new Error(\n              `Parameter ${parameter} missing for segments: [${segments.join(\n                ', '\n              )}]`\n            )\n          }\n          return [...arr, pathArguments[parameter].split('.').join('-')]\n        }\n        const parameter = segment.slice(1)\n        if (pathArguments[parameter] === undefined) {\n          throw new Error(\n            `Parameter ${parameter} missing for segments: [${segments.join(\n              ', '\n            )}]`\n          )\n        }\n\n        return [...arr, pathArguments[parameter]]\n      }\n      return [...arr, segment]\n    }, [])\n    .filter(arg => arg !== undefined && arg !== null && arg !== '')\n    .join('.')\n}\n\nexport const createGetter = segments => {\n  return function get(obj, pathArguments) {\n    const path = buildPath(segments, pathArguments)\n    return objectPath.get(obj, path)\n  }\n}\n\nexport const createSetter = segments => {\n  return function set(obj, arg1, arg2) {\n    const path =\n      arg2 !== undefined ? buildPath(segments, arg1) : buildPath(segments, {})\n    return immutable.set(obj, path, arg2 !== undefined ? arg2 : arg1)\n  }\n}\n\nexport const createDeleter = segments => {\n  return function del(obj, pathArguments) {\n    const path = buildPath(segments, pathArguments)\n    let res = immutable.del(obj, path)\n    const iterpolatedSegments = path.split('.')\n\n    while (iterpolatedSegments.length) {\n      iterpolatedSegments.pop()\n      const newSubpath = iterpolatedSegments.join('.')\n      const subResult = objectPath.get(res, newSubpath)\n      if (subResult && Object.keys(subResult).length === 0) {\n        res = immutable.del(obj, newSubpath)\n      } else {\n        break\n      }\n    }\n    return res\n  }\n}\n\nexport const immutableReplace = (obj, { newPath, oldPath }) => {\n  return immutable.del(\n    immutable.set(obj, newPath, objectPath.get(obj, oldPath)),\n    oldPath\n  )\n}\n","import {\n  buildPath,\n  createGetter,\n  createSetter,\n  createDeleter,\n  immutableReplace,\n} from './immutableUtilities'\nimport updateResourceInState from './updateResourceInState'\nimport updateResourcesInState from './updateResourcesInState'\n\nexport {\n  buildPath,\n  createDeleter,\n  createGetter,\n  createSetter,\n  immutableReplace,\n  updateResourceInState,\n  updateResourcesInState,\n}\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Form, Icon } from 'semantic-ui-react'\n\nimport FieldLabel from '../FieldTemplate/FieldLabel'\n\nconst mapStateToProps = (\n  state,\n  { copyField, newValueSelector, formValueSelector }\n) => {\n  return {\n    copyValue:\n      (newValueSelector && newValueSelector(state)) ||\n      (formValueSelector && formValueSelector(state, copyField)),\n  }\n}\n\nconst propTypes = {\n  arrowIcon: PropTypes.oneOf([\n    'down arrow',\n    'left arrow',\n    'right arrow',\n    'up arrow',\n  ]),\n  buttonClassNames: PropTypes.string,\n  buttonText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  changeFieldValue: PropTypes.func.isRequired,\n  copyField: PropTypes.string.isRequired,\n  copyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  fluid: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  pasteField: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  arrowIcon: undefined,\n  buttonClassNames: undefined,\n  buttonText: undefined,\n  copyValue: undefined,\n  fluid: false,\n  label: undefined,\n}\n\nconst ButtonCopyPasteField = ({\n  arrowIcon,\n  buttonClassNames,\n  buttonText,\n  changeFieldValue,\n  copyField,\n  copyValue,\n  fluid,\n  label,\n  pasteField,\n}) => {\n  return (\n    <Form.Field style={{ position: 'relative' }}>\n      {label && (\n        <FieldLabel\n          htmlFor={`copy ${copyField} to ${pasteField}`}\n          label={label}\n        />\n      )}\n      <Button\n        className={buttonClassNames}\n        fluid={fluid}\n        icon\n        labelPosition={buttonText && 'right'}\n        onClick={event => {\n          event.preventDefault()\n          changeFieldValue(pasteField, copyValue)\n        }}\n      >\n        {buttonText}\n        <Icon name=\"copy\" />\n        {arrowIcon && <Icon name={arrowIcon} />}\n      </Button>\n    </Form.Field>\n  )\n}\n\nButtonCopyPasteField.propTypes = propTypes\nButtonCopyPasteField.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(ButtonCopyPasteField)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon, Popup } from 'semantic-ui-react'\n\nconst propTypes = {\n  cancelButtonText: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  confirmButtonText: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n    .isRequired,\n  header: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  hideOnScroll: PropTypes.bool,\n  iconName: PropTypes.string,\n  onConfirm: PropTypes.func.isRequired,\n  size: PropTypes.string,\n  text: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  type: PropTypes.string,\n}\n\nconst defaultProps = {\n  hideOnScroll: true,\n  iconName: undefined,\n  size: undefined,\n  text: undefined,\n  type: 'button',\n}\n\nclass ConfirmationPopup extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleClosePopup = this.handleClosePopup.bind(this)\n    this.handleOpenPopup = this.handleOpenPopup.bind(this)\n\n    this.state = {\n      popupOpen: false,\n    }\n  }\n\n  handleClosePopup() {\n    this.setState({ popupOpen: false })\n  }\n\n  handleOpenPopup() {\n    this.setState({ popupOpen: true })\n  }\n\n  renderTrigger() {\n    const { iconName, size, text, type } = this.props\n    switch (type) {\n      case 'link': {\n        return <a>{text}</a> // eslint-disable-line jsx-a11y/anchor-is-valid\n      }\n      case 'icon': {\n        return (\n          <Icon name={iconName} size={size} style={{ cursor: 'pointer' }} />\n        )\n      }\n\n      default: {\n        return (\n          <Button basic size={size} type=\"button\">\n            {text}\n          </Button>\n        )\n      }\n    }\n  }\n\n  render() {\n    const {\n      cancelButtonText,\n      header,\n      hideOnScroll,\n      onConfirm: handleConfirmation,\n      confirmButtonText,\n    } = this.props\n\n    return (\n      <Popup\n        hideOnScroll={hideOnScroll}\n        on=\"click\"\n        onClose={this.handleClosePopup}\n        onOpen={this.handleOpenPopup}\n        open={this.state.popupOpen}\n        trigger={this.renderTrigger()}\n      >\n        <Popup.Header>{header}</Popup.Header>\n        <Popup.Content>\n          <Button\n            onClick={event => {\n              event.preventDefault()\n              this.handleClosePopup()\n              handleConfirmation()\n            }}\n            type=\"button\"\n          >\n            {confirmButtonText}\n          </Button>\n          <Button basic onClick={this.handleClosePopup}>\n            {cancelButtonText}\n          </Button>\n        </Popup.Content>\n      </Popup>\n    )\n  }\n}\n\nConfirmationPopup.propTypes = propTypes\nConfirmationPopup.defaultProps = defaultProps\n\nexport default ConfirmationPopup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nimport FieldTemplate from '../../FieldTemplate'\n\nconst updateCoordinateWithDirection = (coordinate, direction) => {\n  if (!coordinate) {\n    return ''\n  }\n\n  switch (direction) {\n    case 'S':\n    case 'W': {\n      return `-${coordinate}`\n    }\n    default: {\n      return coordinate\n    }\n  }\n}\n\nconst style = {\n  float: 'left',\n  paddingRight: '0.5em',\n  width: '15em',\n}\n\nconst propTypes = {\n  coordinateLabel: PropTypes.object.isRequired,\n  initialDirection: PropTypes.string,\n  initialValue: PropTypes.string,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    error: PropTypes.object,\n    touched: PropTypes.bool.isRequired,\n  }).isRequired,\n  module: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n}\nconst defaultProps = {\n  initialDirection: undefined,\n  initialValue: undefined,\n}\n\nclass CoordinateInput extends Component {\n  constructor(props) {\n    super(props)\n    this.handleDirectionChange = this.handleDirectionChange.bind(this)\n    this.handleNumberBlur = this.handleNumberBlur.bind(this)\n    this.handleNumberChange = this.handleNumberChange.bind(this)\n\n    this.state = {\n      direction: this.props.initialDirection,\n      number: this.props.initialValue,\n    }\n  }\n\n  handleNumberBlur() {\n    const { onBlur, value } = this.props.input\n\n    onBlur(value)\n  }\n\n  handleDirectionChange(_, { value: direction }) {\n    const {\n      input: { onChange },\n    } = this.props\n    const { number } = this.state\n\n    const updatedCoordinate = updateCoordinateWithDirection(number, direction)\n\n    onChange(updatedCoordinate)\n\n    return this.setState({\n      direction,\n    })\n  }\n\n  handleNumberChange({ target: { value: number } }) {\n    const {\n      input: { onChange },\n    } = this.props\n    const { direction } = this.state\n\n    const updatedCoordinate = updateCoordinateWithDirection(number, direction)\n\n    onChange(updatedCoordinate)\n\n    return this.setState({\n      number,\n    })\n  }\n\n  render() {\n    const {\n      coordinateLabel,\n      initialDirection,\n      input: { name, value: coordinate },\n      meta,\n      module,\n      options,\n    } = this.props\n\n    const number =\n      coordinate && coordinate.startsWith('-')\n        ? coordinate.slice(1)\n        : coordinate\n\n    return (\n      <div style={style}>\n        <FieldTemplate\n          enableHelpNotifications={false}\n          float=\"left\"\n          label={coordinateLabel}\n          meta={meta}\n          module={module}\n          name={name}\n          subLabel\n        >\n          <Input\n            label={\n              <Dropdown\n                defaultValue={initialDirection}\n                onChange={this.handleDirectionChange}\n                options={options}\n              />\n            }\n            labelPosition=\"right\"\n            onBlur={this.handleNumberBlur}\n            onChange={this.handleNumberChange}\n            type=\"text\"\n            value={number || ''}\n          />\n        </FieldTemplate>\n      </div>\n    )\n  }\n}\nCoordinateInput.propTypes = propTypes\nCoordinateInput.defaultProps = defaultProps\n\nexport default CoordinateInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\nimport objectPath from 'object-path'\nimport { Field, FieldTemplate } from 'coreModules/form/components'\nimport CoordinateInput from './CoordinateInput'\n\nconst latitudeOptions = [\n  { key: 'north', text: 'N', value: 'N' },\n  { key: 'south', text: 'S', value: 'S' },\n]\n\nconst longitudeOptions = [\n  { key: 'east', text: 'E', value: 'E' },\n  { key: 'west', text: 'W', value: 'W' },\n]\n\nconst getInitialDirection = (coordinateType, value) => {\n  const coordinate = objectPath.get(value, coordinateType) || ''\n\n  if (coordinateType === 'latitude') {\n    return coordinate.startsWith('-') ? 'S' : 'N'\n  }\n  return coordinate.startsWith('-') ? 'W' : 'E'\n}\n\nconst getIntialValue = (coordinateType, value) => {\n  const coordinate = objectPath.get(value, coordinateType) || ''\n\n  return coordinate.startsWith('-') ? coordinate.slice(1) : coordinate\n}\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  }).isRequired,\n  label: PropTypes.object,\n  latitudeLabel: PropTypes.object.isRequired,\n  longitudeLabel: PropTypes.object.isRequired,\n  module: PropTypes.string.isRequired,\n}\n\nexport const defaultProps = {\n  label: undefined,\n}\n\nclass Coordinates extends Component {\n  render() {\n    const {\n      input: { name, value },\n      label,\n      latitudeLabel,\n      longitudeLabel,\n      module,\n    } = this.props\n    return (\n      <FieldTemplate\n        float=\"left\"\n        label={label}\n        meta={{}}\n        module={module}\n        name={name}\n      >\n        <Grid style={{ display: 'inline-block' }}>\n          <Grid.Column style={{ paddingTop: 0 }} width={8}>\n            <Field\n              component={CoordinateInput}\n              coordinateLabel={latitudeLabel}\n              initialDirection={getInitialDirection('latitude', value)}\n              initialValue={getIntialValue('latitude', value)}\n              module={module}\n              name={`${name}.latitude`}\n              options={latitudeOptions}\n            />\n          </Grid.Column>\n          <Grid.Column style={{ paddingTop: 0 }} width={8}>\n            <Field\n              component={CoordinateInput}\n              coordinateLabel={longitudeLabel}\n              initialDirection={getInitialDirection('longitude', value)}\n              initialValue={getIntialValue('longitude', value)}\n              module={module}\n              name={`${name}.longitude`}\n              options={longitudeOptions}\n            />\n          </Grid.Column>\n        </Grid>\n      </FieldTemplate>\n    )\n  }\n}\n\nCoordinates.propTypes = propTypes\nCoordinates.defaultProps = defaultProps\n\nexport default Coordinates\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nfunction DisplaySearchResult({ title }) {\n  return <div>{title}</div>\n}\n\nDisplaySearchResult.propTypes = propTypes\n\nexport default DisplaySearchResult\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown, Icon } from 'semantic-ui-react'\n\nimport createDeleteProperties from 'common/es5/createDeleteProperties'\nimport config from 'config'\n\nconst deleteUndefinedProperties = createDeleteProperties(undefined)\n\nconst closeIconStyle = {\n  bottom: 0,\n  fontSize: '1rem',\n  lineHeight: 1,\n  margin: 'auto',\n  position: 'absolute',\n  right: '2.5em',\n  top: 0,\n  zIndex: 1,\n}\n\nconst containerStyle = {\n  display: 'inline-block',\n  position: 'relative',\n  width: '100%',\n}\n\nconst propTypes = {\n  autoComplete: PropTypes.string,\n  disableClearValue: PropTypes.bool,\n  disabled: PropTypes.bool,\n  displayAsButton: PropTypes.bool,\n  fluid: PropTypes.bool,\n  focusOnMount: PropTypes.bool,\n  icon: PropTypes.string,\n  initialText: PropTypes.string,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  isLoading: PropTypes.bool,\n  mountHidden: PropTypes.bool,\n  onSearchChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.shape({\n          normalized: PropTypes.shape({\n            id: PropTypes.string,\n          }),\n          textI: PropTypes.string,\n          textV: PropTypes.string,\n        }),\n      ]).isRequired,\n    }).isRequired\n  ).isRequired,\n  placeholder: PropTypes.string,\n  searchQuery: PropTypes.string,\n  selectedOption: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.shape({\n        normalized: PropTypes.shape({\n          id: PropTypes.string,\n        }),\n        textI: PropTypes.string,\n        textV: PropTypes.string,\n      }),\n    ]).isRequired,\n  }),\n  text: PropTypes.string,\n  type: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  autoComplete: undefined,\n  disableClearValue: false,\n  disabled: false,\n  displayAsButton: false,\n  fluid: true,\n  focusOnMount: false,\n  icon: undefined,\n  initialText: '',\n  isLoading: false,\n  mountHidden: config.isTest,\n  placeholder: undefined,\n  searchQuery: '',\n  selectedOption: undefined,\n  text: undefined,\n}\n\nclass DropdownSearchInput extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.focusOnMount && !this.props.selectedOption) {\n      this.input.handleFocus()\n    }\n  }\n\n  handleSearchChange(_, { searchQuery }) {\n    this.props.onSearchChange({\n      inputName: this.props.input.name,\n      searchQuery,\n    })\n  }\n\n  handleOnBlur() {\n    this.props.input.onBlur() // need onBlur to touch field for redux-form validation\n    this.handleSearchChange(null, { searchQuery: '' })\n  }\n\n  handleOnChange(_, data) {\n    const { value } = data\n    this.handleSearchChange(null, { searchQuery: '' })\n    if (this.props.type === 'dropdown-search-id-text') {\n      const updatedValue = deleteUndefinedProperties({\n        ...this.props.input.value,\n        ...value,\n        normalized: value.normalized,\n        textI: value.textI,\n      })\n\n      this.props.input.onBlur(updatedValue)\n    } else {\n      this.props.input.onBlur(value)\n    }\n  }\n\n  handleClear() {\n    if (this.props.type === 'dropdown-search-id-text') {\n      this.handleOnChange(undefined, {\n        value: {\n          ...this.props.input.value,\n          normalized: undefined,\n          textI: undefined,\n        },\n      })\n    } else {\n      this.handleOnChange(undefined, { value: '' })\n    }\n  }\n\n  render() {\n    const {\n      autoComplete,\n      disableClearValue,\n      disabled,\n      displayAsButton,\n      fluid,\n      icon,\n      initialText,\n      input,\n      isLoading,\n      mountHidden,\n      options,\n      placeholder,\n      searchQuery,\n      selectedOption,\n    } = this.props\n\n    const { onChange } = input\n    const hiddenInputName = `${input.name}.hidden`\n    const text = (selectedOption && selectedOption.text) || initialText\n    const style = displayAsButton\n      ? { background: 'white', borderRadius: 0, fontWeight: 'normal' }\n      : undefined\n    const value = selectedOption && selectedOption.value\n\n    return (\n      <React.Fragment>\n        <div style={containerStyle}>\n          {!disableClearValue && value && (\n            <Icon\n              link\n              name=\"close\"\n              onClick={this.handleClear}\n              style={closeIconStyle}\n            />\n          )}\n          <Dropdown\n            autoComplete={autoComplete}\n            button={displayAsButton}\n            disabled={disabled}\n            fluid={fluid}\n            icon={icon}\n            loading={isLoading}\n            onSearchChange={this.handleSearchChange}\n            options={options}\n            placeholder={placeholder}\n            ref={element => {\n              this.input = element\n            }}\n            search\n            searchQuery={searchQuery}\n            selection\n            selectOnBlur={false}\n            selectOnNavigation={false}\n            text={searchQuery || text}\n            {...input}\n            onBlur={this.handleOnBlur}\n            onChange={this.handleOnChange}\n            style={style}\n            value={value || ''}\n          />\n        </div>\n        {mountHidden && (\n          <input\n            className=\"hidden\"\n            {...input}\n            name={hiddenInputName}\n            onChange={event => {\n              onChange(event, { value: event.target.value })\n            }}\n            type=\"hidden\"\n            value={input.value || ''}\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nDropdownSearchInput.propTypes = propTypes\nDropdownSearchInput.defaultProps = defaultProps\n\nexport default DropdownSearchInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport DropdownSearchBaseInput from '../Base'\n\nconst mapStateToProps = (\n  state,\n  { getSearchQuery, getOptions, getSelectedOption, input }\n) => {\n  const searchQuery = getSearchQuery(state, input.name)\n  const selectedOption =\n    (input.value &&\n      getSelectedOption &&\n      getSelectedOption(state, input.value)) ||\n    null\n\n  return {\n    options: getOptions(state, searchQuery),\n    searchQuery,\n    selectedOption,\n  }\n}\n\nconst propTypes = {\n  getOptions: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  getSearchQuery: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  getSelectedOption: PropTypes.func, // eslint-disable-line react/no-unused-prop-types\n  initialText: PropTypes.string,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  onSearchChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  searchQuery: PropTypes.string,\n  selectedOption: PropTypes.object,\n}\n\nconst defaultProps = {\n  getSelectedOption: undefined,\n  initialText: undefined,\n  searchQuery: '',\n  selectedOption: null,\n}\n\nclass CustomDropdownSearchInput extends Component {\n  render() {\n    const {\n      initialText,\n      input,\n      onSearchChange,\n      options,\n      searchQuery,\n      selectedOption,\n      ...rest\n    } = this.props\n\n    return (\n      <DropdownSearchBaseInput\n        initialText={initialText}\n        input={input}\n        onSearchChange={onSearchChange}\n        options={options}\n        searchQuery={searchQuery}\n        selectedOption={selectedOption}\n        {...rest}\n      />\n    )\n  }\n}\n\nCustomDropdownSearchInput.propTypes = propTypes\nCustomDropdownSearchInput.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(CustomDropdownSearchInput)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport { injectSearchOptions } from 'coreModules/form/higherOrderComponents'\nimport DropdownSearchBase from '../Base'\n\nconst propTypes = {\n  pathToIdInValue: PropTypes.string.isRequired,\n  pathToTextInValue: PropTypes.string.isRequired,\n  updateSelectedOption: PropTypes.func.isRequired,\n}\n\nclass DropdownSearchIdTextInput extends PureComponent {\n  componentDidMount() {\n    const { pathToIdInValue, pathToTextInValue } = this.props\n    const id = objectPath.get(this.props, `input.value.${pathToIdInValue}`)\n    const text = objectPath.get(this.props, `input.value.${pathToTextInValue}`)\n    const value = objectPath.get(this.props, `input.value`)\n\n    if ((id || text) && !config.isTest) {\n      this.props.updateSelectedOption({\n        id,\n        requireEitherOr: true,\n        text,\n        value,\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    const { pathToIdInValue, pathToTextInValue } = this.props\n\n    const selectedOptionId = objectPath.get(\n      this.props,\n      `selectedOption.value.${pathToIdInValue}`\n    )\n    const id = objectPath.get(this.props, `input.value.${pathToIdInValue}`)\n\n    const selectedOptionText = objectPath.get(\n      this.props,\n      `selectedOption.value.${pathToTextInValue}`\n    )\n    const text = objectPath.get(this.props, `input.value.${pathToTextInValue}`)\n\n    const value = objectPath.get(this.props, `input.value`)\n    if (selectedOptionId !== id || selectedOptionText !== text) {\n      setTimeout(() => {\n        this.props.updateSelectedOption({\n          id,\n          requireEitherOr: true,\n          text,\n          value,\n        })\n      })\n    }\n  }\n\n  render() {\n    return <DropdownSearchBase icon=\"search\" limit={20} {...this.props} />\n  }\n}\n\nDropdownSearchIdTextInput.propTypes = propTypes\n\nexport default compose(injectSearchOptions({ enablePlainTextOption: true }))(\n  DropdownSearchIdTextInput\n)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createSelector } from 'reselect'\nimport DropdownSearchBaseInput from '../Base'\n\nconst propTypes = {\n  filterOptions: PropTypes.func,\n  initialText: PropTypes.string,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  limit: PropTypes.number,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  parse: PropTypes.func,\n  selectedOption: PropTypes.object,\n}\n\nconst defaultProps = {\n  filterOptions: undefined,\n  initialText: undefined,\n  isLoading: undefined,\n  limit: 10,\n  parse: undefined,\n  selectedOption: undefined,\n}\n\nconst createSelectedOptionSelector = options => {\n  return createSelector(\n    value => value,\n    value => {\n      return (\n        options.find(item => {\n          return item.value === value\n        }) || null\n      )\n    }\n  )\n}\n\nclass DropdownSearchLocalInput extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      filteredOptions: this.getFilteredOptions(),\n      searchQuery: '',\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.getSelectedOption = this.getSelectedOption.bind(this)\n    this.optionSelector = createSelectedOptionSelector(props.options)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const noOptionsNow = !this.props.options || !this.props.options.length\n    const hasOptionsNext = nextProps.options && nextProps.options.length\n    if (noOptionsNow && hasOptionsNext) {\n      this.setState({\n        filteredOptions: this.getFilteredOptions({\n          nextOptions: nextProps.options,\n        }),\n      })\n      this.optionSelector = createSelectedOptionSelector(nextProps.options)\n    }\n  }\n\n  getFilteredOptions({ searchQuery, nextOptions } = {}) {\n    const { filterOptions, options: currentOptions, limit } = this.props\n\n    const options = nextOptions || currentOptions\n\n    let filteredOptions = [...options]\n\n    if (filterOptions) {\n      return filterOptions({ options, searchQuery })\n    }\n\n    if (searchQuery) {\n      const lowerCaseSearchQuery = searchQuery.toLowerCase()\n\n      const firstLetterMatches = options.filter(({ text }) => {\n        return text.toLowerCase().indexOf(lowerCaseSearchQuery) === 0\n      })\n\n      const otherMatches = options.filter(({ text }) => {\n        return text.toLowerCase().indexOf(lowerCaseSearchQuery) > 0\n      })\n\n      filteredOptions = [...firstLetterMatches, ...otherMatches]\n    }\n\n    if (limit) {\n      return filteredOptions.splice(0, limit)\n    }\n\n    return filteredOptions\n  }\n\n  getSelectedOption() {\n    const { input } = this.props\n    if (input.value === undefined) {\n      return null\n    }\n    const res = this.optionSelector(input.value)\n    return res\n  }\n\n  handleSearchChange({ searchQuery }) {\n    this.setState({\n      filteredOptions: this.getFilteredOptions({ searchQuery }),\n      searchQuery,\n    })\n  }\n\n  render() {\n    const {\n      initialText,\n      input,\n      isLoading,\n      parse,\n      selectedOption,\n      ...rest\n    } = this.props\n    const { filteredOptions, searchQuery } = this.state\n    return (\n      <DropdownSearchBaseInput\n        initialText={initialText}\n        input={input}\n        isLoading={isLoading}\n        onSearchChange={this.handleSearchChange}\n        options={filteredOptions}\n        parse={parse}\n        searchQuery={searchQuery}\n        selectedOption={selectedOption || this.getSelectedOption()}\n        {...rest}\n      />\n    )\n  }\n}\n\nDropdownSearchLocalInput.propTypes = propTypes\nDropdownSearchLocalInput.defaultProps = defaultProps\n\nexport default DropdownSearchLocalInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport { injectSearchOptions } from 'coreModules/form/higherOrderComponents'\nimport DropdownSearchBase from '../Base'\n\nconst defaultExtractValue = item => {\n  return item && item.attributes && item.attributes.name\n}\n\nconst propTypes = {\n  baseFilter: PropTypes.shape({\n    filterFunctionName: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  }),\n  createNestedItem: PropTypes.func.isRequired,\n  extractValue: PropTypes.func,\n  filterFunctionName: PropTypes.string,\n  getManySearch: PropTypes.func.isRequired,\n  include: PropTypes.array,\n  includeFields: PropTypes.array,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  limit: PropTypes.number,\n  nestItems: PropTypes.bool,\n  onSearchQueryChange: PropTypes.func,\n  pathToIdInValue: PropTypes.string,\n  relationships: PropTypes.array,\n  resolveRelationships: PropTypes.array,\n  resource: PropTypes.string.isRequired,\n  search: PropTypes.func.isRequired,\n  searchWithQuery: PropTypes.bool,\n  selectedOption: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  }),\n  updateSelectedOption: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  baseFilter: undefined,\n  extractValue: defaultExtractValue,\n  filterFunctionName: 'nameSearch',\n  include: undefined,\n  includeFields: ['id', 'attributes.name'],\n  limit: 10,\n  nestItems: false,\n  onSearchQueryChange: undefined,\n  pathToIdInValue: '',\n  relationships: undefined,\n  resolveRelationships: undefined,\n  searchWithQuery: false,\n  selectedOption: undefined,\n}\n\nclass DropdownSearchResource extends Component {\n  componentDidMount() {\n    const { pathToIdInValue } = this.props\n    const id = objectPath.get(\n      this.props,\n      pathToIdInValue ? `input.value.${pathToIdInValue}` : 'input.value'\n    )\n    if (id && !config.isTest) {\n      this.props.updateSelectedOption({ id })\n    }\n  }\n\n  componentDidUpdate() {\n    const { pathToIdInValue } = this.props\n\n    const selectedOptionId = objectPath.get(\n      this.props,\n      pathToIdInValue\n        ? `selectedOption.value.${pathToIdInValue}`\n        : 'selectedOption.value'\n    )\n    const id = objectPath.get(\n      this.props,\n      pathToIdInValue ? `input.value.${pathToIdInValue}` : 'input.value'\n    )\n\n    if (selectedOptionId !== id) {\n      setTimeout(() => {\n        this.props.updateSelectedOption({ id })\n      })\n    }\n  }\n\n  render() {\n    return <DropdownSearchBase icon=\"search\" {...this.props} />\n  }\n}\n\nDropdownSearchResource.propTypes = propTypes\nDropdownSearchResource.defaultProps = defaultProps\n\nexport default compose(injectSearchOptions())(DropdownSearchResource)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\nimport extractProps from 'utilities/extractProps'\nimport DropdownSearchConnectInput from '../../inputs/DropdownSearch/Connect'\nimport DropdownSearchIdTextInput from '../../inputs/DropdownSearch/IdText'\nimport DropdownSearchLocalInput from '../../inputs/DropdownSearch/Local'\nimport DropdownSearchResource from '../../inputs/DropdownSearch/Resource'\n\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.shape({\n        normalized: PropTypes.shape({\n          id: PropTypes.string,\n        }),\n        textI: PropTypes.string,\n        textV: PropTypes.string,\n      }),\n    ]),\n  }).isRequired,\n  leftButton: PropTypes.node,\n  meta: PropTypes.object.isRequired,\n  rightButton: PropTypes.node,\n  type: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  leftButton: undefined,\n  rightButton: undefined,\n}\n\nfunction Select(props) {\n  let Component\n  const { input, leftButton, meta, rightButton, type } = props\n\n  switch (type) {\n    case 'dropdown-search-connect': {\n      Component = DropdownSearchConnectInput\n      break\n    }\n    case 'dropdown-search-id-text': {\n      Component = DropdownSearchIdTextInput\n      break\n    }\n    case 'dropdown-search-local': {\n      Component = DropdownSearchLocalInput\n      break\n    }\n\n    case 'dropdown-search-resource': {\n      Component = DropdownSearchResource\n      break\n    }\n    default: {\n      throw new Error(`Type: ${type} is not supported`)\n    }\n  }\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  const displayAsButton = !!(leftButton || rightButton)\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={input.name}>\n      {displayAsButton ? (\n        <Button.Group style={{ width: '100%' }}>\n          {leftButton}\n\n          <Component\n            displayAsButton={displayAsButton}\n            {...rest}\n            input={input}\n            meta={meta}\n          />\n\n          {rightButton}\n        </Button.Group>\n      ) : (\n        <Component {...rest} input={input} meta={meta} />\n      )}\n    </FieldTemplate>\n  )\n}\n\nSelect.propTypes = propTypes\nSelect.defaultProps = defaultProps\n\nexport default Select\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { withUnsubmittedFormConfirmation } from 'coreModules/form/higherOrderComponents'\nimport { actionCreators } from 'coreModules/formSupport/keyObjectModule'\nimport { transformFormSpecToFieldMap } from 'coreModules/formSupport/utilities'\n\nconst mapDispatchToProps = { setFormSpec: actionCreators.set[':formName'] }\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  dirty: PropTypes.bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  formName: PropTypes.string.isRequired,\n  getAllowTransition: PropTypes.func, // eslint-disable-line react/no-unused-prop-types\n  onSubmit: PropTypes.func.isRequired,\n  sectionSpecs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      units: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired\n  ).isRequired,\n  setFormRef: PropTypes.func,\n  setFormSpec: PropTypes.func.isRequired,\n  unsavedChangesMessage: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  setFormRef: undefined,\n  unsavedChangesMessage: undefined,\n}\n\nclass Form extends PureComponent {\n  componentWillMount() {\n    const { formName, setFormSpec, sectionSpecs } = this.props\n\n    setFormSpec(transformFormSpecToFieldMap(sectionSpecs), {\n      formName,\n    })\n  }\n\n  render() {\n    const { children, onSubmit: handleSubmit, setFormRef } = this.props\n\n    return (\n      <form className=\"ui form\" onSubmit={handleSubmit} ref={setFormRef}>\n        {children}\n      </form>\n    )\n  }\n}\n\nForm.propTypes = propTypes\nForm.defaultProps = defaultProps\n\nexport default compose(\n  withUnsubmittedFormConfirmation({\n    unsavedChangesMessage:\n      'You have unsaved changes, are you sure you want to leave?',\n  }),\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(Form)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Prompt } from 'react-router-dom'\nimport { LayerModal } from 'coreModules/commonUi/components'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n}\nconst defaultProps = {\n  onClose: undefined,\n}\n\nclass FormModal extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.renderModal = this.renderModal.bind(this)\n  }\n\n  renderModal() {\n    const { children, ...rest } = this.props\n\n    return (\n      <LayerModal className=\"ui form\" {...rest}>\n        {children}\n      </LayerModal>\n    )\n  }\n\n  render() {\n    const { onClose, open } = this.props\n\n    if (onClose) {\n      return (\n        <React.Fragment>\n          <Prompt\n            message={() => {\n              // first block transition then close\n              setTimeout(onClose)\n              return false\n            }}\n            when={open}\n          />\n          {this.renderModal()}\n        </React.Fragment>\n      )\n    }\n\n    return this.renderModal()\n  }\n}\n\nFormModal.propTypes = propTypes\nFormModal.defaultProps = defaultProps\n\nexport default FormModal\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Step } from 'semantic-ui-react'\n\nimport config from 'config'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst mapStateToProps = (\n  state,\n  { activeFormSectionIndex, formName, index, sectionName }\n) => {\n  if (config.isTest) {\n    return {\n      sectionIsInvalid: false,\n    }\n  }\n\n  const isActive = index === activeFormSectionIndex\n\n  return {\n    sectionIsInvalid: isActive\n      ? formSupportSelectors.computeSectionIsInvalid(state, {\n          formName,\n          sectionName,\n        })\n      : formSupportSelectors.getSectionIsInvalid(state, {\n          formName,\n          sectionName,\n        }),\n  }\n}\n\nconst propTypes = {\n  activeFormSectionIndex: PropTypes.number,\n  index: PropTypes.number.isRequired,\n  module: PropTypes.string.isRequired,\n  onSetActiveFormSection: PropTypes.func.isRequired,\n  sectionIsInvalid: PropTypes.bool.isRequired,\n  sectionName: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  activeFormSectionIndex: undefined,\n}\n\nclass FormSectionNavigationItem extends Component {\n  render() {\n    const {\n      activeFormSectionIndex,\n      index,\n      module,\n      onSetActiveFormSection: handleSetActiveFormSection,\n      sectionName,\n      sectionIsInvalid,\n    } = this.props\n\n    return (\n      <Step\n        active={index === activeFormSectionIndex}\n        className={sectionIsInvalid ? 'error' : undefined}\n        key={index}\n        onClick={event => handleSetActiveFormSection(event, index)}\n        style={{\n          width: emToPixels(21.875),\n        }}\n      >\n        <Step.Content>\n          <Step.Title>\n            <ModuleTranslate\n              capitalize\n              module={module}\n              textKey={`formSectionTitles.${sectionName}`}\n            />\n          </Step.Title>\n          <Step.Description>\n            <ModuleTranslate\n              capitalize\n              module={module}\n              textKey={`formSectionDescriptions.${sectionName}`}\n            />\n          </Step.Description>\n        </Step.Content>\n      </Step>\n    )\n  }\n}\n\nFormSectionNavigationItem.propTypes = propTypes\nFormSectionNavigationItem.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(FormSectionNavigationItem)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header, Step, Loader } from 'semantic-ui-react'\n\nimport FormSectionNavigationItem from './Item'\n\nconst activeStyle = {\n  backgroundColor: 'rgb(245, 245, 244)',\n  borderColor: '#1e8c45',\n  cursor: 'pointer',\n  margin: 0,\n}\n\nconst inactiveStyle = {\n  background: 'none',\n  borderColor: '#fff',\n  cursor: 'pointer',\n  margin: 0,\n}\n\nexport const propTypes = {\n  activeFormSectionIndex: PropTypes.number,\n  availableHeight: PropTypes.number.isRequired,\n  formName: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  loading: PropTypes.bool,\n  module: PropTypes.string.isRequired,\n  onSetActiveFormSection: PropTypes.func.isRequired,\n  onShowAllFormSections: PropTypes.func.isRequired,\n  sectionSpecs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  showAllFormSections: PropTypes.bool,\n  showSectionsInNavigation: PropTypes.bool,\n  subHeader: PropTypes.node,\n}\nconst defaultProps = {\n  activeFormSectionIndex: undefined,\n  loading: false,\n  showAllFormSections: false,\n  showSectionsInNavigation: false,\n  subHeader: undefined,\n}\n\nexport class FormSectionNavigation extends PureComponent {\n  render() {\n    const {\n      activeFormSectionIndex,\n      availableHeight: height,\n      formName,\n      header,\n      loading,\n      module,\n      onSetActiveFormSection,\n      onShowAllFormSections: handleShowAllFormSections,\n      sectionSpecs,\n      showAllFormSections,\n      showSectionsInNavigation,\n      subHeader,\n    } = this.props\n\n    return (\n      <Grid padded style={{ height, overflow: 'auto' }}>\n        <Grid.Column>\n          <Header\n            as=\"h1\"\n            block\n            style={{\n              background: 'none',\n              borderColor: '#fff',\n            }}\n          >\n            {loading && <Loader active inline size=\"tiny\" />}\n            {!loading && header}\n            {!loading && subHeader && (\n              <Header.Subheader size=\"large\">\n                <em>{subHeader}</em>\n              </Header.Subheader>\n            )}\n          </Header>\n\n          {showSectionsInNavigation && (\n            <Step.Group size=\"small\" style={{ marginTop: '-10px' }} vertical>\n              {sectionSpecs.map(({ name }, index) => {\n                return (\n                  <FormSectionNavigationItem\n                    activeFormSectionIndex={activeFormSectionIndex}\n                    formName={formName}\n                    index={index}\n                    key={name}\n                    module={module}\n                    onSetActiveFormSection={onSetActiveFormSection}\n                    sectionName={name}\n                  />\n                )\n              })}\n            </Step.Group>\n          )}\n\n          {showSectionsInNavigation && handleShowAllFormSections && (\n            <Header\n              block\n              onClick={handleShowAllFormSections}\n              size=\"small\"\n              style={showAllFormSections ? activeStyle : inactiveStyle}\n              sub\n            >\n              Expand all sections\n            </Header>\n          )}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nFormSectionNavigation.propTypes = propTypes\nFormSectionNavigation.defaultProps = defaultProps\n\nexport default FormSectionNavigation\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\nimport formParts from '../parts'\n\nconst mapStateToProps = (\n  state,\n  { baseValues, formName, formValueSelector, unitSpec }\n) => {\n  const { compareInitiallyHiddenWithBaseValues, name: unit } = unitSpec\n\n  const initiallyHiddenFieldsHaveValue = formSupportSelectors.getInitiallyHiddenFieldsHaveValue(\n    state,\n    {\n      baseValues,\n      compareInitiallyHiddenWithBaseValues,\n      formName,\n      formValueSelector,\n      unit,\n    }\n  )\n\n  return {\n    initiallyHiddenFieldsHaveValue,\n  }\n}\n\nconst propTypes = {\n  baseValues: PropTypes.object,\n  changeFieldValue: PropTypes.func,\n  customParts: PropTypes.objectOf(PropTypes.func.isRequired),\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func,\n  initiallyHiddenFieldsHaveValue: PropTypes.bool,\n  moduleName: PropTypes.string.isRequired,\n  removeArrayFieldByIndex: PropTypes.func,\n  unitSpec: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    parts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      }).isRequired\n    ),\n  }).isRequired,\n}\nconst defaultProps = {\n  baseValues: undefined,\n  changeFieldValue: undefined,\n  customParts: {},\n  formValueSelector: undefined,\n  initiallyHiddenFieldsHaveValue: undefined,\n  removeArrayFieldByIndex: undefined,\n}\n\nclass Unit extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = { showInitiallyHiddenParts: false }\n\n    this.showInitiallyHiddenParts = this.showInitiallyHiddenParts.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.initiallyHiddenFieldsHaveValue) {\n      // need to use this flag, because otherwise a field could disappear if\n      // we empty it's value while typing in it\n      this.showInitiallyHiddenParts()\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this.props.initiallyHiddenFieldsHaveValue &&\n      nextProps.initiallyHiddenFieldsHaveValue\n    ) {\n      this.showInitiallyHiddenParts()\n    }\n  }\n\n  showInitiallyHiddenParts() {\n    this.setState({ showInitiallyHiddenParts: true })\n  }\n\n  render() {\n    const {\n      changeFieldValue,\n      customParts,\n      formName,\n      formValueSelector,\n      moduleName,\n      removeArrayFieldByIndex,\n      unitSpec,\n      ...rest\n    } = this.props\n\n    const { showInitiallyHiddenParts } = this.state\n\n    const allParts = {\n      ...formParts,\n      ...customParts,\n    }\n\n    return (\n      <Grid.Row className=\"relaxed\">\n        {unitSpec.parts.map(\n          (\n            {\n              componentName,\n              componentProps,\n              containsReduxFormField,\n              initiallyHidden,\n              initiallyShown,\n              name,\n              wrapInField,\n              ...partPropsRest\n            },\n            index\n          ) => {\n            const Component = allParts[componentName]\n\n            if (!Component) {\n              throw new Error(`Missing component for part ${componentName}`)\n            }\n\n            if (\n              (initiallyHidden && !showInitiallyHiddenParts) ||\n              (initiallyShown && showInitiallyHiddenParts)\n            ) {\n              return null\n            }\n\n            if (containsReduxFormField) {\n              return (\n                <Component\n                  {...rest}\n                  changeFieldValue={changeFieldValue}\n                  formName={formName}\n                  formValueSelector={formValueSelector}\n                  key={`${componentName}-${index}`} // eslint-disable-line react/no-array-index-key\n                  module={moduleName}\n                  name={name}\n                  onClick={this.showInitiallyHiddenParts}\n                  removeArrayFieldByIndex={removeArrayFieldByIndex}\n                  {...componentProps}\n                  {...partPropsRest}\n                />\n              )\n            }\n\n            if (wrapInField) {\n              return (\n                <Field\n                  {...rest}\n                  autoComplete=\"off\"\n                  component={Component}\n                  key={name}\n                  module={moduleName}\n                  name={name}\n                  {...componentProps}\n                  {...partPropsRest}\n                />\n              )\n            }\n\n            return (\n              <Component\n                {...rest}\n                formValueSelector={formValueSelector}\n                key={`${componentName}-${index}`} // eslint-disable-line react/no-array-index-key\n                module={moduleName}\n                name={name}\n                onClick={this.showInitiallyHiddenParts}\n                {...componentProps}\n                {...partPropsRest}\n              />\n            )\n          }\n        )}\n      </Grid.Row>\n    )\n  }\n}\n\nUnit.propTypes = propTypes\nUnit.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(Unit)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nimport Unit from '../Unit'\n\nconst propTypes = {\n  baseValues: PropTypes.object,\n  changeFieldValue: PropTypes.func,\n  customParts: PropTypes.objectOf(PropTypes.func.isRequired),\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func,\n  moduleName: PropTypes.string.isRequired,\n  removeArrayFieldByIndex: PropTypes.func,\n  sectionSpec: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    units: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n}\nconst defaultProps = {\n  baseValues: undefined,\n  changeFieldValue: undefined,\n  customParts: undefined,\n  formValueSelector: undefined,\n  removeArrayFieldByIndex: undefined,\n}\n\nclass Section extends PureComponent {\n  render() {\n    const {\n      baseValues,\n      changeFieldValue,\n      customParts,\n      formName,\n      formValueSelector,\n      moduleName,\n      removeArrayFieldByIndex,\n      sectionSpec,\n      ...rest\n    } = this.props\n\n    return (\n      <Segment color=\"green\">\n        <Grid textAlign=\"left\" verticalAlign=\"bottom\">\n          {sectionSpec.units.map(unit => {\n            return (\n              <Unit\n                {...rest}\n                baseValues={baseValues}\n                changeFieldValue={changeFieldValue}\n                customParts={customParts}\n                formName={formName}\n                formValueSelector={formValueSelector}\n                key={unit.name}\n                moduleName={moduleName}\n                name={unit.name}\n                removeArrayFieldByIndex={removeArrayFieldByIndex}\n                unitSpec={unit}\n              />\n            )\n          })}\n        </Grid>\n      </Segment>\n    )\n  }\n}\n\nSection.propTypes = propTypes\nSection.defaultProps = defaultProps\n\nexport default compose()(Section)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Grid, Icon } from 'semantic-ui-react'\n\nimport Section from '../../Section'\n\nexport const propTypes = {\n  activeFormSectionIndex: PropTypes.number,\n  availableHeight: PropTypes.number.isRequired,\n  baseValues: PropTypes.object,\n  changeFieldValue: PropTypes.func,\n  customParts: PropTypes.objectOf(PropTypes.func.isRequired),\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func,\n  moduleName: PropTypes.string.isRequired,\n  onGoToNextSection: PropTypes.func.isRequired,\n  onGoToPreviousSection: PropTypes.func.isRequired,\n  removeArrayFieldByIndex: PropTypes.func,\n  sectionSpecs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  showAllFormSections: PropTypes.bool,\n  showSectionsInNavigation: PropTypes.bool.isRequired,\n}\nconst defaultProps = {\n  activeFormSectionIndex: undefined,\n  baseValues: undefined,\n  changeFieldValue: undefined,\n  customParts: undefined,\n  formValueSelector: undefined,\n  removeArrayFieldByIndex: undefined,\n  showAllFormSections: undefined,\n}\n\nclass FormSectionView extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.renderActiveSection = this.renderActiveSection.bind(this)\n    this.renderAllSections = this.renderAllSections.bind(this)\n  }\n\n  renderActiveSection() {\n    const {\n      activeFormSectionIndex,\n      baseValues,\n      changeFieldValue,\n      customParts,\n      formName,\n      formValueSelector,\n      moduleName,\n      removeArrayFieldByIndex,\n      sectionSpecs,\n      showSectionsInNavigation,\n      ...rest\n    } = this.props\n\n    const sectionIndex = showSectionsInNavigation ? activeFormSectionIndex : 0\n\n    const sectionSpec = sectionSpecs[sectionIndex]\n\n    if (!sectionSpec) {\n      throw new Error(`Missing form section with index ${sectionIndex}`)\n    }\n\n    const { name, units } = sectionSpec\n\n    if (!units) {\n      throw new Error(\n        `Missing units for form section with index ${activeFormSectionIndex} with name ${name}`\n      )\n    }\n\n    return (\n      <Grid.Column width={16}>\n        <Section\n          {...rest}\n          baseValues={baseValues}\n          changeFieldValue={changeFieldValue}\n          customParts={customParts}\n          formName={formName}\n          formValueSelector={formValueSelector}\n          module={moduleName}\n          moduleName={moduleName}\n          name={name}\n          removeArrayFieldByIndex={removeArrayFieldByIndex}\n          sectionSpec={sectionSpec}\n        />\n      </Grid.Column>\n    )\n  }\n\n  renderAllSections() {\n    const {\n      changeFieldValue,\n      customParts,\n      formName,\n      formValueSelector,\n      moduleName,\n      removeArrayFieldByIndex,\n      sectionSpecs,\n      ...rest\n    } = this.props\n\n    return (\n      <React.Fragment>\n        {sectionSpecs.map(sectionSpec => {\n          const { name, units } = sectionSpec\n\n          if (!units) {\n            throw new Error(`Missing unitSpecs for form section name ${name}`)\n          }\n\n          return (\n            <Grid.Column key={name} width={16}>\n              <Section\n                {...rest}\n                changeFieldValue={changeFieldValue}\n                customParts={customParts}\n                formName={formName}\n                formValueSelector={formValueSelector}\n                module={moduleName}\n                moduleName={moduleName}\n                name={name}\n                removeArrayFieldByIndex={removeArrayFieldByIndex}\n                sectionSpec={sectionSpec}\n              />\n            </Grid.Column>\n          )\n        })}\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const {\n      activeFormSectionIndex,\n      availableHeight: height,\n      onGoToNextSection: handleGoToNextSection,\n      onGoToPreviousSection: handleGoToPreviousSection,\n      sectionSpecs,\n      showAllFormSections,\n      showSectionsInNavigation,\n    } = this.props\n\n    return (\n      <div\n        className=\"ui fluid dina background\"\n        style={{\n          height,\n        }}\n      >\n        <Grid className=\"text\" container padded>\n          {showAllFormSections\n            ? this.renderAllSections()\n            : this.renderActiveSection()}\n          {showSectionsInNavigation && !showAllFormSections && (\n            <Grid.Column textAlign=\"right\" width={16}>\n              <Button\n                disabled={activeFormSectionIndex === 0}\n                icon\n                labelPosition=\"left\"\n                onClick={handleGoToPreviousSection}\n                type=\"button\"\n              >\n                <Icon name=\"left arrow\" />\n                Previous\n              </Button>\n\n              <Button\n                disabled={activeFormSectionIndex === sectionSpecs.length - 1}\n                icon\n                labelPosition=\"right\"\n                onClick={handleGoToNextSection}\n                type=\"button\"\n              >\n                Next\n                <Icon name=\"right arrow\" />\n              </Button>\n            </Grid.Column>\n          )}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nFormSectionView.propTypes = propTypes\nFormSectionView.defaultProps = defaultProps\n\nexport default FormSectionView\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport objectPath from 'object-path'\nimport { validateSections } from 'coreModules/formSupport/actionCreators'\nimport createLog from 'utilities/log'\nimport extractProps from 'utilities/extractProps'\nimport {\n  actionCreators as formSupportKeyObjectActionCreators,\n  globalSelectors as formSupportKeyObjectSelectors,\n} from 'coreModules/formSupport/keyObjectModule'\nimport { ColumnLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport FormSectionNavigation, {\n  propTypes as formSectionNavigationPropTypes,\n} from './FormSectionNavigation'\nimport FormSectionView, {\n  propTypes as formSectionViewPropTypes,\n} from './FormSectionView'\n\nconst log = createLog('coreModules/form/components/FormRow')\n\nconst columns = [\n  { key: 'formSectionNavigation', width: emToPixels(25) },\n  { key: 'formSectionView', style: { overflow: 'auto' } },\n]\n\nconst mapStateToProps = (state, { formName, match }) => {\n  return {\n    activeFormSectionIndex: formSupportKeyObjectSelectors.get[\n      'sectionNavigation.:formName.activeFormSectionIndex'\n    ](state, { formName }),\n    sectionId: objectPath.get(match, 'params.sectionId'),\n    showAllFormSections: formSupportKeyObjectSelectors.get[\n      'sectionNavigation.:formName.showAllFormSections'\n    ](state, {\n      formName,\n    }),\n  }\n}\nconst mapDispatchToProps = {\n  push,\n  setActiveFormSectionIndex:\n    formSupportKeyObjectActionCreators.set[\n      'sectionNavigation.:formName.activeFormSectionIndex'\n    ],\n  setShowAllFormSections:\n    formSupportKeyObjectActionCreators.set[\n      'sectionNavigation.:formName.showAllFormSections'\n    ],\n  validateSections,\n}\n\nconst propTypes = {\n  activeFormSectionIndex: PropTypes.number,\n  customParts: PropTypes.objectOf(PropTypes.func.isRequired),\n  formName: PropTypes.string.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      specimenId: PropTypes.string,\n    }).isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n  moduleName: PropTypes.string.isRequired,\n  passthroughProps: PropTypes.arrayOf(PropTypes.string.isRequired),\n  push: PropTypes.func.isRequired,\n  resourceIdPathParamKey: PropTypes.string,\n  sectionId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  sectionSpecs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      units: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired\n  ).isRequired,\n  setActiveFormSectionIndex: PropTypes.func.isRequired,\n  setShowAllFormSections: PropTypes.func.isRequired,\n  showAllFormSections: PropTypes.bool,\n  showSectionsInNavigation: PropTypes.bool,\n  validateSections: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  activeFormSectionIndex: undefined,\n  customParts: undefined,\n  itemSubHeader: undefined,\n  passthroughProps: ['resourceActivities'],\n  resourceIdPathParamKey: 'itemId',\n  sectionId: undefined,\n  showAllFormSections: undefined,\n  showSectionsInNavigation: false,\n}\n\nclass FormRow extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleSectionIdUpdate = this.handleSectionIdUpdate.bind(this)\n    this.handleSetActiveFormSection = this.handleSetActiveFormSection.bind(this)\n    this.handleGoToNextSection = this.handleGoToNextSection.bind(this)\n    this.handleGoToPreviousSection = this.handleGoToPreviousSection.bind(this)\n    this.handleShowAllFormSections = this.handleShowAllFormSections.bind(this)\n    this.renderColumn = this.renderColumn.bind(this)\n  }\n\n  componentWillMount() {\n    this.handleSectionIdUpdate()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.sectionId !== nextProps.sectionId) {\n      this.handleSectionIdUpdate(nextProps)\n    }\n  }\n\n  handleSectionIdUpdate(props = this.props) {\n    const { formName, sectionId } = props\n    const sectionIndex = Number(sectionId)\n\n    if (Number.isInteger(sectionIndex)) {\n      this.props.setActiveFormSectionIndex(sectionIndex, { formName })\n      this.props.setShowAllFormSections(false, { formName })\n    } else if (sectionId === 'all') {\n      this.props.setActiveFormSectionIndex(null, { formName })\n      this.props.setShowAllFormSections(true, { formName })\n    }\n\n    setTimeout(() => this.props.validateSections({ formName: props.formName }))\n  }\n\n  handleSetActiveFormSection(event, activeFormSectionIndex) {\n    if (event) event.preventDefault()\n\n    const { resourceIdPathParamKey } = this.props\n    const { path, params } = this.props.match\n\n    const url = path\n      .replace(`:${resourceIdPathParamKey}`, params[resourceIdPathParamKey])\n      .replace(':sectionId', activeFormSectionIndex)\n\n    this.props.push(url)\n  }\n\n  handleGoToNextSection(event) {\n    const { activeFormSectionIndex, sectionSpecs } = this.props\n\n    if (activeFormSectionIndex < sectionSpecs.length - 1) {\n      this.handleSetActiveFormSection(event, activeFormSectionIndex + 1)\n    }\n  }\n\n  handleGoToPreviousSection(event) {\n    const { activeFormSectionIndex } = this.props\n\n    if (activeFormSectionIndex > 0) {\n      this.handleSetActiveFormSection(event, activeFormSectionIndex - 1)\n    }\n  }\n\n  handleShowAllFormSections(event) {\n    this.handleSetActiveFormSection(event, 'all')\n  }\n\n  renderColumn(key, props) {\n    switch (key) {\n      case 'formSectionNavigation': {\n        const { extractedProps } = extractProps({\n          keys: [\n            ...Object.keys(formSectionNavigationPropTypes),\n            ...this.props.passthroughProps,\n          ],\n          props,\n        })\n\n        const { itemHeader, itemSubHeader } = this.props\n\n        return (\n          <FormSectionNavigation\n            {...extractedProps}\n            header={itemHeader}\n            subHeader={itemSubHeader}\n          />\n        )\n      }\n\n      case 'formSectionView': {\n        const { extractedProps } = extractProps({\n          keys: [\n            'itemHeader',\n            'itemSubHeader',\n            ...Object.keys(formSectionViewPropTypes),\n            ...this.props.passthroughProps,\n          ],\n          props,\n        })\n\n        return <FormSectionView {...extractedProps} />\n      }\n\n      default: {\n        throw new Error(`Unknown column: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    log.render()\n    const {\n      activeFormSectionIndex,\n      customParts,\n      match,\n      moduleName,\n      sectionSpecs,\n      showAllFormSections,\n      showSectionsInNavigation,\n      ...rest\n    } = this.props\n\n    if (\n      showSectionsInNavigation &&\n      activeFormSectionIndex === undefined &&\n      showAllFormSections === undefined\n    ) {\n      return null\n    }\n\n    return (\n      <React.Fragment>\n        <ColumnLayout\n          {...rest}\n          activeFormSectionIndex={activeFormSectionIndex}\n          columns={columns}\n          customParts={customParts}\n          moduleName={moduleName}\n          onGoToNextSection={this.handleGoToNextSection}\n          onGoToPreviousSection={this.handleGoToPreviousSection}\n          onRemoteSubmit={this.handleRemoteSubmit}\n          onSetActiveFormSection={this.handleSetActiveFormSection}\n          onShowAllFormSections={this.handleShowAllFormSections}\n          renderColumn={this.renderColumn}\n          sectionSpecs={sectionSpecs}\n          showAllFormSections={showAllFormSections}\n          showSectionsInNavigation={showSectionsInNavigation}\n          specimenId={match.params.specimenId}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nFormRow.propTypes = propTypes\nFormRow.defaultProps = defaultProps\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(FormRow)\n","import { actionCreators as formSupportKeyObjectActionCreators } from 'coreModules/formSupport/keyObjectModule'\nimport globalSelectors from '../globalSelectors'\n\nexport default function validateSections({ formName }) {\n  return (dispatch, getState) => {\n    const state = getState()\n    const sectionFieldNamesMap = globalSelectors.getSectionFieldNamesMap(\n      state,\n      {\n        formName,\n      }\n    )\n\n    const sectionNames = Object.keys(sectionFieldNamesMap)\n\n    const validity = {}\n    sectionNames.forEach(sectionName => {\n      validity[sectionName] = globalSelectors.computeSectionIsInvalid(state, {\n        formName,\n        sectionName,\n      })\n    })\n\n    return dispatch(\n      formSupportKeyObjectActionCreators.set[\n        'sectionNavigation.:formName.sectionInvalidStatus'\n      ](validity, {\n        formName,\n      })\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table } from 'semantic-ui-react'\nimport { Translate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  columnHeaderTextKeys: PropTypes.arrayOf(PropTypes.string.isRequired)\n    .isRequired,\n}\n\nconst FormTableHeaderRow = ({ columnHeaderTextKeys }) => {\n  return (\n    <Table.Row>\n      {columnHeaderTextKeys.map(textKey => {\n        return (\n          <Table.HeaderCell key={textKey}>\n            <Translate textKey={textKey} />\n          </Table.HeaderCell>\n        )\n      })}\n    </Table.Row>\n  )\n}\n\nFormTableHeaderRow.propTypes = propTypes\n\nexport default FormTableHeaderRow\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Table } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport FormTableHeaderRow from './FormTableHeaderRow'\n\nconst log = createLog(`modules:form:components:FormTable`)\n\nconst propTypes = {\n  columnHeaderTextKeys: PropTypes.arrayOf(PropTypes.string.isRequired)\n    .isRequired,\n  footer: PropTypes.node,\n  numberOfItemsToSkip: PropTypes.number,\n  numberOfRows: PropTypes.number.isRequired,\n  renderRow: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  footer: undefined,\n  numberOfItemsToSkip: 0,\n}\n\nclass FormTable extends Component {\n  shouldComponentUpdate(nextProps) {\n    return this.props.numberOfRows !== nextProps.numberOfRows\n  }\n\n  render() {\n    const {\n      columnHeaderTextKeys,\n      footer,\n      numberOfItemsToSkip,\n      numberOfRows,\n      renderRow,\n    } = this.props\n\n    let rowIndices = []\n    for (let index = 0; index < numberOfRows; index += 1) {\n      rowIndices.push(index)\n    }\n    rowIndices = rowIndices.slice(numberOfItemsToSkip)\n\n    log.render('Render')\n    return (\n      <Table celled compact striped>\n        <Table.Header>\n          <FormTableHeaderRow columnHeaderTextKeys={columnHeaderTextKeys} />\n        </Table.Header>\n\n        <Table.Body>\n          {rowIndices.map(index => {\n            return renderRow({ index, numberOfRows })\n          })}\n        </Table.Body>\n\n        {footer && footer}\n      </Table>\n    )\n  }\n}\n\nFormTable.propTypes = propTypes\nFormTable.defaultProps = defaultProps\n\nexport default FormTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Search } from 'semantic-ui-react'\nimport { FormFieldError } from '../../../../error/components'\nimport FieldLabel from '../../FieldTemplate/FieldLabel'\n\nconst propTypes = {\n  errorScope: PropTypes.string,\n  handleResultSelect: PropTypes.func.isRequired,\n  handleSearchChange: PropTypes.func.isRequired,\n  helpNotificationProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  meta: PropTypes.shape({\n    error: PropTypes.object,\n    touched: PropTypes.bool.isRequired,\n  }).isRequired,\n  module: PropTypes.string,\n  required: PropTypes.bool,\n  resultRenderer: PropTypes.func,\n  results: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n}\nconst defaultProps = {\n  errorScope: undefined,\n  helpNotificationProps: undefined,\n  helpText: undefined,\n  isLoading: false,\n  label: undefined,\n  module: undefined,\n  required: false,\n  resultRenderer: undefined,\n}\n\nfunction SearchInputWithResults({\n  errorScope,\n  handleResultSelect,\n  handleSearchChange,\n  helpNotificationProps,\n  helpText,\n  isLoading,\n  input,\n  label,\n  meta: { error, touched },\n  module,\n  required,\n  resultRenderer,\n  results,\n}) {\n  const displayError = touched && !!error\n  const hiddenInputName = `${input.name}.hidden`\n  return (\n    <Form.Field\n      error={displayError}\n      required={required}\n      style={{ position: 'relative' }}\n    >\n      {(label || helpNotificationProps) && (\n        <FieldLabel\n          helpNotificationProps={helpNotificationProps}\n          helpText={helpText}\n          htmlFor={input.name}\n          label={label}\n        />\n      )}\n      {helpText && <p>{helpText}</p>}\n      <Search\n        loading={isLoading}\n        onResultSelect={handleResultSelect}\n        onSearchChange={handleSearchChange}\n        resultRenderer={resultRenderer}\n        results={results}\n        {...input}\n      />\n      <input\n        hidden\n        {...input}\n        name={hiddenInputName}\n        onChange={event => {\n          const { value } = event.target\n          handleResultSelect(event, { result: { title: value } })\n        }}\n      />\n      {displayError && (\n        <FormFieldError\n          error={error}\n          module={module}\n          scope={errorScope || input.name}\n        />\n      )}\n    </Form.Field>\n  )\n}\n\nSearchInputWithResults.propTypes = propTypes\nSearchInputWithResults.defaultProps = defaultProps\n\nexport default SearchInputWithResults\n","export const days = []\nexport const months = []\nexport const years = []\nconst currentYear = new Date().getFullYear()\n\n// A string key and title is needed for Semantic UI Search component\n// (and it is not possible to call it \"value\" instead)\nfor (let day = 1; day <= 31; day += 1) {\n  days.push(String(day))\n}\n\nfor (let month = 1; month <= 12; month += 1) {\n  months.push(String(month))\n}\n\nfor (let year = 1500; year <= currentYear; year += 1) {\n  years.push(String(year))\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport SearchInputWithResults from './SearchInputWithResults'\nimport DisplaySearchResult from '../DisplaySearchResult'\nimport { days, months, years } from './dateOptions'\nimport { DAY, MONTH, YEAR } from '../../../constants'\n\nconst createStringMatch = controlledValue => value => {\n  return String(value).indexOf(String(controlledValue)) === 0\n}\nconst mapToSemanticUiFormat = value => ({ key: value, title: value })\n\nconst getDateSuggestions = (datePart, controlledValue) => {\n  const beginsWithSameDigits = createStringMatch(controlledValue)\n\n  switch (datePart) {\n    case DAY:\n      return days.filter(beginsWithSameDigits).map(mapToSemanticUiFormat)\n    case MONTH:\n      return months.filter(beginsWithSameDigits).map(mapToSemanticUiFormat)\n    case YEAR:\n      return years\n        .filter(beginsWithSameDigits)\n        .slice(0, 10)\n        .map(mapToSemanticUiFormat)\n    default:\n      return []\n  }\n}\n\nconst propTypes = {\n  datePart: PropTypes.oneOf([DAY, MONTH, YEAR]).isRequired,\n  errorScope: PropTypes.string,\n  helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  meta: PropTypes.shape({\n    error: PropTypes.object,\n    touched: PropTypes.bool.isRequired,\n  }).isRequired,\n  required: PropTypes.bool,\n}\n\nconst defaultProps = {\n  errorScope: undefined,\n  helpText: undefined,\n  label: undefined,\n  required: false,\n}\n\nclass InputDatePart extends Component {\n  constructor(props) {\n    super(props)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n  }\n\n  handleResultSelect(event, { result }) {\n    // see Semantic docs for details: https://react.semantic-ui.com/modules/search\n    // cast id to number since Semantic requires string id and does not allow\n    // custom props name (\"value\" would have been better name than \"id\")\n    if (result && result.title) {\n      this.props.input.onBlur(Number(result.title))\n    }\n  }\n\n  handleSearchChange(event, { value }) {\n    // see Semantic docs for details: https://react.semantic-ui.com/modules/search\n    this.props.input.onChange(Number(value))\n  }\n\n  render() {\n    const {\n      datePart,\n      errorScope,\n      helpText,\n      input,\n      label,\n      meta,\n      required,\n    } = this.props\n\n    const { value } = input\n\n    return (\n      <SearchInputWithResults\n        errorScope={errorScope}\n        handleResultSelect={this.handleResultSelect}\n        handleSearchChange={this.handleSearchChange}\n        helpText={helpText}\n        icon={null} // skip search icon\n        input={{\n          name: input.name,\n          value,\n        }}\n        label={label}\n        meta={meta}\n        required={required}\n        resultRenderer={DisplaySearchResult}\n        results={getDateSuggestions(datePart, value)}\n      />\n    )\n  }\n}\n\nInputDatePart.propTypes = propTypes\nInputDatePart.defaultProps = defaultProps\n\nexport default InputDatePart\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport config from 'config'\n\nconst propTypes = {\n  autoComplete: PropTypes.string,\n  displayAsButton: PropTypes.bool,\n  icon: PropTypes.string,\n  initialText: PropTypes.string,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    ),\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  mountHidden: PropTypes.bool,\n  noResultsMessage: PropTypes.string,\n  onSearchChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      type: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    }).isRequired\n  ).isRequired,\n  searchQuery: PropTypes.string,\n  selectedOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      type: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    })\n  ),\n  text: PropTypes.string,\n}\n\nconst containerStyle = {\n  display: 'inline-block',\n  position: 'relative',\n  width: '100%',\n}\n\nconst defaultProps = {\n  autoComplete: undefined,\n  displayAsButton: false,\n  icon: 'dropdown',\n  initialText: '',\n  isLoading: false,\n  mountHidden: config.isTest,\n  noResultsMessage: 'No results found.',\n  searchQuery: '',\n  selectedOptions: [],\n  text: undefined,\n}\n\nclass MultipleSearchSelectionDropdownInput extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n  }\n\n  handleSearchChange(event, { searchQuery }) {\n    this.props.onSearchChange({\n      inputName: this.props.input.name,\n      searchQuery,\n    })\n  }\n\n  handleOnChange(event, data) {\n    const { value } = data\n    this.props.input.onBlur(value)\n    this.handleSearchChange(null, { searchQuery: '' })\n  }\n\n  handleOnBlur(event, data) {\n    const { value } = data\n\n    if (this.props.searchQuery && !value.includes(this.props.searchQuery)) {\n      this.props.input.onBlur([...value, this.props.searchQuery])\n    } else {\n      this.props.input.onBlur(value)\n    }\n    this.handleSearchChange(null, { searchQuery: '' })\n  }\n\n  render() {\n    const {\n      autoComplete,\n      displayAsButton,\n      icon,\n      initialText,\n      input,\n      isLoading,\n      mountHidden,\n      noResultsMessage,\n      options: optionsInput = [],\n      searchQuery,\n      selectedOptions = [],\n    } = this.props\n\n    const options = [...optionsInput, ...selectedOptions]\n\n    const { onChange } = input\n    const hiddenInputName = `${input.name}.hidden`\n\n    const style = displayAsButton\n      ? {\n          background: 'white',\n          borderRadius: 0,\n          fontWeight: 'normal',\n          widht: '100%',\n        }\n      : undefined\n    return (\n      <div style={containerStyle}>\n        <Dropdown\n          autoComplete={autoComplete}\n          button={displayAsButton}\n          fluid\n          icon={icon}\n          loading={isLoading}\n          multiple\n          noResultsMessage={noResultsMessage}\n          onSearchChange={this.handleSearchChange}\n          options={options}\n          placeholder={initialText}\n          search={items => {\n            return items\n          }}\n          searchQuery={searchQuery}\n          selection\n          selectOnBlur={false}\n          selectOnNavigation={false}\n          {...input}\n          onBlur={this.handleOnBlur}\n          onChange={this.handleOnChange}\n          style={style}\n          value={selectedOptions && selectedOptions.map(({ value }) => value)}\n        />\n        {(true || mountHidden) && (\n          <input\n            className=\"hidden\"\n            {...input}\n            name={hiddenInputName}\n            onChange={event => {\n              const { value } = event.target\n              onChange(event, { value })\n            }}\n            type=\"hidden\"\n            value={input.value || ''}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nMultipleSearchSelectionDropdownInput.propTypes = propTypes\nMultipleSearchSelectionDropdownInput.defaultProps = defaultProps\n\nexport default MultipleSearchSelectionDropdownInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport MultipleSearchSelectionBase from '../Base'\n\nconst mapStateToProps = (\n  state,\n  { getSearchQuery, getOptions, getSelectedOptions, input }\n) => {\n  const searchQuery = getSearchQuery(state, input.name)\n  const selectedOptions =\n    (input.value &&\n      getSelectedOptions &&\n      getSelectedOptions(state, input.value)) ||\n    undefined\n\n  return {\n    options: getOptions(state, searchQuery),\n    searchQuery,\n    selectedOptions,\n  }\n}\n\nconst propTypes = {\n  getOptions: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  getSearchQuery: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  getSelectedOption: PropTypes.func, // eslint-disable-line react/no-unused-prop-types\n  initialText: PropTypes.string,\n  multiple: PropTypes.bool,\n  onSearchChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      type: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    })\n  ).isRequired,\n  searchQuery: PropTypes.string,\n  selectedOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      type: PropTypes.string,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    })\n  ),\n}\n\nconst defaultProps = {\n  getSelectedOption: undefined,\n  initialText: undefined,\n  multiple: false,\n  searchQuery: '',\n  selectedOptions: undefined,\n}\n\nclass MultipleSearchSelectionConnectInput extends Component {\n  render() {\n    const {\n      initialText,\n      onSearchChange,\n      options,\n      searchQuery,\n      selectedOptions,\n      ...rest\n    } = this.props\n\n    return (\n      <MultipleSearchSelectionBase\n        initialText={initialText}\n        onSearchChange={onSearchChange}\n        options={options}\n        searchQuery={searchQuery}\n        selectedOptions={selectedOptions}\n        {...rest}\n      />\n    )\n  }\n}\n\nMultipleSearchSelectionConnectInput.propTypes = propTypes\nMultipleSearchSelectionConnectInput.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(\n  MultipleSearchSelectionConnectInput\n)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createSelector } from 'reselect'\nimport MultipleSearchSelectionBase from '../Base'\n\nconst propTypes = {\n  filterOptions: PropTypes.func,\n  initialText: PropTypes.string,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    ),\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  limit: PropTypes.number,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  parse: PropTypes.func,\n}\n\nconst defaultProps = {\n  filterOptions: undefined,\n  initialText: undefined,\n  isLoading: undefined,\n  limit: 10,\n  parse: undefined,\n}\n\nconst createSelectedOptionSelector = options => {\n  return createSelector(\n    values => values,\n    values => {\n      return (\n        values &&\n        values.map(value => {\n          return options.find(item => {\n            return item.value === value\n          })\n        })\n      )\n    }\n  )\n}\n\nclass MultipleSearchSelectionLocalInput extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      filteredOptions: this.getFilteredOptions(),\n      searchQuery: '',\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.getSelectedOptions = this.getSelectedOptions.bind(this)\n    this.optionSelector = createSelectedOptionSelector(props.options)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const noOptionsNow = !this.props.options || !this.props.options.length\n    const hasOptionsNext = nextProps.options && nextProps.options.length\n    if (noOptionsNow && hasOptionsNext) {\n      this.setState({\n        filteredOptions: this.getFilteredOptions({\n          nextOptions: nextProps.options,\n        }),\n      })\n      this.optionSelector = createSelectedOptionSelector(nextProps.options)\n    }\n  }\n\n  getFilteredOptions({ searchQuery, nextOptions } = {}) {\n    const { filterOptions, options: currentOptions, limit } = this.props\n\n    const options = nextOptions || currentOptions\n\n    let filteredOptions = [...options]\n\n    if (filterOptions) {\n      return filterOptions({ options, searchQuery })\n    }\n\n    if (searchQuery) {\n      const lowerCaseSearchQuery = searchQuery.toLowerCase()\n\n      const firstLetterMatches = options.filter(({ text }) => {\n        return text.toLowerCase().indexOf(lowerCaseSearchQuery) === 0\n      })\n\n      const otherMatches = options.filter(({ text }) => {\n        return text.toLowerCase().indexOf(lowerCaseSearchQuery) > 0\n      })\n\n      filteredOptions = [...firstLetterMatches, ...otherMatches]\n    }\n\n    if (limit) {\n      return filteredOptions.splice(0, limit)\n    }\n\n    return filteredOptions\n  }\n\n  getSelectedOptions() {\n    const { input } = this.props\n    if (input.value === undefined) {\n      return []\n    }\n    const res = this.optionSelector(input.value)\n    return res\n  }\n\n  handleSearchChange({ searchQuery }) {\n    this.setState({\n      filteredOptions: this.getFilteredOptions({ searchQuery }),\n      searchQuery,\n    })\n  }\n\n  render() {\n    const { initialText, input, isLoading, parse } = this.props\n    const { filteredOptions, searchQuery } = this.state\n    return (\n      <MultipleSearchSelectionBase\n        initialText={initialText}\n        input={input}\n        isLoading={isLoading}\n        onSearchChange={this.handleSearchChange}\n        options={filteredOptions}\n        parse={parse}\n        searchQuery={searchQuery}\n        selectedOptions={this.getSelectedOptions()}\n      />\n    )\n  }\n}\n\nMultipleSearchSelectionLocalInput.propTypes = propTypes\nMultipleSearchSelectionLocalInput.defaultProps = defaultProps\n\nexport default MultipleSearchSelectionLocalInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\nimport extractProps from 'utilities/extractProps'\nimport MultipleSearchSelectionDropdownConnectInput from '../../inputs/MultipleSearchSelectionDropdown/Connect'\nimport MultipleSearchSelectionDropdownLocalInput from '../../inputs/MultipleSearchSelectionDropdown/Local'\n\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    ),\n  }).isRequired,\n  leftButton: PropTypes.node,\n  rightButton: PropTypes.node,\n  type: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  leftButton: undefined,\n  rightButton: undefined,\n}\n\nfunction MultipleSearchSelectionDropdownField(props) {\n  let Component\n  const { type, leftButton, rightButton, input } = props\n\n  switch (type) {\n    case 'multiple-search-selection-dropdown-connect': {\n      Component = MultipleSearchSelectionDropdownConnectInput\n      break\n    }\n    case 'multiple-search-selection-dropdown-local': {\n      Component = MultipleSearchSelectionDropdownLocalInput\n      break\n    }\n    default: {\n      throw new Error(`Type: ${type} is not supported`)\n    }\n  }\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  const displayAsButton = !!(leftButton || rightButton)\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={input.name}>\n      {displayAsButton ? (\n        <Button.Group style={{ width: '100%' }}>\n          {leftButton}\n\n          <Component\n            displayAsButton={displayAsButton}\n            {...rest}\n            input={input}\n          />\n\n          {rightButton}\n        </Button.Group>\n      ) : (\n        <Component {...rest} input={input} />\n      )}\n    </FieldTemplate>\n  )\n}\n\nMultipleSearchSelectionDropdownField.propTypes = propTypes\nMultipleSearchSelectionDropdownField.defaultProps = defaultProps\n\nexport default MultipleSearchSelectionDropdownField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nfunction DefaultAutocompleteResult({ text }) {\n  return <div>{text}</div>\n}\n\nDefaultAutocompleteResult.propTypes = propTypes\n\nexport default DefaultAutocompleteResult\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Search } from 'semantic-ui-react'\nimport config from 'config'\nimport DefaultResultRenderer from './DefaultResultRenderer'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  mountHidden: PropTypes.bool,\n  onSearchChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    }).isRequired\n  ).isRequired,\n  resultRenderer: PropTypes.func,\n  searchQuery: PropTypes.string,\n  selectedOption: PropTypes.object,\n}\n\nconst defaultProps = {\n  isLoading: false,\n  mountHidden: config.isTest,\n  resultRenderer: DefaultResultRenderer,\n  searchQuery: null,\n  selectedOption: null,\n}\n\nclass SearchBase extends Component {\n  constructor(props) {\n    super(props)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n  }\n\n  handleSearchChange(event, { value }) {\n    // see Semantic docs for details: https://react.semantic-ui.com/modules/search\n    this.props.onSearchChange({\n      inputName: this.props.input.name,\n      searchQuery: value,\n    })\n\n    if (this.props.input.value) {\n      // empty form value, if search is renewed after a value was selected\n      this.props.input.onChange('')\n    }\n  }\n\n  handleResultSelect(\n    event,\n    {\n      result: { value },\n    }\n  ) {\n    // see Semantic docs for details: https://react.semantic-ui.com/modules/search\n    this.handleSearchChange(null, { value: '' })\n\n    this.props.input.onBlur(value)\n  }\n\n  render() {\n    const {\n      input,\n      isLoading,\n      resultRenderer,\n      mountHidden,\n      options,\n      searchQuery,\n      selectedOption,\n    } = this.props\n\n    const hiddenInputName = `${input.name}.hidden`\n\n    return (\n      <React.Fragment>\n        <Search\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onSearchChange={this.handleSearchChange}\n          resultRenderer={resultRenderer}\n          results={options}\n          {...input}\n          onBlur={undefined}\n          value={searchQuery || (selectedOption && selectedOption.text) || ''}\n        />\n        {mountHidden && (\n          <input\n            hidden\n            {...input}\n            name={hiddenInputName}\n            onChange={event => {\n              this.handleResultSelect(event, {\n                result: { value: event.target.value },\n              })\n            }}\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nSearchBase.propTypes = propTypes\nSearchBase.defaultProps = defaultProps\n\nexport default SearchBase\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport SearchBaseInput from '../Base'\n\nconst mapStateToProps = (\n  state,\n  { getOptions, getSearchQuery, getSearchLoading, getSelectedOption, input }\n) => {\n  const searchQuery = getSearchQuery(state, input.name)\n  const selectedOption =\n    (input.value && getSelectedOption(state, input.value)) || null\n\n  return {\n    isLoading: getSearchLoading(state),\n    options: getOptions(state, searchQuery),\n    searchQuery,\n    selectedOption,\n  }\n}\n\nconst propTypes = {\n  getOptions: PropTypes.func.isRequired,\n  getSearchLoading: PropTypes.func.isRequired,\n  getSearchQuery: PropTypes.func.isRequired,\n  getSelectedOption: PropTypes.func.isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n        .isRequired,\n    }).isRequired\n  ).isRequired,\n  searchQuery: PropTypes.string,\n  selectedOption: PropTypes.object,\n}\n\nconst defaultProps = {\n  isLoading: true,\n  searchQuery: null,\n  selectedOption: null,\n}\n\nclass ConnectSearchInput extends Component {\n  render() {\n    const {\n      isLoading,\n      options,\n      searchQuery,\n      selectedOption,\n      ...rest\n    } = this.props\n\n    return (\n      <SearchBaseInput\n        isLoading={isLoading}\n        options={options}\n        searchQuery={searchQuery}\n        selectedOption={selectedOption}\n        {...rest}\n      />\n    )\n  }\n}\n\nConnectSearchInput.propTypes = propTypes\nConnectSearchInput.defaultProps = defaultProps\n\n// export default ConnectSearchInput\nexport default compose(connect(mapStateToProps))(ConnectSearchInput)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport extractProps from 'utilities/extractProps'\nimport ConnectSearchInput from '../../inputs/Search/Connect'\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nfunction Search(props) {\n  let Component\n  const { input, type } = props\n\n  switch (type) {\n    case 'search-connect': {\n      Component = ConnectSearchInput\n      break\n    }\n    default: {\n      throw new Error(`Type: ${type} is not supported`)\n    }\n  }\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={input.name}>\n      <Component {...rest} />\n    </FieldTemplate>\n  )\n}\n\nSearch.propTypes = propTypes\n\nexport default Search\n","import React, { PureComponent } from 'react'\n\nimport DropdownSearch from '../DropdownSearch'\nimport TogglableField from '../../TogglableField'\n\nclass TogglableDropdownSearch extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.renderInput = this.renderInput.bind(this)\n  }\n\n  renderInput(props) {\n    return <DropdownSearch {...this.props} {...props} />\n  }\n\n  render() {\n    return <TogglableField {...this.props} renderInput={this.renderInput} />\n  }\n}\n\nexport default TogglableDropdownSearch\n","export { default as ButtonCopyPasteField } from './migrate/ButtonCopyPasteField'\nexport { default as Checkbox } from './fields/Checkbox'\nexport { default as ConfirmationPopup } from './ConfirmationPopup'\nexport { default as Coordinates } from './fields/Coordinates'\nexport { default as CustomData } from './fields/CustomData'\nexport { default as DisplaySearchResult } from './migrate/DisplaySearchResult'\nexport { default as DropdownSearch } from './fields/DropdownSearch'\nexport { default as Field } from './FieldWrapper'\nexport { default as FieldLabel } from './FieldTemplate/FieldLabel'\nexport { default as FieldTemplate } from './FieldTemplate'\nexport { default as Form } from './Form'\nexport { default as FormModal } from './FormModal'\nexport { default as FormRow } from './FormRow'\nexport { default as FormTable } from './migrate/FormTable'\nexport { default as HelpTextNotification } from './migrate/HelpTextNotification'\nexport { default as Input } from './fields/Input'\nexport { default as InputDatePart } from './migrate/InputDatePart'\nexport { default as InputText } from './inputs/Input/Text'\nexport {\n  default as MultipleSearchSelectionDropdown,\n} from './fields/MultipleSearchSelectionDropdown'\nexport { default as Radio } from './fields/Radio'\nexport { default as RadioBoolean } from './fields/RadioBoolean'\nexport { default as RangeDate } from './fields/Date/RangeDate'\nexport { default as Remarks } from './fields/Remarks'\nexport { default as Search } from './fields/Search'\nexport { default as Section } from './Section'\nexport { default as SingleDate } from './fields/Date/SingleDate'\nexport { default as TextArea } from './fields/TextArea'\nexport { default as TextAreaInput } from './inputs/TextArea'\nexport {\n  default as TogglableDropdownSearch,\n} from './fields/DropdownSearch/TogglableDropdownSearch'\nexport { default as TogglableField } from './TogglableField'\nexport { default as Unit } from './Unit'\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Translate } from 'coreModules/i18n/components'\nimport { FormFieldHelpIcon } from 'coreModules/notifications/components'\nimport injectHelpNotificationProps from '../../higherOrderComponents/injectHelpNotificationProps'\nimport injectLabelKey from '../../higherOrderComponents/injectLabelKey'\n\nconst propTypes = {\n  helpNotificationProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  htmlFor: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  labelKey: PropTypes.string,\n  required: PropTypes.bool,\n  subLabel: PropTypes.bool,\n}\nconst defaultProps = {\n  helpNotificationProps: undefined,\n  helpText: undefined,\n  htmlFor: undefined,\n  label: undefined,\n  labelKey: undefined,\n  required: false,\n  subLabel: false,\n}\nconst FieldLabel = ({\n  helpNotificationProps,\n  helpText,\n  htmlFor,\n  label: translatedLabel,\n  labelKey,\n  required,\n  subLabel,\n}) => {\n  const style = subLabel\n    ? {\n        display: 'inline-block',\n        fontSize: '0.9em',\n        fontStyle: 'italic',\n        fontWeight: 400,\n        margin: 0,\n      }\n    : {\n        display: 'inline-block',\n      }\n\n  const helpIconWrapperStyle = required\n    ? {\n        display: 'inline-block',\n        marginLeft: '0.25em',\n      }\n    : {\n        display: 'inline-block',\n      }\n\n  const label = translatedLabel || <Translate capitalize textKey={labelKey} />\n  return (\n    <React.Fragment>\n      <label htmlFor={htmlFor} style={style}>\n        {label}\n        {\n          // this ugly stuff is required since currently translations can only\n          // be components\n        }\n        {helpText && ' ('}\n        {helpText && helpText}\n        {helpText && ')'}\n        {helpNotificationProps && ' '}\n      </label>\n      {helpNotificationProps && (\n        // this is outside of label to make required asterisk come before help icon\n        <div style={helpIconWrapperStyle}>\n          <FormFieldHelpIcon helpNotificationProps={helpNotificationProps} />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nFieldLabel.propTypes = propTypes\nFieldLabel.defaultProps = defaultProps\n\nexport default injectLabelKey(injectHelpNotificationProps(FieldLabel))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Message, Label } from 'semantic-ui-react'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  errors: PropTypes.array.isRequired,\n  scope: PropTypes.string,\n}\n\nconst defaultProps = {\n  scope: 'schemaErrors',\n}\n\nconst FormSchemaError = ({ errors, scope }) => {\n  return (\n    <Message negative>\n      <Label.Group color=\"red\" size=\"tiny\">\n        {errors.map(error => {\n          const key = JSON.stringify({\n            errorCode: error.errorCode || {},\n            params: error.params || {},\n          })\n          return (\n            <Label key={key}>\n              <ModuleTranslate\n                capitalize\n                module=\"error\"\n                params={error.params}\n                scope={scope}\n                textKey={error.errorCode}\n              />\n            </Label>\n          )\n        })}\n      </Label.Group>\n    </Message>\n  )\n}\n\nFormSchemaError.propTypes = propTypes\nFormSchemaError.defaultProps = defaultProps\n\nexport default FormSchemaError\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getFormSyncErrors } from 'redux-form'\n\nimport FormSchemaError from './FormSchemaError'\n\nconst mapStateToProps = (state, { form }) => {\n  const syncErrors = getFormSyncErrors(form)(state)\n\n  return {\n    // TODO: make this dynamic\n    errors: syncErrors && syncErrors.schemaErrors,\n  }\n}\n\nconst propTypes = {\n  errors: PropTypes.array,\n  form: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n}\nconst defaultProps = {\n  errors: undefined,\n}\n\nconst ConnectedFormSchemaError = ({ errors }) => {\n  if (errors && errors.length > 0) {\n    return <FormSchemaError errors={errors} />\n  }\n\n  return null\n}\n\nConnectedFormSchemaError.propTypes = propTypes\nConnectedFormSchemaError.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(ConnectedFormSchemaError)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Grid, Header, Segment } from 'semantic-ui-react'\n\nconst propTypes = {\n  error: PropTypes.string,\n  info: PropTypes.string,\n}\nconst defaultProps = {\n  error: undefined,\n  info: undefined,\n}\n\nclass FullPageError extends Component {\n  render() {\n    const { error, info } = this.props\n\n    return (\n      <Grid columns={1} container style={{ padding: '2em' }} textAlign=\"left\">\n        <Grid.Column>\n          <Header as=\"h1\">There is an error loading this page</Header>\n          <p>\n            There is a technical problem that prevents this page from loading.\n            Try reloading the page.\n          </p>\n        </Grid.Column>\n        <Grid.Column>\n          <Button onClick={() => window.location.reload()} primary>\n            Reload this page\n          </Button>\n        </Grid.Column>\n        <Grid.Column>\n          <Segment secondary>\n            <Header sub>Information about the error</Header>\n            <br />\n            <strong>{error && error.toString()}</strong>\n            <br />\n            <br />\n            {info && info}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nFullPageError.propTypes = propTypes\nFullPageError.defaultProps = defaultProps\n\nexport default FullPageError\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { URL } from 'common/es5/constants/frontendErrorLogging'\nimport FullPageError from './FullPageError'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  FallbackComponent: PropTypes.node,\n}\nconst defaultProps = {\n  FallbackComponent: undefined,\n}\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch(error, info) {\n    try {\n      const stringifiedError = error && error.toString()\n      const stringifiedInfo =\n        info && typeof info === 'object' ? JSON.stringify(info, null, 2) : info\n\n      this.setState({\n        error: stringifiedError,\n        hasError: true,\n        info: stringifiedInfo,\n      })\n\n      if (window && window.navigator && window.navigator.sendBeacon) {\n        window.navigator.sendBeacon(\n          URL,\n          JSON.stringify({\n            source: window.location.href,\n            stack: `${stringifiedError} - ${stringifiedInfo}`,\n          })\n        )\n      }\n    } catch (_) {\n      this.setState({ hasError: true })\n    }\n  }\n\n  render() {\n    const { error, hasError, info } = this.state\n\n    if (hasError) {\n      const { FallbackComponent } = this.props\n\n      if (FallbackComponent) {\n        return <FallbackComponent />\n      }\n\n      return <FullPageError error={error} info={info} />\n    }\n\n    return this.props.children\n  }\n}\n\nErrorBoundary.propTypes = propTypes\nErrorBoundary.defaultProps = defaultProps\n\nexport default ErrorBoundary\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst defaultErrorStyle = {\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  textAlign: 'left',\n  transform: 'translateY(100%)',\n  zIndex: 20,\n}\n\nconst propTypes = {\n  error: PropTypes.shape({\n    errorCode: PropTypes.string.isRequired,\n    params: PropTypes.object,\n  }).isRequired,\n  module: PropTypes.string,\n  scope: PropTypes.string,\n  style: PropTypes.object,\n  textKeys: PropTypes.array,\n  warning: PropTypes.bool,\n}\n\nconst defaultProps = {\n  module: '',\n  scope: undefined,\n  style: defaultErrorStyle,\n  textKeys: [],\n  warning: false,\n}\n\nconst FormFieldError = ({ scope, error, module, style, textKeys, warning }) => {\n  if (textKeys.length) {\n    return (\n      <span className=\"ui red tiny label\" style={style}>\n        <ModuleTranslate capitalize params={error.params} textKeys={textKeys} />\n      </span>\n    )\n  }\n\n  const classNames = warning ? 'ui orange tiny label' : 'ui red tiny label'\n\n  return (\n    <span className={classNames} style={style}>\n      {module ? (\n        <ModuleTranslate\n          capitalize\n          modules={[module, 'error']}\n          params={error.params}\n          scope={scope}\n          textKey={error.errorCode}\n        />\n      ) : (\n        <ModuleTranslate\n          capitalize\n          module=\"error\"\n          params={error.params}\n          scope={scope}\n          textKey={error.errorCode}\n        />\n      )}\n    </span>\n  )\n}\n\nFormFieldError.propTypes = propTypes\nFormFieldError.defaultProps = defaultProps\n\nexport default FormFieldError\n","import ConnectedFormSchemaError from './ConnectedFormSchemaError'\nimport ErrorBoundary from './ErrorBoundary'\nimport FormFieldError from './FormFieldError'\nimport FormSchemaError from './FormSchemaError'\n\nexport {\n  ConnectedFormSchemaError,\n  ErrorBoundary,\n  FormFieldError,\n  FormSchemaError,\n}\n","import { Children, cloneElement, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { push } from 'react-router-redux'\nimport Mousetrap from 'mousetrap'\n\nimport createLog from 'utilities/log'\n\nimport globalSelectors from '../../globalSelectors'\n\nimport {\n  registerKeyboardShortcut,\n  unregisterKeyboardShortcut,\n} from '../../actionCreators'\n\nconst log = createLog('modules:keyboardShortcuts:DisplayShortcuts')\n\nconst mapStateToProps = state => {\n  return {\n    layer: globalSelectors.getLayer(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  push,\n  registerKeyboardShortcut,\n  unregisterKeyboardShortcut,\n}\n\nconst propTypes = {\n  activeInLayer: PropTypes.string,\n  children: PropTypes.node,\n  layer: PropTypes.string,\n  onPress: PropTypes.func,\n  push: PropTypes.func.isRequired,\n  registerKeyboardShortcut: PropTypes.func.isRequired,\n  shortcuts: PropTypes.arrayOf(\n    PropTypes.shape({\n      activeInLayer: PropTypes.string,\n      command: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      onPress: PropTypes.func,\n    }).isRequired\n  ).isRequired,\n  unregisterKeyboardShortcut: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  activeInLayer: undefined,\n  children: undefined,\n  layer: undefined,\n  onPress: undefined,\n}\n\nclass KeyboardShortcuts extends Component {\n  constructor(props) {\n    super(props)\n    this.getHandler = this.getHandler.bind(this)\n    this.getParamsHandler = this.getParamsHandler.bind(this)\n    this.registerKeyboardShortcut = this.registerKeyboardShortcut.bind(this)\n    this.unregisterKeyboardShortcut = this.unregisterKeyboardShortcut.bind(this)\n    this.addShortcuts = this.addShortcuts.bind(this)\n    this.removeShortcuts = this.removeShortcuts.bind(this)\n  }\n\n  componentDidMount() {\n    this.addShortcuts()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.layer !== nextProps.layer &&\n      this.props.activeInLayer === nextProps.layer\n    ) {\n      this.addShortcuts(nextProps)\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeShortcuts()\n  }\n\n  getHandler(shortcut) {\n    const {\n      activeInLayer: generalActiveInLayer,\n      onPress: onPressSwitch,\n    } = this.props\n\n    const { activeInLayer: specificActiveInLayer, onPress } = shortcut\n\n    const activeInLayer = specificActiveInLayer || generalActiveInLayer\n\n    const handler = onPress || onPressSwitch || this.getParamsHandler(shortcut)\n\n    if (!activeInLayer) {\n      return handler\n    }\n\n    return (...args) => {\n      const { layer } = this.props\n      if (layer !== activeInLayer) {\n        return null\n      }\n      return handler(...args)\n    }\n  }\n\n  getParamsHandler({ command, params, type }) {\n    switch (type) {\n      case 'push': {\n        return () => this.props.push(params.path)\n      }\n\n      default: {\n        // prettier-ignore\n        console.error( // eslint-disable-line no-console\n          `Missing params handler for keyboard shortcut: ${command}`\n        )\n        return () => {}\n      }\n    }\n  }\n\n  addShortcuts(props = this.props) {\n    const { activeInLayer: generalActiveInLayer, shortcuts } = props\n\n    if (!shortcuts || !shortcuts.length) {\n      throw new Error('Missing shortcuts')\n    }\n\n    shortcuts.forEach(shortcut => {\n      const { activeInLayer: specificActiveInLayer, command } = shortcut\n      const activeInLayer = specificActiveInLayer || generalActiveInLayer\n      if (Array.isArray(command)) {\n        return command.forEach(cmd => {\n          this.registerKeyboardShortcut({\n            ...shortcut,\n            activeInLayer,\n            command: cmd,\n          })\n        })\n      }\n\n      return this.registerKeyboardShortcut({ activeInLayer, ...shortcut })\n    })\n  }\n  removeShortcuts() {\n    const { shortcuts } = this.props\n\n    shortcuts.forEach(shortcut => {\n      const { command } = shortcut\n      return this.unregisterKeyboardShortcut(command)\n    })\n  }\n\n  registerKeyboardShortcut(shortcut) {\n    const { command } = shortcut\n    Mousetrap.bind(command, this.getHandler(shortcut))\n    this.props.registerKeyboardShortcut(shortcut)\n  }\n\n  unregisterKeyboardShortcut(command) {\n    Mousetrap.unbind(command)\n    this.props.unregisterKeyboardShortcut(command)\n  }\n\n  render() {\n    log.render()\n\n    if (!this.props.children) {\n      return null\n    }\n\n    const propsToForward = { ...this.props }\n\n    Object.keys(propTypes).forEach(key => {\n      delete propsToForward[key]\n    })\n\n    return Children.map(this.props.children, child =>\n      cloneElement(child, propsToForward)\n    )\n  }\n}\n\nKeyboardShortcuts.propTypes = propTypes\nKeyboardShortcuts.defaultProps = defaultProps\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KeyboardShortcuts)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { Modal, Icon, Table } from 'semantic-ui-react'\n\nimport config from 'config'\nimport createLog from 'utilities/log'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport * as actionCreators from '../actionCreators'\nimport globalSelectors from '../globalSelectors'\nimport KeyboardShortcuts from './KeyboardShortcuts'\n\nconst log = createLog('modules:keyboardShortcuts:DisplayShortcuts')\n\nconst ModuleTranslate = createModuleTranslate('keyboardShortcuts')\n\nconst isAppleDevice = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst modKeyAlias = isAppleDevice ? 'command' : 'ctrl'\nconst altKeyAlias = isAppleDevice ? 'option' : 'alt'\n\nconst mapStateToProps = state => {\n  return {\n    shortcutsList: globalSelectors.getShortcutsList(state),\n    showShortcutInfo: globalSelectors.getShowInfo(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  setShortcutsModalHidden: actionCreators.setShortcutsModalHidden,\n  setShortcutsModalVisible: actionCreators.setShortcutsModalVisible,\n  toggleShortcutsModal: actionCreators.toggleShortcutsModal,\n}\n\nconst propTypes = {\n  setShortcutsModalHidden: PropTypes.func.isRequired,\n  shortcutsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      command: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  showShortcutInfo: PropTypes.bool.isRequired,\n  toggleShortcutsModal: PropTypes.func.isRequired,\n}\n\nconst ShortcutsDisplay = ({\n  setShortcutsModalHidden,\n  shortcutsList,\n  showShortcutInfo,\n  toggleShortcutsModal,\n}) => {\n  log.render()\n  return (\n    <KeyboardShortcuts\n      shortcuts={[\n        {\n          command: 'd d',\n          description: 'Show/hide list of active shortcuts',\n          onPress: toggleShortcutsModal,\n        },\n      ]}\n    >\n      <LayerModal\n        closeOnDocumentClick\n        onClick={setShortcutsModalHidden}\n        onClose={setShortcutsModalHidden}\n        open={showShortcutInfo && !config.isTest} // open modal does not work when running tests\n      >\n        <Modal.Header>\n          <ModuleTranslate textKey=\"ShortcutsDisplay.header\" />\n        </Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Table celled color=\"green\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <Icon name=\"keyboard\" />\n                    <ModuleTranslate textKey=\"ShortcutsDisplay.table.header.code\" />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <Icon name=\"info\" />\n                    <ModuleTranslate textKey=\"ShortcutsDisplay.table.header.description\" />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {shortcutsList.map(({ command, description }) => {\n                  return (\n                    <Table.Row key={command}>\n                      <Table.Cell>\n                        {command\n                          .replace('mod', modKeyAlias)\n                          .replace('alt', altKeyAlias)}\n                      </Table.Cell>\n                      <Table.Cell>{description}</Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n            </Table>\n          </Modal.Description>\n        </Modal.Content>\n      </LayerModal>\n    </KeyboardShortcuts>\n  )\n}\n\nShortcutsDisplay.propTypes = propTypes\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ShortcutsDisplay)\n","import KeyboardShortcuts from './KeyboardShortcuts'\nimport ShortcutsDisplay from './ShortcutsDisplay'\n\nexport { KeyboardShortcuts, ShortcutsDisplay }\n","import { compose } from 'redux'\n\nimport { wrapInColumn } from 'coreModules/form/higherOrderComponents'\n\nexport default function wrapReduxFormFieldParts(componentMap) {\n  return Object.keys(componentMap).reduce((obj, componentName) => {\n    return {\n      ...obj,\n      [componentName]: compose(wrapInColumn)(componentMap[componentName]),\n    }\n  }, {})\n}\n","export const createDelActionCreator = delKeySpecification => {\n  const { actionType, parameters = [] } = delKeySpecification\n  const hasParameters = !!parameters.length\n  const expectedNumberOfArgs = hasParameters ? 1 : 0\n\n  return function delActionCreator(...rawArgs) {\n    const args = Array.from(rawArgs)\n    const numberOfArgs = args.length\n    if (numberOfArgs !== expectedNumberOfArgs) {\n      throw new Error(\n        `Unexpected number of arguments: ${numberOfArgs} for del ${\n          delKeySpecification.key\n        }. Expected to be called with: ${hasParameters ? '(params)' : '()'}`\n      )\n    }\n\n    const [inputParams] = args\n\n    if (hasParameters && typeof inputParams !== 'object') {\n      throw new Error(\n        `Unexpected type of params: ${typeof inputParams} for del ${\n          delKeySpecification.key\n        } Expected object with keys: ${parameters.join(', ')}`\n      )\n    }\n\n    const populatedParameters = parameters.reduce((obj, parameterKey) => {\n      return {\n        ...obj,\n        [parameterKey]: inputParams[parameterKey],\n      }\n    }, {})\n\n    return {\n      payload: {\n        parameters: populatedParameters,\n      },\n      type: actionType,\n    }\n  }\n}\n\nconst createDelActionCreators = delKeySpecifications => {\n  return Object.keys(delKeySpecifications).reduce((delActionCreators, key) => {\n    const actionCreator = createDelActionCreator(delKeySpecifications[key])\n    return {\n      ...delActionCreators,\n      [key]: actionCreator,\n    }\n  }, {})\n}\n\nexport const createSetActionCreator = setKeySpecification => {\n  const { actionType, parameters = [] } = setKeySpecification\n  const hasParameters = !!parameters.length\n  const expectedNumberOfArgs = hasParameters ? 2 : 1\n\n  return function setActionCreator(...rawArgs) {\n    const args = Array.from(rawArgs)\n    const numberOfArgs = args.length\n    if (numberOfArgs !== expectedNumberOfArgs) {\n      throw new Error(\n        `Unexpected number of arguments: ${numberOfArgs} for set ${\n          setKeySpecification.key\n        }. Expected to be called with: ${\n          hasParameters ? '(value, params)' : '(value)'\n        }`\n      )\n    }\n\n    const [value, inputParams] = args\n\n    if (hasParameters && typeof inputParams !== 'object') {\n      throw new Error(\n        `Unexpected type of params: ${typeof inputParams} for set ${\n          setKeySpecification.key\n        } Expected object with keys: ${parameters.join(', ')}`\n      )\n    }\n\n    const populatedParameters = hasParameters\n      ? parameters.reduce((obj, parameterKey) => {\n          return {\n            ...obj,\n            [parameterKey]: inputParams[parameterKey],\n          }\n        }, {})\n      : {}\n\n    return {\n      payload: {\n        parameters: populatedParameters,\n        value,\n      },\n      type: actionType,\n    }\n  }\n}\n\nconst createSetActionCreators = setKeySpecifications => {\n  return Object.keys(setKeySpecifications).reduce((setActionCreators, key) => {\n    const actionCreator = createSetActionCreator(setKeySpecifications[key])\n    return {\n      ...setActionCreators,\n      [key]: actionCreator,\n    }\n  }, {})\n}\n\nexport default function createActionCreators({ keySpecifications }) {\n  return {\n    del: createDelActionCreators(keySpecifications.del),\n    set: createSetActionCreators(keySpecifications.set),\n  }\n}\n","export const getCleanKey = (key = '') => {\n  return key.replace(/:/g, '')\n}\n\nexport const getActionTypeFromKey = (key = '') => {\n  return getCleanKey(key)\n    .toUpperCase()\n    .replace(/\\./g, '_')\n}\n\nexport const createActionType = ({ actionPrefix, actionVerb, key }) => {\n  return `${actionPrefix}_${actionVerb}_${getActionTypeFromKey(key)}`\n}\n\nexport const isParameterKey = (key = '') => {\n  return key.indexOf(':') > -1\n}\n\nexport const getParametersFromKey = (key = '') => {\n  return key.split('.').reduce((parameters, subKey) => {\n    if (isParameterKey(subKey)) {\n      const cleanKey = getCleanKey(subKey)\n      return [...parameters, cleanKey]\n    }\n    return parameters\n  }, [])\n}\n","import {\n  createActionType,\n  getCleanKey,\n  getParametersFromKey,\n} from './utilities'\n\nexport const createSpecification = ({ actionPrefix, actionVerb, key }) => {\n  const parameters = getParametersFromKey(key)\n  const cleanKey = getCleanKey(key)\n  return {\n    actionType: createActionType({\n      actionPrefix,\n      actionVerb,\n      key,\n    }),\n\n    cleanKey,\n    key,\n    parameters,\n  }\n}\n\nexport const createVerbKeySpecifications = ({\n  actionPrefix,\n  actionVerb,\n  keys,\n}) => {\n  return keys.reduce((setActionTypes, key) => {\n    const verb = createSpecification({\n      actionPrefix,\n      actionVerb,\n      key,\n    })\n    return {\n      ...setActionTypes,\n      [key]: verb,\n    }\n  }, {})\n}\n\nexport default function createKeySpecifications({ actionPrefix, keys }) {\n  return {\n    del: createVerbKeySpecifications({\n      actionPrefix,\n      actionVerb: 'DEL',\n      keys,\n    }),\n    set: createVerbKeySpecifications({\n      actionPrefix,\n      actionVerb: 'SET',\n      keys,\n    }),\n  }\n}\n","import { createDeleter, createSetter } from 'utilities/stateHelper'\n\nexport const createDelActionHandler = delKeySpecification => {\n  const { key } = delKeySpecification\n  const path = key.split('.')\n  const deleter = createDeleter(path)\n\n  return function delActionHandler(state, action) {\n    const { parameters = undefined } = action.payload || {}\n    const newState = deleter(state, parameters)\n    return newState === undefined ? {} : newState\n  }\n}\n\nexport const createDelActionHandlers = delKeySpecifications => {\n  return Object.keys(delKeySpecifications).reduce(\n    (delHandlersCreators, key) => {\n      const delKeySpecification = delKeySpecifications[key]\n      const delActionHandler = createDelActionHandler(delKeySpecification)\n      const { actionType } = delKeySpecification\n      return {\n        ...delHandlersCreators,\n        [actionType]: delActionHandler,\n      }\n    },\n    {}\n  )\n}\n\nexport const createSetActionHandler = setKeySpecification => {\n  const { key } = setKeySpecification\n  const path = key.split('.')\n  const setter = createSetter(path)\n\n  return function setActionHandler(state, action) {\n    const { value, parameters = undefined } = action.payload || {}\n    return setter(state, parameters, value)\n  }\n}\n\nexport const createSetActionHandlers = setKeySpecifications => {\n  return Object.keys(setKeySpecifications).reduce(\n    (setHandlersCreators, key) => {\n      const setKeySpecification = setKeySpecifications[key]\n      const setActionHandler = createSetActionHandler(setKeySpecification)\n      const { actionType } = setKeySpecification\n\n      return {\n        ...setHandlersCreators,\n        [actionType]: setActionHandler,\n      }\n    },\n    {}\n  )\n}\n\nexport default function createReducer({\n  keySpecifications,\n  initialValues = {},\n}) {\n  const delActionHandlers = createDelActionHandlers(keySpecifications.del)\n  const setActionHandlers = createSetActionHandlers(keySpecifications.set)\n\n  const actionHandlers = {\n    ...delActionHandlers,\n    ...setActionHandlers,\n  }\n\n  const getInitialValues = () => {\n    return JSON.parse(JSON.stringify(initialValues))\n  }\n\n  return function reducer(state = getInitialValues(), action) {\n    const { type } = action\n    if (actionHandlers[type]) {\n      return actionHandlers[type](state, action)\n    }\n\n    return state\n  }\n}\n","import { createGetter } from 'utilities/stateHelper'\n\nexport const createSelector = (keySpecification, reducerKey) => {\n  const { key } = keySpecification\n  const segments = reducerKey ? [reducerKey, ...key.split('.')] : key.split('.')\n  const getter = createGetter(segments)\n  return function selector(state, parameters) {\n    return getter(state, parameters)\n  }\n}\n\nexport default function createSelectors({\n  keySpecifications,\n  name,\n  reducerKey,\n}) {\n  const getLocalState = state => {\n    return state[name]\n  }\n\n  const getSelectors = Object.keys(keySpecifications.set).reduce(\n    (selectors, key) => {\n      const keySpecification = keySpecifications.set[key]\n      const selector = createSelector(\n        keySpecification,\n        reducerKey\n      )\n\n      return {\n        ...selectors,\n        [key]: selector,\n      }\n    },\n    {}\n  )\n\n  return {\n    get: getSelectors,\n    getLocalState,\n  }\n}\n","import createActionCreators from './createActionCreators'\nimport extractActionTypes from './extractActionTypes'\nimport createConstants from './createConstants'\nimport createGlobalSelectors from './createGlobalSelectors'\nimport createKeySpecifications from './createKeySpecifications'\nimport createReducer from './createReducer'\nimport createSelectors from './createSelectors'\n\nexport default function({\n  actionPrefix: actionPrefixInput,\n  initialValues,\n  keys = [],\n  name,\n  reducerKey,\n}) {\n  const actionPrefix = actionPrefixInput || name.toUpperCase()\n\n  const constants = createConstants({\n    name,\n  })\n\n  const keySpecifications = createKeySpecifications({\n    actionPrefix,\n    keys,\n  })\n\n  const actionCreators = createActionCreators({ keySpecifications })\n\n  const reducer = createReducer({ initialValues, keySpecifications })\n\n  const selectors = createSelectors({ keySpecifications, name, reducerKey })\n\n  const actionTypes = extractActionTypes({ keySpecifications })\n\n  const globalSelectors = createGlobalSelectors(selectors)\n  return {\n    actionCreators,\n    actionTypes,\n    constants,\n    globalSelectors,\n    reducer,\n    selectors,\n  }\n}\n","export default function createConstants({ name }) {\n  return {\n    MODULE_NAME: name,\n  }\n}\n","export default function extractActionTypes({ keySpecifications }) {\n  const actionTypes = {}\n  Object.keys(keySpecifications).forEach(key => {\n    Object.keys(keySpecifications[key]).forEach(innerKey => {\n      const { actionType } = keySpecifications[key][innerKey]\n      actionTypes[actionType] = actionType\n      actionTypes[key] = actionTypes[key] || {}\n      actionTypes[key][innerKey] = actionType\n    })\n  })\n  return actionTypes\n}\n","import wrapSelectors from 'utilities/wrapSelectors'\n\nexport default function createGlobalSelectors(selectors) {\n  const wrappedGetSelectors = wrapSelectors({\n    getLocalState: selectors.getLocalState,\n    ...selectors.get,\n  })\n\n  const globalSelectors = {\n    get: wrappedGetSelectors,\n    getLocalState: selectors.getLocalState,\n  }\n  return globalSelectors\n}\n","export const NOTIFICATIONS_CREATE_NOTIFICATION =\n  'NOTIFICATIONS_CREATE_NOTIFICATION'\nexport const NOTIFICATIONS_REMOVE_NOTIFICATION =\n  'NOTIFICATIONS_REMOVE_NOTIFICATION'\n","import { KEYBOARD_SHORTCUTS_REGISTER } from '../actionTypes'\n\nexport default function registerKeyboardShortcut({\n  activeInLayer,\n  command,\n  description,\n}) {\n  return {\n    payload: { activeInLayer, command, description },\n    type: KEYBOARD_SHORTCUTS_REGISTER,\n  }\n}\n","import { KEYBOARD_SHORTCUTS_SET_LAYER } from '../actionTypes'\n\nexport default function setLayer(layer) {\n  return {\n    payload: layer,\n    type: KEYBOARD_SHORTCUTS_SET_LAYER,\n  }\n}\n","import { KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN } from '../actionTypes'\n\nexport default function setShortcutsModalHidden() {\n  return {\n    type: KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN,\n  }\n}\n","import { KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE } from '../actionTypes'\n\nexport default function setShortcutsModalVisible() {\n  return {\n    type: KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE,\n  }\n}\n","import globalSelectors from '../globalSelectors'\nimport setShortcutsModalVisible from './setShortcutsModalVisible'\nimport setShortcutsModalHidden from './setShortcutsModalHidden'\n\nexport const getShowInfo = state => {\n  return state.showInfo\n}\n\nexport default function toggleShortcutsModal() {\n  return (dispatch, getState) => {\n    if (globalSelectors.getShowInfo(getState())) {\n      return dispatch(setShortcutsModalHidden())\n    }\n    return dispatch(setShortcutsModalVisible())\n  }\n}\n","import { KEYBOARD_SHORTCUTS_UNREGISTER } from '../actionTypes'\n\nexport default function unregisterKeyboardShortcut(command) {\n  return {\n    payload: { command },\n    type: KEYBOARD_SHORTCUTS_UNREGISTER,\n  }\n}\n","import registerKeyboardShortcut from './registerKeyboardShortcut'\nimport setLayer from './setLayer'\nimport setShortcutsModalHidden from './setShortcutsModalHidden'\nimport setShortcutsModalVisible from './setShortcutsModalVisible'\nimport toggleShortcutsModal from './toggleShortcutsModal'\nimport unregisterKeyboardShortcut from './unregisterKeyboardShortcut'\n\nexport {\n  registerKeyboardShortcut,\n  setLayer,\n  setShortcutsModalHidden,\n  setShortcutsModalVisible,\n  toggleShortcutsModal,\n  unregisterKeyboardShortcut,\n}\n","const createFrontendApiClientValidator = require('common/es5/error/validators/createFrontendApiClientValidator')\nconst createEndpointFactory = require('common/es5/endpointFactory/createEndpointFactory')\n\nconst importFaker = () => import('json-schema-faker')\n\nmodule.exports = createEndpointFactory({\n  createApiClientValidator: createFrontendApiClientValidator,\n  importFaker,\n})\n","import config from 'config'\n/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (config.isProduction && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(config.publicUrl, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${config.publicUrl}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { createAsyncView } from 'coreModules/bootstrap/higherOrderComponents'\nimport { MODULE_NAME } from './constants'\n\nexport default createAsyncView({\n  modules: () => {\n    return [import('coreModules/crud'), import('coreModules/resourceManager')]\n  },\n  name: MODULE_NAME,\n  view: () => {\n    return import('./index.js')\n  },\n})\n","import { createAsyncView } from 'coreModules/bootstrap/higherOrderComponents'\nimport { MODULE_NAME } from './constants'\n\nexport default createAsyncView({\n  modules: () => {\n    return [import('coreModules/crud'), import('coreModules/resourceManager')]\n  },\n  name: MODULE_NAME,\n  view: () => {\n    return import('./index.js')\n  },\n})\n","import { createAsyncView } from 'coreModules/bootstrap/higherOrderComponents'\nimport { MODULE_NAME } from './constants'\n\nexport default createAsyncView({\n  name: MODULE_NAME,\n  view: () => {\n    return import('./index.js')\n  },\n})\n","import rootConfig from 'config'\n\nimport createHistory from 'history/createBrowserHistory'\n\nconst history = createHistory()\n\nconst config = {\n  api: {\n    enableEndpointMocks: rootConfig.mock,\n    validateInput: false,\n    validateOutput: false,\n  },\n  devToolsExtension:\n    rootConfig.isDevelopment && typeof devToolsExtension === 'function',\n  i18n: {\n    availableLanguages: ['en', 'sv'],\n    defaultLanguage: 'en',\n    language: 'en',\n    translations: {\n      common: {\n        yes: {\n          en: 'yes',\n          sv: 'ja',\n        },\n      },\n    },\n  },\n  logger: {\n    collapsed: true,\n    diff: true,\n  },\n  routing: history,\n  size: {\n    // maxWidts from https://semantic-ui.com/elements/container.html\n    breakpoints: [\n      {\n        maxWidth: 768,\n        size: 'small',\n      },\n      {\n        maxWidth: 1200,\n        size: 'medium',\n      },\n      {\n        size: 'large',\n      },\n    ],\n  },\n}\n\nexport default config\n","import * as api from 'coreModules/api'\nimport * as bootstrap from 'coreModules/bootstrap'\nimport * as commonUi from 'coreModules/commonUi'\nimport * as error from 'coreModules/error'\nimport * as i18n from 'coreModules/i18n'\nimport * as keyboardShortcuts from 'coreModules/keyboardShortcuts'\nimport * as layout from 'coreModules/layout'\nimport * as notifications from 'coreModules/notifications'\nimport * as size from 'coreModules/size'\nimport * as user from 'coreModules/user'\nimport * as devToolsExtension from 'coreModules/devToolsExtension'\nimport * as localStorage from 'coreModules/localStorage'\nimport * as logger from 'coreModules/logger'\nimport * as routing from 'coreModules/routing'\n\nconst modules = [\n  api,\n  bootstrap,\n  commonUi,\n  error,\n  i18n,\n  keyboardShortcuts,\n  layout,\n  notifications,\n  size,\n  user,\n  devToolsExtension,\n  localStorage,\n  logger,\n  routing,\n]\n\nexport default modules\n","import { createAsyncView } from 'coreModules/bootstrap/higherOrderComponents'\nimport { MODULE_NAME } from './constants'\n\nexport default createAsyncView({\n  name: MODULE_NAME,\n  view: () => {\n    return import('./index.js')\n  },\n})\n","import rootConfig from 'config'\nimport 'common/dist/semantic.css' // eslint-disable-line\nimport 'react-rangeslider/lib/index.css'\nimport 'react-sortable-tree/style.css'\nimport 'react-json-inspector/json-inspector.css'\nimport 'github-markdown-css/github-markdown.css'\nimport 'whatwg-fetch'\nimport createStore from 'store/index'\nimport { I18nProvider } from 'coreModules/i18n/components'\nimport { NotificationDisplay } from 'coreModules/notifications/components'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'react-router-redux'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport registerServiceWorker from 'registerServiceWorker'\n\nimport { ErrorBoundary } from 'coreModules/error/components'\nimport { moduleOrder } from './viewModules'\nimport App from './viewModules/app/Async'\nimport DataViewer from './viewModules/dataViewer/Async'\nimport Docs from './viewModules/docs/Async'\nimport config from './config'\nimport modules from './initialModules'\nimport Public from './viewModules/public/Async'\n\nconst store = createStore({ config, modules, viewOrder: moduleOrder })\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <ConnectedRouter history={config.routing}>\n      <I18nProvider>\n        <ErrorBoundary>\n          <React.Fragment>\n            <Switch>\n              <Route component={DataViewer} path=\"/dataViewer\" />\n              <Route component={App} path=\"/app\" />\n              <Route component={Docs} path=\"/docs\" />\n              <Route component={Public} />\n            </Switch>\n            <NotificationDisplay displayType=\"fixed\" />\n          </React.Fragment>\n        </ErrorBoundary>\n      </I18nProvider>\n    </ConnectedRouter>\n  </ReduxProvider>,\n  document.getElementById('root')\n)\n\nif (rootConfig.enableServiceWorker) {\n  registerServiceWorker()\n}\n","export const moduleOrder = [\n  'public',\n  'start',\n  'app',\n  'dataViewer',\n  'specimensMammals',\n  'home',\n  'manageAgents',\n  'manageLocalities',\n  'manageStorageLocations',\n  'manageTaxonomy',\n  'manageTaxonNames',\n  'sourceData',\n  'login',\n  'settings',\n  'docs',\n  'pageNotFound',\n]\n\nexport const type = 'view'\n","import { compose } from 'redux'\nimport {\n  createQueryState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport LocalityManager from './Base'\n\nexport default compose(\n  createQueryState(),\n  createNavigationState()\n)(LocalityManager)\n","import AgentDropdownPickerSearch from './AgentDropdownPickerSearch'\nimport AgentDropdownSearch from './AgentDropdownSearch'\nimport AgentIdTextResult from './AgentIdTextResult'\nimport AgentManager from './AgentManager/Query'\nimport TogglableAgentDropdownPickerSearch from './TogglableAgentDropdownPickerSearch'\n\nexport {\n  AgentDropdownPickerSearch,\n  AgentDropdownSearch,\n  AgentIdTextResult,\n  AgentManager,\n  TogglableAgentDropdownPickerSearch,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DropdownSearch } from 'coreModules/form/components'\nimport { ALL, SCIENTIFIC, VERNACULAR } from '../../constants'\n\nconst propTypes = {\n  taxonNameType: PropTypes.oneOf([\n    ALL,\n    SCIENTIFIC,\n    VERNACULAR,\n    'neitherAcceptedNorSynonymToTaxon',\n  ]),\n}\nconst defaultProps = {\n  taxonNameType: SCIENTIFIC,\n}\n\nclass TaxonNameDropdownSearch extends Component {\n  render() {\n    const { taxonNameType, ...rest } = this.props\n\n    let baseFilter\n    switch (taxonNameType) {\n      case ALL: {\n        break\n      }\n      case 'neitherAcceptedNorSynonymToTaxon': {\n        baseFilter = {\n          filterFunctionName: 'neitherAcceptedNorSynonymToTaxon',\n          value: true,\n        }\n        break\n      }\n      case SCIENTIFIC: {\n        baseFilter = {\n          filterFunctionName: 'taxonNameType',\n          value: SCIENTIFIC,\n        }\n        break\n      }\n      case VERNACULAR: {\n        baseFilter = {\n          filterFunctionName: 'taxonNameType',\n          value: VERNACULAR,\n        }\n        break\n      }\n      default: {\n        throw new Error(`Unknown taxonNameType: ${taxonNameType}`)\n      }\n    }\n\n    return (\n      <DropdownSearch\n        {...rest}\n        baseFilter={baseFilter}\n        resource=\"taxonName\"\n        type=\"dropdown-search-resource\"\n      />\n    )\n  }\n}\n\nTaxonNameDropdownSearch.propTypes = propTypes\nTaxonNameDropdownSearch.defaultProps = defaultProps\n\nexport default TaxonNameDropdownSearch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  id: PropTypes.string,\n  module: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  textKey: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  id: undefined,\n  module: 'collectionMammals',\n}\n\nfunction AddButton({ id, onClick: handleClick, module, textKey }) {\n  return (\n    <Button\n      basic\n      className=\"shadowless\"\n      color=\"blue\"\n      id={id}\n      onClick={handleClick}\n    >\n      + <ModuleTranslate capitalize module={module} textKey={textKey} />\n    </Button>\n  )\n}\n\nAddButton.propTypes = propTypes\nAddButton.defaultProps = defaultProps\n\nexport default AddButton\n","import Dependor from 'utilities/Dependor'\nimport getActionActionType from './getActionActionType'\nimport {\n  API_ACTION_TYPE_FAIL,\n  API_ACTION_TYPE_REQUEST,\n  API_ACTION_TYPE_SUCCESS,\n} from '../../../../constants'\n\nexport const dep = new Dependor({\n  getActionActionType,\n})\n\nexport default function getActionActionTypes({\n  operationType,\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const fail = dep.getActionActionType({\n    actionType: API_ACTION_TYPE_FAIL,\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  const request = dep.getActionActionType({\n    actionType: API_ACTION_TYPE_REQUEST,\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  const success = dep.getActionActionType({\n    actionType: API_ACTION_TYPE_SUCCESS,\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  return {\n    fail,\n    request,\n    success,\n  }\n}\n","export default function getActionActionType({\n  actionType,\n  operationType,\n  resource,\n  resourceActionTypes,\n}) {\n  if (!(resourceActionTypes && resourceActionTypes[operationType])) {\n    throw new Error(\n      `Resource: ${resource} dont have actionTypes for operationType: ${operationType}`\n    )\n  }\n  if (!resourceActionTypes[operationType][actionType]) {\n    throw new Error(\n      `Resource: ${resource} dont have actionType ${actionType} for operationType: ${operationType}`\n    )\n  }\n\n  return resourceActionTypes[operationType][actionType]\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport nestedToCoreSync from 'common/es5/formatObject/nestedToCoreSync'\nimport getActionActionTypes from './utilities/getActionActionTypes'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:create')\n\nexport default function createAcFactory({\n  operationId,\n  operationType,\n  options = {},\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const actionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function createAc({\n    item: rawItem,\n    nested = false,\n    throwError = true,\n    options: optionsOverride = {},\n  } = {}) {\n    log.debug(`${resource}.create called`, { item: rawItem, throwError })\n\n    const item = nested\n      ? nestedToCoreSync({\n          item: rawItem,\n          type: resource,\n        })\n      : rawItem\n\n    return (dispatch, getState, { apiClient }) => {\n      if (!item) {\n        throw new Error('Item is required')\n      }\n      const body = {\n        data: {\n          ...item,\n          type: resource,\n        },\n      }\n\n      const callParams = {\n        ...options,\n        ...optionsOverride,\n        body,\n      }\n\n      dispatch({\n        meta: callParams,\n        type: actionTypes.request,\n      })\n\n      return apiClient.create(resource, callParams).then(\n        response => {\n          dispatch({\n            meta: callParams,\n            payload: response.data,\n            type: actionTypes.success,\n          })\n          return response.data\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta: callParams,\n            payload: error,\n            type: actionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport getActionActionTypes from './utilities/getActionActionTypes'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:create')\n\nexport default function delAcFactory({\n  operationId,\n  operationType,\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const actionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function delAc({ id, throwError = true } = {}) {\n    log.debug(`${resource}.del called`, { id })\n\n    return (dispatch, getState, { apiClient }) => {\n      if (id === undefined) {\n        throw new Error('Id is required')\n      }\n      const body = {}\n\n      const callParams = {\n        body,\n        pathParams: {\n          id,\n        },\n      }\n\n      dispatch({\n        meta: callParams,\n        type: actionTypes.request,\n      })\n\n      return apiClient.del(resource, callParams).then(\n        response => {\n          dispatch({\n            meta: callParams,\n            payload: response.data,\n            type: actionTypes.success,\n          })\n          return response.data\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta: callParams,\n            payload: error,\n            type: actionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","const groupIncluded = included => {\n  const typeMap = {}\n  included.forEach(item => {\n    const { type } = item\n    typeMap[type] = typeMap[type] ? [...typeMap[type], item] : [item]\n  })\n  return typeMap\n}\n\nexport default function dispatchIncludedActions({\n  actionTypes,\n  dispatch,\n  included,\n}) {\n  const typeMap = groupIncluded(included)\n  Object.keys(typeMap).forEach(type => {\n    const items = typeMap[type]\n    const actionType = actionTypes[type] && actionTypes[type].setIncluded\n    if (!actionType) {\n      console.warn(`included type: ${type} not defined in crud module`) // eslint-disable-line no-console\n    } else {\n      dispatch({\n        payload: items,\n        type: actionType,\n      })\n    }\n  })\n}\n","import { execute as batchExecute } from 'common/es5/batch'\nimport createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport getActionActionTypes from './utilities/getActionActionTypes'\nimport dispatchIncludedActions from './dispatchIncludedActions'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:getMany')\n\nexport default function getManyAcFactory({\n  actionTypes,\n  operationId,\n  operationType,\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const operationActionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function getManyAc({\n    ids,\n    include,\n    isLookup, // TODO - remove this\n    limit,\n    numberOfEntriesEachBatch = 5000,\n    queryParams: queryParamsInput = {},\n    relationships,\n    removeFromState = false,\n    storeInState = true,\n    throwError = true,\n  } = {}) {\n    if (removeFromState) {\n      if (include || relationships) {\n        throw new Error(\n          'Not supported to remove from state with includes or relationship'\n        )\n      }\n    }\n    log.debug(`${resource}.getMany called`, {\n      queryParamsInput,\n      relationships,\n      throwError,\n    })\n\n    let queryParams = {\n      limit: limit || 1000,\n      ...queryParamsInput,\n    }\n    if (relationships) {\n      queryParams = {\n        ...queryParams,\n        relationships,\n      }\n    }\n\n    if (include) {\n      queryParams = {\n        ...queryParams,\n        include,\n      }\n    }\n\n    if (ids) {\n      queryParams = {\n        ...queryParams,\n        filter: {\n          ids,\n        },\n      }\n    }\n\n    const callParams = {\n      isLookup,\n      queryParams,\n    }\n\n    const maxNumberOfBatches = 100\n    return (dispatch, getState, { apiClient }) => {\n      dispatch({\n        meta: callParams,\n        type: operationActionTypes.request,\n      })\n      let lastBatchIncluded\n      let lastBatchItems\n      let lastBatchCallParams\n      let isLastBatch = false\n      return batchExecute({\n        createBatch: ({ batchNumber, numberOfBatchEntries, startCount }) => {\n          lastBatchCallParams = {\n            ...callParams,\n            batchNumber,\n            queryParams: {\n              ...callParams.queryParams,\n              limit: numberOfBatchEntries,\n              offset: startCount,\n            },\n          }\n          return apiClient\n            .getMany(resource, lastBatchCallParams)\n            .then(response => {\n              lastBatchIncluded = response.included\n              lastBatchItems = response.data\n              isLastBatch =\n                lastBatchItems && lastBatchItems.length !== numberOfBatchEntries\n              return lastBatchItems\n            })\n        },\n        execute: items => {\n          if (lastBatchIncluded) {\n            dispatchIncludedActions({\n              actionTypes,\n              dispatch,\n              included: lastBatchIncluded,\n            })\n          }\n          dispatch({\n            meta: {\n              ...lastBatchCallParams,\n              isLastBatch,\n              removeFromState,\n              storeInState,\n            },\n            payload: items,\n            type: operationActionTypes.success,\n          })\n          return items\n        },\n        maxNumberOfBatches,\n        numberOfEntries: queryParams.limit,\n        numberOfEntriesEachBatch,\n      }).then(\n        () => {\n          return lastBatchItems\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta: callParams,\n            payload: error,\n            type: operationActionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport getActionActionTypes from './utilities/getActionActionTypes'\nimport dispatchIncludedActions from './dispatchIncludedActions'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:getOne')\n\nexport default function getOneAcFactory({\n  actionTypes,\n  operationId,\n  operationType,\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const operationActionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function getOneAc({\n    id,\n    include,\n    relationships = ['all'],\n    throwError = true,\n    storeInState = true,\n    queryParams: queryParamInput = {},\n  } = {}) {\n    log.debug(`${resource}.getOne called`, {\n      id,\n      relationships,\n      throwError,\n    })\n\n    return (dispatch, getState, { apiClient }) => {\n      if (!id) {\n        throw new Error('Id is required')\n      }\n\n      const pathParams = { id }\n      let queryParams = queryParamInput\n\n      if (relationships && relationships.length) {\n        queryParams = {\n          ...queryParams,\n          relationships,\n        }\n      }\n\n      if (include) {\n        queryParams = {\n          ...queryParams,\n          include,\n        }\n      }\n\n      const callParams = {\n        pathParams,\n        queryParams,\n      }\n\n      const meta = {\n        storeInState,\n        ...callParams,\n      }\n\n      dispatch({\n        meta,\n        type: operationActionTypes.request,\n      })\n\n      return apiClient.getOne(resource, callParams).then(\n        response => {\n          if (response.included) {\n            dispatchIncludedActions({\n              actionTypes,\n              dispatch,\n              included: response.included,\n            })\n          }\n          dispatch({\n            meta,\n            payload: response.data,\n            type: operationActionTypes.success,\n          })\n          return response.data\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta,\n            payload: error,\n            type: operationActionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","export default function createCallParams({\n  aggregations,\n  batchLimit = 3000,\n  batchNumber = 0,\n  excludeFields,\n  idsInMeta,\n  includeDeactivated,\n  includeFields,\n  lastBatchOffset = 0,\n  limit: totalLimit,\n  multipleBatches,\n  options,\n  query,\n  scrollId,\n  sort,\n  useScroll,\n}) {\n  let limit\n  let offset = 0\n  if (!multipleBatches) {\n    limit = totalLimit\n  } else {\n    limit = Math.min(totalLimit, batchLimit)\n    if (!useScroll) {\n      if (batchNumber > 0) {\n        offset = Math.min(totalLimit, lastBatchOffset + batchLimit)\n      }\n    }\n  }\n\n  return {\n    ...options,\n    body: {\n      data: {\n        attributes: {\n          aggregations,\n          excludeFields,\n          idsInMeta,\n          includeDeactivated,\n          includeFields,\n          limit,\n          offset,\n          query,\n          scroll: multipleBatches,\n          scrollId,\n          sort,\n        },\n      },\n    },\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport getActionActionTypes from '../utilities/getActionActionTypes'\nimport performQuery from './performQuery'\nimport createCallParams from './createCallParams'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:query')\n\nexport default function queryAcFactory({\n  operationId,\n  operationType,\n  options = {},\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const actionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function queryAc({\n    aggregations,\n    batchLimit,\n    excludeFields,\n    idsInMeta,\n    includeDeactivated,\n    includeFields,\n    limit = 1000,\n    offset = 0,\n    query,\n    sort,\n    throwError = false,\n    useScroll,\n  } = {}) {\n    const multipleBatches = limit + offset > 2000\n\n    log.debug(`${resource}.create called`, {\n      aggregations,\n      excludeFields,\n      idsInMeta,\n      includeDeactivated,\n      includeFields,\n      limit,\n      multipleBatches,\n      offset,\n      query,\n      sort,\n      useScroll,\n    })\n\n    return (dispatch, getState, { apiClient }) => {\n      const callParams = createCallParams({\n        aggregations,\n        excludeFields,\n        idsInMeta,\n        includeDeactivated,\n        includeFields,\n        limit,\n        multipleBatches,\n        offset,\n        options,\n        query,\n        sort,\n        useScroll,\n      })\n      dispatch({\n        meta: callParams,\n        type: actionTypes.request,\n      })\n      return performQuery({\n        apiClient,\n        batchLimit,\n        callParams,\n        limit,\n        multipleBatches,\n        operationId,\n        options,\n        useScroll,\n      }).then(\n        response => {\n          dispatch({\n            meta: callParams,\n            payload: response.data,\n            type: actionTypes.success,\n          })\n          return response.data\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta: callParams,\n            payload: error,\n            type: actionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport nestedToCoreSync from 'common/es5/formatObject/nestedToCoreSync'\nimport getActionActionTypes from './utilities/getActionActionTypes'\n\nexport const dep = new Dependor({\n  getActionActionTypes,\n})\n\nconst log = createLog('coreModules:crud:actionCreators:update')\n\nexport default function updateAcFactory({\n  operationId,\n  operationType,\n  options = {},\n  resource,\n  resourceActionTypes,\n} = {}) {\n  const actionTypes = dep.getActionActionTypes({\n    operationType,\n    resource,\n    resourceActionTypes,\n  })\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!operationId) {\n    throw new Error('operationId is required')\n  }\n\n  return function updateAc({\n    item: rawItem,\n    nested = false,\n    throwError = true,\n    options: optionsOverride = {},\n  } = {}) {\n    log.debug(`${resource}.update called`, {\n      item: rawItem,\n      throwError,\n    })\n\n    const item = nested\n      ? nestedToCoreSync({\n          item: rawItem,\n          type: resource,\n        })\n      : rawItem\n\n    return (dispatch, getState, { apiClient }) => {\n      if (!item) {\n        throw new Error('Item is required')\n      }\n      const { id } = item\n      if (!id) {\n        throw new Error('Id is required')\n      }\n\n      const callParams = {\n        ...options,\n        ...optionsOverride,\n        body: {\n          data: {\n            ...item,\n            type: resource,\n          },\n        },\n        pathParams: { id },\n      }\n\n      dispatch({\n        meta: callParams,\n        type: actionTypes.request,\n      })\n      return apiClient.update(resource, callParams).then(\n        response => {\n          dispatch({\n            meta: callParams,\n            payload: response.data,\n            type: actionTypes.success,\n          })\n          return response.data\n        },\n        error => {\n          dispatch({\n            error: true,\n            meta: callParams,\n            payload: error,\n            type: actionTypes.fail,\n          })\n\n          if (throwError) {\n            throw error\n          }\n          return error\n        }\n      )\n    }\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\n\nimport {\n  OPERATION_TYPE_CREATE,\n  OPERATION_TYPE_DEL,\n  OPERATION_TYPE_GET_MANY,\n  OPERATION_TYPE_GET_ONE,\n  OPERATION_TYPE_QUERY,\n  OPERATION_TYPE_UPDATE,\n} from '../../../constants'\n\nimport createFactory from './createFactory'\nimport delFactory from './delFactory'\nimport getManyFactory from './getManyFactory'\nimport getOneFactory from './getOneFactory'\nimport queryFactory from './queryFactory'\nimport updateFactory from './updateFactory'\n\nconst factoryMap = {\n  [OPERATION_TYPE_CREATE]: createFactory,\n  [OPERATION_TYPE_DEL]: delFactory,\n  [OPERATION_TYPE_GET_MANY]: getManyFactory,\n  [OPERATION_TYPE_GET_ONE]: getOneFactory,\n  [OPERATION_TYPE_QUERY]: queryFactory,\n  [OPERATION_TYPE_UPDATE]: updateFactory,\n}\n\nexport const dep = new Dependor({\n  factoryMap,\n})\n\nconst log = createLog('coreModules:crud:actionCreators')\n\nexport default function createActionCreators({\n  actionTypes,\n  resourceActionTypes,\n  resourceSpecification = {},\n} = {}) {\n  const { resource, operations } = resourceSpecification\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  if (!(operations && operations.length)) {\n    return {}\n  }\n\n  return operations.reduce((actionCreators, operation) => {\n    const { options, type: operationType, operationId } = operation\n    if (!operationType) {\n      return actionCreators\n    }\n\n    const actionCreatorFactory = dep.factoryMap[operationType]\n    if (!actionCreatorFactory) {\n      throw new Error(`Unknown operation type: ${operationType}`)\n    }\n\n    const actionCreator = actionCreatorFactory({\n      actionTypes,\n      operationId,\n      operationType,\n      options,\n      resource,\n      resourceActionTypes,\n    })\n    log.info(`Adding actionCreator: ${resource}.${operationType}`)\n    return {\n      ...actionCreators,\n      [operationType]: actionCreator,\n    }\n  }, {})\n}\n","import createCallParams from './createCallParams'\n\nexport default function performQuery({\n  apiClient,\n  callParams,\n  limit,\n  multipleBatches,\n  operationId,\n  options,\n  useScroll,\n}) {\n  // TODO clean this up and use meta from server to know if scroll is available\n  let lastBatchOffset = 0\n  let batchNumber = 0\n  let lastScrollId\n  let lastBatchCallParams\n  let nFetchedItems = 0\n  const data = []\n  const call = () => {\n    return Promise.resolve().then(() => {\n      lastBatchCallParams = createCallParams({\n        ...callParams.body.data.attributes,\n        batchNumber,\n        lastBatchOffset,\n        limit,\n        multipleBatches,\n        options,\n        scrollId: lastScrollId,\n        useScroll,\n      })\n\n      lastBatchOffset = lastBatchCallParams.body.data.attributes.offset\n\n      return apiClient.call(operationId, lastBatchCallParams).then(response => {\n        const { scrollId, nResponseItems = 0, nTotalItems = 0 } =\n          (response && response.meta) || {}\n        lastScrollId = scrollId\n\n        const {\n          offset: lastOffset,\n          limit: lastLimit,\n          idsInMeta,\n        } = lastBatchCallParams.body.data.attributes\n\n        nFetchedItems += nResponseItems\n        let items = []\n        if (idsInMeta && response.meta.ids) {\n          items = response.meta.ids.map(id => {\n            return {\n              id,\n            }\n          })\n        } else {\n          items = response.data\n        }\n\n        data.push(...items)\n\n        let doAnotherCall = false\n        if (multipleBatches) {\n          if (useScroll) {\n            doAnotherCall =\n              lastScrollId &&\n              nResponseItems !== 0 &&\n              nFetchedItems < nTotalItems &&\n              nFetchedItems < limit\n          } else {\n            doAnotherCall =\n              lastOffset < limit &&\n              nResponseItems !== 0 &&\n              nResponseItems === lastLimit\n          }\n        }\n\n        if (doAnotherCall) {\n          batchNumber += 1\n          return call()\n        }\n\n        return {\n          ...response,\n          data,\n        }\n      })\n    })\n  }\n\n  return call()\n}\n","import createLog from 'utilities/log'\nimport immutable from 'object-path-immutable'\nimport Dependor from 'utilities/Dependor'\nimport createItemUpdatePath from './createItemUpdatePath'\n\nexport const dep = new Dependor({\n  assign: immutable.assign,\n  createItemUpdatePath,\n})\n\nconst log = createLog(\n  'coreModules:crud:actionHandlers:updateStateWithOneFactory'\n)\n\nexport default function updateStateWithOneFactory({\n  operationType,\n  resource,\n} = {}) {\n  return function handleOne(state, action) {\n    if (!(action && action.payload && action.payload.id)) {\n      log.debug(\n        `Received action ${action &&\n          action.type} for ${resource}.${operationType}. Aborting`\n      )\n\n      return state\n    }\n\n    log.debug(\n      `Received action ${\n        action.type\n      } for ${resource}.${operationType}. Updating state from action: `,\n      action\n    )\n\n    const { id } = action.payload\n\n    const { removeFromState, storeInState } = action.meta || {}\n\n    if (removeFromState) {\n      const updatedItems = {\n        ...state.items,\n      }\n\n      delete updatedItems[id]\n      return {\n        ...state,\n        items: updatedItems,\n      }\n    }\n\n    if (storeInState === false) {\n      return state\n    }\n\n    const updatePath = dep.createItemUpdatePath({\n      id,\n    })\n\n    const currentItem = state.items && state.items[id]\n\n    if (currentItem && currentItem.relationships) {\n      return dep.assign(state, updatePath, {\n        ...action.payload,\n        relationships: {\n          ...currentItem.relationships,\n          ...(action.payload.relationships || {}),\n        },\n      })\n    }\n\n    return dep.assign(state, updatePath, action.payload)\n  }\n}\n","export default function createItemUpdatePath({ id } = {}) {\n  if (id === undefined) {\n    return null\n  }\n  return `items.${id}`\n}\n","import createLog from 'utilities/log'\n\nconst log = createLog(\n  'coreModules:crud:actionHandlers:updateStateWithManyFactory'\n)\n\nexport default function updateStateWithManyFactory({\n  operationType,\n  resource,\n} = {}) {\n  return function handleMany(state, action) {\n    if (!(action && action.payload && Array.isArray(action.payload))) {\n      log.debug(\n        `Received action ${action &&\n          action.type} for ${resource}.${operationType}. Aborting`\n      )\n      return state\n    }\n\n    log.debug(\n      `Received action ${\n        action.type\n      } for ${resource}.${operationType}. Updating state from action: `,\n      action\n    )\n\n    const { removeFromState, storeInState = true } = action.meta || {}\n    if (!storeInState) {\n      return state\n    }\n\n    if (removeFromState) {\n      const updatedItems = {\n        ...state.items,\n      }\n      action.payload.forEach(item => {\n        const { id } = item\n        if (id) {\n          delete updatedItems[id]\n        }\n      })\n      return {\n        ...state,\n        items: updatedItems,\n      }\n    }\n\n    const newItems = {}\n    action.payload.forEach(item => {\n      const { id } = item\n      if (id) {\n        const currentItem = state.items[id]\n        if (currentItem && currentItem.relationships) {\n          newItems[id] = {\n            ...item,\n            relationships: {\n              ...currentItem.relationships,\n              ...(item.relationships || {}),\n            },\n          }\n        } else {\n          newItems[id] = item\n        }\n      }\n    })\n    return {\n      ...state,\n      items: {\n        ...state.items,\n        ...newItems,\n      },\n    }\n  }\n}\n","import createLog from 'utilities/log'\n\nconst log = createLog(\n  'coreModules:crud:actionHandlers:updateStateRemoveOneFactory'\n)\n\nexport default function updateStateRemoveOneFactory({\n  operationType,\n  resource,\n} = {}) {\n  return function handleRemoveOn(state, action) {\n    if (!(action && action.payload && action.payload.id)) {\n      log.debug(\n        `Received action ${action &&\n          action.type} for ${resource}.${operationType}. Aborting`\n      )\n\n      return state\n    }\n\n    log.debug(\n      `Received action ${\n        action.type\n      } for ${resource}.${operationType}. Updating state from action: `,\n      action\n    )\n\n    const updatedItems = {\n      ...state.items,\n    }\n\n    delete updatedItems[action.payload.id]\n    return {\n      ...state,\n      items: updatedItems,\n    }\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\n\nimport {\n  API_ACTION_TYPE_SUCCESS,\n  OPERATION_TYPE_CREATE,\n  OPERATION_TYPE_DEL,\n  OPERATION_TYPE_GET_MANY,\n  OPERATION_TYPE_GET_ONE,\n  OPERATION_TYPE_QUERY,\n  OPERATION_TYPE_UPDATE,\n} from '../../../constants'\n\nimport updateStateWithOneFactory from './updateStateWithOneFactory'\nimport updateStateWithManyFactory from './updateStateWithManyFactory'\nimport updateStateRemoveOneFactory from './updateStateRemoveOneFactory'\n\nexport const dep = new Dependor({\n  updateStateRemoveOneFactory,\n  updateStateWithManyFactory,\n  updateStateWithOneFactory,\n})\n\nconst log = createLog('coreModules:crud:actionHandlers')\n\nexport default function createActionHandlers({\n  resourceActionTypes,\n  resourceSpecification = {},\n}) {\n  const { resource, operations } = resourceSpecification\n\n  if (!resource) {\n    throw new Error('resource is required')\n  }\n\n  let includedActionHandles = {}\n  if (resourceActionTypes && resourceActionTypes.setIncluded) {\n    includedActionHandles = {\n      [resourceActionTypes.setIncluded]: dep.updateStateWithManyFactory({\n        resource,\n        resourceActionTypes,\n      }),\n    }\n  }\n\n  if (!(operations && operations.length)) {\n    return includedActionHandles\n  }\n\n  const operationsActionHandlers = operations.reduce(\n    (actionHandlers, operation) => {\n      const { type: operationType } = operation\n      if (!operationType) {\n        return actionHandlers\n      }\n      const actionType =\n        resourceActionTypes &&\n        resourceActionTypes[operationType] &&\n        resourceActionTypes[operationType][API_ACTION_TYPE_SUCCESS]\n      if (!actionType) {\n        throw new Error(\n          `actionType not found in resourceActionTypes for resource: ${resource} and operationType: ${operationType}`\n        )\n      }\n      let actionHandler\n      switch (operationType) {\n        case OPERATION_TYPE_CREATE:\n        case OPERATION_TYPE_GET_ONE:\n        case OPERATION_TYPE_UPDATE: {\n          actionHandler = dep.updateStateWithOneFactory({\n            operationType,\n            resource,\n            resourceActionTypes,\n          })\n          break\n        }\n        case OPERATION_TYPE_GET_MANY: {\n          actionHandler = dep.updateStateWithManyFactory({\n            operationType,\n            resource,\n            resourceActionTypes,\n          })\n          break\n        }\n        case OPERATION_TYPE_DEL: {\n          actionHandler = dep.updateStateRemoveOneFactory({\n            operationType,\n            resource,\n            resourceActionTypes,\n          })\n          break\n        }\n        case OPERATION_TYPE_QUERY: {\n          break\n        }\n        default: {\n          throw new Error(`Unknown operationType: ${operationType}`)\n        }\n      }\n      log.info(\n        `Adding actionHandler: ${resource}.${operationType} for actionType: ${actionType}`\n      )\n      return {\n        ...actionHandlers,\n        [actionType]: actionHandler,\n      }\n    },\n    {}\n  )\n\n  return {\n    ...includedActionHandles,\n    ...operationsActionHandlers,\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\nimport { apiActionTypes, ACTION_KEY_SET_INCLUDED } from '../../../constants'\nimport createActionType from './createActionType'\nimport createSetIncludedActionType from './createSetIncludedActionType'\n\nexport const dep = new Dependor({\n  createActionType,\n})\n\nconst log = createLog('coreModules:crud:actionTypes')\n\nexport default function createActionTypes({ resourceSpecification = {} } = {}) {\n  const { resource, operations } = resourceSpecification\n\n  if (!resource) {\n    return {}\n  }\n\n  const includedActionTypes = {\n    [ACTION_KEY_SET_INCLUDED]: createSetIncludedActionType({ resource }),\n  }\n\n  if (!(operations && operations.length)) {\n    return includedActionTypes\n  }\n\n  const operationsActionTypes = operations.reduce((actionTypes, operation) => {\n    const { type: operationType } = operation\n    if (!operationType) {\n      return actionTypes\n    }\n\n    const operationActionTypes = Object.keys(apiActionTypes)\n      .sort()\n      .reduce((obj, apiActionTypeKey) => {\n        const apiActionType = apiActionTypes[apiActionTypeKey]\n        return {\n          ...obj,\n          [apiActionType]: dep.createActionType({\n            apiActionType,\n            operationType,\n            resource,\n          }),\n        }\n      }, {})\n    log.info(\n      `Adding actionTypes for ${resource}.${operationType}: ${JSON.stringify(\n        operationActionTypes\n      )}`\n    )\n\n    return {\n      ...actionTypes,\n      [operationType]: operationActionTypes,\n    }\n  }, {})\n  return {\n    ...includedActionTypes,\n    ...operationsActionTypes,\n  }\n}\n","import { camelCaseToUpperSnakeCase } from 'common/es5/stringFormatters'\n\nexport default function createActionType({\n  apiActionType = '',\n  operationType = '',\n  resource = '',\n}) {\n  return [\n    camelCaseToUpperSnakeCase(operationType),\n    camelCaseToUpperSnakeCase(resource),\n    apiActionType.toUpperCase(),\n  ].join('_')\n}\n","import { camelCaseToUpperSnakeCase } from 'common/es5/stringFormatters'\n\nexport default function createSetIncludedActionType({ resource = '' }) {\n  return ['SET_INCLUDED', camelCaseToUpperSnakeCase(resource)].join('_')\n}\n","import Dependor from 'utilities/Dependor'\nimport { combineReducers } from 'redux'\n\nexport const dep = new Dependor({\n  combineReducers,\n})\n\nexport default function createCoreReducer({ resourceReducers }) {\n  return dep.combineReducers(resourceReducers)\n}\n","import Dependor from 'utilities/Dependor'\nimport wrapSelectors from 'utilities/wrapSelectors'\nimport createGetRelationshipItem from './createGetRelationshipItem'\nimport createGetRelationshipItems from './createGetRelationshipItems'\nimport createGetRelationshipItemOrItems from './createGetRelationshipItemOrItems'\n\nexport const dep = new Dependor({\n  wrapSelectors,\n})\n\nexport default function createGlobalSelectors({\n  resourceSelectors = {},\n  getGlobalSelectors,\n}) {\n  const resourceBaseGlobalSelectors = dep.wrapSelectors(resourceSelectors)\n\n  const getRelationshipItem = createGetRelationshipItem({\n    getGlobalSelectors,\n    resourceBaseGlobalSelectors,\n  })\n\n  const getRelationshipItems = createGetRelationshipItems({\n    getGlobalSelectors,\n    resourceBaseGlobalSelectors,\n  })\n\n  const getRelationshipItemOrItems = createGetRelationshipItemOrItems({\n    getRelationshipItem,\n    getRelationshipItems,\n    resourceBaseGlobalSelectors,\n  })\n\n  return {\n    ...resourceBaseGlobalSelectors,\n    getRelationshipItem,\n    getRelationshipItemOrItems,\n    getRelationshipItems,\n  }\n}\n","import { getRelationshipItem as getRelationshipObject } from '../../../utilities'\n\nexport default function createGetRelationshipItem({\n  resourceBaseGlobalSelectors,\n  getGlobalSelectors,\n}) {\n  return function getRelationshipItem(state, { itemId, relationKey } = {}) {\n    const item = resourceBaseGlobalSelectors.getOne(state, itemId)\n    if (!item) {\n      return undefined\n    }\n    const { id: relationshipItemId, type: relationshipItemType } =\n      getRelationshipObject({\n        item,\n        relationKey,\n      }) || {}\n    if (!(relationshipItemId !== undefined && relationshipItemType)) {\n      return undefined\n    }\n    const globalSelectors = getGlobalSelectors()\n\n    const relationshipSelectors =\n      globalSelectors && globalSelectors[relationshipItemType]\n    if (!relationshipSelectors) {\n      return undefined\n    }\n\n    return relationshipSelectors.getOne(state, relationshipItemId)\n  }\n}\n","import { getRelationshipItems as getRelationshipObjects } from '../../../utilities'\n\nexport default function createGetRelationshipItems({\n  resourceBaseGlobalSelectors,\n  getGlobalSelectors,\n}) {\n  return function getRelationshipItems(state, { itemId, relationKey } = {}) {\n    const item = resourceBaseGlobalSelectors.getOne(state, itemId)\n    if (!item) {\n      return undefined\n    }\n    const relationshipItems = getRelationshipObjects({\n      item,\n      relationKey,\n    })\n\n    if (!relationshipItems.length) {\n      return undefined\n    }\n    const relationshipItemType = relationshipItems[0].type\n    const globalSelectors = getGlobalSelectors()\n    const relationshipSelectors =\n      globalSelectors && globalSelectors[relationshipItemType]\n\n    if (!relationshipSelectors) {\n      return undefined\n    }\n    return relationshipItems.map(relatonshipItem => {\n      return relationshipSelectors.getOne(state, relatonshipItem.id)\n    })\n  }\n}\n","import { getRelationshipFormat } from '../../../utilities'\n\nexport default function createGetRelationshipItemOrItems({\n  getRelationshipItem,\n  getRelationshipItems,\n  resourceBaseGlobalSelectors,\n}) {\n  return function getRelationshipItemOrItems(\n    state,\n    { itemId, relationKey } = {}\n  ) {\n    const item = resourceBaseGlobalSelectors.getOne(state, itemId)\n\n    if (!item) {\n      return undefined\n    }\n\n    const format = getRelationshipFormat({ item, relationKey })\n    if (!format) {\n      return undefined\n    }\n\n    if (format === 'array') {\n      return getRelationshipItems(state, { itemId, relationKey })\n    }\n    return getRelationshipItem(state, { itemId, relationKey })\n  }\n}\n","import createLog from 'utilities/log'\n\nconst log = createLog('coreModules:crud:resourceReducer')\nexport default function createResourceReducer({\n  resourceActionHandlers = {},\n  resourceSpecification = {},\n} = {}) {\n  const { resource } = resourceSpecification\n  const initialState = { items: {} }\n  log.info(\n    `Creating reducer for resource: ${resource} with initialState:`,\n    initialState\n  )\n\n  return function reducer(state = initialState, action = {}) {\n    const actionHandler = resourceActionHandlers[action.type]\n    if (actionHandler) {\n      return actionHandler(state, action)\n    }\n    return state\n  }\n}\n","import objectPath from 'object-path'\nimport { createSelector } from 'reselect'\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport getSecondArgument from 'utilities/getSecondArgument'\n\nimport {\n  ALL_CUSTOM_SELECTOR_TYPES,\n  SELECTOR_TYPE_GET_ALL_AS_OPTIONS,\n} from '../../../constants'\n\nconst createGetAllAsOptionsSelector = ({\n  customSelectorInput,\n  resourceSelectors,\n}) => {\n  const {\n    text: {\n      doNotCapitalize,\n      defaultLanguage = 'en',\n      parameter: parameterPath,\n      translated,\n    },\n  } = customSelectorInput\n\n  return createSelector(\n    [resourceSelectors.getAll, getSecondArgument],\n    (items, currentLanguage) => {\n      const mappedItems = items.map(item => {\n        const { id, key } = item\n        const parameter = objectPath.get(item, parameterPath)\n\n        const text = translated\n          ? parameter[currentLanguage] || parameter[defaultLanguage] || key\n          : parameter\n\n        return {\n          key: id,\n          text: doNotCapitalize ? text : capitalizeFirstLetter(text),\n          value: id,\n        }\n      })\n\n      return mappedItems\n    }\n  )\n}\n\nconst createCustomSelector = ({ customSelectorInput, resourceSelectors }) => {\n  const { type } = customSelectorInput\n\n  if (!ALL_CUSTOM_SELECTOR_TYPES.includes(type)) {\n    throw new Error(`Unknown custom selector type: ${type}`)\n  }\n\n  let selector\n  let key\n\n  switch (type) {\n    case SELECTOR_TYPE_GET_ALL_AS_OPTIONS: {\n      selector = createGetAllAsOptionsSelector({\n        customSelectorInput,\n        resourceSelectors,\n      })\n      key = SELECTOR_TYPE_GET_ALL_AS_OPTIONS\n      break\n    }\n    default: {\n      throw new Error(`Custom selector with type: ${type} is not implemented`)\n    }\n  }\n\n  return {\n    key,\n    selector,\n  }\n}\n\nexport default function createCustomSelectors({\n  customSelectorsInput = [],\n  resourceSelectors,\n} = {}) {\n  return customSelectorsInput.reduce((customSelectors, customSelectorInput) => {\n    const { selector, key } = createCustomSelector({\n      customSelectorInput,\n      resourceSelectors,\n    })\n\n    return {\n      ...customSelectors,\n      [key]: selector,\n    }\n  }, {})\n}\n","import Dependor from 'utilities/Dependor'\nimport createLog from 'utilities/log'\nimport { createSelector } from 'reselect'\nimport createCustomSelectors from './createCustomSelectors'\nimport getLocalState from './getLocalState'\n\nexport const dep = new Dependor({\n  createCustomSelectors,\n  getLocalState,\n})\n\nconst log = createLog('coreModules:crud:selectors')\nexport default function createResourceSelectors({\n  resourceSpecification,\n} = {}) {\n  const { resource } = resourceSpecification\n  if (!resource) {\n    throw new Error('resource required')\n  }\n\n  const { customSelectors: customSelectorsInput } = resourceSpecification\n\n  const getLocalResourceState = localState => {\n    return localState[resource]\n  }\n\n  const getItemsObject = localState => {\n    const localResourceState = getLocalResourceState(localState)\n    return localResourceState.items\n  }\n\n  const getAll = createSelector(\n    getItemsObject,\n    items => {\n      return Object.values(items)\n    }\n  )\n\n  const getOne = (localState, id) => {\n    const itemsObject = getItemsObject(localState)\n    return itemsObject[id] || null\n  }\n\n  const getOneByLid = (localState, lid) => {\n    const items = getAll(localState) || []\n    const res = items.find(({ attributes }) => {\n      return attributes && attributes.lid === lid\n    })\n    return res || null\n  }\n\n  let resourceSelectors = {\n    getAll,\n    getItemsObject,\n    getLocalResourceState,\n    getLocalState: dep.getLocalState,\n    getOne,\n    getOneByLid,\n  }\n\n  if (customSelectorsInput) {\n    const customSelectors = dep.createCustomSelectors({\n      customSelectorsInput,\n      resourceSelectors,\n    })\n    resourceSelectors = {\n      ...resourceSelectors,\n      ...customSelectors,\n    }\n  }\n\n  Object.keys(resourceSelectors).forEach(selectorName => {\n    log.info(`Adding selector ${resource}.${selectorName}`)\n  })\n\n  return resourceSelectors\n}\n","import { MODULE_NAME, RESOURCES_NAMESPACE } from '../../../constants'\n\nexport default function getLocalState(state) {\n  return state[MODULE_NAME] && state[MODULE_NAME][RESOURCES_NAMESPACE]\n}\n","import createLog from 'utilities/log'\nimport createActionCreators from '../actionCreators'\nimport createActionHandlers from '../actionHandlers'\nimport createActionTypes from '../actionTypes'\nimport createCoreReducer from '../coreReducer'\nimport createGlobalSelectors from '../globalSelectors'\nimport createResourceReducer from '../resourceReducer'\nimport createSelectors from '../selectors'\n\nconst log = createLog('coreModules:crud:dux')\n\nexport default function dux(specification) {\n  const selectors = {}\n  const globalSelectors = {}\n  const actionTypes = {}\n  const actionHandlers = {}\n  const actionCreators = {}\n  const resourceReducers = {}\n\n  const getGlobalSelectors = () => {\n    return globalSelectors\n  }\n\n  Object.values((specification && specification.resources) || {}).forEach(\n    resourceSpecification => {\n      const { resource } = resourceSpecification\n      log.info(`Setting up resource: ${resource} actionTypes`)\n      const resourceActionTypes = createActionTypes({ resourceSpecification })\n      actionTypes[resource] = resourceActionTypes\n    }\n  )\n\n  Object.values((specification && specification.resources) || {}).forEach(\n    resourceSpecification => {\n      const { resource } = resourceSpecification\n      log.info(`Setting up resource: ${resource}`)\n      const resourceActionTypes = actionTypes[resource]\n\n      const resourceActionHandlers = createActionHandlers({\n        resourceActionTypes,\n        resourceSpecification,\n      })\n\n      const resourceActionCreators = createActionCreators({\n        actionTypes,\n        resourceActionTypes,\n        resourceSpecification,\n      })\n\n      const resourceSelectors = createSelectors({\n        resourceSpecification,\n      })\n\n      const resourceGlobalSelectors = createGlobalSelectors({\n        getGlobalSelectors,\n        resourceSelectors,\n      })\n      const resourceReducer = createResourceReducer({\n        resourceActionHandlers,\n        resourceSpecification,\n      })\n      actionCreators[resource] = resourceActionCreators\n      actionHandlers[resource] = resourceActionHandlers\n      globalSelectors[resource] = resourceGlobalSelectors\n      resourceReducers[resource] = resourceReducer\n      selectors[resource] = resourceSelectors\n    }\n  )\n\n  const reducer = createCoreReducer({\n    resourceReducers,\n  })\n  return {\n    actionCreators,\n    actionHandlers,\n    actionTypes,\n    globalSelectors,\n    reducer,\n    selectors,\n  }\n}\n","import Dependor from 'utilities/Dependor'\nimport createOperationSpecification from './createOperationSpecification'\n\nexport const dep = new Dependor({\n  createOperationSpecification,\n})\n\nexport default function createResourceSpecification({\n  resourceName,\n  resourceConfig,\n}) {\n  if (!resourceName) {\n    throw new Error('Missing required resourceName')\n  }\n  if (!resourceConfig) {\n    throw new Error('Missing required resourceConfig')\n  }\n  const operationSpecifications = (resourceConfig.operations || []).map(\n    operationConfig => {\n      return dep.createOperationSpecification({ operationConfig, resourceName })\n    }\n  )\n\n  return {\n    ...resourceConfig,\n    operations: operationSpecifications,\n    resource: resourceName,\n  }\n}\n","import {\n  OPERATION_TYPE_CREATE,\n  OPERATION_TYPE_DEL,\n  OPERATION_TYPE_GET_MANY,\n  OPERATION_TYPE_GET_ONE,\n  OPERATION_TYPE_QUERY,\n  OPERATION_TYPE_UPDATE,\n} from '../../../constants'\n\nexport default function createOperationSpecification({\n  operationConfig,\n  resourceName,\n}) {\n  const { type, operationId, options } = operationConfig\n  if (!operationId) {\n    throw new Error(\n      `Operation for resource: ${resourceName} with type: ${type} is missing operationId`\n    )\n  }\n\n  switch (type) {\n    case OPERATION_TYPE_CREATE:\n    case OPERATION_TYPE_DEL:\n    case OPERATION_TYPE_GET_MANY:\n    case OPERATION_TYPE_GET_ONE:\n    case OPERATION_TYPE_QUERY:\n    case OPERATION_TYPE_UPDATE: {\n      return {\n        operationId, // create operation id\n        options,\n        type,\n      }\n    }\n\n    default: {\n      throw new Error(`Unknown type: ${type}`)\n    }\n  }\n}\n","import Dependor from 'utilities/Dependor'\nimport createResourceSpecification from './createResourceSpecification'\n\nexport const dep = new Dependor({\n  createResourceSpecification,\n})\n\nexport default function createSpecification(config) {\n  if (!(config && config.resources)) {\n    return {}\n  }\n\n  const specification = {\n    ...config,\n    resources: {},\n  }\n\n  Object.keys(config.resources).forEach(resourceName => {\n    specification.resources[resourceName] = dep.createResourceSpecification({\n      resourceConfig: config.resources[resourceName],\n      resourceName,\n    })\n  })\n  return specification\n}\n","const config = {\n  resources: {\n    causeOfDeathType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: true,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'causeOfDeathTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'causeOfDeathTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    customTaxonNameType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: true,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'customTaxonNameTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'customTaxonNameTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    establishmentMeansType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: true,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'establishmentMeansTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'establishmentMeansTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    exportJob: {\n      operations: [\n        {\n          operationId: 'exportJobGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'exportJobGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'exportJobCreate',\n          type: 'create',\n        },\n      ],\n    },\n    featureType: {\n      operations: [\n        {\n          operationId: 'featureTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'featureTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    identifierType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: false,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'identifierTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'identifierTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    normalizedAgent: {\n      operations: [\n        {\n          operationId: 'normalizedAgentDel',\n          type: 'del',\n        },\n        {\n          operationId: 'normalizedAgentGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'normalizedAgentCreate',\n          options: {\n            relationshipsToModify: [],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'normalizedAgentGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'normalizedAgentUpdate',\n          options: {\n            relationshipsToModify: [],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'normalizedAgentQuery',\n          type: 'query',\n        },\n      ],\n    },\n    physicalObject: {\n      operations: [\n        {\n          operationId: 'physicalObjectGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'physicalObjectCreate',\n          options: {\n            relationshipsToModify: ['storageLocation'],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'physicalObjectGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'physicalObjectUpdate',\n          options: {\n            relationshipsToModify: ['storageLocation'],\n          },\n          type: 'update',\n        },\n      ],\n    },\n    place: {\n      operations: [\n        {\n          operationId: 'placeDel',\n          type: 'del',\n        },\n        {\n          operationId: 'placeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'placeCreate',\n          options: {\n            relationshipsToModify: ['parent'],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'placeGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'placeUpdate',\n          options: {\n            relationshipsToModify: ['parent'],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'placeQuery',\n          type: 'query',\n        },\n      ],\n    },\n\n    preparationType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: true,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'preparationTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'preparationTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    resourceActivity: {\n      operations: [\n        {\n          operationId: 'resourceActivityGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'resourceActivityGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    searchSpecimen: {\n      operations: [\n        {\n          operationId: 'searchSpecimenGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'searchSpecimenGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'searchSpecimenQuery',\n          type: 'query',\n        },\n      ],\n    },\n    specimen: {\n      operations: [\n        {\n          operationId: 'specimenDel',\n          type: 'del',\n        },\n        {\n          operationId: 'specimenUpdate',\n          options: {\n            includesToModify: ['physicalObjects'],\n            relationshipsToModify: [\n              'causeOfDeathTypes',\n              'establishmentMeansTypes',\n              'featureTypes',\n              'identifierTypes',\n              'normalizedAgents',\n              'physicalObjects.storageLocation',\n              'places',\n              'preparationTypes',\n              'taxa',\n              'taxonNames',\n            ],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'specimenCreate',\n          options: {\n            includesToModify: ['physicalObjects'],\n            relationshipsToModify: [\n              'causeOfDeathTypes',\n              'establishmentMeansTypes',\n              'featureTypes',\n              'identifierTypes',\n              'normalizedAgents',\n              'physicalObjects.storageLocation',\n              'places',\n              'preparationTypes',\n              'taxa',\n              'taxonNames',\n            ],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'specimenGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'specimenGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    storageLocation: {\n      operations: [\n        {\n          operationId: 'storageLocationDel',\n          type: 'del',\n        },\n        {\n          operationId: 'storageLocationGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'storageLocationCreate',\n          options: {\n            relationshipsToModify: ['parent'],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'storageLocationGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'storageLocationUpdate',\n          options: {\n            relationshipsToModify: ['parent'],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'storageLocationQuery',\n          type: 'query',\n        },\n      ],\n    },\n    taxon: {\n      operations: [\n        {\n          operationId: 'taxonDel',\n          type: 'del',\n        },\n        {\n          operationId: 'taxonGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'taxonCreate',\n          options: {\n            includesToModify: ['vernacularNames'],\n            relationshipsToModify: [\n              'acceptedTaxonName',\n              'parent',\n              'synonyms',\n              'vernacularNames',\n            ],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'taxonGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'taxonUpdate',\n          options: {\n            includesToModify: ['vernacularNames'],\n            relationshipsToModify: [\n              'acceptedTaxonName',\n              'parent',\n              'synonyms',\n              'vernacularNames',\n            ],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'taxonQuery',\n          type: 'query',\n        },\n      ],\n    },\n    taxonName: {\n      operations: [\n        {\n          operationId: 'taxonNameDel',\n          type: 'del',\n        },\n        {\n          operationId: 'taxonNameGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'taxonNameCreate',\n          options: {\n            relationshipsToModify: [],\n          },\n          type: 'create',\n        },\n        {\n          operationId: 'taxonNameGetMany',\n          type: 'getMany',\n        },\n        {\n          operationId: 'taxonNameUpdate',\n          options: {\n            relationshipsToModify: [],\n          },\n          type: 'update',\n        },\n        {\n          operationId: 'taxonNameQuery',\n          type: 'query',\n        },\n      ],\n    },\n    typeSpecimenType: {\n      customSelectors: [\n        {\n          text: {\n            parameter: 'attributes.name',\n            translated: true,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'typeSpecimenTypeGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'typeSpecimenTypeGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n    user: {\n      customSelectors: [\n        {\n          text: {\n            doNotCapitalize: true,\n            parameter: 'attributes.username',\n            translated: false,\n          },\n          type: 'getAllAsOptions',\n        },\n      ],\n      operations: [\n        {\n          operationId: 'userGetOne',\n          type: 'getOne',\n        },\n        {\n          operationId: 'userGetMany',\n          type: 'getMany',\n        },\n      ],\n    },\n  },\n}\n\nexport default config\n","import createCrudModule from './createCrudModule'\nimport config from './config'\n\nconst crudModule = createCrudModule(config)\n\nexport default crudModule\n","import dux from './factories/dux'\nimport createSpecification from './factories/specification'\n\nexport default function createCrudModule(config) {\n  const specification = createSpecification(config)\n  return dux(specification)\n}\n","import { NOTIFICATIONS_REMOVE_NOTIFICATION } from '../actionTypes'\n\nexport default function removeNotification({ sequentialId }) {\n  return {\n    payload: { sequentialId },\n    type: NOTIFICATIONS_REMOVE_NOTIFICATION,\n  }\n}\n","import createNotification from './createNotification'\nimport removeNotification from './removeNotification'\n\nexport { createNotification, removeNotification }\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","export default function createAgentInputs({\n  baseName,\n  buttonTextKey = 'other.interpretThisName',\n  initiallyHidden,\n  model,\n  module = 'collectionMammals',\n} = {}) {\n  return [\n    {\n      componentName: 'Input',\n      componentProps: {\n        columnProps: { width: 8 },\n        fluid: true,\n        model,\n        type: 'text',\n      },\n      initiallyHidden,\n      name: `${baseName}.textV`,\n      wrapInField: true,\n    },\n    {\n      componentName: 'TogglableAgentDropdownPickerSearch',\n      componentProps: {\n        buttonTextKey,\n        columnProps: { width: 8 },\n        displayEmptyStateLabel: false,\n        displayResultLabel: false,\n      },\n      initiallyHidden,\n      module,\n      name: `${baseName}`,\n      relativeNames: ['textI', 'normalized.id'],\n      wrapInField: true,\n    },\n  ]\n}\n","export default function createRangeDate({\n  baseName,\n  displayDateTypeRadios,\n  displayEndDateLabel,\n  displayLabel,\n  displayStartDateLabel,\n  displaySubLabels,\n  endDateLabel,\n  initialDateType,\n  initiallyHidden,\n  stack,\n  startDateLabel,\n} = {}) {\n  return [\n    {\n      componentName: 'RangeDate',\n      componentProps: {\n        displayDateTypeRadios,\n        displayEndDateLabel,\n        displayLabel,\n        displayStartDateLabel,\n        displaySubLabels,\n        endDateLabel,\n        initialDateType,\n        stack,\n        startDateLabel,\n      },\n      initiallyHidden,\n      name: baseName,\n      wrapInField: true,\n    },\n  ]\n}\n","import createRangeDate from '../createRangeDate'\n\nexport default function createRangeDateWithRemarks({\n  baseName,\n  displayDateTypeRadios,\n  displayEndDateLabel,\n  displayLabel,\n  displayStartDateLabel,\n  displaySubLabels,\n  emptyStateTextKey,\n  endDateLabel,\n  initialDateType,\n  initiallyHidden,\n  model,\n  resultPrefixTextKey,\n  stack,\n  startDateLabel,\n} = {}) {\n  return [\n    ...createRangeDate({\n      baseName,\n      displayDateTypeRadios,\n      displayEndDateLabel,\n      displayLabel,\n      displayStartDateLabel,\n      displaySubLabels,\n      endDateLabel,\n      initialDateType,\n      initiallyHidden,\n      stack,\n      startDateLabel,\n    }),\n    {\n      componentName: 'Remarks',\n      componentProps: {\n        emptyStateTextKey,\n        model,\n        resultPrefixTextKey,\n      },\n      initiallyHidden,\n      name: `${baseName}.remarks`,\n      wrapInField: true,\n    },\n  ]\n}\n","export default function createSingleDate({ initiallyHidden, name } = {}) {\n  return [\n    {\n      componentName: 'SingleDate',\n      initiallyHidden,\n      name,\n      wrapInField: true,\n    },\n  ]\n}\n","export { default as createAgentInputs } from './createAgentInputs'\nexport { default as createRangeDate } from './createRangeDate'\nexport {\n  default as createRangeDateWithRemarks,\n} from './createRangeDateWithRemarks'\nexport { default as createSingleDate } from './createSingleDate'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { CREATE_CANCEL } from 'coreModules/resourceManager/constants'\n\nconst propTypes = {\n  formName: PropTypes.string.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n}\n\nconst createHandleCancelCreate = () => ComposedComponent => {\n  class CancelCreateHandler extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleCancelCreate = this.handleCancelCreate.bind(this)\n    }\n\n    handleCancelCreate(event) {\n      event.preventDefault()\n      this.props.onInteraction(CREATE_CANCEL)\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          onCancelCreate={this.handleCancelCreate}\n        />\n      )\n    }\n  }\n\n  CancelCreateHandler.propTypes = propTypes\n\n  return CancelCreateHandler\n}\n\nexport default createHandleCancelCreate\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  getFormValues,\n  reset as resetActionCreator,\n  startSubmit as startSubmitActionCreator,\n  stopSubmit as stopSubmitActionCreator,\n} from 'redux-form'\nimport { handleReduxFormSubmitError } from 'coreModules/form/utilities'\n\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport { createGetResourceCount } from 'coreModules/crud/higherOrderComponents'\nimport { CREATE_SUCCESS } from 'coreModules/resourceManager/constants'\n\nconst mapStateToProps = (state, { formName }) => {\n  return {\n    values: getFormValues(formName)(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  reset: resetActionCreator,\n  startSubmit: startSubmitActionCreator,\n  stopSubmit: stopSubmitActionCreator,\n}\n\nconst propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  fetchResourceCount: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n  startSubmit: PropTypes.func.isRequired,\n  stopSubmit: PropTypes.func.isRequired,\n  transformOutput: PropTypes.func,\n  values: PropTypes.object,\n}\nconst defaultProps = {\n  transformOutput: undefined,\n  values: undefined,\n}\n\nconst createHandleCreateSubmit = () => ComposedComponent => {\n  class CreateSubmitHandler extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n\n      const {\n        dispatch,\n        fetchResourceCount,\n        formName,\n        onInteraction,\n        resource,\n        startSubmit,\n        stopSubmit,\n        transformOutput,\n        values,\n      } = this.props\n\n      startSubmit(formName) // needed for withUnsubmittedFormConfirmation\n\n      const create =\n        crudActionCreators[resource] && crudActionCreators[resource].create\n\n      return dispatch(\n        create({\n          item: transformOutput ? transformOutput(values) : values,\n          nested: true,\n        })\n      )\n        .then(({ id }) => {\n          fetchResourceCount()\n          onInteraction(CREATE_SUCCESS, { itemId: id })\n          stopSubmit(formName)\n        })\n        .catch(handleReduxFormSubmitError)\n        .catch(err => {\n          stopSubmit(formName, err.errors)\n        })\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} onSubmit={this.handleSubmit} />\n    }\n  }\n\n  CreateSubmitHandler.propTypes = propTypes\n  CreateSubmitHandler.defaultProps = defaultProps\n\n  return compose(\n    createGetResourceCount(),\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    ),\n    connect(null) // needed to get dispatch\n  )(CreateSubmitHandler)\n}\n\nexport default createHandleCreateSubmit\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Button, List } from 'semantic-ui-react'\n\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\n\nconst getHref = ({ id, resource }) => {\n  switch (resource) {\n    case 'normalizedAgent': {\n      return `/app/agents?itemId=${id}&mainColumn=edit`\n    }\n    case 'place': {\n      return `/app/localities?itemId=${id}&mainColumn=edit`\n    }\n    case 'specimen': {\n      return `/app/specimens/mammals/${id}/edit/sections/0`\n    }\n    case 'storageLocation': {\n      return `/app/storageLocations?itemId=${id}&mainColumn=edit`\n    }\n    case 'taxon': {\n      return `/app/taxa?itemId=${id}&mainColumn=edit`\n    }\n    case 'taxonName': {\n      return `/app/taxonNames?itemId=${id}&mainColumn=edit`\n    }\n    default: {\n      throw new Error(`Unknown resource: ${resource}`)\n    }\n  }\n}\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired,\n}\n\nconst ListItem = ({ id, resource }) => {\n  return (\n    <List.Item\n      as=\"a\"\n      href={getHref({ id, resource })}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <List.Content floated=\"left\">{id}</List.Content>\n      <List.Content floated=\"right\">\n        <Button icon=\"external alternate\" />\n      </List.Content>\n    </List.Item>\n  )\n}\n\nListItem.propTypes = propTypes\n\nexport default compose(\n  createGetItemById({\n    idPath: 'id',\n    refresh: false,\n    shouldFetch: false,\n  })\n)(ListItem)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { List } from 'semantic-ui-react'\nimport { createBatchFetchItems } from 'coreModules/crud/higherOrderComponents'\nimport ListItem from './ListItem'\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n  ]),\n  fetchItemById: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  data: {},\n}\n\nclass RelationshipList extends PureComponent {\n  render() {\n    const { data, fetchItemById } = this.props\n    const isArray = Array.isArray(data)\n\n    return (\n      <List divided selection verticalAlign=\"middle\">\n        {(isArray ? data : [data]).slice(0, 30).map(({ id, type }) => {\n          fetchItemById(id)\n          return <ListItem id={id} key={id} resource={type} />\n        })}\n      </List>\n    )\n  }\n}\n\nRelationshipList.propTypes = propTypes\nRelationshipList.defaultProps = defaultProps\n\nexport default createBatchFetchItems({\n  includeFields: ['id', 'attributes'],\n})(RelationshipList)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header, Modal } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nimport RelationshipList from './RelationshipList'\n\nconst propTypes = {\n  relationships: PropTypes.objectOf(\n    PropTypes.shape({\n      customNumberOfItems: PropTypes.number,\n      data: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n          })\n        ),\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired,\n        }),\n      ]),\n    })\n  ),\n}\nconst defaultProps = {\n  relationships: {},\n}\n\nclass ModalContent extends PureComponent {\n  render() {\n    const { relationships } = this.props\n\n    const sortedRelationships = Object.keys(relationships).sort()\n\n    return (\n      <Modal.Content>\n        <Grid>\n          <Grid.Row className=\"relaxed\" columns={1}>\n            {sortedRelationships.map(relationshipKey => {\n              const data = objectPath.get(\n                relationships,\n                `${relationshipKey}.data`\n              )\n\n              const isArray = Array.isArray(data)\n\n              if (!data || (isArray && !data.length)) {\n                return null\n              }\n\n              const customNumberOfItems = objectPath.get(\n                relationships,\n                `${relationshipKey}.customNumberOfItems`\n              )\n\n              const numberOfItems = isArray\n                ? customNumberOfItems || data.length\n                : 1\n\n              const { type: relationshipResource } = isArray ? data[0] : data\n\n              return (\n                <React.Fragment key={relationshipKey}>\n                  <Grid.Column>\n                    <Header>\n                      <ModuleTranslate\n                        capitalize\n                        module=\"resourceManager\"\n                        textKey={`relationshipKey.${relationshipKey}`}\n                      />{' '}\n                      ({numberOfItems}{' '}\n                      <ModuleTranslate\n                        module=\"resourceManager\"\n                        textKey=\"relations\"\n                      />\n                      )\n                      {numberOfItems > 30 && (\n                        <Header.Subheader>\n                          {`Below are 30 of the relations. To see all ${numberOfItems} relations, please use the search for `}\n                          <ModuleTranslate\n                            module=\"resourceManager\"\n                            textKey={`resourcePlural.${relationshipResource}`}\n                          />\n                          .\n                        </Header.Subheader>\n                      )}\n                    </Header>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <RelationshipList\n                      data={data}\n                      resource={relationshipResource}\n                    />\n                  </Grid.Column>\n                </React.Fragment>\n              )\n            })}\n          </Grid.Row>\n        </Grid>\n      </Modal.Content>\n    )\n  }\n}\n\nModalContent.propTypes = propTypes\nModalContent.defaultProps = defaultProps\n\nexport default ModalContent\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, Button } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport ModalContent from './ModalContent'\n\nconst propTypes = {\n  onClose: PropTypes.func.isRequired,\n  recordHeader: PropTypes.string.isRequired,\n  relationships: PropTypes.objectOf(\n    PropTypes.shape({\n      customNumberOfItems: PropTypes.number,\n      data: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n          })\n        ),\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired,\n        }),\n      ]),\n    })\n  ),\n}\nconst defaultProps = {\n  relationships: {},\n}\n\nclass InspectRelationsModal extends PureComponent {\n  render() {\n    const { onClose: handleClose, recordHeader, relationships } = this.props\n\n    return (\n      <LayerModal onClose={handleClose} open size=\"small\">\n        <Modal.Header>{`Relations for: ${recordHeader}`}</Modal.Header>\n        <ModalContent relationships={relationships} />\n        <Modal.Actions style={{ textAlign: 'left' }}>\n          <Button onClick={handleClose} primary>\n            Close\n          </Button>\n        </Modal.Actions>\n      </LayerModal>\n    )\n  }\n}\n\nInspectRelationsModal.propTypes = propTypes\nInspectRelationsModal.defaultProps = defaultProps\n\nexport default InspectRelationsModal\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { isEmpty } from 'lodash'\n\nimport { createGetResourceCount } from 'coreModules/crud/higherOrderComponents'\nimport { DEL_SUCCESS } from 'coreModules/resourceManager/constants'\nimport { createNotification as createNotificationActionCreator } from 'coreModules/notifications/actionCreators'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport InspectRelationsModal from './InspectRelationsModal'\n\nconst mapDispatchToProps = {\n  createNotification: createNotificationActionCreator,\n}\n\nconst propTypes = {\n  createNotification: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  fetchRelationshipsBeforeDelete: PropTypes.func,\n  fetchResourceCount: PropTypes.func.isRequired,\n  itemHeader: PropTypes.string,\n  itemId: PropTypes.string,\n  itemSubHeader: PropTypes.string,\n  onInteraction: PropTypes.func,\n  relationshipsToCheckBeforeDelete: PropTypes.arrayOf(PropTypes.string),\n  resource: PropTypes.string.isRequired,\n}\nconst defaultProps = {\n  fetchRelationshipsBeforeDelete: undefined,\n  itemHeader: undefined,\n  itemId: undefined,\n  itemSubHeader: undefined,\n  onInteraction: undefined,\n  relationshipsToCheckBeforeDelete: [],\n}\n\nconst createHandleDelete = () => ComposedComponent => {\n  class DeleteHandler extends Component {\n    constructor(props) {\n      super(props)\n\n      this.deleteItemOrShowRelationships = this.deleteItemOrShowRelationships.bind(\n        this\n      )\n      this.handleDelete = this.handleDelete.bind(this)\n      this.handleModalClose = this.handleModalClose.bind(this)\n      this.handleModalOpen = this.handleModalOpen.bind(this)\n\n      this.state = {\n        loadingDelete: false,\n        open: false,\n        relationships: undefined,\n      }\n    }\n\n    handleDelete() {\n      const {\n        dispatch,\n        fetchRelationshipsBeforeDelete,\n        itemId,\n        relationshipsToCheckBeforeDelete,\n        resource,\n      } = this.props\n\n      const { getOne } = crudActionCreators[resource]\n\n      this.setState({ loadingDelete: true })\n      if (fetchRelationshipsBeforeDelete) {\n        return fetchRelationshipsBeforeDelete().then(relationships => {\n          this.setState({ loadingDelete: false })\n          return this.deleteItemOrShowRelationships(relationships)\n        })\n      }\n\n      return dispatch(\n        getOne({\n          id: itemId,\n          includeDeactivated: false,\n          relationships: relationshipsToCheckBeforeDelete,\n        })\n      ).then(res => {\n        const { relationships } = res || {}\n        return this.deleteItemOrShowRelationships(relationships)\n      })\n    }\n\n    deleteItemOrShowRelationships(relationships = {}) {\n      const {\n        createNotification,\n        dispatch,\n        fetchResourceCount,\n        itemId,\n        onInteraction,\n        resource,\n      } = this.props\n\n      const relationshipKeys = Object.keys(relationships)\n\n      if (relationshipKeys.length) {\n        const relationshipsAreEmpty = relationshipKeys.reduce(\n          (emptyFlag, relationshipKey) => {\n            if (!emptyFlag) {\n              return false\n            }\n\n            return isEmpty(relationships[relationshipKey].data)\n          },\n          true\n        )\n\n        if (!relationshipsAreEmpty) {\n          this.setState({ loadingDelete: false, relationships })\n          return createNotification({\n            componentProps: {\n              /* eslint-disable jsx-a11y/anchor-is-valid, jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n              description: (\n                <React.Fragment>\n                  {`It couldn't be deleted since it has related records. You can `}\n                  <a onClick={this.handleModalOpen}>inspect relations here</a>.\n                </React.Fragment>\n              ),\n              /* eslint-enable jsx-a11y/anchor-is-valid, jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n              header: 'The record was not deleted',\n            },\n            type: 'ERROR',\n          })\n        }\n      }\n\n      // if there are no relationships, delete resource\n      const { del } = crudActionCreators[resource]\n\n      return dispatch(del({ id: itemId })).then(() => {\n        const notification =\n          resource === 'specimen'\n            ? {\n                componentProps: {\n                  description: 'Please wait while the table is updated...',\n                  header: 'The specimen was deleted',\n                },\n                ttl: 3000,\n                type: 'SUCCESS',\n              }\n            : {\n                componentProps: {\n                  header: 'The record was deleted',\n                },\n                type: 'SUCCESS',\n              }\n\n        createNotification(notification)\n        fetchResourceCount()\n        setTimeout(() => {\n          this.setState({ loadingDelete: false })\n        }, 2000)\n\n        if (onInteraction) {\n          onInteraction(DEL_SUCCESS)\n        }\n      })\n    }\n\n    handleModalClose() {\n      this.setState({ open: false })\n    }\n\n    handleModalOpen() {\n      this.setState({ open: true })\n    }\n\n    render() {\n      const { itemHeader, itemSubHeader } = this.props\n      const { loadingDelete, open, relationships } = this.state\n\n      return (\n        <React.Fragment>\n          <ComposedComponent\n            {...this.props}\n            loadingDelete={loadingDelete}\n            onDelete={this.handleDelete}\n          />\n          {open && (\n            <InspectRelationsModal\n              onClose={this.handleModalClose}\n              recordHeader={`${itemHeader}${\n                itemSubHeader ? ` (${itemSubHeader.toLowerCase()})` : ''\n              }`}\n              relationships={relationships}\n            />\n          )}\n        </React.Fragment>\n      )\n    }\n  }\n\n  DeleteHandler.propTypes = propTypes\n  DeleteHandler.defaultProps = defaultProps\n\n  return compose(\n    createGetResourceCount(),\n    connect(\n      undefined,\n      mapDispatchToProps\n    ),\n    connect(null) // needed to get dispatch\n  )(DeleteHandler)\n}\n\nexport default createHandleDelete\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  getFormValues,\n  reset as resetActionCreator,\n  startSubmit as startSubmitActionCreator,\n  stopSubmit as stopSubmitActionCreator,\n} from 'redux-form'\nimport { handleReduxFormSubmitError } from 'coreModules/form/utilities'\n\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport { EDIT_SUCCESS } from 'coreModules/resourceManager/constants'\n\nconst mapStateToProps = (state, { formName }) => {\n  return {\n    values: getFormValues(formName)(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  reset: resetActionCreator,\n  startSubmit: startSubmitActionCreator,\n  stopSubmit: stopSubmitActionCreator,\n}\n\nconst propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  fetchOneItemById: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n  resource: PropTypes.string.isRequired,\n  startSubmit: PropTypes.func.isRequired,\n  stopSubmit: PropTypes.func.isRequired,\n  transformOutput: PropTypes.func,\n  values: PropTypes.object,\n}\nconst defaultProps = {\n  itemId: undefined,\n  transformOutput: undefined,\n  values: undefined,\n}\n\nconst createHandleEditSubmit = () => ComposedComponent => {\n  class EditSubmitHandler extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n\n      const {\n        dispatch,\n        fetchOneItemById,\n        formName,\n        itemId,\n        resource,\n        startSubmit,\n        stopSubmit,\n        transformOutput,\n        values,\n      } = this.props\n\n      const update =\n        crudActionCreators[resource] && crudActionCreators[resource].update\n\n      startSubmit(formName)\n\n      return dispatch(\n        update({\n          item: {\n            id: itemId,\n            ...(transformOutput ? transformOutput(values) : values),\n          },\n          nested: true,\n        })\n      )\n        .then(() => {\n          fetchOneItemById(itemId)\n\n          this.props.onInteraction(EDIT_SUCCESS)\n          stopSubmit(formName)\n        })\n        .catch(handleReduxFormSubmitError)\n        .catch(err => {\n          stopSubmit(formName, err.errors)\n        })\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} onSubmit={this.handleSubmit} />\n    }\n  }\n\n  EditSubmitHandler.propTypes = propTypes\n  EditSubmitHandler.defaultProps = defaultProps\n\n  return compose(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    ),\n    connect(null) // needed to get dispatch\n  )(EditSubmitHandler)\n}\n\nexport default createHandleEditSubmit\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { reset as resetAC } from 'redux-form'\n\nconst mapDispatchToProps = {\n  reset: resetAC,\n}\n\nconst propTypes = {\n  formName: PropTypes.string.isRequired,\n  reset: PropTypes.func.isRequired,\n}\n\nconst createHandleUndoChanges = () => ComposedComponent => {\n  class UndoChangesHandler extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleUndoChanges = this.handleUndoChanges.bind(this)\n    }\n\n    handleUndoChanges(event) {\n      event.preventDefault()\n      const { formName } = this.props\n      this.props.reset(formName)\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          onUndoChanges={this.handleUndoChanges}\n        />\n      )\n    }\n  }\n\n  UndoChangesHandler.propTypes = propTypes\n\n  return compose(\n    connect(\n      undefined,\n      mapDispatchToProps\n    )\n  )(UndoChangesHandler)\n}\n\nexport default createHandleUndoChanges\n","export { default as createHandleCancelCreate } from './createHandleCancelCreate'\nexport { default as createHandleCreateSubmit } from './createHandleCreateSubmit'\nexport { default as createHandleDelete } from './createHandleDelete'\nexport { default as createHandleEditSubmit } from './createHandleEditSubmit'\nexport { default as createHandleUndoChanges } from './createHandleUndoChanges'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport createLog from 'utilities/log'\nimport {\n  DefaultLoader,\n  DefaultWrapper,\n  DefaultLoadingError,\n} from '../components'\n\nexport default function createAsyncView({\n  Loader = DefaultLoader,\n  LoadingError = DefaultLoadingError,\n  modules: modulesLoader,\n  name,\n  view: viewLoader,\n  Wrapper = DefaultWrapper,\n}) {\n  const log = createLog(`modules:bootstrap:createAsyncView:${name}`)\n  const load = () => {\n    if (!modulesLoader) {\n      return viewLoader().then(view => {\n        return {\n          modules: [],\n          view,\n        }\n      })\n    }\n    return Promise.resolve().then(() => {\n      return Promise.all(modulesLoader()).then(modules => {\n        return viewLoader().then(view => {\n          return {\n            modules,\n            view,\n          }\n        })\n      })\n    })\n  }\n\n  const contextTypes = {\n    store: PropTypes.object,\n  }\n\n  class AsyncLoader extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        FetchedComponent: null,\n        loading: true,\n        loadingError: null,\n        loadingFailed: false,\n      }\n    }\n\n    componentDidMount() {\n      this.mounting = true\n      log.mount('Start')\n      load()\n        .then(({ view, modules }) => {\n          const { store } = this.context\n          store.registerModules([view, ...modules])\n          if (this.mounting) {\n            this.setState({\n              FetchedComponent: view.Component,\n              loading: false,\n            })\n            log.mount('Done')\n          }\n        })\n        .catch(err => {\n          this.setState({\n            loading: false,\n            loadingError: err,\n            loadingFailed: true,\n          })\n        })\n    }\n\n    componentWillUnmount() {\n      this.mounting = false\n      log.unmount('Start')\n      load().then(({ view, modules }) => {\n        const { store } = this.context\n        store.unregisterModules([view, ...modules])\n        log.unmount('Done')\n      })\n    }\n\n    render() {\n      log.render('Render')\n      const {\n        FetchedComponent,\n        loading,\n        loadingError,\n        loadingFailed,\n      } = this.state\n      return (\n        <Wrapper>\n          {loadingFailed && <LoadingError error={loadingError} />}\n          {FetchedComponent && <FetchedComponent {...this.props} />}\n          <Loader loading={loading} />\n        </Wrapper>\n      )\n    }\n  }\n\n  AsyncLoader.contextTypes = contextTypes\n  return AsyncLoader\n}\n","import createAsyncView from './createAsyncView'\nimport createSyncView from './createSyncView'\n\nexport { createAsyncView, createSyncView }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { markdownToHtmlAsync } from '../utilities'\n\nconst propTypes = {\n  markdown: PropTypes.string.isRequired,\n}\n\nclass MarkdownToHtmlAsync extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      html: null,\n    }\n  }\n  componentDidMount() {\n    const { markdown } = this.props\n\n    markdownToHtmlAsync(markdown).then(html => {\n      this.setState({\n        html,\n      })\n    })\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.markdown !== this.props.markdown) {\n      this.setState({\n        html: null,\n      })\n      markdownToHtmlAsync(nextProps.markdown).then(html => {\n        this.setState({\n          html,\n        })\n      })\n    }\n  }\n  render() {\n    if (this.state.html) {\n      return (\n        <div\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{ __html: this.state.html }} // eslint-disable-line react/no-danger\n        />\n      )\n    }\n    return <div />\n  }\n}\n\nMarkdownToHtmlAsync.propTypes = propTypes\n\nexport default MarkdownToHtmlAsync\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport extractProps from 'utilities/extractProps'\nimport FieldTemplate, {\n  defaultProps as fieldTemplateDefaultProps,\n  fieldTemplatePropKeys,\n  propTypes as fieldTemplatePropTypes,\n} from 'coreModules/form/components/FieldTemplate'\nimport FieldLabel from 'coreModules/form/components/FieldTemplate/FieldLabel'\nimport { createParameterKey } from 'coreModules/form/utilities'\n\nconst propTypes = {\n  inline: PropTypes.bool,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  required: PropTypes.bool,\n  ...fieldTemplatePropTypes,\n}\nconst defaultProps = {\n  inline: false,\n  ...fieldTemplateDefaultProps,\n}\n\nexport default function wrapInFieldTemplate(ComposedComponent) {\n  const WrappedInFieldTemplate = props => {\n    const {\n      displayLabel,\n      enableHelpNotifications,\n      helpNotificationProps,\n      helpText,\n      inline,\n      input,\n      label,\n      meta,\n      model,\n      module,\n      parameterKeyInput,\n    } = props\n\n    const parameterKey =\n      parameterKeyInput ||\n      createParameterKey({\n        model,\n        name: input.name,\n      })\n\n    const fieldLabel = inline ? (\n      <FieldLabel\n        enableHelpNotifications={enableHelpNotifications}\n        helpNotificationProps={helpNotificationProps}\n        helpText={helpText}\n        htmlFor={input.name}\n        label={label}\n        module={module}\n        parameterKey={parameterKey}\n      />\n    ) : (\n      undefined\n    )\n\n    const { extractedProps: fieldTemplateProps, rest } = extractProps({\n      keys: fieldTemplatePropKeys,\n      props,\n    })\n\n    return (\n      <FieldTemplate\n        {...fieldTemplateProps}\n        displayLabel={!fieldLabel && displayLabel}\n        label={fieldLabel ? undefined : label}\n        meta={meta}\n        name={input.name}\n      >\n        <ComposedComponent {...rest} meta={meta} module={module} />\n      </FieldTemplate>\n    )\n  }\n\n  WrappedInFieldTemplate.propTypes = propTypes\n  WrappedInFieldTemplate.defaultProps = defaultProps\n\n  return WrappedInFieldTemplate\n}\n","import React, { Component } from 'react'\nimport { DropdownSearch } from 'coreModules/form/components'\n\nconst include = ['acceptedTaxonName']\n\nconst relationships = ['acceptedTaxonName']\n\nconst resolveRelationships = ['taxonName']\n\nconst extractText = nestedItem => {\n  const acceptedTaxonName = nestedItem && nestedItem.acceptedTaxonName\n  if (!acceptedTaxonName) {\n    return ''\n  }\n\n  return `${acceptedTaxonName.name} [${acceptedTaxonName.rank}]`\n}\n\nclass TaxonDropdownSearch extends Component {\n  render() {\n    const { ...rest } = this.props\n    return (\n      <DropdownSearch\n        {...rest}\n        extractText={extractText}\n        include={include}\n        nestItems\n        relationships={relationships}\n        resolveRelationships={resolveRelationships}\n        resource=\"taxon\"\n        type=\"dropdown-search-resource\"\n      />\n    )\n  }\n}\n\nexport default TaxonDropdownSearch\n","import notificationSelectors from 'coreModules/notifications/globalSelectors'\nimport { globalSelectors as layoutGlobalSelectors } from './keyObjectModule'\nimport { APPLICATION_LAYER_VIEW, APPLICATION_LAYER_MODAL } from './constants'\n\nconst getRightSidebarIsOpen = globalState => {\n  const notification = notificationSelectors.getPrioritizedNotificationByDisplayType(\n    globalState,\n    'inline'\n  )\n  return !!notification\n}\n\nconst getRightSidebarIsClosed = globalState => {\n  return !getRightSidebarIsOpen(globalState)\n}\n\nconst getApplicationInModalLayer = globalState => {\n  return (\n    layoutGlobalSelectors.get.applicationLayer(globalState) ===\n    APPLICATION_LAYER_MODAL\n  )\n}\n\nconst getApplicationInViewLayer = globalState => {\n  return (\n    layoutGlobalSelectors.get.applicationLayer(globalState) ===\n    APPLICATION_LAYER_VIEW\n  )\n}\n\nexport default {\n  getApplicationInModalLayer,\n  getApplicationInViewLayer,\n  getRightSidebarIsClosed,\n  getRightSidebarIsOpen,\n}\n","import debug from 'debug'\n\nexport const APP_PREFIX = 'DINA'\n\nexport const priorityMap = {\n  alert: 'LOG_ALERT',\n  crit: 'LOG_CRIT',\n  debug: 'LOG_DEBUG',\n  emerg: 'LOG_EMERG',\n  err: 'LOG_ERR',\n  info: 'LOG_INFO',\n  notice: 'LOG_NOTICE',\n  warning: 'LOG_WARNING',\n}\n\nexport const shortCuts = {\n  mount: 'REACT:MOUNT',\n  render: 'REACT:RENDER',\n  unmount: 'REACT:UNMOUNT',\n}\n\nexport const createShortcutLogFunction = ({ context, shortcut }) => {\n  let count = 0\n  const log = debug(`${APP_PREFIX}:${shortcut}:${context}`)\n  return (message = '', ...rest) => {\n    const countMessage = `Count: ${count}. ${message}`\n    log(countMessage, ...rest)\n    count += 1\n  }\n}\n\nexport const createLevelLogFunction = ({ context, priority }) => {\n  return debug(`${APP_PREFIX}:${priority}:${context}`)\n}\n\nexport default function createLog(context) {\n  const priorityLog = Object.keys(priorityMap).reduce((log, level) => {\n    const priority = priorityMap[level]\n    return {\n      ...log,\n      [level]: createLevelLogFunction({ context, priority }),\n    }\n  }, {})\n\n  const shortcutLog = Object.keys(shortCuts).reduce((log, shourcutKey) => {\n    const shortcut = shortCuts[shourcutKey]\n    return {\n      ...log,\n      [shourcutKey]: createShortcutLogFunction({\n        context,\n        shortcut,\n      }),\n    }\n  }, {})\n\n  return {\n    ...priorityLog,\n    ...shortcutLog,\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonDropdownSearch from '../TaxonDropdownSearch'\n\nlet TaxonManager = null\n\nexport function setLocalManager(InjectedTaxonManager) {\n  TaxonManager = InjectedTaxonManager\n}\n\nconst propTypes = {\n  fieldSearchQuery: PropTypes.string,\n  fieldValue: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  fieldSearchQuery: undefined,\n  fieldValue: undefined,\n}\n\nexport class TaxonDropdownPickerSearch extends Component {\n  render() {\n    const {\n      fieldSearchQuery,\n      fieldValue,\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pickerActive,\n      ...rest\n    } = this.props\n    if (pickerActive) {\n      const initialFilterValues = fieldSearchQuery\n        ? {\n            name: fieldSearchQuery,\n          }\n        : undefined\n\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <TaxonManager\n              initialFilterValues={initialFilterValues}\n              initialItemId={fieldValue}\n              isPicker\n              onInteraction={onInteraction}\n              pickerTitle=\"Pick taxon\"\n              treeEnabled\n            />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Pick</Button>\n\n    return <TaxonDropdownSearch rightButton={picker} {...rest} />\n  }\n}\n\nTaxonDropdownPickerSearch.propTypes = propTypes\nTaxonDropdownPickerSearch.defaultProps = defaultProps\n\nexport default createPickerWrapper({})(TaxonDropdownPickerSearch)\n","let sequentialId = 0 // eslint-disable-line no-underscore-dangle\n\nconst defaultSpecifications = {\n  priority: 10,\n}\n\nconst buildNotification = (notificationSpecification = {}) => {\n  sequentialId += 1\n\n  return {\n    ...defaultSpecifications,\n    ...notificationSpecification,\n    sequentialId,\n  }\n}\n\nexport default buildNotification\n","import { COLLISION_STACK, COLLISION_REPLACE } from './constants'\n\nexport const notification = {\n  additionalProperties: false,\n  properties: {\n    collision: { enum: [COLLISION_REPLACE, COLLISION_STACK], type: 'string' },\n    component: { type: 'object' },\n    componentProps: { type: 'object' },\n    displayType: { type: 'string' },\n    priority: { type: 'number' },\n    ttl: { type: 'number' },\n    type: { type: 'string' },\n  },\n  required: ['component', 'displayType', 'priority', 'type'],\n}\n","import { NOTIFICATIONS_CREATE_NOTIFICATION } from '../actionTypes'\nimport globalSelectors from '../globalSelectors'\nimport { buildNotification } from '../utilities'\n\nexport default function createNotification({\n  type,\n  ...specificationOverrides\n}) {\n  return (dispatch, getState) => {\n    const notificationSpecification = globalSelectors.getSpecificationByType(\n      getState(),\n      type\n    )\n\n    const newNotification = buildNotification({\n      ...notificationSpecification,\n      ...specificationOverrides,\n    })\n\n    return dispatch({\n      payload: newNotification,\n      type: NOTIFICATIONS_CREATE_NOTIFICATION,\n    })\n  }\n}\n","import config from 'config'\n\nconst getDevToolsExtensionEnhancer = () => {\n  if (config.isDevelopment) {\n    const { devToolsExtension } = window\n\n    if (typeof devToolsExtension === 'function') {\n      return devToolsExtension\n    }\n  }\n  return null\n}\n\nconst name = 'devToolsExtension'\nconst enhancer = getDevToolsExtensionEnhancer()\n\nexport { enhancer, name }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport config from 'config'\n\nimport {\n  capitalizeFirstLetter,\n  getTranslationByPath,\n  outputIsATextKey,\n} from '../utilities'\n\nconst contextTypes = {\n  language: PropTypes.string.isRequired,\n  markdown: PropTypes.object.isRequired,\n  translations: PropTypes.object.isRequired,\n}\nconst propTypes = {\n  capitalize: PropTypes.bool,\n  fallback: PropTypes.string,\n  fallbackLanguage: PropTypes.string,\n  params: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  textKey: PropTypes.string,\n  textKeys: PropTypes.arrayOf(PropTypes.string),\n}\nconst defaultProps = {\n  capitalize: false,\n  fallback: undefined,\n  fallbackLanguage: undefined,\n\n  params: null,\n  textKey: '',\n  textKeys: [],\n}\n\nconst Translate = (\n  { capitalize, fallback, fallbackLanguage, params, textKey, textKeys },\n  { language, markdown, translations }\n) => {\n  const markdownOutput = getTranslationByPath(markdown, {\n    fallbackLanguage,\n    language,\n    textKey,\n    textKeys,\n  })\n\n  if (\n    markdownOutput &&\n    !outputIsATextKey({ output: markdownOutput, textKey, textKeys })\n  ) {\n    return <div dangerouslySetInnerHTML={{ __html: markdownOutput }} /> // eslint-disable-line react/no-danger\n  }\n\n  const translation = getTranslationByPath(translations, {\n    language,\n    params,\n    textKey,\n    textKeys,\n  })\n\n  const output =\n    capitalize && translation ? capitalizeFirstLetter(translation) : translation\n\n  if (!output || outputIsATextKey({ output, textKey, textKeys })) {\n    if (!config.isTest) {\n      /* eslint-disable no-console */\n      console.warn(\n        `Translation not found for path: ${textKey ||\n          (textKeys && textKeys.join(', '))}`,\n        translations\n      )\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (\n    outputIsATextKey({ output, textKey, textKeys }) &&\n    fallback !== undefined\n  ) {\n    return <span>{fallback}</span>\n  }\n\n  return <span>{output || textKey}</span>\n}\n\nTranslate.contextTypes = contextTypes\nTranslate.propTypes = propTypes\nTranslate.defaultProps = defaultProps\n\nexport default Translate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Translate from './Translate'\nimport { buildTextKeys } from '../utilities'\n\nconst propTypes = {\n  module: PropTypes.string,\n  modules: PropTypes.arrayOf(PropTypes.string),\n  scope: PropTypes.string,\n  textKey: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  module: '',\n  modules: [],\n  scope: '',\n}\n\nconst ModuleTranslate = ({\n  module: moduleInput,\n  modules: modulesInput,\n  textKey,\n  scope,\n  ...rest\n}) => {\n  const modules =\n    modulesInput && modulesInput.length ? modulesInput : [moduleInput]\n  const textKeys = buildTextKeys({ modules, scope, textKey })\n  return <Translate textKeys={textKeys} {...rest} />\n}\n\nModuleTranslate.propTypes = propTypes\nModuleTranslate.defaultProps = defaultProps\n\nexport default ModuleTranslate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ModuleTranslate from './ModuleTranslate'\n\nconst propTypes = {\n  textKey: PropTypes.string.isRequired,\n}\n\nexport default function createModuleTranslate(moduleName, { scope = '' } = {}) {\n  const ModuleTranslateWrapper = ({ ...rest }) => {\n    return <ModuleTranslate scope={scope} {...rest} module={moduleName} />\n  }\n  ModuleTranslateWrapper.propTypes = propTypes\n  return ModuleTranslateWrapper\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { Dropdown } from 'semantic-ui-react'\nimport i18nLocalSelectors from 'coreModules/i18n/globalSelectors'\nimport { setLanguage as setLanguageActionCreator } from 'coreModules/i18n/actionCreators'\n\nconst mapStateToProps = state => ({\n  availableLanguages: i18nLocalSelectors.getAvailableLanguages(state),\n  language: i18nLocalSelectors.getLanguage(state),\n})\n\nconst mapDispatchToProps = {\n  setLanguage: setLanguageActionCreator,\n}\n\nconst propTypes = {\n  availableLanguages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  color: PropTypes.string,\n  language: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  setLanguage: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  color: '',\n  onChange: null,\n}\n\nexport const LanguageSelect = ({\n  availableLanguages,\n  color,\n  language,\n  onChange: customOnChange,\n  setLanguage,\n}) => {\n  const languageOptions = availableLanguages.map(availableLanguage => {\n    return {\n      key: availableLanguage,\n      text: availableLanguage,\n      value: availableLanguage,\n    }\n  })\n\n  return (\n    <Dropdown\n      button\n      className={color ? `icon ${color}` : 'icon'}\n      floating\n      icon=\"world\"\n      labeled\n      onChange={(event, data) => {\n        setLanguage(data.value)\n        if (customOnChange) {\n          customOnChange(data.value)\n        }\n      }}\n      options={languageOptions}\n      renderLabel={({ text }) => text}\n      value={language}\n    />\n  )\n}\n\nLanguageSelect.propTypes = propTypes\nLanguageSelect.defaultProps = defaultProps\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelect)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { getTranslationByPath } from '../utilities'\n\nconst contextTypes = {\n  language: PropTypes.string.isRequired,\n  markdown: PropTypes.object.isRequired,\n}\n\nconst propTypes = {\n  fallbackLanguage: PropTypes.string,\n  textKey: PropTypes.string,\n  textKeys: PropTypes.arrayOf(PropTypes.string),\n}\nconst defaultProps = {\n  fallbackLanguage: undefined,\n  textKey: '',\n  textKeys: [],\n}\n\nconst Markdown = (\n  { textKey, textKeys, fallbackLanguage },\n  { language, markdown }\n) => {\n  const output = getTranslationByPath(markdown, {\n    fallbackLanguage,\n    language,\n    textKey,\n    textKeys,\n  })\n  if (!output || output === textKey) {\n    console.warn(`Translation not found for path: ${textKey}`, markdown) // eslint-disable-line no-console\n  }\n\n  return (\n    <div\n      className=\"markdown-body\"\n      dangerouslySetInnerHTML={{ __html: output }} // eslint-disable-line react/no-danger\n    />\n  )\n}\n\nMarkdown.contextTypes = contextTypes\nMarkdown.propTypes = propTypes\nMarkdown.defaultProps = defaultProps\n\nexport default Markdown\n","import createModuleTranslate from './createModuleTranslate'\nimport I18nProvider from './I18nProvider'\nimport LanguageSelect from './LanguageSelect'\nimport Markdown from './Markdown'\nimport MarkdownToHtmlAsync from './MarkdownToHtmlAsync'\nimport ModuleTranslate from './ModuleTranslate'\nimport Translate from './Translate'\n\nexport {\n  createModuleTranslate,\n  I18nProvider,\n  LanguageSelect,\n  Markdown,\n  MarkdownToHtmlAsync,\n  ModuleTranslate,\n  Translate,\n}\n","export default function createModelLink({ version = 1, modelName }) {\n  return `/docs/${version}/models/${modelName}`\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'semantic-ui-react'\n\nimport config from 'config'\n\nconst propTypes = {\n  autoComplete: PropTypes.string,\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  focusOnMount: PropTypes.bool,\n  icon: PropTypes.string,\n  iconPosition: PropTypes.string,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  max: PropTypes.number,\n  min: PropTypes.number,\n  placeholder: PropTypes.string,\n  size: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n}\nconst defaultProps = {\n  autoComplete: undefined,\n  disabled: false,\n  fluid: false,\n  focusOnMount: false,\n  icon: undefined,\n  iconPosition: 'left',\n  max: undefined,\n  min: undefined,\n  placeholder: undefined,\n  size: undefined,\n  style: undefined,\n  type: 'text',\n}\n\nclass TextInput extends PureComponent {\n  componentDidMount() {\n    if (this.props.focusOnMount && !config.isTest) {\n      this.input.focus()\n    }\n  }\n\n  render() {\n    const {\n      autoComplete,\n      disabled,\n      fluid,\n      icon,\n      iconPosition,\n      input,\n      max,\n      min,\n      placeholder,\n      size,\n      style,\n      type,\n    } = this.props\n\n    return (\n      <Input\n        autoComplete={autoComplete}\n        disabled={disabled}\n        fluid={fluid}\n        icon={icon}\n        iconPosition={icon && iconPosition}\n        max={max}\n        min={min}\n        placeholder={placeholder}\n        ref={element => {\n          this.input = element\n        }}\n        type={type}\n        {...input}\n        size={size}\n        style={style}\n      />\n    )\n  }\n}\n\nTextInput.propTypes = propTypes\nTextInput.defaultProps = defaultProps\n\nexport default TextInput\n","export const I18N_SET_LANGUAGE = 'I18N_SET_LANGUAGE'\nexport const I18N_SET_TRANSLATIONS = 'I18N_SET_TRANSLATIONS'\n","import { actionCreators as localStorageAC } from 'redux-module-local-storage'\nimport { USER_LOG_OUT_SUCCESS } from '../actionTypes'\nimport { AUTH_TOKEN_KEY } from '../constants'\n\nexport default function logout() {\n  return dispatch => {\n    dispatch(localStorageAC.removeItem(AUTH_TOKEN_KEY))\n\n    setTimeout(() => {\n      dispatch({\n        type: USER_LOG_OUT_SUCCESS,\n      })\n    })\n  }\n}\n","import createEndpoint from 'utilities/endpointFactory/client'\nimport { immutableReplace } from 'utilities/stateHelper'\n\nexport const LOG_IN = createEndpoint({\n  mapResponse: res => {\n    return immutableReplace(res, {\n      newPath: 'accessToken',\n      oldPath: 'access_token',\n    })\n  },\n  methodName: 'formPost',\n  operationId: 'loginUser',\n})\n\nexport const GET_USER = createEndpoint({\n  mapResponse: res => {\n    return immutableReplace(res, {\n      newPath: 'username',\n      oldPath: 'preferred_username',\n    })\n  },\n  operationId: 'userInfoGetOne',\n  pathname: '/auth/realms/dina/protocol/openid-connect/userinfo',\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport extractProps from 'utilities/extractProps'\nimport TextInput from '../../inputs/Input/Text'\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nfunction Input(props) {\n  const { input, type } = props\n\n  let Component\n  let castType\n  switch (type) {\n    case 'input-text': {\n      Component = TextInput\n      castType = 'text'\n      break\n    }\n    case 'text': {\n      Component = TextInput\n      castType = 'text'\n      break\n    }\n    case 'number': {\n      Component = TextInput\n      castType = 'number'\n      break\n    }\n    case 'password': {\n      Component = TextInput\n      castType = 'password'\n      break\n    }\n    default: {\n      throw new Error(`Type: ${type} is not supported`)\n    }\n  }\n\n  const { name } = input\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={name}>\n      <Component {...rest} input={input} type={castType} />\n    </FieldTemplate>\n  )\n}\n\nInput.propTypes = propTypes\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport extractProps from 'utilities/extractProps'\nimport TextAreaInput from '../../inputs/TextArea'\n\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nfunction TextArea(props) {\n  const { input } = props\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={input.name}>\n      <TextAreaInput {...rest} />\n    </FieldTemplate>\n  )\n}\n\nTextArea.propTypes = propTypes\n\nexport default TextArea\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropdownSearch } from 'coreModules/form/components'\n\nconst include = ['parent']\nconst resolveRelationships = ['place']\n\nconst extractText = nestedItem => {\n  if (!nestedItem) {\n    return ''\n  }\n\n  const { name, group, parent } = nestedItem\n  if (!parent) {\n    return `${name} [${group}]`\n  }\n\n  return `${name} [${group} in ${parent.name}]`\n}\n\nconst propTypes = {\n  excludeRootNode: PropTypes.bool,\n}\n\nconst defaultProps = {\n  excludeRootNode: true,\n}\n\nclass LocalityDropdownSearch extends Component {\n  render() {\n    const { excludeRootNode, ...rest } = this.props\n    return (\n      <DropdownSearch\n        {...rest}\n        excludeRootNode={excludeRootNode}\n        extractText={extractText}\n        include={include}\n        nestItems\n        relationships={include}\n        resolveRelationships={resolveRelationships}\n        resource=\"place\"\n        type=\"dropdown-search-resource\"\n      />\n    )\n  }\n}\n\nLocalityDropdownSearch.propTypes = propTypes\nLocalityDropdownSearch.defaultProps = defaultProps\n\nexport default LocalityDropdownSearch\n","import { createSelector } from 'reselect'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport getSecondArgument from 'utilities/getSecondArgument'\nimport { SKELETON, SKIN, OTHER_PREPARATION, WET_PREPARATION } from './constants'\n\nconst {\n  preparationType: { getAll: getPreparationTypes },\n  featureType: {\n    getAll: getFeatureTypes,\n    getItemsObject: getFeatureTypesObject,\n  },\n} = globalCrudSelectors\n\nconst createDropdownSelector = (categoryFilter, numberOfResults) => {\n  return createSelector(\n    [getPreparationTypes, getSecondArgument],\n    (preparationTypes, searchQuery = '') => {\n      const lowerCaseSearchQuery = searchQuery.toLowerCase()\n      const mappedPreparationTypes = preparationTypes\n        .filter(({ attributes }) =>\n          categoryFilter === 'all'\n            ? true\n            : attributes.category === categoryFilter\n        )\n        .map(({ id, attributes }) => {\n          return {\n            key: id,\n            text: capitalizeFirstLetter(attributes.name.en),\n            value: id,\n          }\n        })\n\n      const firstLetterMatches = mappedPreparationTypes.filter(({ text }) => {\n        if (!searchQuery) {\n          return true\n        }\n        return text && text.toLowerCase().indexOf(lowerCaseSearchQuery) === 0\n      })\n\n      const otherMatches = mappedPreparationTypes.filter(({ text }) => {\n        if (!searchQuery) {\n          return false\n        }\n        return text && text.toLowerCase().indexOf(lowerCaseSearchQuery) > 0\n      })\n\n      return [...firstLetterMatches, ...otherMatches].slice(0, numberOfResults)\n    }\n  )\n}\n\nconst getDropdownSkeletonOptions = createDropdownSelector(SKELETON)\nconst getDropdownSkinOptions = createDropdownSelector(SKIN)\nconst getDropdownWetPreparationOptions = createDropdownSelector(WET_PREPARATION)\nconst getDropdownOtherPreparationOptions = createDropdownSelector(\n  OTHER_PREPARATION\n)\n\nconst getPreparationTypeOptions = (state, category) => {\n  switch (category) {\n    case SKELETON: {\n      return getDropdownSkeletonOptions(state)\n    }\n    case SKIN: {\n      return getDropdownSkinOptions(state)\n    }\n    case WET_PREPARATION: {\n      return getDropdownWetPreparationOptions(state)\n    }\n    case OTHER_PREPARATION: {\n      return getDropdownOtherPreparationOptions(state)\n    }\n    default: {\n      throw new Error(`unknown preparationType category: ${category}`)\n    }\n  }\n}\n\nconst getGroupedFeatureTypeIds = createSelector(\n  getFeatureTypes,\n  featureTypes => {\n    return featureTypes.reduce((groupToIdsMap, { id, attributes }) => {\n      const { group } = attributes\n      return {\n        ...groupToIdsMap,\n        [group]: groupToIdsMap[group] ? [...groupToIdsMap[group], id] : [id],\n      }\n    }, {})\n  }\n)\n\nconst getFeatureTypesInGroups = createSelector(\n  [\n    getFeatureTypesObject,\n    getGroupedFeatureTypeIds,\n    (_, groups) => (groups ? groups.join() : ''),\n  ],\n  (featureTypesObject, groupToIdsMap, groupsString) => {\n    return groupsString.split(',').reduce((arr, group) => {\n      const featureTypeIds = groupToIdsMap[group]\n\n      const groupFeatureTypes =\n        featureTypeIds &&\n        featureTypeIds.map(id => {\n          return featureTypesObject[id]\n        })\n\n      return groupFeatureTypes ? [...arr, ...groupFeatureTypes] : arr\n    }, [])\n  }\n)\n\nconst getNumberOfFeatureTypesInGroups = createSelector(\n  getFeatureTypesInGroups,\n  featureTypes => {\n    return featureTypes.length\n  }\n)\n\nexport default {\n  getDropdownSkeletonOptions,\n  getDropdownSkinOptions,\n  getDropdownWetPreparationOptions,\n  getFeatureTypesInGroups,\n  getGroupedFeatureTypeIds,\n  getNumberOfFeatureTypesInGroups,\n  getPreparationTypeOptions,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'semantic-ui-react'\n\nimport { getTimestampFromYMD } from 'common/es5/date'\nimport createDeleteProperties from 'common/es5/createDeleteProperties'\nimport FieldTemplate from '../../../FieldTemplate'\n\nconst deleteEmptyStringProperties = createDeleteProperties('')\nconst deleteUndefinedProperties = createDeleteProperties(undefined)\n\nconst inputYearStyle = {\n  float: 'left',\n  paddingRight: '0.2em',\n  width: '4.5em',\n}\n\nconst inputMonthStyle = {\n  float: 'left',\n  paddingLeft: '0.2em',\n  paddingRight: '0.2em',\n  width: '3.5em',\n}\n\nconst inputDayStyle = {\n  float: 'left',\n  paddingLeft: '0.2em',\n  width: '3.5em',\n}\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  displayLabel: PropTypes.bool,\n  displaySubLabel: PropTypes.bool,\n  enableHelpNotifications: PropTypes.bool,\n  hidden: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        day: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        month: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        year: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      }),\n    ]),\n  }).isRequired,\n  isEndDate: PropTypes.bool,\n  isStartDate: PropTypes.bool,\n  label: PropTypes.node,\n  module: PropTypes.string,\n  name: PropTypes.string,\n  setYearInputRef: PropTypes.func,\n}\nconst defaultProps = {\n  disabled: false,\n  displayLabel: undefined,\n  displaySubLabel: undefined,\n  enableHelpNotifications: undefined,\n  hidden: false,\n  isEndDate: false,\n  isStartDate: false,\n  label: undefined,\n  module: undefined,\n  name: undefined,\n  setYearInputRef: undefined,\n}\n\nclass DatePart extends Component {\n  constructor(props) {\n    super(props)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnFocus = this.handleOnFocus.bind(this)\n  }\n\n  handleOnBlur() {\n    const { onBlur } = this.props.input\n\n    if (!onBlur) {\n      return null\n    }\n\n    return onBlur(this.props.input.value)\n  }\n\n  handleOnChange({ event, field }) {\n    const {\n      input: { onChange, value },\n      isEndDate,\n      isStartDate,\n    } = this.props\n\n    if (!onChange) {\n      return null\n    }\n\n    const updatedDatePartValues = {\n      ...(value || {}),\n      // overwrite one of day, month, year with the new value\n      [field]: event.target.value && Number(event.target.value),\n    }\n\n    const interpretedTimestamp = getTimestampFromYMD({\n      isEndDate,\n      isStartDate,\n      ...updatedDatePartValues,\n    })\n\n    return onChange(\n      deleteUndefinedProperties(\n        deleteEmptyStringProperties({\n          ...updatedDatePartValues,\n          interpretedTimestamp,\n        })\n      )\n    )\n  }\n\n  handleOnFocus() {\n    const { onFocus } = this.props.input\n\n    if (!onFocus) {\n      return null\n    }\n\n    return onFocus(this.props.input.value)\n  }\n\n  render() {\n    const {\n      disabled,\n      displayLabel,\n      displaySubLabel,\n      label,\n      enableHelpNotifications,\n      hidden,\n      input: { value },\n      module,\n      name,\n      setYearInputRef,\n    } = this.props\n    const { day, month, year } = value || {}\n\n    return (\n      <FieldTemplate\n        displayLabel={label !== undefined && displayLabel}\n        enableHelpNotifications={enableHelpNotifications}\n        float=\"left\"\n        label={label}\n        meta={{}}\n        module={module}\n        name={name}\n        style={{ display: hidden ? 'none' : undefined, width: 'initial' }}\n      >\n        <div>\n          <div style={inputYearStyle}>\n            <FieldTemplate\n              displayLabel={displaySubLabel}\n              enableHelpNotifications={false}\n              float=\"left\"\n              label=\"Year\"\n              meta={{}}\n              name=\"year\"\n              subLabel\n            >\n              <Input\n                className=\"arrowless right aligned\"\n                disabled={disabled}\n                fluid\n                onBlur={event => {\n                  this.handleOnBlur({ event, field: 'year' })\n                }}\n                onChange={event => {\n                  this.handleOnChange({ event, field: 'year' })\n                }}\n                onFocus={event => {\n                  this.handleOnFocus({ event, field: 'year' })\n                }}\n                ref={setYearInputRef}\n                type=\"number\"\n                value={year || ''}\n              />\n            </FieldTemplate>\n          </div>\n          <div style={inputMonthStyle}>\n            <FieldTemplate\n              displayLabel={displaySubLabel}\n              enableHelpNotifications={false}\n              float=\"left\"\n              label=\"Month\"\n              meta={{}}\n              name=\"month\"\n              subLabel\n            >\n              <Input\n                className=\"arrowless right aligned\"\n                disabled={disabled}\n                fluid\n                max={12}\n                min={1}\n                onBlur={event => {\n                  this.handleOnBlur({ event, field: 'month' })\n                }}\n                onChange={event => {\n                  this.handleOnChange({ event, field: 'month' })\n                }}\n                onFocus={event => {\n                  this.handleOnFocus({ event, field: 'month' })\n                }}\n                type=\"number\"\n                value={month || ''}\n              />\n            </FieldTemplate>\n          </div>\n          <div style={inputDayStyle}>\n            <FieldTemplate\n              displayLabel={displaySubLabel}\n              enableHelpNotifications={false}\n              float=\"left\"\n              label=\"Day\"\n              meta={{}}\n              name=\"day\"\n              subLabel\n            >\n              <Input\n                className=\"arrowless right aligned\"\n                disabled={disabled}\n                fluid\n                max={31}\n                min={1}\n                onBlur={event => {\n                  this.handleOnBlur({ event, field: 'day' })\n                }}\n                onChange={event => {\n                  this.handleOnChange({ event, field: 'day' })\n                }}\n                onFocus={event => {\n                  this.handleOnFocus({ event, field: 'day' })\n                }}\n                type=\"number\"\n                value={day || ''}\n              />\n            </FieldTemplate>\n          </div>\n        </div>\n      </FieldTemplate>\n    )\n  }\n}\n\nDatePart.propTypes = propTypes\nDatePart.defaultProps = defaultProps\n\nexport default DatePart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Radio } from 'semantic-ui-react'\n\nimport FieldTemplate from '../../../FieldTemplate'\n\nconst propTypes = {\n  dateType: PropTypes.string.isRequired,\n  dateTypes: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  enableHelpNotifications: PropTypes.bool,\n  module: PropTypes.string,\n  name: PropTypes.string,\n  onDateTypeChange: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  enableHelpNotifications: undefined,\n  module: undefined,\n  name: undefined,\n}\n\nconst DateTypeRadios = ({\n  dateType: currentDateType,\n  dateTypes,\n  enableHelpNotifications,\n  module,\n  name,\n  onDateTypeChange: handleDateTypeChange,\n}) => {\n  return (\n    <FieldTemplate\n      enableHelpNotifications={enableHelpNotifications}\n      label=\"Date type\"\n      meta={{}}\n      module={module}\n      name={name}\n      style={{ marginBottom: '0.5em', width: '100%' }}\n      subLabel\n    >\n      <div>\n        {dateTypes.map(dateType => {\n          return (\n            <Radio\n              checked={currentDateType === dateType}\n              className=\"inline group\"\n              key={dateType}\n              label={dateType}\n              name=\"radioGroup\"\n              onChange={handleDateTypeChange}\n              value={dateType}\n            />\n          )\n        })}\n      </div>\n    </FieldTemplate>\n  )\n}\n\nDateTypeRadios.propTypes = propTypes\nDateTypeRadios.defaultProps = defaultProps\n\nexport default DateTypeRadios\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport extractProps from 'utilities/extractProps'\nimport { LATEST, OPEN_RANGE, RANGE, SINGLE } from 'coreModules/form/constants'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../../FieldTemplate'\nimport DatePart from '../DatePart'\nimport { getRangeValue, getRangeValueAfterDateTypeChange } from '../utilities'\nimport DateTypeRadios from './DateTypeRadios'\n\nconst SELECTABLE_DATE_TYPES = [SINGLE, RANGE, LATEST]\n\nconst onePartErrorFieldStyle = {\n  marginBottom: emToPixels(3.75),\n}\nconst onePartErrorLabelStyle = {\n  left: -emToPixels(11.5),\n  position: 'relative',\n  top: emToPixels(3.75),\n  width: emToPixels(11.5),\n}\nconst twoPartErrorLabelStyle = {\n  width: emToPixels(25),\n}\nconst datePartStyle = {\n  float: 'left',\n  width: '11.5em',\n}\nconst datePartSeparatorStyle = {\n  float: 'left',\n  marginTop: '1.75em',\n  textAlign: 'center',\n  width: '2em',\n}\n\nconst propTypes = {\n  componentErrors: PropTypes.object,\n  displayDateTypeRadios: PropTypes.bool,\n  displayEndDateLabel: PropTypes.bool,\n  displayLabel: PropTypes.bool,\n  displayStartDateLabel: PropTypes.bool,\n  displaySubLabels: PropTypes.bool,\n  enableHelpNotifications: PropTypes.bool,\n  endDateLabel: PropTypes.node,\n  initialDateType: PropTypes.oneOf([LATEST, OPEN_RANGE, RANGE, SINGLE]),\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        endDate: PropTypes.shape({\n          day: PropTypes.number,\n          interpretedTimeStamp: PropTypes.string,\n          month: PropTypes.number,\n          year: PropTypes.number,\n        }),\n        startDate: PropTypes.shape({\n          day: PropTypes.number,\n          interpretedTimeStamp: PropTypes.string,\n          month: PropTypes.number,\n          year: PropTypes.number,\n        }),\n      }),\n      PropTypes.string,\n    ]),\n  }).isRequired,\n  meta: PropTypes.object.isRequired,\n  module: PropTypes.string,\n  mountHidden: PropTypes.bool,\n  stack: PropTypes.bool,\n  startDateLabel: PropTypes.node,\n}\n\nconst defaultProps = {\n  componentErrors: {},\n  displayDateTypeRadios: false,\n  displayEndDateLabel: false,\n  displayLabel: false,\n  displayStartDateLabel: false,\n  displaySubLabels: true,\n  enableHelpNotifications: undefined,\n  endDateLabel: undefined,\n  initialDateType: 'single',\n  module: 'form',\n  mountHidden: config.isTest,\n  stack: false,\n  startDateLabel: undefined,\n}\n\nclass DateRange extends Component {\n  constructor(props) {\n    super(props)\n    this.getFieldInput = this.getFieldInput.bind(this)\n    this.setStartYearInputRef = this.setStartYearInputRef.bind(this)\n    this.setEndYearInputRef = this.setEndYearInputRef.bind(this)\n    this.handleFocusEndYear = this.handleFocusEndYear.bind(this)\n    this.handleFocusStartYear = this.handleFocusStartYear.bind(this)\n    this.handleDateTypeChange = this.handleDateTypeChange.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnBlur = this.handleOnBlur.bind(this)\n    this.handleOnFocus = this.handleOnFocus.bind(this)\n\n    this.state = {\n      dateType:\n        objectPath.get(props, 'input.value.dateType') || props.initialDateType,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextDateType = objectPath.get(nextProps, 'input.value.dateType')\n    if (nextDateType && this.state.dateType !== nextDateType) {\n      this.setState({ dateType: nextDateType })\n    }\n  }\n\n  getFieldInput(datePartName) {\n    const { input } = this.props\n    const fieldName = `${input.name}.${datePartName}`\n\n    const updatedInput = {\n      name: fieldName,\n      onBlur: value => {\n        this.handleOnBlur({\n          datePartName,\n          value,\n        })\n      },\n      onChange: value => {\n        this.handleOnChange({\n          datePartName,\n          value,\n        })\n      },\n      onFocus: value => {\n        this.handleOnFocus({\n          datePartName,\n          value,\n        })\n      },\n      value: input.value[datePartName] || {},\n    }\n    return updatedInput\n  }\n\n  setStartYearInputRef(element) {\n    this.startYearInput = element\n  }\n\n  setEndYearInputRef(element) {\n    this.endYearInput = element\n  }\n\n  handleFocusEndYear() {\n    // wait for it to be mounted\n    if (this.endYearInput) {\n      this.endYearInput.focus()\n    }\n  }\n\n  handleFocusStartYear() {\n    // wait for it to be mounted\n    if (this.startYearInput) {\n      this.startYearInput.focus()\n    }\n  }\n\n  handleDateTypeChange(event, { value: nextDateType }) {\n    event.preventDefault()\n    const { value: currentRangeValue } = this.props.input\n\n    this.setState(({ dateType: previousDateType }) => {\n      const updatedValue = getRangeValueAfterDateTypeChange({\n        currentRangeValue,\n        nextDateType,\n        previousDateType,\n      })\n\n      this.props.input.onChange(updatedValue)\n\n      // setTimeout needed to allow component to mount first, if necessary\n      if (nextDateType === LATEST) {\n        setTimeout(() => this.handleFocusEndYear())\n      } else {\n        setTimeout(() => this.handleFocusStartYear())\n      }\n\n      return { dateType: nextDateType }\n    })\n  }\n\n  // DatePart is not updating value on blur\n  handleOnBlur() {\n    this.props.input.onBlur(this.props.input.value)\n  }\n\n  handleOnChange({\n    datePartName: updatedDatePartName,\n    value: updatedDatePartValue,\n  }) {\n    const { value: currentRangeValue } = this.props.input\n    const { dateType } = this.state\n\n    const updatedValue = getRangeValue({\n      currentRangeValue,\n      dateType,\n      updatedDatePartName,\n      updatedDatePartValue,\n    })\n\n    this.props.input.onChange(updatedValue)\n  }\n\n  // DatePart is not updating value on focus\n  handleOnFocus() {\n    this.props.input.onFocus(this.props.input.value)\n  }\n\n  render() {\n    const {\n      displayDateTypeRadios,\n      displayEndDateLabel,\n      displayStartDateLabel,\n      displaySubLabels,\n      enableHelpNotifications,\n      endDateLabel,\n      input,\n      meta,\n      module,\n      mountHidden,\n      stack,\n      startDateLabel,\n    } = this.props\n\n    const { dateType } = this.state\n\n    const hasError = meta.touched && !!meta.error\n\n    const { extractedProps: fieldTemplateProps } = extractProps({\n      keys: fieldTemplatePropKeys,\n      props: this.props,\n    })\n\n    return (\n      <FieldTemplate\n        {...fieldTemplateProps}\n        displayError={hasError}\n        enableHelpNotifications={enableHelpNotifications}\n        errorStyle={\n          dateType === SINGLE ? onePartErrorLabelStyle : twoPartErrorLabelStyle\n        }\n        name={input.name}\n        style={\n          hasError && dateType === SINGLE ? onePartErrorFieldStyle : undefined\n        }\n      >\n        {displayDateTypeRadios && (\n          <DateTypeRadios\n            dateType={dateType}\n            dateTypes={SELECTABLE_DATE_TYPES}\n            enableHelpNotifications={false}\n            module={module}\n            name={input.name}\n            onDateTypeChange={this.handleDateTypeChange}\n          />\n        )}\n        {!stack && (\n          <div>\n            <div style={datePartStyle}>\n              <DatePart\n                disabled={dateType === LATEST}\n                displayLabel={displayStartDateLabel}\n                displaySubLabel={displaySubLabels}\n                enableHelpNotifications={\n                  enableHelpNotifications && displayStartDateLabel\n                }\n                input={this.getFieldInput('startDate')}\n                isStartDate\n                label={startDateLabel}\n                meta={{}}\n                module={module}\n                name={`${input.name}.startDate`}\n                setYearInputRef={this.setStartYearInputRef}\n              />\n            </div>\n            {dateType !== SINGLE && (\n              <div style={datePartSeparatorStyle}> – </div>\n            )}\n            <div style={datePartStyle}>\n              <DatePart\n                displayLabel={displayEndDateLabel}\n                displaySubLabel={displaySubLabels}\n                enableHelpNotifications={\n                  enableHelpNotifications && displayEndDateLabel\n                }\n                hidden={dateType === SINGLE}\n                input={this.getFieldInput('endDate')}\n                isEndDate\n                label={endDateLabel}\n                meta={{}}\n                module={module}\n                name={`${input.name}.endDate`}\n                setYearInputRef={this.setEndYearInputRef}\n              />\n            </div>\n          </div>\n        )}\n\n        {stack && (\n          <div>\n            <div\n              style={{ float: 'left', marginBottom: '0.8em', width: '100%' }}\n            >\n              <DatePart\n                disabled={dateType === LATEST}\n                displayLabel={displayStartDateLabel}\n                displaySubLabel={displaySubLabels}\n                enableHelpNotifications={\n                  enableHelpNotifications && displayStartDateLabel\n                }\n                input={this.getFieldInput('startDate')}\n                isStartDate\n                label={startDateLabel}\n                meta={{}}\n                module={module}\n                name={`${input.name}.startDate`}\n                setYearInputRef={this.setStartYearInputRef}\n              />\n            </div>\n            <div style={{ float: 'left', width: '100%' }}>\n              <DatePart\n                displayLabel={displayEndDateLabel}\n                displaySubLabel={displaySubLabels}\n                enableHelpNotifications={\n                  enableHelpNotifications && displayEndDateLabel\n                }\n                hidden={dateType === SINGLE}\n                input={this.getFieldInput('endDate')}\n                isEndDate\n                label={endDateLabel}\n                meta={{}}\n                module={module}\n                name={`${input.name}.endDate`}\n                setYearInputRef={this.setEndYearInputRef}\n              />\n            </div>\n          </div>\n        )}\n\n        {mountHidden && (\n          <input\n            className=\"hidden\"\n            {...input}\n            name={`${input.name}.hidden`}\n            onChange={this.props.input.onChange}\n            type=\"hidden\"\n            value={input.value || ''}\n          />\n        )}\n      </FieldTemplate>\n    )\n  }\n}\n\nDateRange.defaultProps = defaultProps\nDateRange.propTypes = propTypes\n\nexport default DateRange\n","import { getEarliestTimestamp, getTimestampFromYMD } from 'common/es5/date'\nimport { LATEST, RANGE, SINGLE } from 'coreModules/form/constants'\n\nexport const isInt = value => {\n  return (\n    !Number.isNaN(value) &&\n    Number.parseInt(Number(value), 10) == value && // eslint-disable-line eqeqeq\n    !Number.isNaN(parseInt(value, 10))\n  )\n}\n\nexport const getRangeValue = ({\n  currentRangeValue,\n  dateType,\n  updatedDatePartName,\n  updatedDatePartValue,\n}) => {\n  let newValue\n  if (dateType === LATEST && updatedDatePartName === 'endDate') {\n    newValue = {\n      dateType,\n      endDate: updatedDatePartValue,\n      startDate:\n        updatedDatePartValue && Object.keys(updatedDatePartValue).length\n          ? {\n              interpretedTimestamp: getEarliestTimestamp(),\n            }\n          : {},\n    }\n  } else if (dateType === SINGLE && updatedDatePartName === 'startDate') {\n    newValue = {\n      dateType,\n      endDate:\n        updatedDatePartValue && Object.keys(updatedDatePartValue).length\n          ? {\n              ...updatedDatePartValue,\n              interpretedTimestamp: getTimestampFromYMD({\n                ...updatedDatePartValue,\n                isEndDate: true,\n              }),\n            }\n          : {},\n      startDate: updatedDatePartValue,\n    }\n  } else {\n    newValue = {\n      ...currentRangeValue,\n      dateType,\n      [updatedDatePartName]: updatedDatePartValue,\n    }\n  }\n\n  if (newValue.endDate && !Object.keys(newValue.endDate).length) {\n    delete newValue.endDate\n  }\n  if (newValue.startDate && !Object.keys(newValue.startDate).length) {\n    delete newValue.startDate\n  }\n\n  if (!newValue.endDate && !newValue.startDate) {\n    return {}\n  }\n  return newValue\n}\n\nexport const getRangeValueAfterDateTypeChange = ({\n  currentRangeValue,\n  nextDateType,\n  previousDateType,\n}) => {\n  const updatedValue = { ...currentRangeValue, dateType: nextDateType }\n\n  if (previousDateType === LATEST && nextDateType === RANGE) {\n    // keep end date, but clear start date\n    updatedValue.startDate = {}\n  } else if (previousDateType === LATEST && nextDateType === SINGLE) {\n    updatedValue.startDate = {}\n    updatedValue.endDate = {}\n  } else if (previousDateType === RANGE && nextDateType === LATEST) {\n    if (\n      currentRangeValue.endDate &&\n      currentRangeValue.endDate.interpretedTimestamp\n    ) {\n      updatedValue.startDate = {\n        interpretedTimestamp: getEarliestTimestamp(),\n      }\n    } else {\n      updatedValue.endDate = {}\n      updatedValue.startDate = {}\n    }\n  } else if (previousDateType === RANGE && nextDateType === SINGLE) {\n    if (\n      currentRangeValue.startDate &&\n      currentRangeValue.startDate.interpretedTimestamp\n    ) {\n      updatedValue.endDate = {\n        ...updatedValue.startDate,\n        interpretedTimestamp: getTimestampFromYMD({\n          ...updatedValue.startDate,\n          isEndDate: true,\n        }),\n      }\n    } else {\n      updatedValue.endDate = {}\n      updatedValue.startDate = {}\n    }\n  } else if (previousDateType === SINGLE && nextDateType === LATEST) {\n    if (\n      currentRangeValue.startDate &&\n      currentRangeValue.startDate.interpretedTimestamp\n    ) {\n      updatedValue.endDate = {\n        ...updatedValue.startDate,\n        interpretedTimestamp: getTimestampFromYMD({\n          ...updatedValue.startDate,\n          isEndDate: true,\n        }),\n      }\n      updatedValue.startDate = {\n        interpretedTimestamp: getEarliestTimestamp(),\n      }\n    } else {\n      updatedValue.startDate = {}\n      updatedValue.endDate = {}\n    }\n  } else if (previousDateType === SINGLE && nextDateType === RANGE) {\n    // noop\n  }\n\n  return updatedValue\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\n\nimport extractProps from 'utilities/extractProps'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport FieldTemplate, {\n  propTypes as fieldTemplateProps,\n} from '../FieldTemplate'\n\nconst propTypes = {\n  buttonText: PropTypes.string,\n  buttonTextKey: PropTypes.string,\n  displayLabel: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool.isRequired,\n  module: PropTypes.string,\n  setAsLatestActiveField: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  buttonText: undefined,\n  buttonTextKey: undefined,\n  displayLabel: false,\n  module: undefined,\n}\n\nconst DefaultRenderEmptyState = props => {\n  const {\n    buttonText,\n    buttonTextKey,\n    displayLabel,\n    isLatestActiveField,\n    input: { name },\n    module,\n    setAsLatestActiveField,\n  } = props\n\n  const { extractedProps } = extractProps({\n    keys: Object.keys(fieldTemplateProps),\n    props,\n  })\n\n  const hasCustomText = buttonText || buttonTextKey\n\n  return (\n    <FieldTemplate\n      {...extractedProps}\n      displayLabel={displayLabel || !hasCustomText}\n      name={name}\n    >\n      <div style={{ position: 'relative' }}>\n        <Button\n          onClick={isLatestActiveField ? undefined : setAsLatestActiveField}\n        >\n          {hasCustomText &&\n            (buttonText || (\n              <ModuleTranslate\n                capitalize\n                module={module}\n                textKey={buttonTextKey}\n              />\n            ))}\n          {!hasCustomText && (\n            <ModuleTranslate capitalize module=\"form\" textKey=\"clickToAdd\" />\n          )}\n        </Button>\n      </div>\n    </FieldTemplate>\n  )\n}\n\nDefaultRenderEmptyState.propTypes = propTypes\nDefaultRenderEmptyState.defaultProps = defaultProps\n\nexport default DefaultRenderEmptyState\n","import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { injectIsLatestActiveField } from 'coreModules/form/higherOrderComponents'\nimport DefaultRenderEmptyState from './DefaultRenderEmptyState'\nimport DefaultRenderResult from './DefaultRenderResult'\n\nconst defaultGetHasValue = input => input && input.value\n\nconst propTypes = {\n  forceRenderInput: PropTypes.bool,\n  forceRenderResult: PropTypes.bool,\n  getHasValue: PropTypes.func,\n  input: PropTypes.shape({\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.shape({\n        normalized: PropTypes.shape({\n          id: PropTypes.string,\n        }),\n        textI: PropTypes.string,\n        textV: PropTypes.string,\n      }),\n    ]),\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool.isRequired,\n  renderEmptyState: PropTypes.func,\n  renderInput: PropTypes.func.isRequired,\n  renderResult: PropTypes.func,\n}\nconst defaultProps = {\n  forceRenderInput: false,\n  forceRenderResult: false,\n  getHasValue: defaultGetHasValue,\n  renderEmptyState: DefaultRenderEmptyState,\n  renderResult: DefaultRenderResult,\n}\n\nclass TogglableField extends PureComponent {\n  render() {\n    const {\n      forceRenderInput,\n      forceRenderResult,\n      getHasValue,\n      input,\n      isLatestActiveField,\n      renderInput,\n      renderResult,\n      renderEmptyState,\n    } = this.props\n\n    if (forceRenderInput || (isLatestActiveField && !forceRenderResult)) {\n      return renderInput(this.props)\n    }\n\n    if ((isLatestActiveField && forceRenderResult) || getHasValue(input)) {\n      return renderResult(this.props)\n    }\n\n    return renderEmptyState(this.props)\n  }\n}\n\nTogglableField.propTypes = propTypes\nTogglableField.defaultProps = defaultProps\n\nexport default injectIsLatestActiveField(TogglableField)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nimport extractProps from 'utilities/extractProps'\nimport FieldTemplate, {\n  propTypes as fieldTemplateProps,\n} from '../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]).isRequired,\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool.isRequired,\n  setAsLatestActiveField: PropTypes.func.isRequired,\n}\n\nconst DefaultRenderResult = props => {\n  const {\n    isLatestActiveField,\n    input: { name, value },\n    setAsLatestActiveField,\n  } = props\n\n  const { extractedProps } = extractProps({\n    keys: Object.keys(fieldTemplateProps),\n    props,\n  })\n\n  return (\n    <FieldTemplate {...extractedProps} name={name}>\n      <div style={{ position: 'relative' }}>\n        <strong>{value} </strong>\n        <Button\n          icon\n          onClick={isLatestActiveField ? undefined : setAsLatestActiveField}\n          style={{ marginLeft: '5px' }}\n        >\n          <Icon name=\"edit\" />\n        </Button>\n      </div>\n    </FieldTemplate>\n  )\n}\n\nDefaultRenderResult.propTypes = propTypes\n\nexport default DefaultRenderResult\n","import React, { Component } from 'react'\n\nimport { NAVIGATION_ITEMS } from '../constants'\n\nconst injectNavigationItems = ComposedComponent => {\n  class WithNavigationItems extends Component {\n    render() {\n      return (\n        <ComposedComponent {...this.props} navigationItems={NAVIGATION_ITEMS} />\n      )\n    }\n  }\n\n  return WithNavigationItems\n}\n\nexport default injectNavigationItems\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport getSecondArgument from 'utilities/getSecondArgument'\nimport injectNavigationItems from './injectNavigationItems'\n\nconst getActiveLocationTitleKey = createSelector(\n  navigationItems => navigationItems,\n  getSecondArgument,\n  (navigationItems, path = '') => {\n    const exactMatch = navigationItems.find(item => {\n      return path === item.path\n    })\n\n    if (exactMatch) {\n      return exactMatch.name\n    }\n\n    return navigationItems.reduce((bestMatch, item) => {\n      if (path.startsWith(item.path)) {\n        return item.name\n      }\n      return bestMatch\n    }, undefined)\n  }\n)\n\nconst injectActiveLocationDescription = ComposedComponent => {\n  const mapStateToProps = (_, { navigationItems, location: { pathname } }) => {\n    return {\n      activeLocationTitleKey: getActiveLocationTitleKey(\n        navigationItems,\n        pathname\n      ),\n    }\n  }\n\n  const propTypes = {\n    activeLocationTitleKey: PropTypes.string,\n    i18n: PropTypes.shape({\n      moduleTranslate: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    navigationItems: PropTypes.arrayOf(\n      PropTypes.shape({\n        exact: PropTypes.bool,\n        icon: PropTypes.string,\n        name: PropTypes.string,\n        path: PropTypes.string.isRequired,\n      }).isRequired\n    ),\n  }\n  const defaultProps = {\n    activeLocationTitleKey: undefined,\n    navigationItems: [],\n  }\n\n  class WithActiveLocationDescription extends Component {\n    render() {\n      const {\n        activeLocationTitleKey,\n        i18n: { moduleTranslate },\n      } = this.props\n      return (\n        <ComposedComponent\n          {...this.props}\n          activeLocationSubtitle={\n            activeLocationTitleKey !== 'start' &&\n            moduleTranslate({\n              capitalize: true,\n              fallback: 'pageSubtitle',\n              textKey: 'pageSubtitle',\n            })\n          }\n          activeLocationTitle={\n            activeLocationTitleKey &&\n            moduleTranslate({\n              capitalize: true,\n              fallback: activeLocationTitleKey,\n              textKey: activeLocationTitleKey,\n            })\n          }\n        />\n      )\n    }\n  }\n\n  WithActiveLocationDescription.propTypes = propTypes\n  WithActiveLocationDescription.defaultProps = defaultProps\n\n  return compose(\n    withI18n({ module: 'commonUi', scope: 'routes' }),\n    injectNavigationItems,\n    withRouter,\n    connect(mapStateToProps)\n  )(WithActiveLocationDescription)\n}\n\nexport default injectActiveLocationDescription\n","export {\n  default as injectActiveLocationDescription,\n} from './injectActiveLocationDescription'\nexport { default as injectNavigationItems } from './injectNavigationItems'\n","import { I18N_SET_LANGUAGE } from '../actionTypes'\n\nexport default function setLanguage(language) {\n  return {\n    payload: language,\n    type: I18N_SET_LANGUAGE,\n  }\n}\n","import setLanguage from './setLanguage'\n\nexport { setLanguage }\n","import { compose } from 'redux'\nimport {\n  createLocalState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport LocalityManager from './Base'\n\nexport default compose(\n  createLocalState(),\n  createNavigationState()\n)(LocalityManager)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { Button, Modal } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\nimport AgentDropdownSearch from '../AgentDropdownSearch'\nimport AgentManager from '../AgentManager/Local'\n\nconst propTypes = {\n  fieldValue: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.shape({\n      normalized: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n      textI: PropTypes.string,\n      textV: PropTypes.string,\n    }),\n  ]),\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pathToIdInValue: PropTypes.string.isRequired,\n  pathToTextInValue: PropTypes.string.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n  reportPickerActive: PropTypes.func,\n}\n\nconst defaultProps = {\n  fieldValue: undefined,\n  reportPickerActive: undefined,\n}\n\nexport class AgentDropdownPickerSearch extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.reportPickerActive) {\n      if (prevProps.pickerActive !== this.props.pickerActive) {\n        this.props.reportPickerActive(this.props.pickerActive)\n      }\n    }\n  }\n\n  render() {\n    const {\n      fieldValue,\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pathToIdInValue,\n      pathToTextInValue,\n      pickerActive,\n      ...rest\n    } = this.props\n\n    if (pickerActive) {\n      const initialFilterValues = objectPath.get(fieldValue, pathToTextInValue)\n        ? {\n            fullName: objectPath.get(fieldValue, pathToTextInValue),\n          }\n        : undefined\n\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <AgentManager\n              initialFilterValues={initialFilterValues}\n              initialItemId={objectPath.get(fieldValue, pathToIdInValue)}\n              isPicker\n              onInteraction={onInteraction}\n              pickerTitle=\"Pick agent\"\n              treeEnabled={false}\n            />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Pick</Button>\n\n    return (\n      <AgentDropdownSearch\n        {...rest}\n        pathToIdInValue={pathToIdInValue}\n        pathToTextInValue={pathToTextInValue}\n        rightButton={picker}\n      />\n    )\n  }\n}\n\nAgentDropdownPickerSearch.propTypes = propTypes\nAgentDropdownPickerSearch.defaultProps = defaultProps\n\nexport default createPickerWrapper({\n  pathToIdInValue: 'normalized.id',\n  pathToTextInValue: 'textI',\n  requireEitherIdOrValue: true,\n})(AgentDropdownPickerSearch)\n","import coreToNestedSync from 'common/es5/formatObject/coreToNestedSync'\nimport crudSelectors from 'coreModules/crud/globalSelectors'\nimport { getItemWithSpecificedRelationships } from 'coreModules/crud/utilities'\nimport { actionCreators as keyObjectActionCreators } from '../keyObjectModule'\n\nconst setNestedItemActionCreator =\n  keyObjectActionCreators.set['nestedCache.:namespace.items.:id']\n\nexport default function createNestedItem({\n  item,\n  namespace,\n  relationships = [],\n  resolveRelationships = [],\n  resource,\n  storeResult = true,\n}) {\n  const parentRelationships = relationships.includes('all')\n    ? []\n    : relationships.filter(relationship => {\n        if (relationship === 'children') {\n          return false\n        }\n        return true\n      })\n\n  const childrenRelationships = relationships.includes('all')\n    ? []\n    : relationships.filter(relationship => {\n        if (relationship === 'parent') {\n          return false\n        }\n        return true\n      })\n\n  return (dispatch, getState) => {\n    const state = getState()\n    const getItemByTypeId = (type, id, { relationshipKey } = {}) => {\n      if (!resolveRelationships.includes(type)) {\n        return null\n      }\n\n      let getItemByTypeRelationships = relationships\n      if (relationshipKey === 'parent') {\n        getItemByTypeRelationships = parentRelationships\n      }\n      if (relationshipKey === 'children') {\n        getItemByTypeRelationships = childrenRelationships\n      }\n\n      const getOneSelector = crudSelectors[type] && crudSelectors[type].getOne\n      const getOneByLidSelector =\n        crudSelectors[type] && crudSelectors[type].getOneByLid\n\n      const dependencyItem =\n        (getOneSelector && getOneSelector(state, id)) ||\n        (getOneByLidSelector && getOneByLidSelector(state, id)) ||\n        null\n\n      if (!dependencyItem) {\n        return dependencyItem\n      }\n\n      const itemWithRelationships = getItemWithSpecificedRelationships({\n        item: dependencyItem,\n        relationshipKeys: getItemByTypeRelationships,\n      })\n\n      if (!itemWithRelationships) {\n        return null\n      }\n      return itemWithRelationships\n    }\n\n    const nested = coreToNestedSync({\n      getItemByTypeId,\n      item: getItemWithSpecificedRelationships({\n        item,\n        relationshipKeys: relationships,\n      }),\n      type: resource,\n    })\n    if (storeResult) {\n      dispatch(\n        setNestedItemActionCreator(nested, {\n          id: item.id,\n          namespace,\n        })\n      )\n    }\n\n    return nested\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox } from 'semantic-ui-react'\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  label: PropTypes.any,\n}\n\nconst defaultProps = {\n  disabled: false,\n  label: undefined,\n}\n\nconst CheckboxInput = ({ disabled, input, label }) => {\n  const { value, onChange: reduxFormOnChange, ...inputRest } = input\n  const checked = !!value\n  return (\n    <Checkbox\n      checked={checked}\n      disabled={disabled}\n      label={label}\n      onChange={(event, data) => {\n        reduxFormOnChange(data.checked)\n      }}\n      type=\"checkbox\"\n      {...inputRest}\n    />\n  )\n}\n\nCheckboxInput.propTypes = propTypes\nCheckboxInput.defaultProps = defaultProps\n\nexport default CheckboxInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header } from 'semantic-ui-react'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  as: PropTypes.string,\n  children: PropTypes.node,\n  module: PropTypes.string.isRequired,\n  textKey: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  as: 'h1',\n  children: undefined,\n}\n\nconst TranslatedHeader = ({ as, children, module, textKey }) => {\n  return (\n    <Header as={as}>\n      <ModuleTranslate\n        capitalize\n        fallback={textKey}\n        module={module}\n        textKey={textKey}\n      />\n      {children}\n    </Header>\n  )\n}\n\nTranslatedHeader.propTypes = propTypes\nTranslatedHeader.defaultProps = defaultProps\n\nexport default TranslatedHeader\n","import { ACCEPTED, SYNONYM, VERNACULAR } from './constants'\n\nexport const mapTaxonNameToOption = ({ id, attributes }) => {\n  return {\n    key: id,\n    text: attributes.name,\n    value: id,\n  }\n}\n\nconst createListItem = ({ taxonName, nameType, stateIndex, stateType }) => {\n  if (!(taxonName && taxonName.id)) {\n    return null\n  }\n\n  if (stateType === 'object') {\n    return {\n      ...taxonName,\n      nameType,\n      stateType,\n    }\n  }\n\n  return {\n    ...taxonName,\n    nameType,\n    stateIndex,\n    stateType,\n  }\n}\n\nconst createListArray = ({ taxonNames = [], nameType, stateType }) => {\n  return taxonNames.map((taxonName, index) => {\n    return createListItem({\n      nameType,\n      stateIndex: index,\n      stateType,\n      taxonName,\n    })\n  })\n}\n\nexport const createSortedNameList = ({\n  acceptedTaxonName,\n  synonyms,\n  vernacularNames,\n}) => {\n  const nameList = [\n    createListItem({\n      nameType: ACCEPTED,\n      stateType: 'object',\n      taxonName: acceptedTaxonName,\n    }),\n    ...createListArray({\n      nameType: SYNONYM,\n      stateType: 'array',\n      taxonNames: synonyms,\n    }),\n    ...createListArray({\n      nameType: VERNACULAR,\n      stateType: 'array',\n      taxonNames: vernacularNames,\n    }),\n  ]\n  return nameList.filter(taxonName => !!taxonName)\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Header, Icon, Popup, Table } from 'semantic-ui-react'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\n\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\nimport { ConfirmationPopup } from 'coreModules/form/components'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nimport {\n  ACCEPTED,\n  DISCONNECT_TAXON_NAME,\n  SET_TAXON_NAME_AS_ACCEPTED,\n  SYNONYM,\n} from '../../constants'\n\nconst propTypes = {\n  item: PropTypes.object,\n  itemId: PropTypes.string.isRequired,\n  nameType: PropTypes.string.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  stateIndex: PropTypes.number,\n}\nconst defaultProps = {\n  item: undefined,\n  stateIndex: undefined,\n}\n\nclass TaxonNameRow extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = { popupOpen: false }\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  handleRemove() {\n    const { itemId, nameType, onInteraction, stateIndex } = this.props\n    onInteraction(DISCONNECT_TAXON_NAME, {\n      itemId,\n      nameType,\n      stateIndex,\n    })\n  }\n\n  render() {\n    const { popupOpen } = this.state\n    const { item, itemId, nameType, onInteraction, stateIndex } = this.props\n\n    const { attributes: { name, rank, rubinNumber } = {} } = item || {}\n\n    return (\n      <Table.Row positive={nameType === ACCEPTED || undefined}>\n        <Table.Cell>{name}</Table.Cell>\n        <Table.Cell>{rank}</Table.Cell>\n        <Table.Cell>{rubinNumber}</Table.Cell>\n        <Table.Cell>{nameType}</Table.Cell>\n        <Table.Cell>\n          <Popup\n            content={\n              <React.Fragment>\n                <Header>Choose an action</Header>\n                {nameType === SYNONYM && (\n                  <React.Fragment>\n                    <a // eslint-disable-line\n                      onClick={event => {\n                        event.preventDefault()\n                        onInteraction(SET_TAXON_NAME_AS_ACCEPTED, {\n                          itemId,\n                          nameType,\n                          stateIndex,\n                        })\n                        this.setState({ popupOpen: false })\n                      }}\n                    >\n                      Set as accepted\n                    </a>\n                    <br />\n                  </React.Fragment>\n                )}\n                <Link\n                  to={`/app/taxonNames?filterColumn=&itemId=${itemId}&mainColumn=edit`}\n                >\n                  Edit scientific name\n                </Link>\n                {nameType === SYNONYM && (\n                  <React.Fragment>\n                    <br />\n                    <ConfirmationPopup\n                      cancelButtonText={\n                        <ModuleTranslate\n                          capitalize\n                          module=\"taxon\"\n                          textKey=\"cancel\"\n                        />\n                      }\n                      confirmButtonText={\n                        <ModuleTranslate\n                          capitalize\n                          module=\"taxon\"\n                          textKey=\"remove\"\n                        />\n                      }\n                      header={\n                        <ModuleTranslate\n                          capitalize\n                          module=\"taxon\"\n                          textKey=\"removeThisTaxon\"\n                        />\n                      }\n                      hideOnScroll\n                      onConfirm={this.handleRemove}\n                      text={\n                        <ModuleTranslate\n                          capitalize\n                          module=\"taxon\"\n                          textKey=\"removeFromThisTaxon\"\n                        />\n                      }\n                      type=\"link\"\n                    />\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            }\n            open={popupOpen}\n            position=\"bottom right\"\n            trigger={\n              <Icon\n                name=\"ellipsis vertical\"\n                onClick={() => this.setState({ popupOpen: !popupOpen })}\n                size=\"large\"\n                style={{ cursor: 'pointer' }}\n              />\n            }\n          />\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n}\n\nTaxonNameRow.propTypes = propTypes\nTaxonNameRow.defaultProps = defaultProps\n\nexport default compose(\n  createGetItemById({\n    refresh: false,\n    resource: 'taxonName',\n  })\n)(TaxonNameRow)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\n\nimport TaxonNameDropdownSearch from '../TaxonNameDropdownSearch'\nimport { ADD_SYNONYM } from '../../constants'\n\nconst propTypes = {\n  isFirstName: PropTypes.bool.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nexport class NewTaxonNameRow extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(itemId) {\n    if (itemId) {\n      this.props.onInteraction(ADD_SYNONYM, {\n        itemId,\n      })\n    }\n  }\n\n  render() {\n    const { isFirstName } = this.props\n\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <TaxonNameDropdownSearch\n            displayLabel={false}\n            enableHelpNotification={false}\n            input={{\n              name: 'newTaxonName',\n              onBlur: this.handleChange,\n              onChange: this.handleChange,\n            }}\n            meta={{}}\n            module=\"taxon\"\n            placeholder={isFirstName ? 'Add accepted name' : undefined}\n            taxonNameType=\"neitherAcceptedNorSynonymToTaxon\"\n          />\n        </Table.Cell>\n        <Table.Cell />\n        <Table.Cell />\n        <Table.Cell />\n        <Table.Cell />\n      </Table.Row>\n    )\n  }\n}\n\nNewTaxonNameRow.propTypes = propTypes\n\nexport default compose()(NewTaxonNameRow)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Table } from 'semantic-ui-react'\nimport { arrayPush, arrayUnshift, arrayRemove, change } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport AddButton from 'coreModules/form/components/parts/StaticContent/AddButton'\nimport {\n  ACCEPTED,\n  ADD_SYNONYM,\n  DISCONNECT_TAXON_NAME,\n  SET_TAXON_NAME_AS_ACCEPTED,\n  SYNONYM,\n} from '../../constants'\nimport { createSortedNameList } from '../../utilities'\nimport TaxonNameRow from './TaxonNameRow'\nimport NewTaxonNameRow from './NewTaxonNameRow'\n\nconst log = createLog('modules:taxon:taxon:ScientificNamesTable')\n\nconst mapStateToProps = (state, { formValueSelector }) => {\n  const acceptedTaxonName = formValueSelector(state, 'acceptedTaxonName')\n  const synonyms = formValueSelector(state, 'synonyms')\n  const scientificNames = createSortedNameList({\n    acceptedTaxonName,\n    synonyms,\n  })\n\n  return {\n    acceptedTaxonName,\n    scientificNames,\n  }\n}\n\nconst mapDispatchToProps = {\n  arrayPush,\n  arrayRemove,\n  arrayUnshift,\n  change,\n}\n\nconst propTypes = {\n  acceptedTaxonName: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  arrayPush: PropTypes.func.isRequired,\n  arrayRemove: PropTypes.func.isRequired,\n  arrayUnshift: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  scientificNames: PropTypes.array.isRequired,\n}\n\nexport class ScientificNamesTable extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      connectingScientificName: props.scientificNames.length === 0,\n    }\n\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.setTaxonNameAsAccepted = this.setTaxonNameAsAccepted.bind(this)\n    this.disconnectTaxonName = this.disconnectTaxonName.bind(this)\n    this.addSynonym = this.addSynonym.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.scientificNames.length > 0 &&\n      nextProps.scientificNames.length === 0\n    ) {\n      this.setState({ connectingScientificName: true })\n    }\n  }\n\n  setTaxonNameAsAccepted({ itemId } = {}) {\n    const currentAcceptedName = this.props.acceptedTaxonName\n\n    this.disconnectTaxonName({\n      itemId,\n    })\n\n    if (currentAcceptedName && currentAcceptedName.id) {\n      this.setTaxonNameAsSynonym({\n        itemId: currentAcceptedName.id,\n        nameType: ACCEPTED,\n      })\n    }\n\n    return this.props.change(this.props.formName, 'acceptedTaxonName', {\n      id: itemId,\n    })\n  }\n\n  setTaxonNameAsSynonym({ itemId, nameType } = {}) {\n    this.addSynonym({\n      itemId,\n      unshift: nameType === ACCEPTED,\n    })\n    return null\n  }\n\n  addSynonym({ itemId, unshift = false } = {}) {\n    this.disconnectTaxonName({\n      itemId,\n    })\n\n    if (unshift) {\n      return this.props.arrayUnshift(this.props.formName, 'synonyms', {\n        id: itemId,\n      })\n    }\n\n    return this.props.arrayPush(this.props.formName, 'synonyms', {\n      id: itemId,\n    })\n  }\n\n  disconnectTaxonName({ itemId } = {}) {\n    const existingTaxonNameListItem = this.props.scientificNames.find(\n      ({ id }) => {\n        return id === itemId\n      }\n    )\n\n    if (!existingTaxonNameListItem) {\n      return null\n    }\n\n    const { nameType, stateIndex } = existingTaxonNameListItem\n\n    if (nameType === SYNONYM) {\n      this.props.arrayRemove(this.props.formName, 'synonyms', stateIndex)\n    }\n    if (nameType === ACCEPTED) {\n      this.props.change(this.props.formName, 'acceptedTaxonName', null)\n    }\n    return null\n  }\n\n  handleInteraction(interactionType, { itemId, stateIndex } = {}) {\n    switch (interactionType) {\n      case ADD_SYNONYM: {\n        this.setState({ connectingScientificName: false })\n\n        if (!this.props.scientificNames.length) {\n          this.setTaxonNameAsAccepted({ itemId })\n          break\n        }\n\n        // do nothing if name has already been added to list\n        if (this.props.scientificNames.find(({ id }) => itemId === id)) {\n          break\n        }\n\n        this.addSynonym({\n          itemId,\n        })\n        break\n      }\n      case DISCONNECT_TAXON_NAME: {\n        this.disconnectTaxonName({\n          itemId,\n          stateIndex,\n        })\n        break\n      }\n      case SET_TAXON_NAME_AS_ACCEPTED: {\n        this.setTaxonNameAsAccepted({\n          itemId,\n        })\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  render() {\n    log.render()\n    const { scientificNames } = this.props\n    const { connectingScientificName } = this.state\n\n    return (\n      <React.Fragment>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={6}>\n                <span className=\"required asterisk\">Name</span>\n              </Table.HeaderCell>\n              <Table.HeaderCell>Rank</Table.HeaderCell>\n              <Table.HeaderCell>RUBIN no.</Table.HeaderCell>\n              <Table.HeaderCell>Status</Table.HeaderCell>\n              <Table.HeaderCell>Actions</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {scientificNames.length > 0 &&\n              scientificNames.map(taxonItem => {\n                return (\n                  <TaxonNameRow\n                    itemId={taxonItem.id}\n                    key={taxonItem.id}\n                    nameType={taxonItem.nameType}\n                    onInteraction={this.handleInteraction}\n                    stateIndex={taxonItem.stateIndex}\n                  />\n                )\n              })}\n            {connectingScientificName && (\n              <NewTaxonNameRow\n                isFirstName={scientificNames.length === 0}\n                onInteraction={this.handleInteraction}\n              />\n            )}\n          </Table.Body>\n        </Table>\n        {!connectingScientificName && (\n          <AddButton\n            id=\"connect-scientific-name\"\n            module=\"taxon\"\n            onClick={event => {\n              event.preventDefault()\n              this.setState({ connectingScientificName: true })\n            }}\n            textKey=\"connectScientificName\"\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nScientificNamesTable.propTypes = propTypes\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ScientificNamesTable)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport {\n  ConfirmationPopup,\n  DropdownSearch,\n  Field,\n  Input,\n} from 'coreModules/form/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst log = createLog('modules:taxon:components:VernacularNamesTable:Row')\n\nconst languageOptions = [\n  {\n    key: 'en',\n    text: 'English',\n    value: 'en',\n  },\n  {\n    key: 'sv',\n    text: 'Svenska',\n    value: 'sv',\n  },\n]\n\nconst propTypes = {\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\n\nclass VernacularNamesTableRow extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  handleRemove() {\n    const { getTranslationPath, index, removeArrayFieldByIndex } = this.props\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      getPath,\n      i18n: { moduleTranslate },\n    } = this.props\n\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Column width={5}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={DropdownSearch}\n            displayLabel={false}\n            module=\"taxon\"\n            name={getPath('language')}\n            options={languageOptions}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'selectLanguage',\n            })}\n            type=\"dropdown-search-local\"\n          />\n        </Grid.Column>\n        <Grid.Column width={9}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={Input}\n            displayLabel={false}\n            fluid\n            module=\"taxon\"\n            name={getPath('name')}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'addNameOrNames',\n            })}\n            type=\"text\"\n          />\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ConfirmationPopup\n            cancelButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'cancel',\n            })}\n            confirmButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'remove',\n            })}\n            header={moduleTranslate({\n              capitalize: true,\n              textKey: 'removeThisVernacularName',\n            })}\n            hideOnScroll\n            iconName=\"trash\"\n            onConfirm={this.handleRemove}\n            size=\"large\"\n            type=\"icon\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nVernacularNamesTableRow.propTypes = propTypes\n\nexport default compose(\n  withI18n({ module: 'taxon' }),\n  pathBuilder()\n)(VernacularNamesTableRow)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { arrayRemove, change } from 'redux-form'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport AddButton from 'coreModules/form/components/parts/StaticContent/AddButton'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport VernacularNamesTableRow from './Row'\n\nconst log = createLog('modules:taxon:components:VernacularNamesTable')\n\nconst mapStateToProps = (state, { formValueSelector }) => {\n  return {\n    vernacularNames: formValueSelector(state, 'vernacularNames'),\n  }\n}\nconst mapDispatchToProps = {\n  changeFormValue: change,\n  removeArrayField: arrayRemove,\n}\n\nconst propTypes = {\n  changeFormValue: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  getPath: PropTypes.func.isRequired,\n  removeArrayField: PropTypes.func.isRequired,\n  vernacularNames: PropTypes.arrayOf(PropTypes.object),\n}\nconst defaultProps = {\n  vernacularNames: [],\n}\n\nclass VernacularNamesTable extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.changeFieldValue = this.changeFieldValue.bind(this)\n    this.removeArrayFieldByIndex = this.removeArrayFieldByIndex.bind(this)\n  }\n\n  changeFieldValue(fieldName, value) {\n    this.props.changeFormValue(this.props.formName, fieldName, value)\n  }\n\n  removeArrayFieldByIndex(fieldName, index) {\n    this.props.removeArrayField(this.props.formName, fieldName, index)\n  }\n\n  render() {\n    log.render()\n    const { getPath, vernacularNames } = this.props\n\n    return (\n      <Grid>\n        <Grid.Row className=\"relaxed\">\n          {vernacularNames\n            .map((vernacularName, index) => {\n              return (\n                <Grid.Column\n                  key={index} // eslint-disable-line react/no-array-index-key\n                  width={16}\n                >\n                  <VernacularNamesTableRow\n                    changeFieldValue={this.changeFieldValue}\n                    index={index}\n                    key={index} // eslint-disable-line react/no-array-index-key\n                    removeArrayFieldByIndex={this.removeArrayFieldByIndex}\n                  />\n                </Grid.Column>\n              )\n            })\n            .filter(item => !!item)}\n          <Grid.Column width={16}>\n            <AddButton\n              id=\"add-vernacular-name\"\n              module=\"taxon\"\n              onClick={event => {\n                event.preventDefault()\n                this.changeFieldValue(getPath(vernacularNames.length), {\n                  taxonNameType: 'vernacular',\n                  type: 'taxonName',\n                })\n              }}\n              textKey=\"addVernacularName\"\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\nVernacularNamesTable.propTypes = propTypes\nVernacularNamesTable.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  pathBuilder()\n)(VernacularNamesTable)\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport RankDropdown from '../RankDropdown'\nimport ScientificNamesTable from '../ScientificNamesTable'\nimport TaxonDropdownSearch from '../TaxonDropdownSearch'\nimport TaxonDropdownPickerSearch from '../TaxonDropdownPickerSearch'\nimport TaxonNameDropdownPickerSearch from '../AcceptedTaxonNameDropdownPickerSearch'\nimport TaxonNameDropdownSearch from '../TaxonNameDropdownSearch'\nimport TaxonNameTaxonStatus from '../TaxonNameTaxonStatus'\nimport TogglableTaxonDropdownPickerSearch from '../TogglableTaxonDropdownPickerSearch'\nimport VernacularNamesTable from '../VernacularNamesTable'\n\nexport default wrapReduxFormFieldParts({\n  RankDropdown,\n  ScientificNamesTable,\n  TaxonDropdownPickerSearch,\n  TaxonDropdownSearch,\n  TaxonNameDropdownPickerSearch,\n  TaxonNameDropdownSearch,\n  TaxonNameTaxonStatus,\n  TogglableTaxonDropdownPickerSearch,\n  VernacularNamesTable,\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  loading: PropTypes.bool.isRequired,\n}\nconst DefaultLoader = ({ loading }) => {\n  const style = {\n    height: '100%',\n    left: 0,\n    opacity: loading ? 0.7 : 0,\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    transition: 'opacity 0.5s',\n    width: '100%',\n    zIndex: 1000,\n  }\n  return <div className=\"dina background\" style={style} />\n}\n\nDefaultLoader.propTypes = propTypes\n\nexport default DefaultLoader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Header, Segment } from 'semantic-ui-react'\n\nconst propTypes = {\n  error: PropTypes.object,\n}\n\nconst defaultProps = {\n  error: null,\n}\n\nconst DefaultLoadingError = ({ error }) => {\n  return (\n    <Container>\n      <Header style={{ marginTop: 50 }}>Loading error</Header>\n      <p>\n        There was an error loading a module. Likely due to a new version.\n        <span style={{ fontWeight: 'bold' }}> Try and reload the page.</span>\n      </p>\n\n      <Header sub>Error details</Header>\n      {error && (\n        <Segment color=\"red\">\n          <p>Message: {error.message}</p>\n          <p>Stack: {error.stack}</p>\n          <p>Error object: {JSON.stringify(error, null, 2)}</p>\n        </Segment>\n      )}\n    </Container>\n  )\n}\n\nDefaultLoadingError.propTypes = propTypes\nDefaultLoadingError.defaultProps = defaultProps\n\nexport default DefaultLoadingError\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n}\nconst DefaultWrapper = ({ children }) => {\n  return <React.Fragment>{children}</React.Fragment>\n}\n\nDefaultWrapper.propTypes = propTypes\n\nexport default DefaultWrapper\n","import DefaultLoader from './DefaultLoader'\nimport DefaultLoadingError from './DefaultLoadingError'\nimport DefaultWrapper from './DefaultWrapper'\n\nexport { DefaultLoader, DefaultLoadingError, DefaultWrapper }\n","const calculateColumnWidths = ({ availableWidth, columns } = {}) => {\n  if (!columns) {\n    throw new Error('missing columns')\n  }\n\n  if (!columns.length) {\n    return []\n  }\n\n  const specifiedWidths = columns.map(({ width }) => width)\n\n  if (!availableWidth) {\n    return specifiedWidths\n  }\n\n  const specifiedWidthsInPixels = specifiedWidths.map(width => {\n    if (!width) {\n      return width\n    }\n\n    if (width.endsWith('px')) {\n      return Number(width.slice(0, -2))\n    }\n\n    if (width.endsWith('%')) {\n      return (availableWidth * Number(width.slice(0, -1))) / 100\n    }\n\n    throw new Error('width must be in % or px')\n  })\n\n  const indexOfRestColumn = specifiedWidths.findIndex(\n    width => width === undefined\n  )\n\n  if (indexOfRestColumn !== undefined) {\n    const sumOfSpecifiedPixelWidths = specifiedWidthsInPixels.reduce(\n      (sum, width) => {\n        if (!width) {\n          return sum\n        }\n        return sum + width\n      },\n      0\n    )\n\n    const restWidth = availableWidth - sumOfSpecifiedPixelWidths\n\n    specifiedWidthsInPixels[indexOfRestColumn] = restWidth\n  }\n\n  return specifiedWidthsInPixels.map(pixels => `${pixels}px`)\n}\n\nexport default calculateColumnWidths\n","import { pixelsPerEm } from '../constants'\n\nexport default em => em * pixelsPerEm\n","export { default as calculateColumnWidths } from './calculateColumnWidths'\nexport { default as emToPixels } from './emToPixels'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport createLog from 'utilities/log'\nimport { DropdownSearch } from 'coreModules/form/components'\nimport i18nSelectors from 'coreModules/i18n/globalSelectors'\n\nconst log = createLog('modules:curatedList:FeatureObservationDropdownSearch')\n\nconst mapSelectablesToDropdownOptions = (\n  selectables,\n  { language, defaultLanguage } = {}\n) => {\n  return selectables.map(({ key, name }) => {\n    if (typeof name === 'string') {\n      return {\n        key,\n        text: name,\n        value: key,\n      }\n    }\n\n    const potentialBackendTranslation =\n      (language || defaultLanguage) && (name[language] || name[defaultLanguage])\n\n    return {\n      key,\n      text: potentialBackendTranslation || key,\n      value: key,\n    }\n  })\n}\n\nconst mapStateToProps = state => {\n  return {\n    defaultLanguage: i18nSelectors.getDefaultLanguage(state),\n    language: i18nSelectors.getLanguage(state),\n  }\n}\n\nconst propTypes = {\n  defaultLanguage: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  rawOptions: PropTypes.array.isRequired,\n}\n\nconst defaultProps = {\n  placeholder: undefined,\n}\n\nclass FeatureObservationDropdownSearch extends Component {\n  render() {\n    const {\n      defaultLanguage,\n      language,\n      placeholder,\n      rawOptions,\n      ...rest\n    } = this.props\n\n    log.render()\n    return (\n      <DropdownSearch\n        {...rest}\n        options={\n          !!rawOptions &&\n          mapSelectablesToDropdownOptions(rawOptions, {\n            defaultLanguage,\n            language,\n          })\n        }\n        placeholder={placeholder}\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nFeatureObservationDropdownSearch.propTypes = propTypes\nFeatureObservationDropdownSearch.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(\n  FeatureObservationDropdownSearch\n)\n","import CauseOfDeathDropdownSearch from './CauseOfDeathDropdownSearch'\nimport EstablishmentMeansTypeRadioGroup from './EstablishmentMeansTypeRadioGroup'\nimport FeatureObservationDropdownSearch from './FeatureObservationDropdownSearch'\nimport PreparationTypeDropdownSearch from './PreparationTypeDropdownSearch'\nimport TypeSpecimenTypeDropdownSearch from './TypeSpecimenTypeDropdownSearch'\n\nexport {\n  CauseOfDeathDropdownSearch,\n  EstablishmentMeansTypeRadioGroup,\n  FeatureObservationDropdownSearch,\n  PreparationTypeDropdownSearch,\n  TypeSpecimenTypeDropdownSearch,\n}\n","export default function reduceFieldSpecsToNodeFieldNamesMap(\n  fieldSpecs,\n  { bySection, byUnit = true, useBaseName = false } = {}\n) {\n  return fieldSpecs.reduce((map, fieldSpec) => {\n    const { baseName, name, section, unit } = fieldSpec\n\n    if (!bySection && !byUnit) {\n      throw new Error('either bySection or byUnit must be true')\n    }\n\n    const nodeName = bySection ? section : unit\n\n    if (baseName && useBaseName) {\n      return {\n        ...map,\n        [nodeName]: map[nodeName]\n          ? map[nodeName].concat([baseName])\n          : [baseName],\n      }\n    }\n\n    return {\n      ...map,\n      [nodeName]: map[nodeName] ? map[nodeName].concat([name]) : [name],\n    }\n  }, {})\n}\n","import reduceFieldSpecsToNodeFieldNamesMap from './reduceFieldSpecsToNodeFieldNamesMap'\n\nexport default function reduceFieldSpecsToUnitFieldNamesMap(\n  fieldSpecs,\n  useBaseName\n) {\n  return reduceFieldSpecsToNodeFieldNamesMap(fieldSpecs, {\n    byUnit: true,\n    useBaseName,\n  })\n}\n","import reduceFieldSpecsToNodeFieldNamesMap from './reduceFieldSpecsToNodeFieldNamesMap'\n\nexport default function reduceFieldSpecsToSectionFieldNamesMap(\n  fieldSpecs,\n  useBaseName\n) {\n  return reduceFieldSpecsToNodeFieldNamesMap(fieldSpecs, {\n    bySection: true,\n    useBaseName,\n  })\n}\n","export default function transformFormSpecToFieldMap(sectionSpecs) {\n  return sectionSpecs.reduce((formMap, section) => {\n    const { name: sectionName, units } = section\n    return {\n      ...formMap,\n      ...units.reduce((sectionMap, unit) => {\n        const { name: unitName, parts } = unit\n        return {\n          ...sectionMap,\n          ...parts.reduce((unitMap, part) => {\n            const { name, relativeNames, ...rest } = part\n\n            if (!name) {\n              return unitMap\n            }\n\n            if (relativeNames) {\n              return {\n                ...unitMap,\n                ...relativeNames.reduce((subFields, relativeName) => {\n                  const fullName = `${name}.*.${relativeName}`\n                  return {\n                    ...subFields,\n                    [fullName]: {\n                      ...rest,\n                      baseName: name,\n                      name: fullName,\n                      section: sectionName,\n                      unit: unitName,\n                    },\n                  }\n                }, {}),\n              }\n            }\n\n            return {\n              ...unitMap,\n              [name]: {\n                ...rest,\n                name,\n                section: sectionName,\n                unit: unitName,\n              },\n            }\n          }, {}),\n        }\n      }, {}),\n    }\n  }, {})\n}\n","export {\n  default as reduceFieldSpecsToUnitFieldNamesMap,\n} from './reduceFieldSpecsToUnitFieldNamesMap'\nexport {\n  default as reduceFieldSpecsToSectionFieldNamesMap,\n} from './reduceFieldSpecsToSectionFieldNamesMap'\nexport {\n  default as transformFormSpecToFieldMap,\n} from './transformFormSpecToFieldMap'\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport extractProps from 'utilities/extractProps'\nimport actionCreators from '../actionCreators'\n\nconst createBatchFetchItems = (hocInput = {}) => ComposedComponent => {\n  const {\n    fetchInterval = 1000,\n    maxBatchSize = 200,\n    maxNumberOfBatches = 2,\n    // include, Possible to inject\n    // relationships, Possible to inject\n    // resource, Possible to inject\n    refetch = false,\n  } = hocInput\n\n  const propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    include: PropTypes.array,\n    relationships: PropTypes.array,\n    resource: PropTypes.string,\n  }\n\n  const defaultProps = {\n    include: undefined,\n    relationships: undefined,\n    resource: undefined,\n  }\n\n  class BatchFetchItems extends Component {\n    constructor(props) {\n      super(props)\n      this.registeredIds = {}\n      this.batches = [[]]\n\n      this.getBatchIsFull = this.getBatchIsFull.bind(this)\n      this.getCurrentBatch = this.getCurrentBatch.bind(this)\n      this.addBatch = this.addBatch.bind(this)\n      this.addId = this.addId.bind(this)\n      this.addIdToBatch = this.addIdToBatch.bind(this)\n      this.isFetchedOrRegistered = this.isFetchedOrRegistered.bind(this)\n      this.fetchItemById = this.fetchItemById.bind(this)\n    }\n\n    componentDidMount() {\n      const { dispatch } = this.props\n\n      const {\n        extractedProps: { include, relationships, resource },\n      } = extractProps({\n        defaults: hocInput,\n        keys: ['include', 'relationships', 'resource'],\n        props: this.props,\n      })\n\n      /* eslint-disable no-console */\n      if (!resource) {\n        console.error(`Missing resource`)\n      }\n\n      const getManyActionCreator =\n        actionCreators[resource] && actionCreators[resource].getMany\n\n      if (!getManyActionCreator) {\n        console.error(`Missing getManyActionCreator for resource ${resource}`)\n      }\n      /* eslint-enable no-console */\n\n      setInterval(() => {\n        if (this.batches.length && this.batches[0].length) {\n          const batchesToFetch = this.batches\n          this.batches = [[]]\n          const promises = batchesToFetch.map(batch => {\n            return dispatch(\n              getManyActionCreator({\n                ids: batch,\n                include,\n                relationships,\n              })\n            )\n          })\n          Promise.all(promises).then(() => {\n            // If taking central state into consideration then flush registeredIds\n          })\n        }\n      }, fetchInterval)\n    }\n\n    getBatchIsFull(batch) {\n      return batch.length >= maxBatchSize\n    }\n    getCurrentBatch() {\n      return this.batches[0]\n    }\n    addBatch() {\n      this.batches.unshift([])\n      if (this.batches.length > maxNumberOfBatches) {\n        const oldBatch = this.batches.pop()\n        oldBatch.forEach(id => {\n          delete this.registeredIds[id]\n        })\n      }\n    }\n    addId(id) {\n      if (this.getBatchIsFull(this.getCurrentBatch())) {\n        this.addBatch()\n      }\n      this.addIdToBatch(id, this.getCurrentBatch())\n      // this.scheduleFetch()\n    }\n\n    addIdToBatch(id, batch) {\n      batch.push(id)\n      this.registeredIds[id] = true\n    }\n\n    isFetchedOrRegistered(id) {\n      return this.registeredIds[id] || null // fetch here from state\n    }\n\n    fetchItemById(id) {\n      if (this.isFetchedOrRegistered(id) && !refetch) {\n        return null\n      }\n\n      this.addId(id)\n      return true\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} fetchItemById={this.fetchItemById} />\n      )\n    }\n  }\n\n  BatchFetchItems.propTypes = propTypes\n  BatchFetchItems.defaultProps = defaultProps\n\n  return connect(null)(BatchFetchItems)\n}\n\nexport default createBatchFetchItems\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport actionCreators from '../actionCreators'\nimport {\n  actionCreators as keyObjectActionCreators,\n  globalSelectors as keyObjectGlobalSelectors,\n} from '../keyObjectModule'\n\nconst createEnsureAllItemsFetched = (hocInput = {}) => ComposedComponent => {\n  const {\n    allItemsFetchedKey = 'allItemsFetched',\n    allItemsFetchingKey = 'allItemsFetching',\n    include = [],\n    relationships,\n    resource,\n  } = hocInput\n\n  /* eslint-disable no-console */\n  if (!resource) {\n    console.error(`Missing resource`)\n  }\n  const allItemsFetchedSelector =\n    keyObjectGlobalSelectors.get[':resource.allItems.fetched']\n  const allItemsFetchingSelector =\n    keyObjectGlobalSelectors.get[':resource.allItems.fetching']\n\n  const setAllItemsFetched =\n    keyObjectActionCreators.set[':resource.allItems.fetched']\n  const setAllItemsFetching =\n    keyObjectActionCreators.set[':resource.allItems.fetching']\n\n  const getManyActionCreator =\n    actionCreators[resource] && actionCreators[resource].getMany\n\n  if (!getManyActionCreator) {\n    console.error(`Missing actionCreator getMany for resource ${resource}`)\n  }\n  /* eslint-enable no-console */\n\n  const mapStateToProps = state => {\n    return {\n      [allItemsFetchedKey]: allItemsFetchedSelector(state, {\n        resource,\n      }),\n      [allItemsFetchingKey]:\n        allItemsFetchingSelector(state, { resource }) || false,\n    }\n  }\n\n  const mapDispatchToProps = {\n    getMany: getManyActionCreator,\n    setAllItemsFetched,\n    setAllItemsFetching,\n  }\n\n  const propTypes = {\n    [allItemsFetchedKey]: PropTypes.bool,\n    [allItemsFetchingKey]: PropTypes.bool,\n    getMany: PropTypes.func.isRequired,\n    setAllItemsFetched: PropTypes.func.isRequired,\n    setAllItemsFetching: PropTypes.func.isRequired,\n  }\n\n  const defaultProps = {\n    [allItemsFetchedKey]: false,\n    [allItemsFetchingKey]: false,\n  }\n\n  class EnsureAllItemsFetched extends Component {\n    componentDidMount() {\n      const fetched = objectPath.get(this.props, allItemsFetchedKey)\n      const fetching = objectPath.get(this.props, allItemsFetchingKey)\n\n      if (!config.isTest && !fetched && !fetching) {\n        this.props.setAllItemsFetching(true, {\n          resource,\n        })\n\n        this.props\n          .getMany({\n            include,\n            limit: 20000,\n            relationships,\n          })\n          .then(() => {\n            this.props.setAllItemsFetched(true, {\n              resource,\n            })\n            this.props.setAllItemsFetching(false, {\n              resource,\n            })\n          })\n      }\n    }\n\n    render() {\n      const flags = {\n        [allItemsFetchedKey]: objectPath.get(this.props, allItemsFetchedKey),\n        [allItemsFetchingKey]: objectPath.get(this.props, allItemsFetchingKey),\n      }\n\n      return <ComposedComponent {...this.props} {...flags} />\n    }\n  }\n\n  EnsureAllItemsFetched.propTypes = propTypes\n  EnsureAllItemsFetched.defaultProps = defaultProps\n\n  return compose(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(EnsureAllItemsFetched)\n}\n\nexport default createEnsureAllItemsFetched\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport extractProps from 'utilities/extractProps'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport globalSelectors from '../globalSelectors'\nimport actionCreators from '../actionCreators'\n\nconst createGetItemById = (hocInput = {}) => ComposedComponent => {\n  const {\n    idPath = 'itemId',\n    itemKey,\n    refresh = true,\n    shouldFetch = true,\n    // include = [], injectable\n    // relationships = ['all'],\n    // injectRelationships, Injectable\n    // resource, Injectable\n  } = hocInput\n\n  const mapStateToProps = (state, ownProps) => {\n    const {\n      extractedProps: { injectRelationships = [], resource },\n    } = extractProps({\n      defaults: hocInput,\n      keys: ['injectRelationships', 'resource'],\n      props: ownProps,\n    })\n\n    const getOneSelector =\n      globalSelectors[resource] && globalSelectors[resource].getOne\n\n    const getRelationshipItemOrItems =\n      globalSelectors[resource] &&\n      globalSelectors[resource].getRelationshipItemOrItems\n\n    const itemId = objectPath.get(ownProps, idPath)\n\n    const item = !(itemId && getOneSelector)\n      ? null\n      : getOneSelector(state, itemId)\n    if (itemKey) {\n      return {\n        item,\n        itemId,\n        [itemKey]: item,\n      }\n    }\n\n    const relationshipsToInject = injectRelationships.reduce(\n      (obj, relationKey) => {\n        const relationshipObjectOrArray = getRelationshipItemOrItems(state, {\n          itemId,\n          relationKey,\n        })\n\n        if (relationshipObjectOrArray !== undefined) {\n          return {\n            ...obj,\n            [relationKey]: relationshipObjectOrArray,\n          }\n        }\n        return obj\n      },\n      {}\n    )\n\n    return {\n      ...relationshipsToInject,\n      item,\n      itemId,\n    }\n  }\n\n  const propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    item: PropTypes.object,\n    itemId: PropTypes.string,\n    resource: PropTypes.string,\n  }\n\n  const defaultProps = {\n    item: null,\n    itemId: '',\n    resource: undefined,\n  }\n\n  class GetItemById extends Component {\n    constructor(props) {\n      super(props)\n      this.fetchOneItemById = this.fetchOneItemById.bind(this)\n    }\n\n    componentDidMount() {\n      if (shouldFetch) {\n        const { dispatch, item, itemId } = this.props\n        const {\n          extractedProps: { include = [], relationships = ['all'], resource },\n        } = extractProps({\n          defaults: hocInput,\n          keys: ['include', 'relationships', 'resource'],\n          props: this.props,\n        })\n\n        if (itemId && !config.isTest) {\n          if (refresh || !item) {\n            const getOneActionCreator =\n              actionCreators[resource] && actionCreators[resource].getOne\n            if (getOneActionCreator) {\n              dispatch(\n                getOneActionCreator({ id: itemId, include, relationships })\n              )\n            }\n          }\n        }\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (shouldFetch) {\n        if (\n          nextProps.itemId &&\n          nextProps.itemId !== this.props.itemId &&\n          !config.isTest\n        ) {\n          if (refresh || !nextProps.item) {\n            this.fetchOneItemById(nextProps.itemId)\n          }\n        }\n      }\n    }\n\n    fetchOneItemById(itemId) {\n      const { dispatch } = this.props\n\n      const {\n        extractedProps: { include = [], relationships = ['all'], resource },\n      } = extractProps({\n        defaults: hocInput,\n        keys: ['include', 'relationships', 'resource'],\n        props: this.props,\n      })\n      const getOneActionCreator =\n        actionCreators[resource] && actionCreators[resource].getOne\n\n      return dispatch(\n        getOneActionCreator({\n          id: itemId,\n          include,\n          relationships,\n        })\n      )\n    }\n\n    render() {\n      const { item } = this.props\n      return (\n        <ComposedComponent\n          fetchOneItemById={this.fetchOneItemById}\n          item={item}\n          {...this.props}\n        />\n      )\n    }\n  }\n\n  GetItemById.propTypes = propTypes\n  GetItemById.defaultProps = defaultProps\n  return compose(connect(mapStateToProps))(GetItemById)\n}\n\nexport default createGetItemById\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport extractProps from 'utilities/extractProps'\nimport createGetItemById from './createGetItemById'\nimport clearNestedCache from '../actionCreators/clearNestedCache'\nimport createNestedItem from '../actionCreators/createNestedItem'\n\nimport { globalSelectors as keyObjectGlobalSelectors } from '../keyObjectModule'\n\nconst createGetNestedItemById = (hocInput = {}) => ComposedComponent => {\n  const {\n    // resolveRelationships = [], inject\n    idPath = 'itemId',\n    include,\n    nestedItemKey,\n    refresh,\n    relationships: hocInputRelationships,\n    resource: hocInputResource,\n    shouldFetch,\n  } = hocInput\n\n  const getItemById = createGetItemById({\n    idPath,\n    include,\n    refresh,\n    relationships: hocInputRelationships,\n    resource: hocInputResource,\n    shouldFetch,\n  })\n\n  const mapStateToProps = (state, ownProps) => {\n    const { item } = ownProps\n\n    const {\n      extractedProps: { namespace: injectedNamspace, resource },\n    } = extractProps({\n      defaults: hocInput,\n      keys: ['namespace', 'resource'],\n      props: ownProps,\n    })\n\n    const namespace = injectedNamspace || resource\n\n    const getNestedItem =\n      keyObjectGlobalSelectors.get['nestedCache.:namespace.items.:id']\n\n    const id = item && item.id\n    const nestedItem =\n      id !== undefined &&\n      id !== '' &&\n      id !== null &&\n      getNestedItem(state, {\n        id,\n        namespace,\n      })\n    return {\n      namespace,\n      nestedItem: nestedItem || undefined,\n    }\n  }\n  const mapDispatchToProps = {\n    clearNestedCache,\n    createNestedItem,\n  }\n\n  const propTypes = {\n    clearNestedCache: PropTypes.func.isRequired,\n    createNestedItem: PropTypes.func.isRequired,\n    item: PropTypes.object,\n    namespace: PropTypes.string,\n    nestedItem: PropTypes.object,\n    nestedItemKey: PropTypes.string,\n  }\n\n  const defaultProps = {\n    item: null,\n    namespace: undefined,\n    nestedItem: undefined,\n    nestedItemKey: undefined,\n  }\n\n  class GetNestedItemById extends Component {\n    constructor(props) {\n      super(props)\n      this.createNestedItemIfNeeded = this.createNestedItemIfNeeded.bind(this)\n      this.clearNestedCacheNamespace = this.clearNestedCacheNamespace.bind(this)\n    }\n    componentDidMount() {\n      this.createNestedItemIfNeeded()\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.createNestedItemIfNeeded(nextProps)\n    }\n\n    clearNestedCacheNamespace() {\n      const { namespace } = this.props\n\n      this.props.clearNestedCache({ namespace })\n    }\n\n    createNestedItemIfNeeded(nextProps) {\n      const { item, namespace, nestedItem } = this.props\n\n      const {\n        extractedProps: { resolveRelationships, relationships, resource },\n      } = extractProps({\n        defaults: hocInput,\n        keys: ['resolveRelationships', 'relationships', 'resource'],\n        props: this.props,\n      })\n\n      if (!nextProps) {\n        if (item && !nestedItem) {\n          setTimeout(() => {\n            return this.props.createNestedItem({\n              item,\n              namespace,\n              relationships,\n              resolveRelationships,\n              resource,\n            })\n          })\n        }\n      }\n\n      if (nextProps && nextProps.item && nextProps.item !== item) {\n        setTimeout(() => {\n          return this.props.createNestedItem({\n            item: nextProps.item,\n            namespace,\n            relationships,\n            resolveRelationships,\n            resource,\n          })\n        })\n      }\n      return null\n    }\n\n    render() {\n      let propsToForward = { ...this.props }\n      if (this.props.nestedItemKey || nestedItemKey) {\n        const { nestedItem } = this.props\n        propsToForward = {\n          ...propsToForward,\n          [nestedItemKey]: nestedItem,\n        }\n      }\n      return (\n        <ComposedComponent\n          {...propsToForward}\n          clearNestedCacheNamespace={this.clearNestedCacheNamespace}\n        />\n      )\n    }\n  }\n\n  GetNestedItemById.propTypes = propTypes\n  GetNestedItemById.defaultProps = defaultProps\n  return compose(\n    getItemById,\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(GetNestedItemById)\n}\n\nexport default createGetNestedItemById\n","export const API_CALL_OPERATION_REQUEST = 'API_CALL_OPERATION_REQUEST'\nexport const API_CALL_OPERATION_SUCCESS = 'API_CALL_OPERATION_SUCCESS'\nexport const API_CALL_OPERATION_FAIL = 'API_CALL_OPERATION_FAIL'\n","import {\n  API_CALL_OPERATION_REQUEST,\n  API_CALL_OPERATION_SUCCESS,\n  API_CALL_OPERATION_FAIL,\n} from '../actionTypes'\n\nexport default function callOperation({\n  operationId,\n  request,\n  throwError = true,\n}) {\n  return (dispatch, getState, { apiClient }) => {\n    const meta = {\n      operationId,\n      request,\n    }\n    dispatch({\n      meta,\n      type: API_CALL_OPERATION_REQUEST,\n    })\n\n    return apiClient.call(operationId, request).then(\n      response => {\n        dispatch({\n          meta,\n          payload: response.data,\n          type: API_CALL_OPERATION_SUCCESS,\n        })\n        return response.data\n      },\n      error => {\n        dispatch({\n          error: true,\n          meta,\n          payload: error,\n          type: API_CALL_OPERATION_FAIL,\n        })\n\n        if (throwError) {\n          throw error\n        }\n        return error\n      }\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { debounce } from 'lodash'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport extractProps from 'utilities/extractProps'\nimport { callOperation as callOperationAC } from 'coreModules/api/actionCreators'\nimport {\n  actionCreators as keyObjectActionCreators,\n  globalSelectors as keyObjectGlobalSelectors,\n} from '../keyObjectModule'\n\nconst debouncedResourceCountGetters = {}\nconst setResourceCountGetter = (resource, func) => {\n  debouncedResourceCountGetters[resource] = func\n}\nconst getResourceCountGetter = resource => {\n  return debouncedResourceCountGetters[resource]\n}\n\nconst createGetResourceCount = (hocInput = {}) => ComposedComponent => {\n  const {\n    filter: filterHocInput = {},\n    resource: resourceHocInput,\n    resourceCountFetchedKey = 'resourceCountFetched',\n    resourceCountFetchingKey = 'resourceCountFetching',\n    resourceCountKey = 'resourceCount',\n  } = hocInput\n\n  const resourceCountSelector =\n    keyObjectGlobalSelectors.get[':resource.count.value']\n  const resourceCountFetchedSelector =\n    keyObjectGlobalSelectors.get[':resource.count.fetched']\n  const resourceCountFetchingSelector =\n    keyObjectGlobalSelectors.get[':resource.count.fetching']\n\n  const setResourceCountAC =\n    keyObjectActionCreators.set[':resource.count.value']\n  const setResourceCountFetchedAC =\n    keyObjectActionCreators.set[':resource.count.fetched']\n  const setResourceCountFetchingAC =\n    keyObjectActionCreators.set[':resource.count.fetching']\n\n  const getCount = ({\n    callOperation,\n    fetching,\n    filter,\n    resource,\n    setResourceCount,\n    setResourceCountFetched,\n    setResourceCountFetching,\n  }) => {\n    if (!config.isTest && !fetching) {\n      setResourceCountFetching(true, {\n        resource,\n      })\n\n      return callOperation({\n        operationId: `${resource}Count`,\n        request: { queryParams: { filter } },\n      }).then(res => {\n        const count = objectPath.get(res, 'attributes.count')\n\n        if (count) {\n          setResourceCount(count, {\n            resource,\n          })\n          setResourceCountFetched(true, {\n            resource,\n          })\n        }\n\n        setResourceCountFetching(false, {\n          resource,\n        })\n      })\n    }\n\n    return null\n  }\n\n  const createDebouncedGetCount = () =>\n    debounce(props => getCount(props), 10 * 1000, {\n      leading: true,\n      maxWait: 20 * 1000,\n    })\n\n  const extractResourceCountParams = props => {\n    const { callOperation, filterResourceCount, resource: resourceProp } = props\n\n    return {\n      callOperation,\n      fetching: props[resourceCountFetchingKey],\n      filter: filterResourceCount || filterHocInput,\n      filterResourceCount,\n      resource: resourceProp || resourceHocInput,\n      setResourceCount: props.setResourceCount,\n      setResourceCountFetched: props.setResourceCountFetched,\n      setResourceCountFetching: props.setResourceCountFetching,\n    }\n  }\n\n  const mapStateToProps = (state, { resource: resourceProp }) => {\n    const resource = resourceProp || resourceHocInput\n\n    return {\n      [resourceCountFetchedKey]: resourceCountFetchedSelector(state, {\n        resource,\n      }),\n      [resourceCountFetchingKey]:\n        resourceCountFetchingSelector(state, { resource }) || false,\n      [resourceCountKey]: resourceCountSelector(state, { resource }),\n    }\n  }\n\n  const mapDispatchToProps = {\n    callOperation: callOperationAC,\n    setResourceCount: setResourceCountAC,\n    setResourceCountFetched: setResourceCountFetchedAC,\n    setResourceCountFetching: setResourceCountFetchingAC,\n  }\n\n  const propTypes = {\n    callOperation: PropTypes.func.isRequired,\n    filterResourceCount: PropTypes.object,\n    resource: PropTypes.string,\n    [resourceCountFetchedKey]: PropTypes.bool,\n    [resourceCountFetchingKey]: PropTypes.bool,\n    [resourceCountKey]: PropTypes.number,\n    setResourceCount: PropTypes.func.isRequired,\n    setResourceCountFetched: PropTypes.func.isRequired,\n    setResourceCountFetching: PropTypes.func.isRequired,\n  }\n\n  const defaultProps = {\n    filterResourceCount: undefined,\n    resource: undefined,\n    [resourceCountFetchedKey]: false,\n    [resourceCountFetchingKey]: false,\n    [resourceCountKey]: undefined,\n  }\n\n  class ResourceCountGetter extends Component {\n    constructor(props) {\n      super(props)\n\n      const { resource: resourceProp } = props\n      const resource = resourceProp || resourceHocInput\n\n      if (!resource) {\n        throw new Error(`Missing resource`)\n      }\n\n      setResourceCountGetter(resource, createDebouncedGetCount())\n\n      this.fetchResourceCount = this.fetchResourceCount.bind(this)\n    }\n\n    componentDidMount() {\n      const { resource: resourceProp } = this.props\n      const resource = resourceProp || resourceHocInput\n\n      getResourceCountGetter(resource)(extractResourceCountParams(this.props))\n      this.pollCount = setInterval(\n        () =>\n          getResourceCountGetter(resource)(\n            extractResourceCountParams(this.props)\n          ),\n        30 * 1000\n      )\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.pollCount)\n    }\n\n    fetchResourceCount() {\n      getCount(extractResourceCountParams(this.props))\n    }\n\n    render() {\n      const { extractedProps } = extractProps({\n        keys: [\n          resourceCountFetchedKey,\n          resourceCountFetchingKey,\n          resourceCountKey,\n        ],\n        props: this.props,\n      })\n\n      return (\n        <ComposedComponent\n          {...this.props}\n          {...extractedProps}\n          fetchResourceCount={this.fetchResourceCount}\n        />\n      )\n    }\n  }\n\n  ResourceCountGetter.propTypes = propTypes\n  ResourceCountGetter.defaultProps = defaultProps\n\n  return compose(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(ResourceCountGetter)\n}\n\nexport default createGetResourceCount\n","import createBatchFetchItems from './createBatchFetchItems'\nimport createEnsureAllItemsFetched from './createEnsureAllItemsFetched'\nimport createGetItemById from './createGetItemById'\nimport createGetNestedItemById from './createGetNestedItemById'\nimport createGetResourceCount from './createGetResourceCount'\n\nexport {\n  createBatchFetchItems,\n  createEnsureAllItemsFetched,\n  createGetItemById,\n  createGetNestedItemById,\n  createGetResourceCount,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\n\nimport LocalityDropdownSearch from '../LocalityDropdownSearch'\n\nlet LocalityManager = null\n\nexport function setLocalManager(injected) {\n  LocalityManager = injected\n}\n\nconst propTypes = {\n  excludeRootNode: PropTypes.bool,\n  fieldSearchQuery: PropTypes.string,\n  fieldValue: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  excludeRootNode: true,\n  fieldSearchQuery: undefined,\n  fieldValue: undefined,\n}\n\nexport class LocalityDropdownPickerSearch extends Component {\n  render() {\n    const {\n      excludeRootNode,\n      fieldSearchQuery,\n      fieldValue,\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pickerActive,\n      ...rest\n    } = this.props\n\n    if (pickerActive) {\n      const initialFilterValues = fieldSearchQuery\n        ? {\n            name: fieldSearchQuery,\n          }\n        : undefined\n\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <LocalityManager\n              excludeRootNode={excludeRootNode}\n              initialFilterValues={initialFilterValues}\n              initialItemId={fieldValue}\n              isPicker\n              onInteraction={onInteraction}\n              pickerTitle=\"Pick geography\"\n              treeEnabled\n            />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Pick</Button>\n\n    return (\n      <LocalityDropdownSearch\n        excludeRootNode={excludeRootNode}\n        rightButton={picker}\n        {...rest}\n      />\n    )\n  }\n}\n\nLocalityDropdownPickerSearch.propTypes = propTypes\nLocalityDropdownPickerSearch.defaultProps = defaultProps\n\nexport default createPickerWrapper({})(LocalityDropdownPickerSearch)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonNameDropdownSearch from '../TaxonNameDropdownSearch'\n\nlet TaxonManager = null\n\nexport function setLocalManager(InjectedTaxonManager) {\n  TaxonManager = InjectedTaxonManager\n}\n\nconst propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n}\n\nconst extractPickedId = data => {\n  return (\n    data &&\n    data.nestedItem &&\n    data.nestedItem.acceptedTaxonName &&\n    data.nestedItem.acceptedTaxonName.id\n  )\n}\n\nexport class AcceptedTaxonNameDropdownPickerSearch extends Component {\n  render() {\n    const {\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pickerActive,\n      ...rest\n    } = this.props\n    if (pickerActive) {\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <TaxonManager isPicker onInteraction={onInteraction} treeEnabled />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Picker</Button>\n\n    return <TaxonNameDropdownSearch rightButton={picker} {...rest} />\n  }\n}\n\nAcceptedTaxonNameDropdownPickerSearch.propTypes = propTypes\n\nexport default createPickerWrapper({ extractPickedId })(\n  AcceptedTaxonNameDropdownPickerSearch\n)\n","export const MODULE_NAME = 'storage'\nexport const ALL = 'all'\nexport const DISCONNECT_TAXON_NAME = 'DISCONNECT_TAXON_NAME'\nexport const ADD_NEW_TAXON_NAME = 'ADD_NEW_TAXON_NAME'\nexport const ADD_NEW_PREPARATION_TYPE = 'ADD_NEW_PREPARATION_TYPE'\nexport const DISCONNECT_PREPARATION_TYPE = 'DISCONNECT_PREPARATION_TYPE'\nexport const SET_TAXON_NAME_INSPECT = 'SET_TAXON_NAME_INSPECT'\n","export default function extractProps({ props = {}, defaults = {}, keys = [] }) {\n  const defaultsProvided = Object.keys(defaults).length\n  const rest = {}\n  const extractedProps = {}\n  const propNames = defaultsProvided\n    ? Object.keys({\n        ...props,\n        ...defaults,\n      })\n    : Object.keys(props)\n\n  propNames.forEach(propName => {\n    if (keys.includes(propName)) {\n      extractedProps[propName] =\n        props[propName] !== undefined ? props[propName] : defaults[propName]\n    } else {\n      rest[propName] =\n        props[propName] !== undefined ? props[propName] : defaults[propName]\n    }\n  })\n  return {\n    extractedProps,\n    rest,\n  }\n}\n","const config = {\n  auth: {\n    active: process.env.REACT_APP_DISABLE_AUTH !== 'true',\n  },\n  enableServiceWorker: process.env.REACT_APP_ENABLE_SERVICE_WORKER === 'true',\n  env: process.env.NODE_ENV || 'development',\n  isDevelopment: process.env.NODE_ENV === 'development',\n  isProduction: process.env.NODE_ENV === 'production',\n  isTest: process.env.NODE_ENV === 'test',\n  mock:\n    (process.env.REACT_APP_ENABLE_MOCK &&\n      process.env.REACT_APP_ENABLE_MOCK === 'true') ||\n    false,\n  mountApp: process.env.MOUNT_APP,\n  publicUrl: process.env.PUBLIC_URL,\n  reduxLogger: {\n    enabled:\n      process.env.NODE_ENV === 'development' &&\n      process.env.REACT_APP_ENABLE_REDUX_LOGGER === 'true',\n    showDiff: process.env.REACT_APP_ENABLE_REDUX_LOGGER_DIFF === 'true',\n  },\n  testUi: process.env.REACT_APP_TEST_UI !== 'false',\n}\n\nexport default config\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { omit } from 'lodash'\nimport {\n  clearSubmitErrors as clearSubmitErrorsActionCreator,\n  formValueSelector,\n  getFormSubmitErrors,\n} from 'redux-form'\nimport { connect } from 'react-redux'\n\nconst propTypes = {\n  clearSubmitErrors: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  linkedFieldErrorValues: PropTypes.object,\n}\n\nconst defaultProps = {\n  linkedFieldErrorValues: undefined,\n}\n\nconst mapDispatchToProps = {\n  clearSubmitErrors: clearSubmitErrorsActionCreator,\n}\n// Note this is a first version of this component.\n// Atm it only supports fieldPaths without dots (otherwise object-path has to be used)\n// To work with multiple groups of fields the component has to be applied multiple times\n\nexport default function createLinkFieldErrors({ fieldPaths = [] } = {}) {\n  const mapStateToProps = (state, { form: formName }) => {\n    const linkedFieldErrorValues = {}\n    const submitErrors = getFormSubmitErrors(formName)(state)\n    let anyLinkedFieldHasErrors = false\n    fieldPaths.forEach(fieldPath => {\n      const fieldValue = formValueSelector(formName)(state, fieldPath)\n      if (submitErrors[fieldPath]) {\n        anyLinkedFieldHasErrors = true\n      }\n      linkedFieldErrorValues[fieldPath] = fieldValue\n    })\n\n    if (!anyLinkedFieldHasErrors) {\n      return {\n        formName,\n      }\n    }\n\n    return {\n      formName,\n      linkedFieldErrorValues,\n    }\n  }\n\n  return function linkFieldErrors(ComposedComponent) {\n    class LinkFieldErrors extends Component {\n      componentWillReceiveProps(nextProps) {\n        const { linkedFieldErrorValues } = this.props\n        const nextLinkedFieldErrorValues = nextProps.linkedFieldErrorValues\n\n        if (linkedFieldErrorValues && nextLinkedFieldErrorValues) {\n          let anyLinkedFieldChanged = false\n          Object.keys(nextLinkedFieldErrorValues).forEach(fieldPath => {\n            const prevValue = linkedFieldErrorValues[fieldPath]\n            const nextValue = nextLinkedFieldErrorValues[fieldPath]\n            anyLinkedFieldChanged =\n              anyLinkedFieldChanged || prevValue !== nextValue\n          })\n\n          if (anyLinkedFieldChanged) {\n            this.props.clearSubmitErrors(this.props.formName)\n          }\n        }\n      }\n\n      render() {\n        return (\n          <ComposedComponent\n            {...omit(this.props, [\n              'clearSubmitErrors',\n              'linkedFieldErrorValues',\n            ])}\n          />\n        )\n      }\n    }\n\n    LinkFieldErrors.defaultProps = defaultProps\n    LinkFieldErrors.propTypes = propTypes\n\n    return connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(LinkFieldErrors)\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport formSelectors from '../globalSelectors'\n\nconst getIsLatestActiveField = (props, isLatestActiveField) => {\n  const { currentActiveFormField, isActiveNow, isSubmitting } = props\n\n  if (isSubmitting) {\n    return false\n  }\n\n  return (\n    isActiveNow || (isLatestActiveField && currentActiveFormField === undefined)\n  )\n}\n\nconst mapStateToProps = (state, { meta }) => {\n  if (!meta || !meta.form) {\n    throw new Error('missing meta.form')\n  }\n\n  return {\n    currentActiveFormField: formSelectors.getFormActive(state, meta.form),\n    isActiveNow: meta.active,\n    isSubmitting: meta.submitting,\n  }\n}\n\nconst propTypes = {\n  currentActiveFormField: PropTypes.string,\n  isActiveNow: PropTypes.bool.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  currentActiveFormField: undefined,\n}\n\nexport default function injectIsLatestActiveField(ComposedComponent) {\n  class LatestActiveFieldInjector extends Component {\n    constructor(props) {\n      super(props)\n      this.setAsLatestActiveField = this.setAsLatestActiveField.bind(this)\n      this.state = {\n        isLatestActiveField: getIsLatestActiveField(props, false),\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (\n        this.props.isActiveNow !== nextProps.isActiveNow ||\n        this.props.isSubmitting !== nextProps.isSubmitting ||\n        this.props.currentActiveFormField !== nextProps.currentActiveFormField\n      ) {\n        this.setState({\n          isLatestActiveField: getIsLatestActiveField(\n            nextProps,\n            this.state.isLatestActiveField\n          ),\n        })\n      }\n    }\n\n    setAsLatestActiveField(event) {\n      if (event) event.preventDefault()\n      this.setState({ isLatestActiveField: true })\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          isLatestActiveField={this.state.isLatestActiveField}\n          setAsLatestActiveField={this.setAsLatestActiveField}\n        />\n      )\n    }\n  }\n\n  LatestActiveFieldInjector.defaultProps = defaultProps\n  LatestActiveFieldInjector.propTypes = propTypes\n\n  return compose(connect(mapStateToProps))(LatestActiveFieldInjector)\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport objectPath from 'object-path'\nimport immutable from 'object-path-immutable'\n\nimport createDeleteProperties from 'common/es5/createDeleteProperties'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\nimport createNestedItem from 'coreModules/crud/actionCreators/createNestedItem'\n\nconst deleteUndefinedProperties = createDeleteProperties(undefined)\n\nconst defaultExtractValue = item => {\n  return item && item.attributes && item.attributes.name\n}\n\nconst mapDispatchToProps = {\n  createNestedItem,\n}\n\nconst propTypes = {\n  baseFilter: PropTypes.shape({\n    filterFunctionName: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  }),\n  createNestedItem: PropTypes.func.isRequired,\n  enablePlainTextOption: PropTypes.bool,\n  excludeRootNode: PropTypes.bool,\n  extractText: PropTypes.func,\n  filterFunctionName: PropTypes.string,\n  getManySearch: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  include: PropTypes.array,\n  includeFields: PropTypes.array,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.shape({\n        normalized: PropTypes.shape({\n          id: PropTypes.string,\n        }),\n        textI: PropTypes.string,\n        textV: PropTypes.string,\n      }),\n    ]),\n  }).isRequired,\n  limit: PropTypes.number,\n  mapItemToOption: PropTypes.func,\n  mapTextToOption: PropTypes.func,\n  nestItems: PropTypes.bool,\n  onSearchQueryChange: PropTypes.func,\n  pathToIdInValue: PropTypes.string,\n  pathToTextInValue: PropTypes.string,\n  relationships: PropTypes.array,\n  resolveRelationships: PropTypes.array,\n  resource: PropTypes.string.isRequired,\n  search: PropTypes.func.isRequired,\n  searchWithQuery: PropTypes.bool,\n  textAttributeName: PropTypes.string,\n}\n\nconst defaultProps = {\n  baseFilter: undefined,\n  enablePlainTextOption: undefined,\n  excludeRootNode: false,\n  extractText: defaultExtractValue,\n  filterFunctionName: 'nameSearch',\n  include: undefined,\n  includeFields: ['id', 'attributes.name'],\n  limit: 10,\n  mapItemToOption: undefined,\n  mapTextToOption: undefined,\n  nestItems: false,\n  onSearchQueryChange: undefined,\n  pathToIdInValue: '',\n  pathToTextInValue: '',\n  relationships: undefined,\n  resolveRelationships: undefined,\n  searchWithQuery: false,\n  textAttributeName: undefined,\n}\n\nconst injectSearchOptions = (hocInput = {}) => ComposedComponent => {\n  const {\n    enablePlainTextOption: enablePlainTextOptionHocInput = false,\n  } = hocInput\n\n  class SearchOptionsInjector extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this)\n      this.updateSelectedOption = this.updateSelectedOption.bind(this)\n      this.state = {\n        options: [],\n        searchQuery: '',\n        selectedOption: undefined,\n      }\n\n      const defaultMapItemToOption = item => {\n        const suffix = objectPath.get(item, 'attributes.deactivatedAt')\n          ? ' (removed)'\n          : ''\n        const text =\n          (props.textAttributeName &&\n            objectPath.get(item, props.textAttributeName)) ||\n          props.extractText(item)\n        return {\n          key: item.id,\n          text: `${text}${suffix}`,\n          value: item.id,\n        }\n      }\n\n      const defaultMapTextToOption = (text, value) => {\n        return {\n          key: text,\n          text: `${text} [${props.i18n.moduleTranslate({\n            textKey: 'plainText',\n          })}]`,\n          value: deleteUndefinedProperties({\n            ...value,\n            [props.pathToTextInValue]: text,\n          }),\n        }\n      }\n\n      this.mapItemToOption = props.mapItemToOption || defaultMapItemToOption\n      this.mapTextToOption = props.mapTextToOption || defaultMapTextToOption\n    }\n\n    updateSelectedOption({ id, requireEitherOr, text, value } = {}) {\n      if (!id && !text) {\n        return this.setState(prevState => {\n          if (prevState.selectedOption === undefined) {\n            return null\n          }\n\n          return {\n            selectedOption: undefined,\n          }\n        })\n      }\n\n      if (id) {\n        const { options } = this.state\n\n        const selectedOption = options.find(item => {\n          return objectPath.get(item.value, this.props.pathToIdInValue) === id\n        })\n\n        if (selectedOption) {\n          const option = requireEitherOr\n            ? immutable.del(selectedOption, this.props.pathToTextInValue)\n            : selectedOption\n\n          const optionWithOtherValues = {\n            ...option,\n            value: deleteUndefinedProperties({\n              ...option.value,\n              ...value,\n            }),\n          }\n\n          return this.setState({\n            options: [optionWithOtherValues],\n            selectedOption: optionWithOtherValues,\n          })\n        }\n\n        const filters = [\n          {\n            filterFunctionName: 'id',\n            value: id,\n          },\n        ]\n\n        return this.search({\n          filters,\n          includeDeactivated: true,\n          limit: 1,\n        }).then(res => {\n          const selectedOptions =\n            this.buildOptionsFromResponse(res, {\n              id,\n              skipPlainTextOption: true,\n              value,\n            }) || []\n\n          if (selectedOptions.length) {\n            const option = selectedOptions[0]\n            this.setState({\n              options: [option],\n              selectedOption: option,\n            })\n          }\n        })\n      }\n\n      if (text) {\n        const selectedOption = this.mapTextToOption(text, value)\n\n        return this.setState({\n          options: [selectedOption],\n          selectedOption,\n        })\n      }\n\n      return null\n    }\n\n    buildOptionsFromResponse(\n      response = [],\n      { id, skipPlainTextOption = false, value } = {}\n    ) {\n      const { searchQuery } = this.state\n      if ((searchQuery && Array.isArray(response)) || (!searchQuery && id)) {\n        const { enablePlainTextOption: enablePlainTextOptionProp } = this.props\n\n        const enablePlainTextOption =\n          enablePlainTextOptionProp === undefined\n            ? enablePlainTextOptionHocInput\n            : enablePlainTextOptionProp\n\n        const options = []\n\n        if (enablePlainTextOption && searchQuery && !skipPlainTextOption) {\n          options.push(this.mapTextToOption(searchQuery, value))\n        }\n\n        return options.concat(\n          response.map(item => this.mapItemToOption(item, value))\n        )\n      }\n      // TODO handle response is error\n      return []\n    }\n\n    handleSearchQueryChange({ searchQuery }) {\n      const {\n        excludeRootNode,\n        baseFilter,\n        filterFunctionName,\n        limit,\n      } = this.props\n      this.setState({\n        searchQuery,\n      })\n\n      if (this.props.onSearchQueryChange) {\n        this.props.onSearchQueryChange({ searchQuery })\n      }\n\n      const filters = [{ filterFunctionName, value: searchQuery }]\n\n      if (baseFilter) {\n        filters.push(baseFilter)\n      }\n\n      if (excludeRootNode) {\n        filters.push({ filterFunctionName: 'excludeRootNode', value: true })\n      }\n\n      this.search({ filters, limit }).then(res => {\n        const options = this.buildOptionsFromResponse(res)\n        this.setState({\n          options,\n        })\n      })\n    }\n\n    search({ filters = [], includeDeactivated, limit }) {\n      const {\n        include,\n        includeFields,\n        nestItems = false,\n        relationships,\n        resolveRelationships,\n        resource,\n        searchWithQuery,\n      } = this.props\n\n      if (searchWithQuery) {\n        const query = {\n          and: filters.map(filter => {\n            return {\n              filter: {\n                filterFunction: filter.filterFunctionName,\n                input: {\n                  value: filter.value,\n                },\n              },\n            }\n          }),\n        }\n\n        return this.props.search({\n          includeDeactivated,\n          includeFields,\n          limit,\n          query,\n        })\n      }\n\n      const queryParamFilters = filters.reduce((obj, filter) => {\n        return {\n          ...obj,\n          [filter.filterFunctionName]: filter.value,\n        }\n      }, {})\n\n      const queryParams = {\n        filter: queryParamFilters,\n        include,\n        includeDeactivated,\n        limit,\n        relationships,\n      }\n\n      return this.props.getManySearch({ queryParams }).then(res => {\n        if (!nestItems || !(res && res.length)) {\n          return res\n        }\n        const promises = res.map(item => {\n          return this.props.createNestedItem({\n            item,\n            relationships,\n            resolveRelationships,\n            resource,\n            storeResult: false,\n          })\n        })\n\n        return Promise.all(promises).then(nestedItems => {\n          return nestedItems\n        })\n      })\n    }\n\n    render() {\n      const { options, searchQuery, selectedOption } = this.state\n\n      return (\n        <ComposedComponent\n          {...this.props}\n          onSearchChange={this.handleSearchQueryChange}\n          options={options}\n          searchQuery={searchQuery}\n          selectedOption={selectedOption}\n          updateSelectedOption={this.updateSelectedOption}\n        />\n      )\n    }\n  }\n\n  SearchOptionsInjector.propTypes = propTypes\n  SearchOptionsInjector.defaultProps = defaultProps\n\n  return compose(\n    withI18n({ module: 'form' }),\n    createInjectSearch({\n      storeSearchResult: false,\n    }),\n    connect(\n      null,\n      mapDispatchToProps\n    )\n  )(SearchOptionsInjector)\n}\n\nexport default injectSearchOptions\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst contextTypes = {\n  nodeType: PropTypes.string,\n  path: PropTypes.string,\n  translationPath: PropTypes.string,\n}\n\nconst childContextTypes = {\n  nodeType: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  translationPath: PropTypes.string.isRequired,\n}\n\nconst propTypes = {\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  name: PropTypes.string,\n}\n\nconst defaultProps = {\n  index: undefined,\n  name: undefined,\n}\n\nexport const buildPath = ({\n  name,\n  index,\n  parentPath,\n  nameLast = true,\n} = {}) => {\n  const segments = []\n  if (parentPath !== undefined && parentPath !== '') {\n    segments.push(parentPath)\n  }\n\n  if (!nameLast) {\n    if (name !== undefined) {\n      segments.push(name)\n    }\n  }\n\n  if (index !== undefined) {\n    segments.push(index)\n  }\n\n  if (nameLast) {\n    if (name !== undefined) {\n      segments.push(name)\n    }\n  }\n\n  return segments.join('.')\n}\n\nexport const buildTranslationPath = ({ name, parentPath } = {}) => {\n  return buildPath({ name, parentPath })\n}\n\nexport default function pathBuilderFactory({\n  nodeType = 'OBJECT',\n  name: nodeName,\n} = {}) {\n  return function pathBuilder(ComposedComponent) {\n    class PathBuilder extends Component {\n      constructor(props, context) {\n        super(props, context)\n        const { path: parentPath, translationPath: parentTranslationPath } =\n          context || {}\n\n        const { index, name } = props\n\n        this.name = name || nodeName\n\n        this.path = buildPath({\n          index,\n          name: this.name,\n          nameLast: false,\n          parentPath,\n        })\n        this.translationPath = buildTranslationPath({\n          name: this.name,\n          parentPath: parentTranslationPath,\n        })\n        this.getPath = this.getPath.bind(this)\n        this.getTranslationPath = this.getTranslationPath.bind(this)\n      }\n\n      getChildContext() {\n        const { path, translationPath } = this\n\n        return {\n          nodeType,\n          path,\n          translationPath,\n        }\n      }\n\n      componentWillReceiveProps(nextProps) {\n        if (this.props.index !== nextProps.index) {\n          const { path: parentPath, translationPath: parentTranslationPath } =\n            this.context || {}\n\n          const { index, name } = nextProps\n\n          this.name = name || nodeName\n\n          this.path = buildPath({\n            index,\n            name: this.name,\n            nameLast: false,\n            parentPath,\n          })\n          this.translationPath = buildTranslationPath({\n            name: this.name,\n            parentPath: parentTranslationPath,\n          })\n        }\n      }\n\n      getPath(fieldName) {\n        return buildPath({\n          name: fieldName,\n          nameLast: true,\n          parentPath: this.path,\n        })\n      }\n\n      getTranslationPath(fieldName) {\n        return buildTranslationPath({\n          name: fieldName,\n          nameLast: true,\n          parentPath: this.translationPath,\n        })\n      }\n\n      render() {\n        return (\n          <ComposedComponent\n            getPath={this.getPath}\n            getTranslationPath={this.getTranslationPath}\n            {...this.props}\n          />\n        )\n      }\n    }\n\n    PathBuilder.childContextTypes = childContextTypes\n    PathBuilder.contextTypes = contextTypes\n    PathBuilder.defaultProps = defaultProps\n    PathBuilder.propTypes = propTypes\n\n    return PathBuilder\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { isDirty, isSubmitting } from 'redux-form'\nimport { Prompt } from 'react-router-dom'\n\nconst mapStateToProps = (\n  state,\n  { formName, preventLeavingDirty = true, preventLeavingForm = false }\n) => {\n  const dirty = isDirty(formName)(state)\n  const submitting = isSubmitting(formName)(state)\n  const preventTransition =\n    !submitting && ((preventLeavingDirty && dirty) || preventLeavingForm)\n  return {\n    preventTransition,\n  }\n}\n\nconst propTypes = {\n  getAllowTransition: PropTypes.func,\n  preventTransition: PropTypes.bool.isRequired,\n  unsavedChangesMessage: PropTypes.string,\n}\n\nconst withUnsubmittedFormConfirmation = ({\n  getAllowTransition: getAllowTransitionDefault,\n  unsavedChangesMessage: unsavedChangesMessageDefault,\n} = {}) => ComposedComponent => {\n  const defaultProps = {\n    getAllowTransition: undefined,\n    unsavedChangesMessage: unsavedChangesMessageDefault,\n  }\n\n  class UnsubmittedFormConfirmation extends Component {\n    constructor(props) {\n      super(props)\n      this.handleBeforeUnload = this.handleBeforeUnload.bind(this)\n    }\n\n    componentDidMount() {\n      if (this.props.unsavedChangesMessage) {\n        window.addEventListener('beforeunload', this.handleBeforeUnload)\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.props.unsavedChangesMessage) {\n        window.removeEventListener('beforeunload', this.handleBeforeUnload)\n      }\n    }\n\n    handleBeforeUnload(event) {\n      const { preventTransition } = this.props\n      if (preventTransition) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload#Example\n        // Cancel the event as stated by the standard.\n        event.preventDefault()\n        // Chrome requires returnValue to be set.\n        event.returnValue = '' // eslint-disable-line\n      }\n    }\n\n    render() {\n      const {\n        getAllowTransition: getAllowTransitionOverride,\n        preventTransition,\n        unsavedChangesMessage: unsavedChangesMessageOverride,\n      } = this.props\n\n      const unsavedChangesMessage =\n        unsavedChangesMessageOverride || unsavedChangesMessageDefault\n\n      if (!unsavedChangesMessage) {\n        return <ComposedComponent {...this.props} />\n      }\n\n      const getAllowTransition =\n        getAllowTransitionOverride || getAllowTransitionDefault\n\n      return (\n        <React.Fragment>\n          <Prompt\n            message={(location, action) => {\n              return (\n                (getAllowTransition && getAllowTransition(location, action)) ||\n                unsavedChangesMessage\n              )\n            }}\n            when={preventTransition}\n          />\n          <ComposedComponent {...this.props} />\n        </React.Fragment>\n      )\n    }\n  }\n\n  UnsubmittedFormConfirmation.propTypes = propTypes\n  UnsubmittedFormConfirmation.defaultProps = defaultProps\n\n  return compose(connect(mapStateToProps))(UnsubmittedFormConfirmation)\n}\n\nexport default withUnsubmittedFormConfirmation\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport extractProps from 'utilities/extractProps'\n\nconst propTypes = {\n  columnProps: PropTypes.shape({\n    computer: PropTypes.number,\n    mobile: PropTypes.number,\n    tablet: PropTypes.number,\n    textAlign: PropTypes.string,\n    verticalAlign: PropTypes.string,\n    width: PropTypes.number,\n  }),\n}\n\nconst defaultProps = {\n  columnProps: { width: 16 },\n}\n\nconst wrapInColumn = ComposedComponent => {\n  class ColumnWrapper extends PureComponent {\n    render() {\n      const { columnProps, ...rest } = this.props\n\n      if (columnProps.clear) {\n        const { rest: cleanedColumnProps } = extractProps({\n          keys: ['clear'],\n          props: columnProps,\n        })\n\n        return (\n          <Grid.Column width={16}>\n            <Grid textAlign=\"left\" verticalAlign=\"bottom\">\n              <Grid.Row>\n                <Grid.Column {...cleanedColumnProps}>\n                  <ComposedComponent {...rest} />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Grid.Column>\n        )\n      }\n\n      return (\n        <Grid.Column {...columnProps}>\n          <ComposedComponent {...rest} />\n        </Grid.Column>\n      )\n    }\n  }\n\n  ColumnWrapper.propTypes = propTypes\n  ColumnWrapper.defaultProps = defaultProps\n\n  return ColumnWrapper\n}\n\nexport default wrapInColumn\n","import createLinkFieldErrors from './createLinkFieldErrors'\nimport injectErrorKeys from './injectErrorKeys'\nimport injectHelpNotificationProps from './injectHelpNotificationProps'\nimport injectIsLatestActiveField from './injectIsLatestActiveField'\nimport injectLabelKey from './injectLabelKey'\nimport injectParameterKey from './injectParameterKey'\nimport injectSearchOptions from './injectSearchOptions'\nimport pathBuilder from './pathBuilder'\nimport withUnsubmittedFormConfirmation from './withUnsubmittedFormConfirmation'\nimport wrapInColumn from './wrapInColumn'\nimport wrapInFieldTemplate from './wrapInFieldTemplate'\n\nexport {\n  createLinkFieldErrors,\n  injectErrorKeys,\n  injectHelpNotificationProps,\n  injectIsLatestActiveField,\n  injectLabelKey,\n  injectParameterKey,\n  injectSearchOptions,\n  pathBuilder,\n  withUnsubmittedFormConfirmation,\n  wrapInColumn,\n  wrapInFieldTemplate,\n}\n","import { FormFieldError } from '../../../error/components'\nimport injectErrorKeys from '../../higherOrderComponents/injectErrorKeys'\n\nexport default injectErrorKeys(FormFieldError)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\nimport FieldError from './FieldError'\nimport FieldLabel from './FieldLabel'\nimport injectParameterKey from '../../higherOrderComponents/injectParameterKey'\n\nexport const propTypes = {\n  children: PropTypes.node,\n  displayError: PropTypes.bool,\n  displayLabel: PropTypes.bool,\n  enableHelpNotifications: PropTypes.bool,\n  errorStyle: PropTypes.object,\n  float: PropTypes.string,\n  helpNotificationProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  labelKey: PropTypes.string,\n  meta: PropTypes.shape({\n    error: PropTypes.object,\n    touched: PropTypes.bool,\n  }),\n  model: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n  module: PropTypes.string,\n  name: PropTypes.string,\n  parameterKey: PropTypes.string,\n  required: PropTypes.bool,\n  style: PropTypes.object,\n  subLabel: PropTypes.bool,\n}\nexport const defaultProps = {\n  children: undefined,\n  displayError: undefined,\n  displayLabel: true,\n  enableHelpNotifications: true,\n  errorStyle: undefined,\n  float: undefined,\n  helpNotificationProps: undefined,\n  helpText: undefined,\n  label: undefined,\n  labelKey: undefined,\n  meta: {},\n  model: undefined,\n  module: undefined,\n  name: undefined,\n  parameterKey: undefined,\n  required: false,\n  style: {},\n  subLabel: undefined,\n}\n\nexport const fieldTemplatePropKeys = Object.keys(propTypes)\n\nconst FieldTemplate = ({\n  children,\n  displayError: displayErrorInput,\n  displayLabel,\n  enableHelpNotifications,\n  errorStyle,\n  float,\n  helpNotificationProps,\n  helpText,\n  label,\n  labelKey,\n  meta,\n  module,\n  name,\n  parameterKey,\n  required,\n  style,\n  subLabel,\n}) => {\n  const { error, touched, warning } = meta\n  const displayError =\n    displayErrorInput !== undefined ? displayErrorInput : touched && !!error\n\n  const displayWarning = touched && !!warning\n\n  return (\n    <Form.Field\n      error={!!displayError}\n      required={required}\n      style={{\n        float,\n        position: 'relative',\n        width: float ? '100%' : undefined,\n        ...style,\n      }}\n    >\n      {displayLabel && (\n        <FieldLabel\n          enableHelpNotifications={enableHelpNotifications}\n          helpNotificationProps={helpNotificationProps}\n          helpText={helpText}\n          htmlFor={name}\n          label={label}\n          labelKey={labelKey}\n          module={module}\n          parameterKey={parameterKey}\n          required={required}\n          subLabel={subLabel}\n        />\n      )}\n      {children}\n      {!displayError && displayWarning && (\n        <FieldError\n          error={warning}\n          module={module}\n          parameterKey={parameterKey}\n          warning\n        />\n      )}\n      {displayError && (\n        <FieldError\n          error={error}\n          module={module}\n          parameterKey={parameterKey}\n          style={errorStyle}\n        />\n      )}\n    </Form.Field>\n  )\n}\n\nFieldTemplate.propTypes = propTypes\nFieldTemplate.defaultProps = defaultProps\n\nexport default injectParameterKey(FieldTemplate)\n","import immutable from 'object-path-immutable'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst models = schemaInterface.getModels()\n\nconst createFormModels = () => {\n  let updatedModels = { ...models }\n\n  updatedModels = immutable.set(updatedModels, 'storageLocation.required', [\n    'group',\n    'name',\n    'parent',\n  ])\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'storageLocation.properties.group',\n    {\n      minLength: 1,\n      type: 'string',\n    }\n  )\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'storageLocation.properties.name',\n    {\n      minLength: 1,\n      type: 'string',\n    }\n  )\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'storageLocation.properties.parent',\n    {\n      properties: {\n        id: {\n          minLength: 1,\n          type: 'string',\n        },\n      },\n      required: ['id'],\n      type: 'object',\n    }\n  )\n\n  return updatedModels\n}\n\nconst formModels = createFormModels()\n\nexport { formModels }\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\n\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\nimport { ConfirmationPopup } from 'coreModules/form/components'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  disconnectPreparationType: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  item: PropTypes.object,\n}\nconst defaultProps = {\n  item: undefined,\n}\n\nclass PreparationTypeRow extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  handleDisconnect() {\n    this.props.disconnectPreparationType(this.props.index)\n  }\n\n  render() {\n    const { item } = this.props\n\n    const { attributes: { name: { en: nameEn } = {} } = {} } = item || {}\n\n    return (\n      <Table.Row>\n        <Table.Cell width={14}>{capitalizeFirstLetter(nameEn)}</Table.Cell>\n        <Table.Cell>\n          <ConfirmationPopup\n            cancelButtonText={\n              <ModuleTranslate capitalize module=\"storage\" textKey=\"cancel\" />\n            }\n            confirmButtonText={\n              <ModuleTranslate capitalize module=\"storage\" textKey=\"remove\" />\n            }\n            header={\n              <ModuleTranslate\n                capitalize\n                module=\"storage\"\n                textKey=\"removeThisConnectedPreparationTypes\"\n              />\n            }\n            hideOnScroll\n            iconName=\"trash\"\n            onConfirm={this.handleDisconnect}\n            size=\"large\"\n            type=\"icon\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n}\n\nPreparationTypeRow.propTypes = propTypes\nPreparationTypeRow.defaultProps = defaultProps\n\nexport default compose(\n  createGetItemById({\n    refresh: false,\n    resource: 'preparationType',\n  })\n)(PreparationTypeRow)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\n\nimport PreparationTypeDropdownSearch from 'domainModules/curatedList/components/PreparationTypeDropdownSearch'\n\nconst propTypes = {\n  addPreparationType: PropTypes.func.isRequired,\n}\n\nexport class NewPreparationTypeRow extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(itemId) {\n    this.props.addPreparationType(itemId)\n  }\n\n  render() {\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <PreparationTypeDropdownSearch\n            displayLabel={false}\n            enableHelpNotification={false}\n            input={{\n              name: 'newPreparationType',\n              onBlur: this.handleChange,\n              onChange: this.handleChange,\n            }}\n            meta={{}}\n            module=\"curatedList\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n}\n\nNewPreparationTypeRow.propTypes = propTypes\n\nexport default compose()(NewPreparationTypeRow)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Table } from 'semantic-ui-react'\nimport { arrayPush, arrayUnshift, arrayRemove, change } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport AddButton from 'coreModules/form/components/parts/StaticContent/AddButton'\nimport PreparationTypeRow from './PreparationTypeRow'\nimport NewPreparationTypeRow from './NewPreparationTypeRow'\n\nconst log = createLog('modules:storage:PreparationTypesTable')\n\nconst mapStateToProps = (state, { formValueSelector }) => {\n  const preparationTypes = formValueSelector(state, 'preparationTypes')\n\n  return {\n    preparationTypes,\n  }\n}\n\nconst mapDispatchToProps = {\n  arrayPush,\n  arrayRemove,\n  arrayUnshift,\n  change,\n}\n\nconst propTypes = {\n  arrayPush: PropTypes.func.isRequired,\n  arrayRemove: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  preparationTypes: PropTypes.array,\n}\nconst defaultProps = {\n  preparationTypes: [],\n}\n\nexport class PreparationTypesTable extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { connectingPreparationType: false }\n\n    this.disconnectPreparationType = this.disconnectPreparationType.bind(this)\n    this.addPreparationType = this.addPreparationType.bind(this)\n  }\n\n  addPreparationType(itemId) {\n    this.setState({ connectingPreparationType: false })\n    return this.props.arrayPush(this.props.formName, 'preparationTypes', {\n      id: itemId,\n    })\n  }\n\n  disconnectPreparationType(index) {\n    return this.props.arrayRemove(\n      this.props.formName,\n      'preparationTypes',\n      index\n    )\n  }\n\n  render() {\n    log.render()\n    const { preparationTypes } = this.props\n    const { connectingPreparationType } = this.state\n\n    return (\n      <React.Fragment>\n        {(preparationTypes.length > 0 || connectingPreparationType) && (\n          <Table celled>\n            <Table.Body>\n              {preparationTypes.map((preparationType, index) => {\n                return (\n                  <PreparationTypeRow\n                    disconnectPreparationType={this.disconnectPreparationType}\n                    index={index}\n                    itemId={preparationType.id}\n                    key={preparationType.id}\n                  />\n                )\n              })}\n              {connectingPreparationType && (\n                <NewPreparationTypeRow\n                  addPreparationType={this.addPreparationType}\n                />\n              )}\n            </Table.Body>\n          </Table>\n        )}\n        {!connectingPreparationType && (\n          <AddButton\n            id=\"connect-preparation-type\"\n            module=\"storage\"\n            onClick={event => {\n              event.preventDefault()\n              this.setState({ connectingPreparationType: true })\n            }}\n            textKey=\"connectPreparationType\"\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nPreparationTypesTable.propTypes = propTypes\nPreparationTypesTable.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(PreparationTypesTable)\n","import React, { Component } from 'react'\n\nimport extractNameWithFirstLevelParent from 'common/es5/storage/extractNameWithFirstLevelParent'\nimport { DropdownSearch } from 'coreModules/form/components'\n\nconst include = ['parent.parent.parent.parent.parent']\nconst relationships = [\n  'parent',\n  'parent.parent',\n  'parent.parent.parent',\n  'parent.parent.parent.parent',\n  'parent.parent.parent.parent.parent',\n]\nconst resolveRelationships = ['storageLocation']\n\nclass StorageLocationDropdownSearch extends Component {\n  render() {\n    const { ...rest } = this.props\n    return (\n      <DropdownSearch\n        {...rest}\n        extractText={extractNameWithFirstLevelParent}\n        include={include}\n        nestItems\n        relationships={relationships}\n        resolveRelationships={resolveRelationships}\n        resource=\"storageLocation\"\n        type=\"dropdown-search-resource\"\n      />\n    )\n  }\n}\n\nexport default StorageLocationDropdownSearch\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\n\nimport StorageLocationDropdownSearch from '../StorageLocationDropdownSearch'\n\nlet StorageLocationManager = null\n\nexport function setLocalStorageLocationManager(injected) {\n  StorageLocationManager = injected\n}\nconst propTypes = {\n  excludeRootNode: PropTypes.bool,\n  fieldSearchQuery: PropTypes.string,\n  fieldValue: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  excludeRootNode: true,\n  fieldSearchQuery: undefined,\n  fieldValue: undefined,\n}\n\nexport class StorageLocationDropdownPickerSearch extends Component {\n  render() {\n    const {\n      fieldSearchQuery,\n      fieldValue,\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pickerActive,\n      excludeRootNode,\n      ...rest\n    } = this.props\n    const initialFilterValues = fieldSearchQuery\n      ? {\n          name: fieldSearchQuery,\n        }\n      : undefined\n\n    if (pickerActive) {\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <StorageLocationManager\n              excludeRootNode={excludeRootNode}\n              initialFilterValues={initialFilterValues}\n              initialItemId={fieldValue}\n              isPicker\n              onInteraction={onInteraction}\n              pickerTitle=\"Pick storage location\"\n              treeEnabled\n            />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Pick</Button>\n\n    return (\n      <StorageLocationDropdownSearch\n        excludeRootNode={excludeRootNode}\n        rightButton={picker}\n        {...rest}\n      />\n    )\n  }\n}\n\nStorageLocationDropdownPickerSearch.defaultProps = defaultProps\nStorageLocationDropdownPickerSearch.propTypes = propTypes\n\nexport default createPickerWrapper({})(StorageLocationDropdownPickerSearch)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport {\n  LEVEL_CABINET,\n  LEVEL_INSTITUTION,\n  LEVEL_MOUNTING_WALL,\n  LEVEL_ROOM,\n  LEVEL_SHELF,\n} from 'common/es5/constants/storage'\nimport { DropdownSearch } from 'coreModules/form/components'\n\nconst levels = [\n  LEVEL_ROOM,\n  LEVEL_MOUNTING_WALL,\n  LEVEL_CABINET,\n  LEVEL_SHELF,\n  LEVEL_INSTITUTION,\n]\n\nconst dropdownOptions = levels.map(level => {\n  return {\n    key: level,\n    text: capitalizeFirstLetter(level),\n    value: level,\n  }\n})\n\nconst propTypes = {\n  disableLevels: PropTypes.array,\n  input: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n}\n\nconst defaultProps = {\n  disableLevels: [],\n}\n\n// TODO Move down disable functionality and dry with taxonomy and locality\nclass StorageLocationLevelDropdown extends Component {\n  render() {\n    const { disableLevels, input, ...rest } = this.props\n    const { value } = input\n    let filteredDropdownOptions = dropdownOptions\n    if (disableLevels.length) {\n      filteredDropdownOptions = dropdownOptions.filter(({ key }) => {\n        return !disableLevels.includes(key)\n      })\n    }\n\n    const valueIsDisabled = disableLevels.includes(value)\n\n    return (\n      <DropdownSearch\n        {...rest}\n        disableClearValue={valueIsDisabled}\n        disabled={valueIsDisabled}\n        input={input}\n        module=\"storage\"\n        options={filteredDropdownOptions}\n        selectedOption={\n          valueIsDisabled\n            ? {\n                key: value,\n                text: capitalizeFirstLetter(value),\n                value,\n              }\n            : undefined\n        }\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nStorageLocationLevelDropdown.propTypes = propTypes\nStorageLocationLevelDropdown.defaultProps = defaultProps\n\nexport default StorageLocationLevelDropdown\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { ConfirmationPopup } from 'coreModules/form/components'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  disconnectName: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  nestedItem: PropTypes.object,\n}\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nclass TaxonNameRow extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  handleDisconnect() {\n    this.props.disconnectName(this.props.index)\n  }\n\n  render() {\n    const { nestedItem } = this.props\n\n    const name = objectPath.get(nestedItem, 'acceptedTaxonName.name')\n    const rank = objectPath.get(nestedItem, 'acceptedTaxonName.rank')\n\n    return (\n      <Table.Row>\n        <Table.Cell width={14}>{`${name} (${rank})`}</Table.Cell>\n        <Table.Cell>\n          <ConfirmationPopup\n            cancelButtonText={\n              <ModuleTranslate capitalize module=\"storage\" textKey=\"cancel\" />\n            }\n            confirmButtonText={\n              <ModuleTranslate capitalize module=\"storage\" textKey=\"remove\" />\n            }\n            header={\n              <ModuleTranslate\n                capitalize\n                module=\"storage\"\n                textKey=\"removeThisConnectedTaxa\"\n              />\n            }\n            hideOnScroll\n            iconName=\"trash\"\n            onConfirm={this.handleDisconnect}\n            size=\"large\"\n            type=\"icon\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n}\n\nTaxonNameRow.propTypes = propTypes\nTaxonNameRow.defaultProps = defaultProps\n\nexport default compose(\n  createGetNestedItemById({\n    include: ['acceptedTaxonName'],\n    refresh: true,\n    relationships: ['acceptedTaxonName'],\n    resolveRelationships: ['taxonName'],\n    resource: 'taxon',\n  })\n)(TaxonNameRow)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\n\nimport TaxonDropdownSearch from 'domainModules/taxon/components/TaxonDropdownSearch'\n\nconst propTypes = {\n  addName: PropTypes.func.isRequired,\n}\n\nexport class NewTaxonNameRow extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(itemId) {\n    this.props.addName(itemId)\n  }\n\n  render() {\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <TaxonDropdownSearch\n            displayLabel={false}\n            enableHelpNotification={false}\n            input={{\n              name: 'newTaxonName',\n              onBlur: this.handleChange,\n              onChange: this.handleChange,\n            }}\n            meta={{}}\n            module=\"taxon\"\n            taxonNameType=\"scientific\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n}\n\nNewTaxonNameRow.propTypes = propTypes\n\nexport default compose()(NewTaxonNameRow)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Table } from 'semantic-ui-react'\nimport { arrayPush, arrayUnshift, arrayRemove, change } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport AddButton from 'coreModules/form/components/parts/StaticContent/AddButton'\nimport TaxonRow from './TaxonRow'\nimport NewTaxonRow from './NewTaxonRow'\n\nconst log = createLog('modules:storage:AcceptedTaxonNamesTable')\n\nconst mapStateToProps = (state, { formValueSelector }) => {\n  const taxa = formValueSelector(state, 'taxa')\n\n  return {\n    taxa,\n  }\n}\n\nconst mapDispatchToProps = {\n  arrayPush,\n  arrayRemove,\n  arrayUnshift,\n  change,\n}\n\nconst propTypes = {\n  arrayPush: PropTypes.func.isRequired,\n  arrayRemove: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  taxa: PropTypes.array,\n}\nconst defaultProps = {\n  taxa: [],\n}\n\nexport class AcceptedTaxonNamesTable extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { connectingTaxon: false }\n\n    this.disconnectName = this.disconnectName.bind(this)\n    this.addName = this.addName.bind(this)\n  }\n\n  addName(itemId) {\n    this.setState({ connectingTaxon: false })\n    return this.props.arrayPush(this.props.formName, 'taxa', {\n      id: itemId,\n    })\n  }\n\n  disconnectName(index) {\n    return this.props.arrayRemove(this.props.formName, 'taxa', index)\n  }\n\n  render() {\n    log.render()\n    const { taxa } = this.props\n    const { connectingTaxon } = this.state\n\n    return (\n      <React.Fragment>\n        {(taxa.length > 0 || connectingTaxon) && (\n          <Table celled>\n            <Table.Body>\n              {taxa.map((taxon, index) => {\n                return (\n                  <TaxonRow\n                    disconnectName={this.disconnectName}\n                    index={index}\n                    itemId={taxon.id}\n                    key={taxon.id}\n                  />\n                )\n              })}\n              {connectingTaxon && <NewTaxonRow addName={this.addName} />}\n            </Table.Body>\n          </Table>\n        )}\n        {!connectingTaxon && (\n          <AddButton\n            id=\"connect-taxon\"\n            module=\"storage\"\n            onClick={event => {\n              event.preventDefault()\n              this.setState({ connectingTaxon: true })\n            }}\n            textKey=\"connectTaxon\"\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nAcceptedTaxonNamesTable.propTypes = propTypes\nAcceptedTaxonNamesTable.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(AcceptedTaxonNamesTable)\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport PreparationTypesTable from './PreparationTypesTable'\nimport StorageLocationDropdownPickerSearch from '../StorageLocationDropdownPickerSearch'\nimport StorageLocationDropdownSearch from '../StorageLocationDropdownSearch'\nimport StorageLocationLevelDropdown from '../StorageLocationLevelDropdown'\nimport TaxaTable from './TaxaTable'\n\nexport default {\n  ...wrapReduxFormFieldParts({\n    PreparationTypesTable,\n    StorageLocationDropdownPickerSearch,\n    StorageLocationDropdownSearch,\n    StorageLocationLevelDropdown,\n    TaxaTable,\n  }),\n}\n","import storageLocation from './storageLocation'\n\nexport default [storageLocation]\n","import { recordHistoryEvents } from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst { storageLocationRoot } = unitSpecs\n\nconst units = [storageLocationRoot, recordHistoryEvents]\n\nexport default {\n  name: 'storageLocation',\n  units,\n}\n","import connectedPreparationTypes from './connectedPreparationTypes'\nimport connectedTaxa from './connectedTaxa'\nimport storageLocationRoot from './storageLocationRoot'\n\nexport default {\n  connectedPreparationTypes,\n  connectedTaxa,\n  storageLocationRoot,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.connectedPreparationTypes',\n    },\n  },\n  {\n    componentName: 'PreparationTypesTable',\n    containsReduxFormField: true,\n  },\n]\n\nexport default {\n  name: 'connectedPreparationTypes',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.connectedTaxa',\n    },\n  },\n  {\n    componentName: 'TaxaTable',\n    containsReduxFormField: true,\n  },\n]\n\nexport default {\n  name: 'connectedTaxa',\n  parts,\n}\n","import { LEVEL_INSTITUTION } from 'common/es5/constants/storage'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.storageLocation',\n    },\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'name',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'StorageLocationLevelDropdown',\n    componentProps: {\n      columnProps: { width: 9 },\n      disableLevels: [LEVEL_INSTITUTION],\n    },\n    name: 'group',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'StorageLocationDropdownPickerSearch',\n    componentProps: {\n      columnProps: { width: 9 },\n      excludeRootNode: false,\n    },\n    name: 'parent.id',\n    required: true,\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'storageLocationRoot',\n  parts,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport {\n  formValueSelector as formValueSelectorFactory,\n  reduxForm,\n} from 'redux-form'\n\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { Form, FormRow } from 'coreModules/form/components'\nimport {\n  createMapRequiredStrings,\n  mapParentError,\n} from 'coreModules/form/utilities/errorTransformations'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { formModels } from '../../../../schemas'\nimport customParts from '../../../formParts'\nimport sectionSpecs from './sectionSpecs'\n\nconst formActionBarHeight = emToPixels(4.625)\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  form: PropTypes.string.isRequired,\n  getAllowTransition: PropTypes.func,\n  handleSubmit: PropTypes.func.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  preventLeavingForm: PropTypes.bool,\n  unsavedChangesMessage: PropTypes.string,\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  itemSubHeader: undefined,\n  preventLeavingForm: false,\n  unsavedChangesMessage: undefined,\n}\n\nclass BaseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.formValueSelector = formValueSelectorFactory(props.form)\n  }\n\n  render() {\n    const {\n      availableHeight,\n      form,\n      getAllowTransition,\n      handleSubmit,\n      itemHeader,\n      itemSubHeader,\n      preventLeavingForm,\n      unsavedChangesMessage,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(() => {\n          /* submit handled in resource manager */\n        })}\n        preventLeavingForm={preventLeavingForm}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n        unsavedChangesMessage={unsavedChangesMessage}\n      >\n        <FormRow\n          {...rest}\n          availableHeight={availableHeight - formActionBarHeight}\n          customParts={customParts}\n          formName={form}\n          formValueSelector={this.formValueSelector}\n          itemHeader={itemHeader}\n          itemSubHeader={itemSubHeader}\n          module=\"storage\"\n          moduleName=\"storage\"\n          sectionSpecs={sectionSpecs}\n        />\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  enableReinitialize: true,\n  validate: compose(\n    mapParentError,\n    createMapRequiredStrings(['group', 'name']),\n    customFormValidator({\n      model: 'storageLocation',\n      models: formModels,\n    })\n  ),\n})(BaseForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  itemId: undefined,\n}\n\nconst getAllowTransition = (location, action) => {\n  if (action === 'POP') {\n    return false\n  }\n  return location.search.includes('mainColumn=edit')\n}\n\nexport class Create extends PureComponent {\n  render() {\n    const { itemId, onInteraction, ...rest } = this.props\n    const initialValues = itemId ? { parent: { id: itemId } } : {}\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"storageLocationCreate\"\n        getAllowTransition={getAllowTransition}\n        initialValues={initialValues}\n        itemHeader={\n          <ModuleTranslate\n            capitalize\n            module=\"storage\"\n            textKey=\"headers.newStorageLocation\"\n          />\n        }\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        preventLeavingForm\n        unsavedChangesMessage=\"You have not saved the new record, are you sure you want to leave?\"\n      />\n    )\n  }\n}\n\nCreate.propTypes = propTypes\nCreate.defaultProps = defaultProps\n\nexport default Create\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nexport class Edit extends PureComponent {\n  render() {\n    const { nestedItem, onInteraction, ...rest } = this.props\n\n    if (!nestedItem) {\n      return null\n    }\n\n    const { resourceActivities } = nestedItem\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"storageLocationEdit\"\n        initialValues={nestedItem}\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        onInteraction={onInteraction}\n        resourceActivities={resourceActivities}\n      />\n    )\n  }\n}\n\nEdit.propTypes = propTypes\nEdit.defaultProps = defaultProps\n\nexport default Edit\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport {\n  LEVEL_CABINET,\n  LEVEL_INSTITUTION,\n  LEVEL_MOUNTING_WALL,\n  LEVEL_ROOM,\n  LEVEL_SHELF,\n} from 'common/es5/constants/storage'\nimport createLog from 'utilities/log'\nimport FieldWrapper from 'coreModules/form/components/FieldWrapper'\nimport { DropdownSearch, Input } from 'coreModules/form/components'\n\nexport const FORM_NAME = 'storageLocationFilter'\n\nconst log = createLog('modules:locality:BaseForm')\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nconst noop = () => {}\n\nconst groups = [\n  LEVEL_ROOM,\n  LEVEL_MOUNTING_WALL,\n  LEVEL_CABINET,\n  LEVEL_SHELF,\n  LEVEL_INSTITUTION,\n]\n\nconst dropdownOptions = groups.map(group => {\n  return {\n    key: group,\n    text: group,\n    value: group,\n  }\n})\n\nexport class BaseForm extends Component {\n  render() {\n    log.render()\n    const { error, handleSubmit } = this.props\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Form error={!!error} onSubmit={handleSubmit(noop)}>\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Name\"\n                    model=\"storageLocation\"\n                    module=\"storage\"\n                    name=\"name\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={DropdownSearch}\n                    enableHelpNotifications={false}\n                    fluid\n                    label=\"Storage level\"\n                    model=\"storageLocation\"\n                    module=\"storage\"\n                    name=\"group\"\n                    options={dropdownOptions}\n                    type=\"dropdown-search-local\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  form: FORM_NAME,\n})(BaseForm)\n","export default function buildFilterQuery({ excludeRootNode, values }) {\n  const and = []\n\n  if (excludeRootNode) {\n    and.push({\n      filter: {\n        filterFunction: 'excludeRootNode',\n        input: {\n          value: true,\n        },\n      },\n    })\n  }\n\n  if (values.name) {\n    and.push({\n      filter: {\n        filterFunction: 'nameSearch',\n        input: {\n          value: values.name,\n        },\n      },\n    })\n  }\n\n  if (values.group) {\n    and.push({\n      filter: {\n        filterFunction: 'group',\n        input: {\n          value: values.group,\n        },\n      },\n    })\n  }\n\n  if (!and.length) {\n    return {}\n  }\n\n  return {\n    and,\n  }\n}\n","import React from 'react'\n\nconst findParentWithSpecificGroup = (item, group) => {\n  if (!item) {\n    return null\n  }\n\n  if (item.group === group) {\n    return item\n  }\n\n  if (!(item && item.parent)) {\n    return null\n  }\n\n  return findParentWithSpecificGroup(item.parent, group)\n}\n\nconst tableColumnSpecifications = [\n  {\n    fieldPath: 'name',\n    label: 'modules.storage.fieldLabels.name',\n    width: 350,\n  },\n  {\n    fieldPath: 'group',\n    label: 'modules.storage.fieldLabels.group',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value, 'room')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.storage.fieldLabels.room',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value, 'mountingWall')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.storage.fieldLabels.mountingWall',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value, 'cabinet')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.storage.fieldLabels.cabinet',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value, 'shelf')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.storage.fieldLabels.shelf',\n    width: 250,\n  },\n]\nexport default tableColumnSpecifications\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  nestedItem: PropTypes.object.isRequired,\n}\n\nconst ItemTitle = ({ nestedItem = {} }) => {\n  const {\n    group,\n    name,\n    parent: { name: parentName, isRoot: parentIsRoot } = {},\n  } = nestedItem\n  if (!name) {\n    return ''\n  }\n\n  if (parentName && !parentIsRoot) {\n    return (\n      <React.Fragment>\n        <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>{name}</span>\n        <span>\n          [{group} in {parentName}]\n        </span>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>{name}</span>\n      <span>[{group}]</span>\n    </React.Fragment>\n  )\n}\n\nItemTitle.propTypes = propTypes\n\nexport default ItemTitle\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { ResourceManager } from 'coreModules/resourceManager/components'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport CreateForm from './item/CreateForm'\nimport EditForm from './item/EditForm'\nimport FilterForm from './filter/Form'\nimport buildFilterQuery from './filter/buildFilterQuery'\nimport tableColumnSpecifications from './tableColumnSpecifications'\nimport ItemTitle from './ItemTitle'\n\nconst resource = 'storageLocation'\nconst include = ['parent', 'resourceActivities']\nconst createGetNestedItemHocInput = {\n  include,\n  refresh: true,\n  relationships: include,\n  resolveRelationships: [\n    'storageLocation',\n    'parent',\n    'preparationType',\n    'resourceActivity',\n    'taxon',\n  ],\n  resource,\n}\n\nconst itemFetchOptions = {\n  include: ['parent'],\n  relationships: ['parent', 'children'],\n  resolveRelationships: ['storageLocation'],\n}\n\nconst baseTreeFilter = {\n  name: 'NRM',\n}\n\nconst sortOrder = ['attributes.name:asc']\n\nconst tableBatchFetchOptions = {\n  include: ['parent.parent.parent.parent.parent'],\n  relationships: [\n    'parent',\n    'parent.parent',\n    'parent.parent.parent',\n    'parent.parent.parent.parent',\n    'parent.parent.parent.parent.parent',\n  ],\n  resolveRelationships: ['storageLocation'],\n}\n\nconst mapDispatchToProps = {\n  getManyPhysicalObject: crudActionCreators.physicalObject.getMany,\n  getManySpecimen: crudActionCreators.specimen.getMany,\n  getManyStorageLocation: crudActionCreators.storageLocation.getMany,\n}\n\nconst propTypes = {\n  getManyPhysicalObject: PropTypes.func.isRequired,\n  getManySpecimen: PropTypes.func.isRequired,\n  getManyStorageLocation: PropTypes.func.isRequired,\n  itemId: PropTypes.string,\n  onNavigation: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n}\n\nclass StorageLocationManager extends Component {\n  constructor(props) {\n    super(props)\n    this.getChildren = this.getChildren.bind(this)\n    this.getSpecimens = this.getSpecimens.bind(this)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.fetchRelationshipsBeforeDelete = this.fetchRelationshipsBeforeDelete.bind(\n      this\n    )\n    this.renderCreateForm = this.renderCreateForm.bind(this)\n    this.renderEditForm = this.renderEditForm.bind(this)\n    this.renderFilterForm = this.renderFilterForm.bind(this)\n  }\n\n  getChildren() {\n    const { getManyStorageLocation, itemId } = this.props\n\n    return getManyStorageLocation({\n      limit: 30,\n      queryParams: { filter: { parentId: itemId } },\n    }).then(children => {\n      return children\n    })\n  }\n\n  getSpecimens() {\n    const { getManyPhysicalObject, getManySpecimen, itemId } = this.props\n\n    return getManyPhysicalObject({\n      limit: 100, // something big enough to likely return >=30 specimens if available\n      queryParams: { filter: { storageLocationId: itemId } },\n    }).then(physicalObjects => {\n      if (!physicalObjects.length) {\n        return []\n      }\n\n      const physicalObjectIds = physicalObjects.map(({ id }) => id)\n\n      return getManySpecimen({\n        limit: 30,\n        queryParams: { filter: { physicalObjectIds } },\n      }).then(specimens => {\n        return specimens\n      })\n    })\n  }\n\n  handleInteraction(type, data = {}) {\n    this.props.onNavigation(type, data)\n  }\n\n  fetchRelationshipsBeforeDelete() {\n    return Promise.all([this.getChildren(), this.getSpecimens()]).then(\n      ([children, specimens]) => {\n        return Promise.resolve({\n          children: { data: children },\n          specimens: { data: specimens },\n        })\n      }\n    )\n  }\n\n  renderEditForm(props = {}) {\n    const { itemId } = this.props\n    return (\n      <EditForm\n        {...props}\n        itemId={itemId}\n        onInteraction={this.handleInteraction}\n      />\n    )\n  }\n  renderCreateForm(props = {}) {\n    return <CreateForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  renderFilterForm(props = {}) {\n    return <FilterForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  render() {\n    return (\n      <ResourceManager\n        {...this.props}\n        baseTreeFilter={baseTreeFilter}\n        buildFilterQuery={buildFilterQuery}\n        createGetNestedItemHocInput={createGetNestedItemHocInput}\n        fetchRelationshipsBeforeDelete={this.fetchRelationshipsBeforeDelete}\n        filterHeader=\"Find storage locations\"\n        itemFetchOptions={itemFetchOptions}\n        ItemTitle={ItemTitle}\n        onInteraction={this.handleInteraction}\n        renderCreateForm={this.renderCreateForm}\n        renderEditForm={this.renderEditForm}\n        renderFilterForm={this.renderFilterForm}\n        resource={resource}\n        sortOrder={sortOrder}\n        tableBatchFetchOptions={tableBatchFetchOptions}\n        tableColumnSpecifications={tableColumnSpecifications}\n        treeEnabled\n      />\n    )\n  }\n}\n\nStorageLocationManager.propTypes = propTypes\nStorageLocationManager.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(StorageLocationManager)\n","import { compose } from 'redux'\nimport {\n  createLocalState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport StorageLocationManager from './Base'\n\nexport default compose(\n  createLocalState(),\n  createNavigationState()\n)(StorageLocationManager)\n","import { compose } from 'redux'\nimport {\n  createQueryState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport StorageLocationManager from './Base'\n\nexport default compose(\n  createQueryState(),\n  createNavigationState()\n)(StorageLocationManager)\n","import LocalStorageLocationManager from './StorageLocationManager/Local'\nimport StorageLocationDropdownPickerSearch, {\n  setLocalStorageLocationManager,\n} from './StorageLocationDropdownPickerSearch'\nimport StorageLocationDropdownSearch from './StorageLocationDropdownSearch'\nimport StorageLocationManager from './StorageLocationManager/Query'\n\nsetLocalStorageLocationManager(LocalStorageLocationManager)\n\nexport {\n  StorageLocationDropdownPickerSearch,\n  StorageLocationDropdownSearch,\n  StorageLocationManager,\n}\n","import { BOOTSTRAP_REGISTER_MODULES } from '../actionTypes'\n\nexport default function registerModules({ config, modules }) {\n  return {\n    payload: { config, modules },\n    type: BOOTSTRAP_REGISTER_MODULES,\n  }\n}\n","export const ACCEPTED = 'accepted'\nexport const ALL = 'all'\nexport const CLASS = 'class'\nexport const FAMILY = 'family'\nexport const GENUS = 'genus'\nexport const MISSING_RANK = 'missing rank'\nexport const MODULE_NAME = 'taxon'\nexport const ORDER = 'order'\nexport const ROOT_TAXON_NAME = 'root'\nexport const SCIENTIFIC = 'scientific'\nexport const SET_TAXON_INSPECT = 'SET_TAXON_INSPECT'\nexport const SET_TAXON_NAME_INSPECT = 'SET_TAXON_NAME_INSPECT'\nexport const SPECIES = 'species'\nexport const SUBSPECIES = 'subspecies'\nexport const SYNONYM = 'synonym'\nexport const VERNACULAR = 'vernacular'\n\nexport const DISCONNECT_TAXON_NAME = 'DISCONNECT_TAXON_NAME'\nexport const SET_TAXON_NAME_AS_ACCEPTED = 'SET_TAXON_NAME_AS_ACCEPTED'\nexport const SET_TAXON_NAME_AS_SYNONYM = 'SET_TAXON_NAME_AS_SYNONYM'\nexport const ADD_SYNONYM = 'ADD_SYNONYM'\nexport const ADD_VERNACULAR_NAME = 'ADD_VERNACULAR_NAME'\n\nconst groups = [CLASS, ORDER, FAMILY, GENUS, SPECIES, SUBSPECIES]\n\nexport const DROPDOWN_FILTER_OPTIONS = [\n  {\n    key: ALL,\n    text: ALL,\n    value: '',\n  },\n  ...groups.map(group => {\n    return {\n      key: group,\n      text: group,\n      value: group,\n    }\n  }),\n]\n","import React, { Children, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nimport globalSelectors from '../globalSelectors'\n\nconst mapStateToProps = state => {\n  return {\n    language: globalSelectors.getLanguage(state),\n    markdown: globalSelectors.getMarkdown(state),\n    translations: globalSelectors.getTranslations(state),\n  }\n}\nconst childContextTypes = {\n  language: PropTypes.string.isRequired,\n  markdown: PropTypes.object.isRequired,\n  translations: PropTypes.object.isRequired,\n}\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  language: PropTypes.string.isRequired,\n  markdown: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  translations: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n}\n\nclass I18nProvider extends Component {\n  getChildContext() {\n    const { language, markdown, translations } = this.props\n    return { language, markdown, translations }\n  }\n\n  render() {\n    return (\n      <div key={this.props.language}>{Children.only(this.props.children)}</div>\n    )\n  }\n}\n\nI18nProvider.childContextTypes = childContextTypes\nI18nProvider.propTypes = propTypes\n\n// using withRouter to avoid location updates being blocked\n// https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default compose(\n  withRouter,\n  connect(mapStateToProps)\n)(I18nProvider)\n","import objectPath from 'object-path'\n\nexport const getLocalState = state => {\n  return state.i18n\n}\n\nexport const getAvailableLanguages = state => {\n  return state.availableLanguages\n}\n\nexport const getDefaultLanguage = state => {\n  return state.defaultLanguage\n}\n\nexport const getLanguage = state => {\n  return state.language\n}\n\nexport const getMarkdown = state => {\n  return state.markdown\n}\n\nexport const getMarkdownModules = state => {\n  const markdown = getMarkdown(state)\n  return markdown && markdown.modules\n}\n\nexport const getMarkdownKeysByPath = (state, path) => {\n  const modules = getMarkdownModules(state)\n\n  return Object.keys(objectPath.get(modules, path) || {})\n}\n\nexport const getTranslations = state => {\n  return state.translations\n}\n\nexport const getTranslationsModules = state => {\n  const translations = getTranslations(state)\n  return translations && translations.modules\n}\n","import { createSelector } from 'reselect'\n\nexport const getLocalState = state => {\n  return state.notifications\n}\n\nconst getSecondArgument = (_, secondArg) => secondArg\n\nexport const getSpecifications = state => {\n  return state.specifications\n}\n\nexport const getSpecificationByType = (state, type) => {\n  const specifications = getSpecifications(state)\n  if (!specifications[type]) {\n    return null\n  }\n  return specifications[type]\n}\n\nexport const getSpecificationArrayWithTerminateActions = createSelector(\n  getSpecifications,\n  specifications => {\n    return Object.keys(specifications)\n      .map(key => {\n        return specifications[key]\n      })\n      .filter(registeredNotification => registeredNotification.terminateActions)\n  }\n)\n\nexport const getSpecificationArrayWithTriggerActions = createSelector(\n  getSpecifications,\n  specifications => {\n    return Object.keys(specifications)\n      .map(key => {\n        return specifications[key]\n      })\n      .filter(registeredNotification => registeredNotification.triggerActions)\n  }\n)\n\nexport const getSpecificationTerminateActionMap = createSelector(\n  getSpecificationArrayWithTerminateActions,\n  registeredNotifications => {\n    return registeredNotifications.reduce(\n      (terminateActionMap, { type, terminateActions = [] }) => {\n        return terminateActions.reduce((obj, action) => {\n          if (obj[action]) {\n            return {\n              ...obj,\n              [action]: [...obj[action], type],\n            }\n          }\n\n          return {\n            ...obj,\n            [action]: [type],\n          }\n        }, terminateActionMap)\n      },\n      {}\n    )\n  }\n)\n\nexport const getSpecificationTriggerActionMap = createSelector(\n  getSpecificationArrayWithTriggerActions,\n  specifications => {\n    return specifications.reduce(\n      (triggerActionMap, { type, triggerActions = [] }) => {\n        return triggerActions.reduce((obj, action) => {\n          if (obj[action]) {\n            return {\n              ...obj,\n              [action]: [...obj[action], type],\n            }\n          }\n\n          return {\n            ...obj,\n            [action]: [type],\n          }\n        }, triggerActionMap)\n      },\n      {}\n    )\n  }\n)\n\nexport const getNotifications = state => {\n  return state.activeNotifications\n}\n\nexport const getNotificationsInArray = createSelector(\n  getNotifications,\n  activeNotifications => {\n    const sequentialIds = Object.keys(activeNotifications)\n\n    if (!sequentialIds.length) {\n      return []\n    }\n\n    return sequentialIds.map(sequentialId => {\n      return activeNotifications[sequentialId]\n    })\n  }\n)\n\nexport const getNotificationsByType = createSelector(\n  getNotificationsInArray,\n  getSecondArgument,\n  (activeNotificationsArray, selectedType) => {\n    return (\n      (activeNotificationsArray &&\n        activeNotificationsArray.filter(({ type }) => type === selectedType)) ||\n      []\n    )\n  }\n)\n\nexport const getNotificationsByDisplayType = createSelector(\n  getNotificationsInArray,\n  getSecondArgument,\n  (activeNotificationsArray, selectedDisplayType) => {\n    return (\n      activeNotificationsArray &&\n      activeNotificationsArray.filter(\n        ({ displayType }) => displayType === selectedDisplayType\n      )\n    )\n  }\n)\n\nconst getHighestPriorityAndOldestNotification = (\n  highestSoFar,\n  newCandidate\n) => {\n  if (!highestSoFar) {\n    return newCandidate\n  }\n\n  if (highestSoFar.priority > newCandidate.priority) {\n    return highestSoFar\n  }\n\n  if (highestSoFar.priority === newCandidate.priority) {\n    return highestSoFar.sequentialId < newCandidate.sequentialId\n      ? highestSoFar\n      : newCandidate\n  }\n\n  return newCandidate\n}\n\nexport const getPrioritizedNotificationByDisplayType = createSelector(\n  getNotificationsByDisplayType,\n  notifications => {\n    return (\n      notifications &&\n      notifications.reduce(getHighestPriorityAndOldestNotification, null)\n    )\n  }\n)\n","import { SIZE_SMALL, SIZE_MEDIUM, SIZE_LARGE } from './constants'\n\nexport const getLocalState = state => {\n  return state.size\n}\n\nexport const getBreakpoints = state => {\n  return state && state.breakpoints\n}\n\nexport const getCurrentBreakpoint = state => {\n  return state && state.currentBreakpoint\n}\n\nexport const getBreakpointByWidth = (state, width) => {\n  const breakpoints = getBreakpoints(state)\n  /* eslint-disable no-plusplus */\n  for (let i = 0; i < breakpoints.length; i++) {\n    const breakpoint = breakpoints[i]\n    if (breakpoint.maxWidth && breakpoint.maxWidth > width) {\n      return breakpoint\n    }\n  }\n  /* eslint-enable no-plusplus */\n  return breakpoints[breakpoints.length - 1]\n}\n\nexport const getSize = state => {\n  const currentBreakpoint = getCurrentBreakpoint(state)\n  return currentBreakpoint && currentBreakpoint.size\n}\n\nexport const getIsSmall = state => {\n  return getSize(state) === SIZE_SMALL\n}\n\nexport const getIsMedium = state => {\n  return getSize(state) === SIZE_MEDIUM\n}\n\nexport const getIsLarge = state => {\n  return getSize(state) === SIZE_LARGE\n}\n\nexport const getHeight = state => {\n  return state && state.height\n}\n\nexport const getWidth = state => {\n  return state && state.width\n}\n","export const NAVIGATION_ITEMS = [\n  {\n    exact: true,\n    name: 'start',\n    path: '/app',\n  },\n  {\n    exact: true,\n    name: 'specimens',\n    path: '/app/specimens/mammals',\n  },\n  {\n    exact: false,\n    name: 'agents',\n    path: '/app/agents',\n  },\n  {\n    exact: false,\n    name: 'localities',\n    path: '/app/localities',\n  },\n  {\n    exact: false,\n    name: 'storage',\n    path: '/app/storageLocations',\n  },\n  {\n    exact: false,\n    name: 'taxon',\n    path: '/app/taxa',\n  },\n  {\n    exact: false,\n    name: 'scientificNames',\n    path: '/app/taxonNames',\n  },\n]\n","import { createSelector } from 'reselect'\n\nexport const getLocalState = state => {\n  return state.keyboardShortcuts\n}\n\nexport const getShortcuts = state => {\n  return state.shortcuts\n}\n\nexport const getShortcutsList = createSelector(\n  getShortcuts,\n  (shortcutsMap = {}) => Object.values(shortcutsMap)\n)\n\nexport const getShowInfo = state => {\n  return state.showInfo\n}\n\nexport const getLayer = state => {\n  return state.layer\n}\n","import {\n  USER_LOG_IN_FAIL,\n  USER_LOG_IN_REQUEST,\n  USER_LOG_IN_SUCCESS,\n} from '../actionTypes'\nimport { LOG_IN } from '../endpoints'\n\nexport default function logIn({ username, password, throwError = true } = {}) {\n  const body = {\n    client_id: 'dina-rest',\n    grant_type: 'password',\n    password,\n    username,\n  }\n\n  return (dispatch, getState, { apiClient }) => {\n    dispatch({\n      type: USER_LOG_IN_REQUEST,\n    })\n    return apiClient\n      .call(LOG_IN, {\n        body,\n      })\n      .then(\n        response => {\n          dispatch({\n            payload: response,\n            type: USER_LOG_IN_SUCCESS,\n          })\n          return response\n        },\n        error => {\n          dispatch({\n            error: true,\n            payload: error,\n            type: USER_LOG_IN_FAIL,\n          })\n          // for redux form\n          if (throwError) {\n            throw error\n          }\n        }\n      )\n  }\n}\n","import { utils } from 'redux-module-local-storage'\nimport { AUTH_TOKEN_KEY } from './constants'\n\nexport const getLocalState = state => {\n  return state.user\n}\n\nexport const getUserLoggedIn = state => {\n  return !!state.user\n}\n\nexport const getUser = state => {\n  return state.user\n}\n\nexport const getName = state => {\n  const user = getUser(state)\n  return (user && user.name) || null\n}\n\nexport const getUsername = state => {\n  const user = getUser(state)\n  return (user && user.username) || null\n}\n\nexport const getUserLoading = state => {\n  return !!state.loading\n}\n\nexport const getAuthToken = () => {\n  const authObject = utils.getItem(AUTH_TOKEN_KEY)\n  return authObject ? authObject.accessToken : null\n}\n\nexport const getConfig = state => {\n  return state.config\n}\n\nexport const getGetUserUrl = state => {\n  const config = getConfig(state)\n  return (config && config.getUserUrl) || null\n}\n\nexport const getLoginUrl = state => {\n  const config = getConfig(state)\n  return (config && config.loginUrl) || null\n}\n\nexport const getUserPreferences = state => {\n  return state.preferences\n}\n\nexport const getUserPreferencesLanguage = state => {\n  const preferences = getUserPreferences(state)\n  return preferences && preferences.language\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createHelpNotificationProps } from '../utilities'\n\nconst propTypes = {\n  context: PropTypes.string,\n  enableHelpNotifications: PropTypes.bool,\n  helpNotificationProps: PropTypes.object,\n  labelKey: PropTypes.string,\n  module: PropTypes.string,\n  parameterKey: PropTypes.string,\n}\n\nconst defaultProps = {\n  context: 'helpTexts',\n  enableHelpNotifications: false,\n  helpNotificationProps: undefined,\n  labelKey: undefined,\n  module: undefined,\n  parameterKey: undefined,\n}\n\nexport default function injectHelpNotificationProps(ComposedComponent) {\n  class HelpNotificationPropsInjector extends Component {\n    constructor(props) {\n      super(props)\n      const {\n        context,\n        helpNotificationProps,\n        enableHelpNotifications,\n        labelKey,\n        module,\n        parameterKey,\n      } = props\n      this.state = {\n        helpNotificationProps:\n          !enableHelpNotifications || !!helpNotificationProps\n            ? undefined\n            : createHelpNotificationProps({\n                context,\n                labelKey,\n                module,\n                parameterKey,\n              }),\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (\n        !nextProps.enableHelpNotifications &&\n        this.props.parameterKey !== nextProps.parameterKey\n      ) {\n        this.setState({\n          helpNotificationProps: createHelpNotificationProps({\n            context: nextProps.context,\n            labelKey: nextProps.labelKey,\n            module: nextProps.module,\n            parameterKey: nextProps.parameterKey,\n          }),\n        })\n      }\n    }\n\n    render() {\n      const { helpNotificationProps } = this.state\n      const propsToForward = {\n        ...this.props,\n      }\n\n      delete propsToForward.context\n      if (helpNotificationProps) {\n        propsToForward.helpNotificationProps = helpNotificationProps\n      }\n\n      return <ComposedComponent {...propsToForward} />\n    }\n  }\n\n  HelpNotificationPropsInjector.defaultProps = defaultProps\n  HelpNotificationPropsInjector.propTypes = propTypes\n\n  return HelpNotificationPropsInjector\n}\n","export default function downloadFile({ fileUrl, fileName }) {\n  return (dispatch, getState, { apiClient }) => {\n    return apiClient.downloadFile({\n      fileName,\n      fileUrl,\n    })\n  }\n}\n","import crudModule from './crudModule'\n\nexport default crudModule.actionTypes\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createErrorKeys } from '../utilities'\n\nconst propTypes = {\n  context: PropTypes.string,\n  error: PropTypes.object,\n  errorKeys: PropTypes.array,\n  module: PropTypes.string.isRequired,\n  parameterKey: PropTypes.string,\n}\n\nconst defaultProps = {\n  context: 'errors',\n  error: undefined,\n  errorKeys: undefined,\n  parameterKey: undefined,\n}\n\nexport default function injectErrorKeys(ComposedComponent) {\n  class ErrorKeysInjector extends Component {\n    constructor(props) {\n      super(props)\n      const { context, error, errorKeys, module, parameterKey } = props\n      const errorCode = error && error.errorCode\n      this.state = {\n        errorKeys:\n          errorKeys ||\n          createErrorKeys({\n            context,\n            errorCode,\n            module,\n            parameterKey,\n          }),\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      const currentErrorCode = this.props.error && this.props.error.errorCode\n      const nextErrorCode = nextProps.error && nextProps.error.errorCode\n      if (\n        !nextProps.errorKeys &&\n        (this.props.parameterKey !== nextProps.parameterKey ||\n          currentErrorCode !== nextErrorCode)\n      ) {\n        this.setState({\n          errorKeys: createErrorKeys({\n            context: nextProps.context,\n            errorCode: nextErrorCode,\n            module: nextProps.module,\n            parameterKey: nextProps.parameterKey,\n          }),\n        })\n      }\n    }\n\n    render() {\n      const { errorKeys } = this.state\n      const propsToForward = {\n        ...this.props,\n      }\n\n      delete propsToForward.context\n      if (errorKeys) {\n        propsToForward.errorKeys = errorKeys\n      }\n\n      return <ComposedComponent {...propsToForward} />\n    }\n  }\n\n  ErrorKeysInjector.defaultProps = defaultProps\n  ErrorKeysInjector.propTypes = propTypes\n\n  return ErrorKeysInjector\n}\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","import { createSelector } from 'reselect'\n\nimport getSecondArgument from 'utilities/getSecondArgument'\n\nexport const getLocalState = state => state.form\n\nexport const getFormState = createSelector(\n  state => state,\n  getSecondArgument,\n  (state, formName) => {\n    return state[formName]\n  }\n)\n\n// returns name of active field if any, else undefined\nexport const getFormActive = createSelector(\n  getFormState,\n  formState => {\n    return formState.active\n  }\n)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createLabelKey } from '../utilities'\n\nconst propTypes = {\n  context: PropTypes.string,\n  labelKey: PropTypes.string,\n  module: PropTypes.string,\n  parameterKey: PropTypes.string,\n}\n\nconst defaultProps = {\n  context: 'fieldLabels',\n  labelKey: undefined,\n  module: undefined,\n  parameterKey: undefined,\n}\n\nexport default function injectLabelKey(ComposedComponent) {\n  class LabelKeyInjector extends Component {\n    constructor(props) {\n      super(props)\n      const { context, labelKey, module, parameterKey } = props\n      this.state = {\n        labelKey: labelKey\n          ? undefined\n          : createLabelKey({\n              context,\n              module,\n              parameterKey,\n            }),\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (\n        !nextProps.labelKey &&\n        this.props.parameterKey !== nextProps.parameterKey\n      ) {\n        this.setState({\n          labelKey: createLabelKey({\n            module: nextProps.module,\n            parameterKey: nextProps.parameterKey,\n          }),\n        })\n      }\n    }\n\n    render() {\n      const { labelKey } = this.state\n      const propsToForward = {\n        ...this.props,\n      }\n\n      delete propsToForward.context\n      if (labelKey) {\n        propsToForward.labelKey = labelKey\n      }\n\n      return <ComposedComponent {...propsToForward} />\n    }\n  }\n\n  LabelKeyInjector.defaultProps = defaultProps\n  LabelKeyInjector.propTypes = propTypes\n\n  return LabelKeyInjector\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { createParameterKey } from '../utilities'\n\nconst propTypes = {\n  model: PropTypes.string,\n  name: PropTypes.string,\n  parameterKey: PropTypes.string,\n}\n\nconst defaultProps = {\n  model: undefined,\n  name: undefined,\n  parameterKey: undefined,\n}\n\nexport default function injectParameterKey(ComposedComponent) {\n  class ParameterKeyInjector extends Component {\n    constructor(props) {\n      super(props)\n      const { model, name, parameterKey } = props\n      this.state = {\n        parameterKey: parameterKey\n          ? undefined\n          : createParameterKey({ model, name }),\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (!nextProps.parameterKey && this.props.name !== nextProps.name) {\n        this.setState({\n          parameterKey: createParameterKey({\n            model: nextProps.model,\n            name: nextProps.name,\n          }),\n        })\n      }\n    }\n\n    render() {\n      const { parameterKey } = this.state\n      const propsToForward = {\n        ...this.props,\n      }\n\n      delete propsToForward.context\n      if (parameterKey) {\n        propsToForward.parameterKey = parameterKey\n      }\n\n      return <ComposedComponent {...propsToForward} />\n    }\n  }\n\n  ParameterKeyInjector.defaultProps = defaultProps\n  ParameterKeyInjector.propTypes = propTypes\n\n  return ParameterKeyInjector\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Inline, Modal } from 'coreModules/notifications/components'\n\nconst propTypes = {\n  displayType: PropTypes.oneOf(['fixed', 'inline']).isRequired,\n}\n\nfunction HelpTextNotification({ displayType, ...rest }) {\n  if (displayType === 'fixed') {\n    return <Modal {...rest} />\n  }\n  if (displayType === 'inline') {\n    return <Inline {...rest} />\n  }\n  return null\n}\n\nHelpTextNotification.propTypes = propTypes\n\nexport default HelpTextNotification\n","export const MODULE_NAME = 'formSupport'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport objectPath from 'object-path'\n\nimport createDeleteProperties from 'common/es5/createDeleteProperties'\nimport { DropdownSearch } from 'coreModules/form/components'\n\nimport { ALL, PERSON, ORGANIZATION, OTHER, UNKNOWN } from '../../constants'\n\nconst deleteUndefinedProperties = createDeleteProperties(undefined)\n\nconst includeFields = [\n  'id',\n  'attributes.fullName',\n  'attributes.agentType',\n  'attributes.disambiguatingDescription',\n]\n\nconst propTypes = {\n  group: PropTypes.oneOf([ALL, PERSON, ORGANIZATION, OTHER, UNKNOWN]),\n}\n\nconst defaultProps = {\n  group: ALL,\n}\n\nconst extractText = item => {\n  const disambiguatingDescription = objectPath.get(\n    item,\n    'attributes.disambiguatingDescription'\n  )\n  const fullName = objectPath.get(item, 'attributes.fullName')\n\n  if (disambiguatingDescription) {\n    return `${fullName} (${disambiguatingDescription})`\n  }\n\n  return fullName\n}\n\nconst mapItemToOption = (item, value) => {\n  return {\n    key: item.id,\n    text: extractText(item),\n    value: deleteUndefinedProperties({\n      ...value,\n      normalized: { id: item.id },\n    }),\n  }\n}\n\nclass AgentDropdownSearch extends Component {\n  render() {\n    const { group, ...rest } = this.props\n\n    let baseFilter\n    switch (group) {\n      case ALL: {\n        break\n      }\n      case PERSON: {\n        baseFilter = {\n          filterFunctionName: 'matchAgentType',\n          value: PERSON,\n        }\n        break\n      }\n      case ORGANIZATION: {\n        baseFilter = {\n          filterFunctionName: 'matchAgentType',\n          value: ORGANIZATION,\n        }\n        break\n      }\n      case OTHER: {\n        baseFilter = {\n          filterFunctionName: 'matchAgentType',\n          value: OTHER,\n        }\n        break\n      }\n      case UNKNOWN: {\n        baseFilter = {\n          filterFunctionName: 'matchAgentType',\n          value: UNKNOWN,\n        }\n        break\n      }\n      default: {\n        throw new Error(`Unknown group: ${group}`)\n      }\n    }\n\n    return (\n      <DropdownSearch\n        pathToIdInValue=\"normalized.id\"\n        pathToTextInValue=\"textI\"\n        {...rest}\n        baseFilter={baseFilter}\n        extractText={extractText}\n        filterFunctionName=\"fullNameSearch\"\n        includeFields={includeFields}\n        mapItemToOption={mapItemToOption}\n        resource=\"normalizedAgent\"\n        searchWithQuery\n        type=\"dropdown-search-id-text\"\n      />\n    )\n  }\n}\n\nAgentDropdownSearch.propTypes = propTypes\nAgentDropdownSearch.defaultProps = defaultProps\n\nexport default AgentDropdownSearch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport extractProps from 'utilities/extractProps'\nimport FieldTemplate, {\n  defaultProps as fieldTemplateDefaultProps,\n  fieldTemplatePropKeys,\n  propTypes as fieldTemplatePropTypes,\n} from '../../FieldTemplate'\n\nimport CheckboxInput from '../../inputs/Checkbox'\nimport FieldLabel from '../../FieldTemplate/FieldLabel'\nimport { createParameterKey } from '../../../utilities'\n\nconst propTypes = {\n  inline: PropTypes.bool,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  required: PropTypes.bool,\n  ...fieldTemplatePropTypes,\n}\nconst defaultProps = {\n  inline: false,\n  ...fieldTemplateDefaultProps,\n}\n\nconst CheckboxField = props => {\n  const {\n    displayLabel,\n    enableHelpNotifications,\n    helpNotificationProps,\n    helpText,\n    inline,\n    input,\n    label,\n    model,\n    module,\n    parameterKeyInput,\n  } = props\n  const parameterKey =\n    parameterKeyInput ||\n    createParameterKey({\n      model,\n      name: input.name,\n    })\n\n  const fieldLabel = inline ? (\n    <FieldLabel\n      enableHelpNotifications={enableHelpNotifications}\n      helpNotificationProps={helpNotificationProps}\n      helpText={helpText}\n      htmlFor={input.name}\n      label={label}\n      module={module}\n      parameterKey={parameterKey}\n    />\n  ) : (\n    undefined\n  )\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  return (\n    <FieldTemplate\n      {...fieldTemplateProps}\n      displayLabel={!fieldLabel && displayLabel}\n      label={fieldLabel ? undefined : label}\n      name={input.name}\n    >\n      <CheckboxInput {...rest} label={fieldLabel} />\n    </FieldTemplate>\n  )\n}\n\nCheckboxField.propTypes = propTypes\nCheckboxField.defaultProps = defaultProps\n\nexport default CheckboxField\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Radio } from 'semantic-ui-react'\n\nimport FieldTemplate from '../../FieldTemplate'\n\nconst propTypes = {\n  enableHelpNotifications: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n  label: PropTypes.node,\n  labelKey: PropTypes.string,\n  module: PropTypes.string,\n  radioOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n}\n\nconst defaultProps = {\n  enableHelpNotifications: undefined,\n  label: undefined,\n  labelKey: undefined,\n  module: 'collectionMammals',\n}\n\nclass RadioField extends Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event, { value }) {\n    this.props.input.onChange(value)\n  }\n\n  render() {\n    const {\n      enableHelpNotifications,\n      input: { name, value: selectedValue },\n      label,\n      labelKey,\n      module,\n      radioOptions,\n    } = this.props\n\n    return (\n      <FieldTemplate\n        enableHelpNotifications={enableHelpNotifications}\n        label={label}\n        labelKey={labelKey}\n        meta={{}}\n        module={module}\n        name={name}\n        style={{ marginBottom: '0.5em', width: '100%' }}\n      >\n        <div>\n          {radioOptions.map(type => {\n            const { key, text, value } = type\n\n            return (\n              <Radio\n                checked={selectedValue === value}\n                className=\"inline group\"\n                key={key}\n                label={text}\n                name={name}\n                onChange={this.handleChange}\n                value={value}\n              />\n            )\n          })}\n        </div>\n      </FieldTemplate>\n    )\n  }\n}\n\nRadioField.propTypes = propTypes\nRadioField.defaultProps = defaultProps\n\nexport default RadioField\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox } from 'semantic-ui-react'\n\nimport FieldTemplate from '../../FieldTemplate'\n\nconst propTypes = {\n  enableHelpNotifications: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  }).isRequired,\n  label: PropTypes.object.isRequired,\n  radioOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    }).isRequired\n  ).isRequired,\n}\n\nconst defaultProps = {\n  enableHelpNotifications: undefined,\n}\n\nclass RadioBoolean extends Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event, { value }) {\n    this.props.input.onChange(value === 'true')\n  }\n\n  render() {\n    const {\n      enableHelpNotifications,\n      input: { name, value: selectedValue },\n      label,\n      radioOptions,\n    } = this.props\n\n    return (\n      <FieldTemplate\n        enableHelpNotifications={enableHelpNotifications}\n        label={label}\n        meta={{}}\n        name={name}\n      >\n        {radioOptions.map(({ key, text, value }) => {\n          const checked =\n            (value === 'true' && selectedValue === true) ||\n            (value === 'false' && selectedValue === false)\n\n          return (\n            <Checkbox\n              checked={checked}\n              className=\"inline group\"\n              key={key}\n              label={text}\n              name={name}\n              onChange={this.handleChange}\n              radio\n              value={value}\n            />\n          )\n        })}\n      </FieldTemplate>\n    )\n  }\n}\n\nRadioBoolean.propTypes = propTypes\nRadioBoolean.defaultProps = defaultProps\n\nexport default RadioBoolean\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\nconst propTypes = {\n  autoComplete: PropTypes.string,\n  autoHeight: PropTypes.bool,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  input: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  width: PropTypes.number,\n}\nconst defaultProps = {\n  autoComplete: undefined,\n  autoHeight: false,\n  disabled: false,\n  inline: false,\n  label: undefined,\n  placeholder: undefined,\n  rows: 3,\n  style: {},\n  type: 'text',\n  width: 16,\n}\n\nconst TextAreaInput = ({\n  autoComplete,\n  autoHeight,\n  disabled,\n  inline,\n  input,\n  label,\n  placeholder,\n  rows,\n  type,\n  style,\n  width,\n}) => {\n  return (\n    <Form.TextArea\n      autoComplete={autoComplete}\n      autoHeight={autoHeight}\n      disabled={disabled}\n      inline={inline}\n      label={label}\n      placeholder={placeholder}\n      rows={rows}\n      type={type}\n      {...input}\n      style={{ width: '100%', ...style }}\n      width={width}\n    />\n  )\n}\n\nTextAreaInput.propTypes = propTypes\nTextAreaInput.defaultProps = defaultProps\n\nexport default TextAreaInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport RangeDate from '../RangeDate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  meta: PropTypes.object.isRequired,\n  module: PropTypes.string.isRequired,\n}\n\nconst SingleDate = ({ input, meta, module, ...rest }) => {\n  return (\n    <RangeDate\n      displayDateTypeRadios={false}\n      displayLabel\n      displaySubLabels\n      initialDateType=\"single\"\n      input={input}\n      meta={meta}\n      module={module}\n      name={input.name}\n      {...rest}\n    />\n  )\n}\n\nSingleDate.propTypes = propTypes\n\nexport default SingleDate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport extractProps from 'utilities/extractProps'\nimport ReadOnly from '../../inputs/CustomData/ReadOnly'\nimport FieldTemplate, { fieldTemplatePropKeys } from '../../FieldTemplate'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n}\n\nfunction CustomData(props) {\n  let Component\n  const { input, type } = props\n\n  switch (type) {\n    case 'read-only': {\n      Component = ReadOnly\n      break\n    }\n    default: {\n      throw new Error(`Type: ${type} is not supported`)\n    }\n  }\n\n  const { extractedProps: fieldTemplateProps, rest } = extractProps({\n    keys: fieldTemplatePropKeys,\n    props,\n  })\n\n  return (\n    <FieldTemplate {...fieldTemplateProps} name={input.name}>\n      <Component {...rest} />\n    </FieldTemplate>\n  )\n}\n\nCustomData.propTypes = propTypes\n\nexport default CustomData\n","import crudModule from '../crudModule'\nimport createNestedItem from './createNestedItem'\nimport clearNestedCache from './clearNestedCache'\n\nexport default {\n  clearNestedCache,\n  createNestedItem,\n  ...crudModule.actionCreators,\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TogglableField } from 'coreModules/form/components'\nimport AgentDropdownPickerSearch from '../AgentDropdownPickerSearch'\nimport AgentIdTextResult from '../AgentIdTextResult'\n\nconst getHasValue = input => {\n  return input && input.value && (input.value.textI || input.value.normalized)\n}\n\nconst propTypes = {\n  input: PropTypes.shape({\n    onBlur: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        normalized: PropTypes.shape({\n          id: PropTypes.string.isRequired,\n        }),\n        textI: PropTypes.string,\n      }),\n      PropTypes.string,\n    ]),\n  }).isRequired,\n}\n\nclass TogglableAgentDropdownPickerSearch extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      forceRenderResult: false,\n      pickerActive: false,\n    }\n\n    this.onBlur = this.onBlur.bind(this)\n    this.renderInput = this.renderInput.bind(this)\n    this.renderResult = this.renderResult.bind(this)\n    this.removeForceRenderResult = this.removeForceRenderResult.bind(this)\n    this.reportPickerActive = this.reportPickerActive.bind(this)\n  }\n\n  onBlur(value) {\n    if (value && (value.textI || value.normalized)) {\n      this.setState({ forceRenderResult: true })\n    }\n    this.props.input.onBlur(value)\n  }\n\n  reportPickerActive(pickerActive) {\n    // if picker active, prepare to forceRenderResult when picker is no longer\n    // active and value was selected\n    const { value } = this.props.input\n\n    if (\n      pickerActive &&\n      value &&\n      (value.textI || (value.normalized && value.normalized.id))\n    ) {\n      return this.setState({\n        forceRenderResult: true,\n        pickerActive: true,\n      })\n    }\n\n    return this.setState({\n      pickerActive,\n    })\n  }\n\n  removeForceRenderResult() {\n    // this is called when edit button is clicked or field is no longer latest\n    // active\n    this.setState({ forceRenderResult: false })\n  }\n\n  /* eslint-disable class-methods-use-this */\n  renderInput(props) {\n    return (\n      <AgentDropdownPickerSearch\n        {...props}\n        focusOnMount\n        reportPickerActive={this.reportPickerActive}\n      />\n    )\n  }\n\n  renderResult(props) {\n    const { forceRenderResult, isLatestActiveField } = props\n\n    return (\n      <AgentIdTextResult\n        displayLabel={false}\n        {...props}\n        focusOnMount={isLatestActiveField && forceRenderResult}\n        removeForceRenderResult={this.removeForceRenderResult}\n      />\n    )\n  }\n  /* eslint-enable class-methods-use-this */\n\n  render() {\n    const { forceRenderResult, pickerActive } = this.state\n    const { input } = this.props\n\n    return (\n      <TogglableField\n        {...this.props}\n        forceRenderResult={!pickerActive && !!input.value && forceRenderResult}\n        getHasValue={getHasValue}\n        input={{\n          ...input,\n          onBlur: this.onBlur,\n        }}\n        renderInput={this.renderInput}\n        renderResult={this.renderResult}\n      />\n    )\n  }\n}\n\nTogglableAgentDropdownPickerSearch.propTypes = propTypes\n\nexport default TogglableAgentDropdownPickerSearch\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Button, Icon } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport extractProps from 'utilities/extractProps'\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\nimport { FieldTemplate } from 'coreModules/form/components'\nimport { propTypes as fieldTemplateProps } from 'coreModules/form/components/FieldTemplate'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst propTypes = {\n  focusOnMount: PropTypes.bool,\n  forceRenderResult: PropTypes.bool,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  includeVerbatimAgent: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]).isRequired,\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool,\n  normalizedAgent: PropTypes.shape({\n    attributes: PropTypes.shape({\n      fullName: PropTypes.string,\n    }),\n  }),\n  removeForceRenderResult: PropTypes.func,\n  setAsLatestActiveField: PropTypes.func,\n  textOnly: PropTypes.bool,\n}\nconst defaultProps = {\n  focusOnMount: false,\n  forceRenderResult: false,\n  includeVerbatimAgent: false,\n  isLatestActiveField: false,\n  normalizedAgent: undefined,\n  removeForceRenderResult: undefined,\n  setAsLatestActiveField: undefined,\n  textOnly: false,\n}\n\nclass AgentIdTextResult extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.focusOnMount && this.button && !config.isTest) {\n      this.button.focus()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.forceRenderResult &&\n      prevProps.isLatestActiveField !== this.props.isLatestActiveField &&\n      !this.props.isLatestActiveField\n    ) {\n      this.props.removeForceRenderResult()\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n    this.props.removeForceRenderResult()\n    this.props.setAsLatestActiveField()\n  }\n\n  render() {\n    const {\n      i18n: { moduleTranslate },\n      includeVerbatimAgent,\n      input: { name, value },\n      normalizedAgent,\n      textOnly,\n    } = this.props\n\n    const inputText =\n      (value && value.textI) || (includeVerbatimAgent ? value.textV : undefined)\n\n    const fullName = objectPath.get(normalizedAgent, 'attributes.fullName')\n\n    const agentName = fullName || inputText\n\n    const disambiguatingDescription = objectPath.get(\n      normalizedAgent,\n      'attributes.disambiguatingDescription'\n    )\n\n    let agentNameSuffix\n    if (textOnly) {\n      agentNameSuffix = disambiguatingDescription\n    } else {\n      const suffix =\n        (fullName && moduleTranslate({ module: 'agent', textKey: 'agent' })) ||\n        (inputText && moduleTranslate({ module: 'form', textKey: 'plainText' }))\n      agentNameSuffix = disambiguatingDescription\n        ? `(${disambiguatingDescription}) [${suffix}]`\n        : `[${suffix}]`\n    }\n\n    const { extractedProps } = extractProps({\n      keys: Object.keys(fieldTemplateProps),\n      props: this.props,\n    })\n\n    if (textOnly) {\n      if (!agentName) {\n        return null\n      }\n\n      return (\n        <React.Fragment>\n          {agentNameSuffix ? `${agentName} ${agentNameSuffix}` : agentName}\n        </React.Fragment>\n      )\n    }\n\n    return (\n      <FieldTemplate {...extractedProps} name={name}>\n        <div style={{ position: 'relative' }}>\n          <strong>{agentName}</strong>\n          {` ${agentNameSuffix}`}\n          <Button\n            icon\n            onClick={this.handleClick}\n            ref={element => {\n              this.button = element\n            }}\n            style={{ marginLeft: '5px' }}\n          >\n            <Icon name=\"edit\" />\n          </Button>\n        </div>\n      </FieldTemplate>\n    )\n  }\n}\n\nAgentIdTextResult.propTypes = propTypes\nAgentIdTextResult.defaultProps = defaultProps\n\nexport default compose(\n  withI18n(),\n  createGetItemById({\n    idPath: 'input.value.normalized.id',\n    itemKey: 'normalizedAgent',\n    resource: 'normalizedAgent',\n  })\n)(AgentIdTextResult)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport { DropdownSearch } from 'coreModules/form/components'\nimport { createEnsureAllItemsFetched } from 'coreModules/crud/higherOrderComponents'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\n\nconst mapStateToProps = state => {\n  return {\n    causeOfDeathTypeOptions: globalCrudSelectors.causeOfDeathType.getAllAsOptions(\n      state\n    ),\n  }\n}\n\nconst propTypes = {\n  allDeathTypeFetched: PropTypes.bool.isRequired,\n  causeOfDeathTypeOptions: PropTypes.array,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nconst defaultProps = {\n  causeOfDeathTypeOptions: [],\n}\n\nclass CauseOfDeathDropdownSearch extends Component {\n  render() {\n    const { allDeathTypeFetched, causeOfDeathTypeOptions, ...rest } = this.props\n\n    if (!allDeathTypeFetched) {\n      return null\n    }\n    return (\n      <Grid.Column width={16}>\n        <DropdownSearch\n          {...rest}\n          options={causeOfDeathTypeOptions}\n          type=\"dropdown-search-local\"\n        />\n      </Grid.Column>\n    )\n  }\n}\n\nCauseOfDeathDropdownSearch.defaultProps = defaultProps\nCauseOfDeathDropdownSearch.propTypes = propTypes\n\nexport default compose(\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'allDeathTypeFetched',\n    resource: 'causeOfDeathType',\n  }),\n  connect(mapStateToProps)\n)(CauseOfDeathDropdownSearch)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { Radio } from 'coreModules/form/components'\nimport { createEnsureAllItemsFetched } from 'coreModules/crud/higherOrderComponents'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst mapStateToProps = state => {\n  return {\n    establishmentMeansTypeOptions: globalCrudSelectors.establishmentMeansType.getAllAsOptions(\n      state\n    ),\n  }\n}\n\nconst propTypes = {\n  allTypeFetched: PropTypes.bool.isRequired,\n  establishmentMeansTypeOptions: PropTypes.array,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n  label: PropTypes.string,\n  module: PropTypes.string,\n}\n\nconst defaultProps = {\n  establishmentMeansTypeOptions: [],\n  label: undefined,\n  module: 'collectionMammals',\n}\n\nclass EstablishmentMeansTypeRadioGroup extends Component {\n  render() {\n    const {\n      allTypeFetched,\n      establishmentMeansTypeOptions,\n      label,\n      input,\n      module,\n    } = this.props\n\n    if (!allTypeFetched) {\n      return null\n    }\n\n    return (\n      <Radio\n        input={input}\n        label={<ModuleTranslate module={module} textKey={label} />}\n        module={module}\n        radioOptions={establishmentMeansTypeOptions}\n      />\n    )\n  }\n}\n\nEstablishmentMeansTypeRadioGroup.defaultProps = defaultProps\nEstablishmentMeansTypeRadioGroup.propTypes = propTypes\n\nexport default compose(\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'allTypeFetched',\n    resource: 'establishmentMeansType',\n  }),\n  connect(mapStateToProps)\n)(EstablishmentMeansTypeRadioGroup)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { DropdownSearch } from 'coreModules/form/components'\nimport { createEnsureAllItemsFetched } from 'coreModules/crud/higherOrderComponents'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\n\nconst mapStateToProps = state => {\n  return {\n    typeSpecimenTypeOptions: globalCrudSelectors.typeSpecimenType.getAllAsOptions(\n      state\n    ),\n  }\n}\n\nconst propTypes = {\n  allTypeSpecimenTypeFetched: PropTypes.bool.isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  typeSpecimenTypeOptions: PropTypes.array,\n}\n\nconst defaultProps = {\n  typeSpecimenTypeOptions: [],\n}\n\nclass TypeSpecimenTypeDropdownSearch extends Component {\n  render() {\n    const {\n      allTypeSpecimenTypeFetched,\n      typeSpecimenTypeOptions,\n      ...rest\n    } = this.props\n\n    if (!allTypeSpecimenTypeFetched) {\n      return null\n    }\n    return (\n      <DropdownSearch\n        {...rest}\n        options={typeSpecimenTypeOptions}\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nTypeSpecimenTypeDropdownSearch.defaultProps = defaultProps\nTypeSpecimenTypeDropdownSearch.propTypes = propTypes\n\nexport default compose(\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'allTypeSpecimenTypeFetched',\n    resource: 'typeSpecimenType',\n  }),\n  connect(mapStateToProps)\n)(TypeSpecimenTypeDropdownSearch)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport { DropdownSearch } from 'coreModules/form/components'\nimport {\n  CLASS,\n  FAMILY,\n  GENUS,\n  MISSING_RANK,\n  ORDER,\n  SPECIES,\n  SUBSPECIES,\n} from '../../constants'\n\nconst ranks = [ORDER, FAMILY, GENUS, SPECIES, SUBSPECIES, MISSING_RANK]\n\nconst dropdownOptions = ranks.map(rank => {\n  return {\n    key: rank,\n    text: capitalizeFirstLetter(rank),\n    value: rank,\n  }\n})\n\nconst propTypes = {\n  input: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n}\n\nclass RankDropdown extends Component {\n  render() {\n    const {\n      input: { value },\n    } = this.props\n\n    // allow value 'class' to be shown, but disabled and not selectable\n    return (\n      <DropdownSearch\n        {...this.props}\n        disableClearValue={value === CLASS}\n        disabled={value === CLASS}\n        module=\"taxon\"\n        options={dropdownOptions}\n        resource=\"taxonName\"\n        selectedOption={\n          value === CLASS\n            ? {\n                key: CLASS,\n                text: capitalizeFirstLetter(CLASS),\n                value: CLASS,\n              }\n            : undefined\n        }\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nRankDropdown.propTypes = propTypes\n\nexport default RankDropdown\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\nimport objectPath from 'object-path'\n\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  nestedTaxonName: PropTypes.shape({\n    acceptedToTaxon: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n    synonymToTaxon: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  synonymToAcceptedTaxonName: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    rank: PropTypes.string.isRequired,\n  }),\n}\nconst defaultProps = {\n  synonymToAcceptedTaxonName: undefined,\n}\n\nconst TaxonNameTaxonStatus = ({\n  i18n: { moduleTranslate },\n  nestedTaxonName,\n  synonymToAcceptedTaxonName,\n}) => {\n  const acceptedToTaxonId = objectPath.get(\n    nestedTaxonName,\n    'acceptedToTaxon.id'\n  )\n\n  if (acceptedToTaxonId) {\n    const { name, rank } = nestedTaxonName\n    const rankString = rank ? ` (${rank})` : ''\n\n    return (\n      <React.Fragment>\n        {`${moduleTranslate({\n          capitalize: true,\n          textKey: 'acceptedNameForTaxon',\n        })} `}\n        <Link\n          to={`/app/taxa?filterColumn=&itemId=${acceptedToTaxonId}&mainColumn=edit`}\n        >{`${name}${rankString}`}</Link>\n        {'.'}\n      </React.Fragment>\n    )\n  }\n\n  const synonymToTaxonId = objectPath.get(nestedTaxonName, 'synonymToTaxon.id')\n\n  if (synonymToTaxonId) {\n    const acceptedTaxonName = objectPath.get(\n      synonymToAcceptedTaxonName,\n      'acceptedTaxonName.name'\n    )\n    const acceptedTaxonNameRank = objectPath.get(\n      synonymToAcceptedTaxonName,\n      'acceptedTaxonName.rank'\n    )\n    const rankString = acceptedTaxonNameRank\n      ? ` (${acceptedTaxonNameRank})`\n      : ''\n\n    return (\n      <React.Fragment>\n        {`${moduleTranslate({\n          capitalize: true,\n          textKey: 'synonymForTaxon',\n        })} `}\n        <Link\n          to={`/app/taxa?filterColumn=&itemId=${synonymToTaxonId}&mainColumn=edit`}\n        >{`${acceptedTaxonName}${rankString}`}</Link>\n        {'.'}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {moduleTranslate({\n        capitalize: true,\n        textKey: 'notAssociatedWithTaxon',\n      })}\n    </React.Fragment>\n  )\n}\n\nTaxonNameTaxonStatus.propTypes = propTypes\nTaxonNameTaxonStatus.defaultProps = defaultProps\n\nexport default compose(\n  withI18n({ module: 'taxon' }),\n  createGetNestedItemById({\n    idPath: 'nestedTaxonName.synonymToTaxon.id',\n    include: ['acceptedTaxonName'],\n    nestedItemKey: 'synonymToAcceptedTaxonName',\n    relationships: ['acceptedTaxonName'],\n    resolveRelationships: ['taxonName'],\n    resource: 'taxon',\n  })\n)(TaxonNameTaxonStatus)\n","import { createSelector } from 'reselect'\n\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport globalSelectors from './globalSelectors'\n\nconst {\n  featureType: { getItemsObject: getFeatureTypesObject },\n} = globalCrudSelectors\nconst { getGroupedFeatureTypeIds } = globalSelectors\n\nexport const makeGetFeatureTypesInGroups = () => {\n  return createSelector(\n    [\n      getFeatureTypesObject,\n      getGroupedFeatureTypeIds,\n      (_, groups) => (groups ? groups.join() : ''),\n    ],\n    (featureTypes, groupToIdsMap, groupsString) => {\n      return groupsString.split(',').reduce((arr, group) => {\n        const featureTypeIds = groupToIdsMap[group]\n        const groupFeatureTypes =\n          featureTypeIds &&\n          featureTypeIds.map(id => {\n            return featureTypes[id]\n          })\n        return groupFeatureTypes ? [...arr, ...groupFeatureTypes] : arr\n      }, [])\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { DropdownSearch } from 'coreModules/form/components'\nimport { createEnsureAllItemsFetched } from 'coreModules/crud/higherOrderComponents'\nimport crudSelectors from 'coreModules/crud/globalSelectors'\n\nconst mapStateToProps = state => {\n  return {\n    preparationTypeOptions: crudSelectors.preparationType.getAllAsOptions(\n      state\n    ),\n  }\n}\n\nconst propTypes = {\n  allPreparationTypesFetched: PropTypes.bool.isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  preparationTypeOptions: PropTypes.array,\n}\n\nconst defaultProps = {\n  preparationTypeOptions: [],\n}\n\nclass PreparationTypeDropdownSearch extends Component {\n  render() {\n    const {\n      allPreparationTypesFetched,\n      preparationTypeOptions,\n      ...rest\n    } = this.props\n    if (!allPreparationTypesFetched) {\n      return null\n    }\n    return (\n      <DropdownSearch\n        {...rest}\n        options={preparationTypeOptions}\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nPreparationTypeDropdownSearch.defaultProps = defaultProps\nPreparationTypeDropdownSearch.propTypes = propTypes\n\nexport default compose(\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'allPreparationTypesFetched',\n    resource: 'preparationType',\n  }),\n  connect(mapStateToProps)\n)(PreparationTypeDropdownSearch)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport DefaultItemTitle from './DefaultItemTitle'\n\nconst propTypes = {\n  ItemTitle: PropTypes.func,\n  nestedItem: PropTypes.object,\n}\n\nconst defaultProps = {\n  ItemTitle: DefaultItemTitle,\n  nestedItem: undefined,\n}\n\nconst createInjectItemTitle = () => ComposedComponent => {\n  class InjectItemTitle extends Component {\n    render() {\n      const { nestedItem, ItemTitle } = this.props\n\n      if (!nestedItem) {\n        return <ComposedComponent {...this.props} />\n      }\n\n      const title = <ItemTitle nestedItem={nestedItem} />\n\n      return <ComposedComponent {...this.props} itemTitle={title} />\n    }\n  }\n\n  InjectItemTitle.propTypes = propTypes\n  InjectItemTitle.defaultProps = defaultProps\n\n  return InjectItemTitle\n}\n\nexport default createInjectItemTitle\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  nestedItem: PropTypes.object.isRequired,\n}\n\nclass DefaultItemTitle extends Component {\n  render() {\n    const { nestedItem } = this.props\n    return (\n      <span>\n        <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>\n          {nestedItem.name}\n        </span>\n        {nestedItem.group && <span>({nestedItem.group})</span>}\n      </span>\n    )\n  }\n}\n\nDefaultItemTitle.propTypes = propTypes\n\nexport default DefaultItemTitle\n","import React, { Component } from 'react'\n\nconst initialState = {\n  filterColumn: undefined,\n  itemId: undefined,\n  mainColumn: undefined,\n}\n\nconst createLocalState = () => ComposedComponent => {\n  class LocalState extends Component {\n    constructor(props) {\n      super(props)\n      this.replaceLocalState = this.replaceLocalState.bind(this)\n      this.updateLocalState = this.updateLocalState.bind(this)\n      this.clearLocalState = this.clearLocalState.bind(this)\n      this.state = initialState\n    }\n\n    replaceLocalState(newState) {\n      this.setState(newState)\n    }\n\n    updateLocalState(newPartialState = {}) {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          ...newPartialState,\n        }\n      })\n    }\n\n    clearLocalState(params) {\n      if (params) {\n        this.setState(prevState => {\n          const updatedState = {\n            ...prevState,\n          }\n          params.forEach(param => {\n            updatedState[param] = initialState[param]\n          })\n          return updatedState\n        })\n      } else {\n        this.setState(initialState)\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          clearState={this.clearLocalState}\n          replaceState={this.replaceLocalState}\n          state={this.state}\n          updateState={this.updateLocalState}\n        />\n      )\n    }\n  }\n\n  return LocalState\n}\n\nexport default createLocalState\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  CLOSE_ITEM_VIEW,\n  CREATE_SUCCESS,\n  CREATE_CANCEL,\n  DEL_SUCCESS,\n  ITEM_SELECT,\n  NAVIGATE_CREATE,\n  NAVIGATE_FILTER,\n  NAVIGATE_LIST,\n  NAVIGATE_ROOT,\n  NAVIGATE_TREE,\n} from '../constants'\n\nconst createResourceUrlState = () => ComposedComponent => {\n  const propTypes = {\n    clearState: PropTypes.func.isRequired,\n    goBack: PropTypes.func.isRequired,\n    isPicker: PropTypes.bool,\n    onInteraction: PropTypes.func,\n    state: PropTypes.object.isRequired,\n    treeEnabled: PropTypes.bool,\n    updateState: PropTypes.func.isRequired,\n  }\n\n  const defaultProps = {\n    isPicker: false,\n    onInteraction: undefined,\n    treeEnabled: false,\n  }\n\n  class NavigationState extends Component {\n    constructor(props) {\n      super(props)\n      this.navigateCreate = this.navigateCreate.bind(this)\n      this.navigateEdit = this.navigateEdit.bind(this)\n      this.navigateList = this.navigateList.bind(this)\n      this.navigateRoot = this.navigateRoot.bind(this)\n      this.navigateTree = this.navigateTree.bind(this)\n      this.handleNavigation = this.handleNavigation.bind(this)\n      this.closeItemView = this.closeItemView.bind(this)\n    }\n\n    handleNavigation(type, data = {}) {\n      switch (type) {\n        case ITEM_SELECT: {\n          const { itemId } = data\n          this.navigateEdit(itemId)\n          break\n        }\n        case NAVIGATE_CREATE: {\n          this.navigateCreate()\n          break\n        }\n        case NAVIGATE_ROOT: {\n          this.navigateRoot()\n          break\n        }\n\n        case CLOSE_ITEM_VIEW: {\n          this.closeItemView()\n          break\n        }\n\n        case NAVIGATE_LIST: {\n          this.navigateList()\n          break\n        }\n\n        case NAVIGATE_TREE: {\n          this.navigateTree()\n          break\n        }\n\n        case NAVIGATE_FILTER: {\n          this.navigateFilter()\n          break\n        }\n\n        case CREATE_SUCCESS: {\n          const { itemId } = data\n          this.navigateEdit(itemId)\n          break\n        }\n\n        case CREATE_CANCEL: {\n          if (this.props.goBack) {\n            this.props.goBack()\n          } else {\n            this.navigateList({\n              disablePrompt: true,\n            })\n          }\n\n          break\n        }\n\n        case DEL_SUCCESS: {\n          this.navigateList()\n          break\n        }\n\n        default: {\n          break\n        }\n      }\n      if (this.props.onInteraction) {\n        this.props.onInteraction(type, data)\n      }\n    }\n\n    closeItemView() {\n      this.props.clearState(['filterColumn'])\n    }\n\n    navigateEdit(itemId) {\n      this.props.updateState({\n        filterColumn: '',\n        itemId,\n        mainColumn: 'edit',\n      })\n    }\n\n    navigateFilter() {\n      this.props.updateState({\n        filterColumn: 'filter',\n        mainColumn: 'table',\n      })\n    }\n\n    navigateCreate() {\n      this.props.updateState({\n        filterColumn: '',\n        mainColumn: 'create',\n      })\n    }\n\n    navigateRoot() {\n      this.props.clearState()\n    }\n\n    navigateList(state) {\n      this.props.updateState(\n        {\n          mainColumn: 'table',\n        },\n        state\n      )\n    }\n\n    navigateTree() {\n      this.props.updateState({\n        filterColumn: '',\n        mainColumn: 'tree',\n      })\n    }\n\n    render() {\n      const { state, treeEnabled, isPicker } = this.props\n\n      const {\n        mainColumn = treeEnabled ? 'tree' : 'table',\n        filterColumn,\n        itemId,\n      } = state\n\n      return (\n        <ComposedComponent\n          {...this.props}\n          createItemActive={!isPicker && mainColumn === 'create'}\n          editItemActive={!isPicker && mainColumn === 'edit'}\n          filterActive={filterColumn === 'filter'}\n          itemEnabled={!isPicker}\n          itemId={itemId}\n          navigateCreate={this.navigateCreate}\n          navigateEdit={this.navigateEdit}\n          navigateRoot={this.navigateRoot}\n          onNavigation={this.handleNavigation}\n          tableActive={mainColumn === 'table'}\n          treeActive={mainColumn === 'tree'}\n          treeEnabled={treeEnabled}\n        />\n      )\n    }\n  }\n\n  NavigationState.propTypes = propTypes\n  NavigationState.defaultProps = defaultProps\n\n  return NavigationState\n}\n\nexport default createResourceUrlState\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { blur, change } from 'redux-form'\nimport { Prompt } from 'react-router-dom'\nimport immutable from 'object-path-immutable'\n\nimport {\n  ITEM_SELECT,\n  PICKER_CLOSE,\n  PICKER_PICK_ITEM,\n} from 'coreModules/resourceManager/constants'\n\nconst defaultExtractPickedId = data => {\n  return data && data.itemId\n}\n\nconst propTypes = {\n  blur: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  pathToIdInValue: PropTypes.string,\n  pathToTextInValue: PropTypes.string,\n}\nconst defaultProps = {\n  pathToIdInValue: '',\n  pathToTextInValue: '',\n}\n\nconst mapDispatchToProps = {\n  blur,\n  change,\n}\n\nconst createPickerWrapper = ({\n  extractPickedId = defaultExtractPickedId,\n  pathToIdInValue = '',\n  pathToTextInValue = '',\n  requireEitherIdOrValue = false,\n} = {}) => ComposedComponent => {\n  class PickerWrapper extends Component {\n    constructor(props) {\n      super(props)\n\n      this.handleInteraction = this.handleInteraction.bind(this)\n      this.handleOnClose = this.handleOnClose.bind(this)\n      this.handlePickerButtonClick = this.handlePickerButtonClick.bind(this)\n      this.handleSearchQueryChange = this.handleSearchQueryChange.bind(this)\n      this.setPickerActive = this.setPickerActive.bind(this)\n      this.pickItem = this.pickItem.bind(this)\n\n      this.state = {\n        pickerActive: false,\n      }\n    }\n\n    setPickerActive() {\n      this.setState({\n        pickerActive: true,\n      })\n    }\n\n    handleInteraction(type, data) {\n      if (type === PICKER_CLOSE) {\n        this.handleOnClose()\n      }\n\n      if (type === PICKER_PICK_ITEM) {\n        this.pickItem(data)\n      }\n      if (type === ITEM_SELECT) {\n        this.pickItem(data)\n      }\n    }\n\n    pickItem(data) {\n      const {\n        input,\n        meta,\n        pathToIdInValue: pathToIdInValueOverride,\n        pathToTextInValue: pathToTextInValueOverride,\n      } = this.props\n\n      const formName = meta && meta.form\n      const itemId = extractPickedId(data)\n      // use nestedItem for custom id extraction\n      if (itemId !== undefined) {\n        const idPath = pathToIdInValueOverride || pathToIdInValue\n        const textPath = pathToTextInValueOverride || pathToTextInValue\n        const isObjectValue = !!(idPath || textPath)\n\n        const baseValue = requireEitherIdOrValue\n          ? immutable.del(input.value, textPath)\n          : input.value\n\n        const value = isObjectValue\n          ? immutable.set(baseValue, idPath, itemId)\n          : itemId\n\n        if (input.onChange) {\n          input.onChange(value)\n        } else {\n          this.props.change(formName, input.name, value)\n        }\n\n        if (input.onBlur) {\n          input.onBlur(value)\n        } else {\n          this.props.blur(formName, input.name, value)\n        }\n      }\n      this.handleOnClose()\n    }\n\n    handleSearchQueryChange({ searchQuery }) {\n      // not setting in state should not update component\n      this.searchQuery = searchQuery\n    }\n\n    handleOnClose(event) {\n      if (event) {\n        event.preventDefault()\n      }\n      this.searchQuery = undefined\n      this.setState({\n        pickerActive: false,\n      })\n    }\n\n    handlePickerButtonClick(event) {\n      event.preventDefault()\n      // Set timeout to prevent picker open event from closing the modal\n      // Only an issue with modal in modal\n      setTimeout(() => {\n        this.setPickerActive()\n      })\n    }\n\n    render() {\n      const {\n        handleInteraction,\n        handleOnClose,\n        handlePickerButtonClick,\n        handleSearchQueryChange,\n        searchQuery,\n        setPickerActive,\n      } = this\n\n      const {\n        input,\n        meta,\n        pathToIdInValue: pathToIdInValueOverride,\n        pathToTextInValue: pathToTextInValueOverride,\n      } = this.props\n\n      const { pickerActive } = this.state\n      const formName = meta && meta.form\n      const value = input && input.value\n\n      return (\n        <React.Fragment>\n          <Prompt\n            message={() => {\n              // first block transition then close\n              setTimeout(this.handleOnClose)\n              return false\n            }}\n            when={pickerActive}\n          />\n          <ComposedComponent\n            {...this.props}\n            fieldSearchQuery={searchQuery}\n            fieldValue={value}\n            formName={formName}\n            onClose={handleOnClose}\n            onInteraction={handleInteraction}\n            onPickerButtonClick={handlePickerButtonClick}\n            onSearchQueryChange={handleSearchQueryChange}\n            pathToIdInValue={pathToIdInValueOverride || pathToIdInValue}\n            pathToTextInValue={pathToTextInValueOverride || pathToTextInValue}\n            pickerActive={pickerActive}\n            setPickerActive={setPickerActive}\n          />\n        </React.Fragment>\n      )\n    }\n  }\n\n  PickerWrapper.propTypes = propTypes\n  PickerWrapper.defaultProps = defaultProps\n\n  return connect(\n    null,\n    mapDispatchToProps\n  )(PickerWrapper)\n}\n\nexport default createPickerWrapper\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { push, goBack } from 'react-router-redux'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport queryString from 'query-string'\n\nconst createQueryNavigationState = () => ComposedComponent => {\n  const mapDispatchToProps = {\n    routerGoBack: goBack,\n    routerPush: push,\n  }\n\n  const propTypes = {\n    location: PropTypes.object.isRequired,\n    routerGoBack: PropTypes.func.isRequired,\n    routerPush: PropTypes.func.isRequired,\n  }\n\n  const defaultProps = {}\n\n  class QueryNavigationState extends Component {\n    constructor(props) {\n      super(props)\n      this.getQueryParams = this.getQueryParams.bind(this)\n      this.replaceQueryParams = this.replaceQueryParams.bind(this)\n      this.updateQueryParams = this.updateQueryParams.bind(this)\n      this.clearQueryParams = this.clearQueryParams.bind(this)\n      this.goBack = this.goBack.bind(this)\n    }\n    getQueryParams() {\n      const { location } = this.props\n      const parsedQuery = queryString.parse(location.search) || {}\n      return Object.keys(parsedQuery).reduce((obj, key) => {\n        let parsedValue = parsedQuery[key]\n\n        if (parsedValue === 'true') {\n          parsedValue = true\n        }\n        if (parsedValue === 'false') {\n          parsedValue = false\n        }\n\n        return {\n          ...obj,\n          [key]: parsedValue,\n        }\n      }, {})\n    }\n\n    replaceQueryParams(newQueryObject, state = {}) {\n      const { pathname } = this.props.location\n      const search = queryString.stringify(newQueryObject)\n      this.props.routerPush({ pathname, search, state })\n    }\n\n    updateQueryParams(newQueryObject, state = {}) {\n      const queryObject = this.getQueryParams()\n      const updateQueryParamsQueryObject = {\n        ...queryObject,\n        ...newQueryObject,\n      }\n      const search = queryString.stringify(updateQueryParamsQueryObject)\n      const { pathname } = this.props.location\n      this.props.routerPush({ pathname, search, state })\n    }\n    goBack() {\n      this.props.routerGoBack()\n    }\n\n    clearQueryParams(params) {\n      const { pathname } = this.props.location\n      if (params) {\n        const queryObject = this.getQueryParams()\n        params.forEach(param => {\n          delete queryObject[param]\n        })\n\n        const search = queryString.stringify(queryObject)\n        this.props.routerPush({ pathname, search })\n      } else {\n        this.props.routerPush({ pathname })\n      }\n    }\n\n    render() {\n      const queryParams = this.getQueryParams()\n      return (\n        <ComposedComponent\n          {...this.props}\n          clearState={this.clearQueryParams}\n          goBack={this.goBack}\n          replaceState={this.replaceQueryParams}\n          state={queryParams}\n          updateState={this.updateQueryParams}\n        />\n      )\n    }\n  }\n\n  QueryNavigationState.propTypes = propTypes\n  QueryNavigationState.defaultProps = defaultProps\n\n  return compose(\n    connect(\n      null,\n      mapDispatchToProps\n    ),\n    withRouter\n  )(QueryNavigationState)\n}\n\nexport default createQueryNavigationState\n","export const RESOURCE_MANAGER_OPEN = 'RESOURCE_MANAGER_OPEN'\nexport const RESOURCE_MANAGER_CLOSE = 'RESOURCE_MANAGER_CLOSE'\n","import { RESOURCE_MANAGER_CLOSE, RESOURCE_MANAGER_OPEN } from '../actionTypes'\n\nexport function open() {\n  return {\n    type: RESOURCE_MANAGER_OPEN,\n  }\n}\n\nexport function close() {\n  return {\n    type: RESOURCE_MANAGER_CLOSE,\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { reset as resetActionCreator } from 'redux-form'\nimport createLog from 'utilities/log'\n\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport { createGetResourceCount } from 'coreModules/crud/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\n\nimport {\n  globalSelectors as keyObjectGlobalSelectors,\n  actionCreators as keyObjectActionCreators,\n} from 'coreModules/resourceManager/keyObjectModule'\n\nimport * as actionCreators from 'coreModules/resourceManager/actionCreators'\nimport { createShortcutLayer } from 'coreModules/keyboardShortcuts/higherOrderComponents'\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\n\nimport {\n  CLOSE_ITEM_VIEW,\n  CREATE_SUCCESS,\n  DEL_SUCCESS,\n  ITEM_SELECT,\n  NAVIGATE_CREATE,\n  NAVIGATE_FILTER,\n  NAVIGATE_LIST,\n  PICKER_CLOSE,\n  PICKER_PICK_ITEM,\n} from 'coreModules/resourceManager/constants'\n\nconst log = createLog('resourceManager:resourceManagerWrapper')\n\nconst createResourceManagerWrapper = () => ComposedComponent => {\n  const mapStateToProps = (state, { isPicker, resource, resourceCount }) => {\n    const totalNumberOfRecords = resourceCount\n\n    const managerScope = isPicker ? `${resource}Picker` : resource\n    const { get } = keyObjectGlobalSelectors\n    const baseItems = get[':managerScope.baseItems'](state, { managerScope })\n    const listItems = get[':managerScope.listItems'](state, { managerScope })\n    const numberOfListItems = (listItems || []).length\n\n    const showAll = get[':managerScope.showAll'](state, { managerScope })\n    const expandedIds = get[':managerScope.expandedIds'](state, {\n      managerScope,\n    })\n\n    const currentTableRowNumber =\n      get[':managerScope.currentTableRowNumber'](state, { managerScope }) || 1\n    const focusedIndex = currentTableRowNumber - 1\n    const nextRowAvailable = currentTableRowNumber < numberOfListItems\n    const prevRowAvailable = currentTableRowNumber > 1\n    const filterValues = get[':managerScope.listFilterValues'](state, {\n      managerScope,\n    })\n    const focusedItemId =\n      listItems && listItems[focusedIndex] && listItems[focusedIndex].id\n    const focusIdWhenLoaded = get[':managerScope.focusIdWhenLoaded'](state, {\n      managerScope,\n    })\n\n    return {\n      baseItems,\n      currentTableRowNumber,\n      expandedIds,\n      filterValues,\n      focusedIndex,\n      focusedItemId,\n      focusIdWhenLoaded,\n      layer: managerScope,\n      listItems,\n      managerScope,\n      nextRowAvailable,\n      numberOfListItems,\n      prevRowAvailable,\n      showAll,\n      totalNumberOfRecords,\n    }\n  }\n\n  const mapDispatchToProps = {\n    clearNestedCache: crudActionCreators.clearNestedCache,\n    clearResourceState: keyObjectActionCreators.del[':managerScope'],\n    close: actionCreators.close,\n    delFocusIdWhenLoaded:\n      keyObjectActionCreators.del[':managerScope.focusIdWhenLoaded'],\n    open: actionCreators.open,\n    resetForm: resetActionCreator,\n    setBaseItems: keyObjectActionCreators.set[':managerScope.baseItems'],\n    setCurrentTableRowNumber:\n      keyObjectActionCreators.set[':managerScope.currentTableRowNumber'],\n    setExpandedIds: keyObjectActionCreators.set[':managerScope.expandedIds'],\n    setFilterValues:\n      keyObjectActionCreators.set[':managerScope.listFilterValues'],\n    setFocusIdWhenLoaded:\n      keyObjectActionCreators.set[':managerScope.focusIdWhenLoaded'],\n    setListItems: keyObjectActionCreators.set[':managerScope.listItems'],\n    setShowAll: keyObjectActionCreators.set[':managerScope.showAll'],\n  }\n\n  const propTypes = {\n    baseItems: PropTypes.array,\n    baseTreeFilter: PropTypes.object,\n    buildFilterQuery: PropTypes.func.isRequired,\n    clearNestedCache: PropTypes.func.isRequired,\n    clearResourceState: PropTypes.func.isRequired,\n    close: PropTypes.func.isRequired,\n    currentTableRowNumber: PropTypes.number.isRequired,\n    delFocusIdWhenLoaded: PropTypes.func.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    editItemActive: PropTypes.bool.isRequired,\n    excludeRootNode: PropTypes.bool,\n    expandedIds: PropTypes.object,\n    filterActive: PropTypes.bool.isRequired,\n    filterValues: PropTypes.object,\n    focusedIndex: PropTypes.number.isRequired,\n    focusedItemId: PropTypes.string,\n    focusIdWhenLoaded: PropTypes.string,\n    initialFilterValues: PropTypes.object,\n    initialItemId: PropTypes.string,\n    isPicker: PropTypes.bool,\n    itemFetchOptions: PropTypes.object,\n    itemId: PropTypes.string,\n    listItems: PropTypes.array,\n    managerScope: PropTypes.string.isRequired,\n    nestedCacheNamespaces: PropTypes.arrayOf(PropTypes.string),\n    nextRowAvailable: PropTypes.bool.isRequired,\n    numberOfListItems: PropTypes.number.isRequired,\n    onInteraction: PropTypes.func.isRequired,\n    open: PropTypes.func.isRequired,\n    prevRowAvailable: PropTypes.bool.isRequired,\n    recordNavigationHeight: PropTypes.number,\n    recordOptionsHeight: PropTypes.number,\n    resetForm: PropTypes.func.isRequired,\n    resource: PropTypes.string.isRequired,\n    search: PropTypes.func.isRequired,\n    setBaseItems: PropTypes.func.isRequired,\n    setCurrentTableRowNumber: PropTypes.func.isRequired,\n    setExpandedIds: PropTypes.func.isRequired,\n    setFilterValues: PropTypes.func.isRequired,\n    setFocusIdWhenLoaded: PropTypes.func.isRequired,\n    setListItems: PropTypes.func.isRequired,\n    setShowAll: PropTypes.func.isRequired,\n    showAll: PropTypes.bool,\n    sortOrder: PropTypes.array,\n    tableActive: PropTypes.bool.isRequired,\n    tableColumnSpecifications: PropTypes.array.isRequired,\n    totalNumberOfRecords: PropTypes.number,\n    treeActive: PropTypes.bool.isRequired,\n  }\n\n  const defaultProps = {\n    baseItems: [],\n    baseTreeFilter: {},\n    excludeRootNode: false,\n    expandedIds: {},\n    filterValues: undefined,\n    focusedItemId: undefined,\n    focusIdWhenLoaded: undefined,\n    initialFilterValues: undefined,\n    initialItemId: undefined,\n    isPicker: false,\n    itemFetchOptions: { include: [], relationships: ['children', 'parent'] },\n    itemId: undefined,\n    listItems: [],\n    nestedCacheNamespaces: undefined,\n    recordNavigationHeight: emToPixels(4.25),\n    recordOptionsHeight: emToPixels(3.5625),\n    showAll: false,\n    sortOrder: [],\n    totalNumberOfRecords: 0,\n  }\n\n  class ResourceManagerWrapper extends Component {\n    constructor(props) {\n      super(props)\n\n      this.expandAncestorsForItemId = this.expandAncestorsForItemId.bind(this)\n      this.fetchTreeBase = this.fetchTreeBase.bind(this)\n      this.findRowNumberById = this.findRowNumberById.bind(this)\n      this.focusRowWithId = this.focusRowWithId.bind(this)\n      this.getNestedCacheNamespaces = this.getNestedCacheNamespaces.bind(this)\n      this.handleClickRow = this.handleClickRow.bind(this)\n      this.handleClosePicker = this.handleClosePicker.bind(this)\n      this.handleFormTabClick = this.handleFormTabClick.bind(this)\n      this.handleInteraction = this.handleInteraction.bind(this)\n      this.handleOpenNewRecordForm = this.handleOpenNewRecordForm.bind(this)\n      this.handlePickItem = this.handlePickItem.bind(this)\n      this.handleSelectNextRecord = this.handleSelectNextRecord.bind(this)\n      this.handleSelectPrev = this.handleSelectPrev.bind(this)\n      this.handleSetCurrentTableRow = this.handleSetCurrentTableRow.bind(this)\n      this.handleShowAllRecords = this.handleShowAllRecords.bind(this)\n      this.handleToggleCurrentRow = this.handleToggleCurrentRow.bind(this)\n      this.handleToggleFilters = this.handleToggleFilters.bind(this)\n      this.handleToggleRow = this.handleToggleRow.bind(this)\n      this.handleUpdateFilterValues = this.handleUpdateFilterValues.bind(this)\n      this.selectCurrentRow = this.selectCurrentRow.bind(this)\n      this.tableSearch = this.tableSearch.bind(this)\n      this.resetFilters = this.resetFilters.bind(this)\n\n      this.mountTableView = this.mountTableView.bind(this)\n      this.updateTableView = this.updateTableView.bind(this)\n      this.transitionToTableView = this.transitionToTableView.bind(this)\n      this.transitionFromTableView = this.transitionFromTableView.bind(this)\n\n      this.mountTreeView = this.mountTreeView.bind(this)\n      this.updateTreeView = this.updateTreeView.bind(this)\n      this.transitionToTreeView = this.transitionToTreeView.bind(this)\n      this.transitionFromTreeView = this.transitionFromTreeView.bind(this)\n\n      this.mountEditItemView = this.mountEditItemView.bind(this)\n      this.updateEditItemView = this.updateEditItemView.bind(this)\n      this.transitionToEditItemView = this.transitionToEditItemView.bind(this)\n      this.transitionFromEditItemView = this.transitionFromEditItemView.bind(\n        this\n      )\n\n      this.shortcuts = [\n        {\n          command: 'down',\n          description: 'Move focus to next record',\n          onPress: this.handleSelectNextRecord,\n        },\n        {\n          command: 'up',\n          description: 'Move focus to previous record',\n          onPress: this.handleSelectPrev,\n        },\n        {\n          command: 'left',\n          description: 'Collapse tree node',\n          onPress: () => {\n            this.handleToggleCurrentRow('collapse')\n          },\n        },\n        {\n          command: 'right',\n          description: 'Expand tree node',\n          onPress: () => {\n            this.handleToggleCurrentRow('expand')\n          },\n        },\n        {\n          command: 'n t',\n          description: 'Open table view',\n          onPress: event => {\n            event.preventDefault()\n            this.props.onInteraction(NAVIGATE_LIST)\n          },\n        },\n      ]\n      if (!props.isPicker) {\n        // picker case is handled in picker action bar\n        this.shortcuts.push({\n          command: 'space',\n          description: 'Select current item',\n          onPress: event => {\n            event.preventDefault()\n            this.selectCurrentRow()\n          },\n        })\n        this.shortcuts.push({\n          command: 'n n',\n          description: 'Open new record form',\n          onPress: event => {\n            event.preventDefault()\n            this.props.onInteraction(NAVIGATE_CREATE)\n          },\n        })\n      }\n    }\n\n    componentDidMount() {\n      this.props.open()\n      const {\n        initialFilterValues,\n        managerScope,\n        treeActive,\n        tableActive,\n      } = this.props\n\n      if (initialFilterValues) {\n        this.props.setFilterValues(initialFilterValues, { managerScope })\n        this.handleInteraction(NAVIGATE_FILTER)\n      }\n\n      if (tableActive) {\n        this.mountTableView()\n      } else if (treeActive) {\n        this.mountTreeView()\n      } else {\n        this.mountEditItemView()\n        this.tableSearch(initialFilterValues)\n      }\n\n      this.props.clearNestedCache({\n        namespaces: this.getNestedCacheNamespaces(),\n      })\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        currentTableRowNumber,\n        managerScope,\n        numberOfListItems,\n      } = this.props\n\n      const activeViews = this.getActiveViews()\n\n      activeViews.forEach(activeView => {\n        switch (activeView) {\n          case 'table': {\n            this.updateTableView(prevProps)\n            break\n          }\n          case 'tree': {\n            this.updateTreeView(prevProps)\n            break\n          }\n          case 'edit-item': {\n            this.updateEditItemView(prevProps)\n            break\n          }\n\n          default: {\n            throw new Error(`Unknown active view: ${activeView}`)\n          }\n        }\n      })\n\n      const transitions = this.getTransitions(prevProps)\n\n      transitions.forEach(transition => {\n        switch (transition) {\n          case 'to-table': {\n            this.transitionToTableView(prevProps)\n            break\n          }\n          case 'from-table': {\n            this.transitionFromTableView(prevProps)\n            break\n          }\n          case 'to-tree': {\n            this.transitionToTreeView(prevProps)\n            break\n          }\n          case 'from-tree': {\n            this.transitionFromTreeView(prevProps, {\n              skipTableSearch: transitions.length === 1, // if going to new record\n            })\n            break\n          }\n          case 'to-edit-item': {\n            this.transitionToEditItemView(prevProps)\n            break\n          }\n          case 'from-edit-item': {\n            this.transitionFromEditItemView(prevProps)\n            break\n          }\n          default: {\n            throw new Error(`Unknown transition: ${transition}`)\n          }\n        }\n      })\n\n      if (numberOfListItems < currentTableRowNumber) {\n        this.props.setCurrentTableRowNumber(numberOfListItems, {\n          managerScope,\n        })\n      }\n    }\n\n    componentWillUnmount() {\n      const { managerScope } = this.props\n      this.props.clearNestedCache({\n        namespaces: this.getNestedCacheNamespaces(),\n      })\n\n      this.props.clearResourceState({ managerScope })\n      this.props.close()\n    }\n\n    getNestedCacheNamespaces() {\n      const { managerScope } = this.props\n      return [managerScope, `${managerScope}Title`]\n    }\n\n    getActiveViews() {\n      const keys = ['treeActive', 'tableActive', 'editItemActive']\n      const keyNameMap = {\n        editItemActive: 'edit-item',\n        tableActive: 'table',\n        treeActive: 'tree',\n      }\n\n      const activeViews = []\n      keys.forEach(key => {\n        if (this.props[key]) {\n          activeViews.push(`${keyNameMap[key]}`)\n        }\n      })\n      return activeViews\n    }\n    getTransitions(prevProps) {\n      const keys = ['treeActive', 'tableActive', 'editItemActive']\n      const keyNameMap = {\n        editItemActive: 'edit-item',\n        tableActive: 'table',\n        treeActive: 'tree',\n      }\n      const transitions = []\n\n      keys.forEach(key => {\n        if (!this.props[key] && prevProps[key]) {\n          transitions.push(`from-${keyNameMap[key]}`)\n        }\n      })\n      keys.forEach(key => {\n        if (this.props[key] && !prevProps[key]) {\n          transitions.push(`to-${keyNameMap[key]}`)\n        }\n      })\n\n      return transitions\n    }\n    resetFilters() {\n      const { managerScope, resource } = this.props\n      const formName = `${resource}Filter`\n      this.props.resetForm(formName, { resource })\n      this.props.setFilterValues({}, { managerScope })\n    }\n\n    expandAncestorsForItemId(itemId) {\n      const {\n        dispatch,\n        itemFetchOptions,\n        managerScope,\n        resource,\n        sortOrder,\n      } = this.props\n      const getManyActionCreator =\n        crudActionCreators[resource] && crudActionCreators[resource].getMany\n\n      return dispatch(\n        getManyActionCreator({\n          queryParams: {\n            filter: {\n              ancestorsToId: itemId,\n            },\n            sort: sortOrder,\n          },\n          storeInState: false,\n        })\n      ).then((items = []) => {\n        if (!items.length) {\n          return null\n        }\n\n        const ids = items.map(item => {\n          return item.id\n        })\n\n        return dispatch(\n          getManyActionCreator({\n            queryParams: {\n              filter: {\n                ids,\n              },\n              include: itemFetchOptions.include,\n              relationships: itemFetchOptions.relationships,\n              sort: sortOrder,\n            },\n          })\n        ).then(() => {\n          const { expandedIds } = this.props\n          const updatedExpandedIds = items.reduce((obj, item) => {\n            return {\n              ...obj,\n              [item.id]: true,\n            }\n          }, expandedIds)\n\n          this.props.setExpandedIds(updatedExpandedIds, { managerScope })\n        })\n      })\n    }\n\n    fetchTreeBase() {\n      const {\n        baseTreeFilter,\n        dispatch,\n        itemFetchOptions,\n        managerScope,\n        resource,\n        sortOrder,\n      } = this.props\n      const getManyActionCreator =\n        crudActionCreators[resource] && crudActionCreators[resource].getMany\n\n      this.props.setBaseItems([], { managerScope })\n      return dispatch(\n        getManyActionCreator({\n          queryParams: {\n            filter: baseTreeFilter,\n            include: itemFetchOptions.include,\n            relationships: itemFetchOptions.relationships,\n            sort: sortOrder,\n          },\n        })\n      ).then(items => {\n        this.props.setBaseItems(items, { managerScope })\n      })\n    }\n\n    findRowNumberById(itemId) {\n      const { focusedItemId, listItems } = this.props\n\n      if (focusedItemId === itemId) {\n        return null\n      }\n\n      let matchingIndex\n      listItems.forEach((listItem, index) => {\n        if (listItem.id === itemId) {\n          matchingIndex = index\n        }\n      })\n      if (matchingIndex !== undefined) {\n        return matchingIndex + 1\n      }\n      return null\n    }\n\n    focusRowWithId(itemId) {\n      const { managerScope } = this.props\n      const rowNumber = this.findRowNumberById(itemId)\n      if (rowNumber) {\n        this.props.setCurrentTableRowNumber(rowNumber, { managerScope })\n        return rowNumber\n      }\n      return null\n    }\n\n    handleUpdateFilterValues(filterValues = {}) {\n      const { managerScope, tableActive } = this.props\n      if (!tableActive) {\n        this.props.onInteraction(NAVIGATE_LIST)\n      }\n      this.props.setFilterValues(filterValues, { managerScope })\n      this.tableSearch(filterValues)\n    }\n\n    handleClosePicker() {\n      this.handleInteraction(PICKER_CLOSE)\n    }\n\n    handlePickItem(itemId, nestedItem) {\n      this.handleInteraction(PICKER_PICK_ITEM, { itemId, nestedItem })\n    }\n\n    handleOpenNewRecordForm() {\n      this.handleInteraction(NAVIGATE_CREATE)\n    }\n    handleSelectNextRecord() {\n      const {\n        currentTableRowNumber,\n        managerScope,\n        nextRowAvailable,\n      } = this.props\n      if (nextRowAvailable) {\n        this.props.setCurrentTableRowNumber(currentTableRowNumber + 1, {\n          managerScope,\n        })\n      }\n    }\n    handleSelectPrev() {\n      const {\n        currentTableRowNumber,\n        managerScope,\n        prevRowAvailable,\n      } = this.props\n      if (prevRowAvailable) {\n        this.props.setCurrentTableRowNumber(currentTableRowNumber - 1, {\n          managerScope,\n        })\n      }\n    }\n    handleShowAllRecords({ isPicker }) {\n      const { managerScope, showAll, treeActive } = this.props\n\n      if (treeActive) {\n        this.props.setShowAll(!showAll, { managerScope })\n      } else {\n        if (!isPicker) {\n          this.resetFilters()\n        }\n        this.tableSearch()\n      }\n    }\n\n    handleToggleRow(itemId) {\n      const { expandedIds, managerScope } = this.props\n      const updatedExpandedIds = {\n        ...expandedIds,\n        [itemId]: !expandedIds[itemId],\n      }\n      this.props.setExpandedIds(updatedExpandedIds, { managerScope })\n    }\n\n    handleToggleCurrentRow(mode) {\n      const {\n        focusedIndex,\n        expandedIds,\n        listItems,\n        managerScope,\n        treeActive,\n      } = this.props\n\n      if (treeActive) {\n        const listItem = listItems[focusedIndex]\n        const id = listItem && listItem.id\n\n        const updatedExpandedIds = {\n          ...expandedIds,\n          [id]: mode === 'expand',\n        }\n        this.props.setExpandedIds(updatedExpandedIds, { managerScope })\n      }\n    }\n\n    handleClickRow(_, itemId) {\n      this.focusRowWithId(itemId)\n    }\n\n    handleFormTabClick() {\n      this.selectCurrentRow()\n    }\n\n    handleSetCurrentTableRow(event, number) {\n      const { managerScope } = this.props\n      this.props.setCurrentTableRowNumber(number, { managerScope })\n    }\n\n    handleToggleFilters() {\n      const { filterActive } = this.props\n      if (filterActive) {\n        this.handleInteraction(CLOSE_ITEM_VIEW)\n      } else {\n        this.handleInteraction(NAVIGATE_FILTER)\n      }\n    }\n\n    handleInteraction(type, data) {\n      log.debug(`Got interaction: ${type}`, data)\n      switch (type) {\n        case CREATE_SUCCESS: {\n          this.tableSearch()\n          break\n        }\n        case DEL_SUCCESS: {\n          this.tableSearch()\n          break\n        }\n        default: {\n          break\n        }\n      }\n      this.props.onInteraction(type, data)\n    }\n\n    selectCurrentRow(newFocusedIndex) {\n      const { listItems, focusedIndex: currentFocusedIndex } = this.props\n\n      const focusedIndex =\n        newFocusedIndex !== undefined ? newFocusedIndex : currentFocusedIndex\n      const listItem = listItems[focusedIndex]\n      const itemId = listItem && listItem.id\n      if (itemId !== undefined) {\n        return this.handleInteraction(ITEM_SELECT, { itemId })\n      }\n      return null\n    }\n\n    tableSearch(filterValues) {\n      const { excludeRootNode, managerScope, search, sortOrder } = this.props\n\n      const query = this.props.buildFilterQuery({\n        excludeRootNode,\n        values: filterValues || {},\n      })\n\n      return search({\n        query,\n        sort: sortOrder,\n        useScroll: false,\n      }).then(items => {\n        this.props.setListItems(items, { managerScope })\n\n        return null\n      })\n    }\n\n    mountTableView() {\n      log.debug('initial mount view: Table')\n      const {\n        initialFilterValues,\n        initialItemId,\n        itemId,\n        managerScope,\n      } = this.props\n\n      if (\n        itemId === undefined &&\n        initialItemId !== undefined &&\n        initialItemId !== ''\n      ) {\n        this.props.setFocusIdWhenLoaded(initialItemId, { managerScope })\n      }\n\n      this.tableSearch(initialFilterValues)\n    }\n\n    updateTableView(prevProps) {\n      const { focusIdWhenLoaded, itemId, listItems, managerScope } = this.props\n\n      const { listItems: prevListItems } = prevProps\n      if (itemId && listItems !== prevListItems) {\n        this.focusRowWithId(itemId)\n      }\n      if (\n        focusIdWhenLoaded &&\n        prevListItems !== listItems &&\n        listItems.length\n      ) {\n        const rowFocused = this.focusRowWithId(focusIdWhenLoaded)\n        if (rowFocused) {\n          this.props.delFocusIdWhenLoaded({ managerScope })\n        }\n      }\n    }\n\n    transitionToTableView() {\n      log.debug('transition to view: Table')\n\n      const { focusedItemId, managerScope } = this.props\n      if (focusedItemId) {\n        this.props.setFocusIdWhenLoaded(focusedItemId, { managerScope })\n      }\n    }\n\n    transitionFromTableView() {\n      log.debug('transition from view: Table')\n\n      this.props.clearNestedCache({\n        namespaces: this.getNestedCacheNamespaces(),\n      })\n    }\n\n    mountTreeView() {\n      log.debug('initial mount view: Tree')\n      const { initialItemId, itemId, managerScope } = this.props\n\n      if (\n        itemId === undefined &&\n        initialItemId !== undefined &&\n        initialItemId !== ''\n      ) {\n        this.props.setFocusIdWhenLoaded(initialItemId, { managerScope })\n        this.expandAncestorsForItemId(initialItemId)\n      }\n\n      this.transitionToTreeView()\n    }\n\n    updateTreeView(prevProps) {\n      const {\n        focusIdWhenLoaded,\n        listItems,\n        managerScope,\n        treeActive,\n      } = this.props\n\n      if (!treeActive) {\n        return\n      }\n\n      const { listItems: prevListItems } = prevProps\n      if (\n        focusIdWhenLoaded &&\n        prevListItems !== listItems &&\n        listItems.length\n      ) {\n        const rowFocused = this.focusRowWithId(focusIdWhenLoaded)\n        if (rowFocused) {\n          this.props.delFocusIdWhenLoaded({ managerScope })\n        }\n      }\n    }\n\n    transitionToTreeView() {\n      log.debug('transition to view: Tree')\n      const { focusedItemId, managerScope } = this.props\n\n      if (focusedItemId) {\n        this.props.setFocusIdWhenLoaded(focusedItemId, { managerScope })\n        this.expandAncestorsForItemId(focusedItemId)\n      }\n\n      this.fetchTreeBase()\n    }\n\n    transitionFromTreeView(_, { skipTableSearch }) {\n      log.debug('transition from view: Tree')\n      const { managerScope } = this.props\n\n      if (!skipTableSearch) {\n        this.tableSearch()\n      }\n\n      this.props.setExpandedIds({}, { managerScope })\n    }\n\n    mountEditItemView() {\n      log.debug('initial mount view: EditItem')\n      this.tableSearch()\n      this.transitionToEditItemView()\n    }\n\n    updateEditItemView(prevProps) {\n      const { editItemActive, focusedIndex, listItems, itemId } = this.props\n\n      if (!editItemActive) {\n        return\n      }\n\n      const {\n        focusedIndex: prevFocusedIndex,\n        listItems: prevListItems,\n      } = prevProps\n\n      if (itemId && listItems !== prevListItems) {\n        this.focusRowWithId(itemId)\n      }\n      if (editItemActive && focusedIndex !== prevFocusedIndex) {\n        this.selectCurrentRow(focusedIndex)\n      }\n    }\n    transitionToEditItemView() {\n      log.debug('transition to view: EditItem')\n    }\n    transitionFromEditItemView() {\n      log.debug('transition from view: EditItem')\n      this.props.clearNestedCache({\n        namespaces: this.getNestedCacheNamespaces(),\n      })\n    }\n\n    render() {\n      const { managerScope, nextRowAvailable, prevRowAvailable } = this.props\n      return (\n        <React.Fragment>\n          <KeyboardShortcuts\n            activeInLayer={managerScope}\n            shortcuts={this.shortcuts}\n          />\n          <ComposedComponent\n            {...this.props}\n            fetchTreeBase={this.fetchTreeBase}\n            managerScope={managerScope}\n            onClickRow={this.handleClickRow}\n            onClosePicker={this.handleClosePicker}\n            onFormTabClick={this.handleFormTabClick}\n            onInteraction={this.handleInteraction}\n            onOpenNewRecordForm={this.handleOpenNewRecordForm}\n            onPickItem={this.handlePickItem}\n            onSelectNextRecord={nextRowAvailable && this.handleSelectNextRecord}\n            onSelectPreviousRecord={prevRowAvailable && this.handleSelectPrev}\n            onSetCurrentTableRowNumber={this.handleSetCurrentTableRow}\n            onShowAllRecords={this.handleShowAllRecords}\n            onToggleCurrentRow={this.handleToggleCurrentRow}\n            onToggleFilters={this.handleToggleFilters}\n            onToggleRow={this.handleToggleRow}\n            onUpdateFilterValues={this.handleUpdateFilterValues}\n            tableSearch={this.tableSearch}\n          />\n        </React.Fragment>\n      )\n    }\n  }\n\n  ResourceManagerWrapper.propTypes = propTypes\n  ResourceManagerWrapper.defaultProps = defaultProps\n\n  return compose(\n    createInjectSearch({\n      includeFields: ['id'],\n      storeSearchResult: false,\n    }),\n    createGetResourceCount(),\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    ),\n    connect(),\n    createShortcutLayer({ layer: 'resourceManager' })\n  )(ResourceManagerWrapper)\n}\n\nexport default createResourceManagerWrapper\n","import createInjectItemTitle from './createInjectItemTitle'\nimport createLocalState from './createLocalState'\nimport createNavigationState from './createNavigationState'\nimport createPickerWrapper from './createPickerWrapper'\nimport createQueryState from './createQueryState'\nimport createResourceManagerWrapper from './createResourceManagerWrapper'\n\nexport {\n  createInjectItemTitle,\n  createLocalState,\n  createNavigationState,\n  createPickerWrapper,\n  createQueryState,\n  createResourceManagerWrapper,\n}\n","import { formValueSelector } from 'redux-form'\nimport { createSelector } from 'reselect'\n\nimport { globalSelectors as keyObjectGlobalSelectors } from './keyObjectModule'\n\nconst createGetCatalogNumber = createSelector(\n  formName => formName,\n  formName => {\n    const selector = formValueSelector(formName)\n\n    return state => {\n      const identifiers = selector(state, 'individual.identifiers')\n      const catalogNumberIdentifier = (identifiers || []).find(identifier => {\n        return (\n          (identifier &&\n            identifier.identifierType &&\n            identifier.identifierType.id) === '1'\n        )\n      })\n\n      return catalogNumberIdentifier && catalogNumberIdentifier.value\n    }\n  }\n)\n\nexport default {\n  createGetCatalogNumber,\n  ...keyObjectGlobalSelectors,\n}\n","import crudActionCreators from 'coreModules/crud/actionCreators'\nimport { actionCreators } from '../keyObjectModule'\n\nexport default function search({\n  aggregations,\n  excludeFields,\n  idsInMeta = false,\n  includeDeactivated,\n  includeFields,\n  limit = 100000,\n  query,\n  resource,\n  sort,\n  storeSearchResult = false,\n  useScroll,\n} = {}) {\n  const updateSearchResult = actionCreators.set[':resource.searchState']\n  const queryAc = crudActionCreators[resource].query\n\n  if (!queryAc) {\n    throw new Error(`Cant find query action creator for resource: ${resource}`)\n  }\n\n  if (!updateSearchResult) {\n    throw new Error(\n      `Cant find action creator to set searchState for resource: ${resource}`\n    )\n  }\n\n  return dispatch => {\n    return dispatch(\n      queryAc({\n        aggregations,\n        excludeFields,\n        idsInMeta,\n        includeDeactivated,\n        includeFields,\n        limit,\n        query,\n        sort,\n        throwError: true,\n        useScroll,\n      })\n    ).then(items => {\n      if (storeSearchResult) {\n        dispatch(\n          updateSearchResult(\n            {\n              items,\n            },\n            { resource }\n          )\n        )\n      }\n\n      return items\n    })\n  }\n}\n","import getCurrentUTCTimestamp from 'common/es5/date/getCurrentUTCTimestamp'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport { actionCreators, globalSelectors } from '../keyObjectModule'\n\nexport default function syncSearch({ resource = 'searchSpecimen' }) {\n  const getMany =\n    crudActionCreators[resource] && crudActionCreators[resource].getMany\n  if (!getMany) {\n    throw new Error(`Cant find actionCreator getMany for resource: ${resource}`)\n  }\n\n  const setLastUpdatedAt = actionCreators.set[':resource.lastUpdatedAt']\n  if (!setLastUpdatedAt) {\n    throw new Error(\n      `Cant find action creator to set lastUpdatedAt for resource: ${resource}`\n    )\n  }\n\n  return (dispatch, getState) => {\n    const state = getState()\n\n    const lastUpdatedAt = globalSelectors.get[':resource.lastUpdatedAt'](\n      state,\n      {\n        resource,\n      }\n    )\n\n    const nextLastUpdatedAt = getCurrentUTCTimestamp()\n\n    let updateQueryParams = {\n      limit: 100000,\n    }\n    let resourcesToRemoveQueryParams = {\n      filter: {\n        deactivated: true,\n      },\n      includeDeactivated: true,\n      limit: 100000,\n    }\n\n    if (lastUpdatedAt) {\n      updateQueryParams = {\n        filter: {\n          updatedAfter: lastUpdatedAt,\n        },\n      }\n      resourcesToRemoveQueryParams = {\n        filter: {\n          ...resourcesToRemoveQueryParams.filter,\n          updatedAfter: lastUpdatedAt,\n        },\n        includeDeactivated: true,\n      }\n    }\n\n    return dispatch(\n      getMany({\n        queryParams: updateQueryParams,\n      })\n    ).then(() => {\n      return dispatch(\n        getMany({\n          include: null,\n          queryParams: resourcesToRemoveQueryParams,\n          relationships: null,\n          removeFromState: true,\n        })\n      ).then(() => {\n        dispatch(setLastUpdatedAt(nextLastUpdatedAt, { resource }))\n        return true\n      })\n    })\n  }\n}\n","export { default as search } from './search'\nexport { default as syncSearch } from './syncSearch'\n","import React, { PureComponent } from 'react'\nimport { Grid, Icon } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool.isRequired,\n  setAsLatestActiveField: PropTypes.func.isRequired,\n}\n\nclass RemarksWrapper extends PureComponent {\n  render() {\n    const {\n      children,\n      input: { value },\n      isLatestActiveField,\n      setAsLatestActiveField,\n    } = this.props\n\n    return (\n      <Grid padded>\n        <Grid.Column\n          onClick={isLatestActiveField ? undefined : setAsLatestActiveField}\n          style={{\n            padding: 0,\n            paddingLeft: '2em',\n            position: 'relative',\n          }}\n        >\n          <div\n            style={{\n              float: 'left',\n              left: 0,\n              position: 'absolute',\n              top: '0.25em',\n            }}\n          >\n            <Icon\n              name={value ? 'commenting outline' : 'comment outline'}\n              size=\"large\"\n            />\n          </div>\n          {children}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nRemarksWrapper.propTypes = propTypes\n\nexport default RemarksWrapper\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport TogglableField from '../../TogglableField'\nimport TextArea from '../TextArea'\nimport RemarksWrapper from './RemarksWrapper'\n\nconst propTypes = {\n  displayLabel: PropTypes.bool,\n  emptyStateTextKey: PropTypes.string,\n  enableHelpNotifications: PropTypes.bool,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.shape({\n    form: PropTypes.string.isRequired,\n  }).isRequired,\n  module: PropTypes.string.isRequired,\n  parameterKey: PropTypes.string,\n  resultPrefix: PropTypes.string,\n  type: PropTypes.string,\n}\n\nconst defaultProps = {\n  displayLabel: false,\n  emptyStateTextKey: undefined,\n  enableHelpNotifications: false,\n  label: undefined,\n  parameterKey: undefined,\n  resultPrefix: undefined,\n  type: 'text',\n}\n\nclass RemarksInput extends PureComponent {\n  /* eslint-disable class-methods-use-this */\n  renderInput(props) {\n    const {\n      displayLabel,\n      enableHelpNotifications,\n      input,\n      isLatestActiveField,\n      label,\n      module,\n      parameterKey,\n      setAsLatestActiveField,\n      type,\n    } = props\n\n    return (\n      <RemarksWrapper\n        input={input}\n        isLatestActiveField={isLatestActiveField}\n        setAsLatestActiveField={setAsLatestActiveField}\n      >\n        <TextArea\n          displayLabel={displayLabel}\n          enableHelpNotifications={enableHelpNotifications}\n          fluid\n          focusOnMount\n          input={input}\n          label={label}\n          module={module}\n          parameterKey={parameterKey}\n          type={type}\n        />\n      </RemarksWrapper>\n    )\n  }\n\n  renderEmptyState(props) {\n    const {\n      emptyStateTextKey,\n      i18n: { moduleTranslate },\n      input,\n      isLatestActiveField,\n      module,\n      setAsLatestActiveField,\n    } = props\n\n    return (\n      <RemarksWrapper\n        input={input}\n        isLatestActiveField={isLatestActiveField}\n        setAsLatestActiveField={setAsLatestActiveField}\n      >\n        <div style={{ color: 'rgba(0, 0, 0, 0.5)', paddingTop: 8 }}>\n          {emptyStateTextKey\n            ? moduleTranslate({\n                capitalize: true,\n                module,\n                textKey: emptyStateTextKey,\n              })\n            : moduleTranslate({\n                capitalize: true,\n                module: 'form',\n                textKey: 'addRemarks',\n              })}\n        </div>\n      </RemarksWrapper>\n    )\n  }\n\n  renderResult(props) {\n    const {\n      i18n: { moduleTranslate },\n      input,\n      isLatestActiveField,\n      module,\n      resultPrefix,\n      resultPrefixTextKey,\n      setAsLatestActiveField,\n    } = props\n\n    const remarks =\n      resultPrefix || resultPrefixTextKey\n        ? `${resultPrefix ||\n            moduleTranslate({\n              capitalize: true,\n              module,\n              textKey: resultPrefixTextKey,\n            })}: ${input.value}`\n        : input.value\n\n    const remarkSegments = (remarks || '')\n      .split('\\n')\n      .reduce((segments, segment, index) => {\n        if (segments.length) {\n          return [\n            ...segments,\n            <br />,\n            <span key={segment + index}>{segment}</span>, // eslint-disable-line react/no-array-index-key\n          ]\n        }\n        return [<span key={segment + index}>{segment}</span>] // eslint-disable-line react/no-array-index-key\n      }, [])\n\n    return (\n      <RemarksWrapper\n        input={input}\n        isLatestActiveField={isLatestActiveField}\n        setAsLatestActiveField={setAsLatestActiveField}\n      >\n        <div style={{ paddingTop: 8 }}>{remarkSegments}</div>\n      </RemarksWrapper>\n    )\n  }\n  /* eslint-enable class-methods-use-this */\n\n  render() {\n    return (\n      <TogglableField\n        {...this.props}\n        renderEmptyState={this.renderEmptyState}\n        renderInput={this.renderInput}\n        renderResult={this.renderResult}\n      />\n    )\n  }\n}\n\nRemarksInput.propTypes = propTypes\nRemarksInput.defaultProps = defaultProps\n\nexport default compose(withI18n())(RemarksInput)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Button, Icon } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport config from 'config'\nimport extractProps from 'utilities/extractProps'\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { FieldTemplate } from 'coreModules/form/components'\nimport { propTypes as fieldTemplateProps } from 'coreModules/form/components/FieldTemplate'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { ROOT_TAXON_NAME } from '../../constants'\n\nconst getAcceptedTaxonNameFromTaxon = taxon => {\n  return objectPath.get(taxon, 'acceptedTaxonName.name')\n}\n\nconst getParentAcceptedTaxonNames = (taxon, taxonNames = []) => {\n  const acceptedTaxonName = getAcceptedTaxonNameFromTaxon(taxon)\n\n  if (acceptedTaxonName !== ROOT_TAXON_NAME) {\n    taxonNames.push(acceptedTaxonName)\n\n    if (taxon.parent) {\n      return getParentAcceptedTaxonNames(taxon.parent, taxonNames)\n    }\n  }\n\n  return taxonNames.reverse().join(' > ')\n}\n\nconst propTypes = {\n  focusOnMount: PropTypes.bool,\n  forceRenderResult: PropTypes.bool,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.string,\n    ]).isRequired,\n  }).isRequired,\n  isLatestActiveField: PropTypes.bool,\n  removeForceRenderResult: PropTypes.func,\n  setAsLatestActiveField: PropTypes.func,\n  taxon: PropTypes.shape({\n    acceptedTaxonName: PropTypes.shape({ name: PropTypes.string.isRequired }),\n    parent: PropTypes.shape({\n      acceptedTaxonName: PropTypes.shape({ name: PropTypes.string.isRequired }),\n      parent: PropTypes.object,\n    }),\n  }),\n  textOnly: PropTypes.bool,\n}\nconst defaultProps = {\n  focusOnMount: false,\n  forceRenderResult: false,\n  isLatestActiveField: false,\n  removeForceRenderResult: undefined,\n  setAsLatestActiveField: undefined,\n  taxon: undefined,\n  textOnly: false,\n}\n\nclass TaxonResult extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.focusOnMount && !config.isTest) {\n      this.button.focus()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.forceRenderResult &&\n      prevProps.isLatestActiveField !== this.props.isLatestActiveField &&\n      !this.props.isLatestActiveField\n    ) {\n      this.props.removeForceRenderResult()\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n    this.props.removeForceRenderResult()\n    this.props.setAsLatestActiveField()\n  }\n\n  render() {\n    const {\n      input: { name },\n      taxon,\n      textOnly,\n    } = this.props\n\n    const acceptedTaxonName =\n      taxon && objectPath.get(taxon, 'acceptedTaxonName.name')\n    const suffix = taxon && objectPath.get(taxon, 'acceptedTaxonName.rank')\n    const parentAcceptedTaxonNames = taxon && getParentAcceptedTaxonNames(taxon)\n\n    const { extractedProps } = extractProps({\n      keys: Object.keys(fieldTemplateProps),\n      props: this.props,\n    })\n\n    if (textOnly) {\n      return (\n        <React.Fragment>\n          {`${acceptedTaxonName} (${suffix})\n            ${parentAcceptedTaxonNames}\n          `}\n        </React.Fragment>\n      )\n    }\n\n    return (\n      <FieldTemplate {...extractedProps} name={name}>\n        <div style={{ position: 'relative' }}>\n          <strong>{acceptedTaxonName}</strong>\n          {suffix && ` (${suffix})`}\n          <Button\n            icon\n            onClick={this.handleClick}\n            ref={element => {\n              this.button = element\n            }}\n            style={{ marginLeft: '5px' }}\n          >\n            <Icon name=\"edit\" />\n          </Button>\n          <br />\n          {parentAcceptedTaxonNames}\n        </div>\n      </FieldTemplate>\n    )\n  }\n}\n\nTaxonResult.propTypes = propTypes\nTaxonResult.defaultProps = defaultProps\n\nexport default compose(\n  withI18n(),\n  createGetNestedItemById({\n    idPath: 'input.value',\n    include: [\n      'acceptedTaxonName',\n      'parent.acceptedTaxonName',\n      'parent.parent.acceptedTaxonName',\n      'parent.parent.parent.acceptedTaxonName',\n      'parent.parent.parent.parent.acceptedTaxonName',\n      'parent.parent.parent.parent.parent.acceptedTaxonName',\n    ],\n    nestedItemKey: 'taxon',\n    relationships: [\n      'acceptedTaxonName',\n      'parent',\n      'parent.acceptedTaxonName',\n      'parent.parent',\n      'parent.parent.acceptedTaxonName',\n      'parent.parent.parent',\n      'parent.parent.parent.acceptedTaxonName',\n      'parent.parent.parent.parent',\n      'parent.parent.parent.parent.acceptedTaxonName',\n      'parent.parent.parent.parent.parent',\n      'parent.parent.parent.parent.parent.acceptedTaxonName',\n    ],\n    resolveRelationships: ['taxon', 'taxonName'],\n    resource: 'taxon',\n  })\n)(TaxonResult)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TogglableField } from 'coreModules/form/components'\nimport TaxonDropdownPickerSearch from '../TaxonDropdownPickerSearch'\nimport TaxonResult from '../TaxonResult'\n\nconst propTypes = {\n  input: PropTypes.shape({\n    onBlur: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nclass TogglableTaxonDropdownPickerSearch extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      forceRenderResult: false,\n      pickerActive: false,\n    }\n\n    this.onBlur = this.onBlur.bind(this)\n    this.renderInput = this.renderInput.bind(this)\n    this.renderResult = this.renderResult.bind(this)\n    this.removeForceRenderResult = this.removeForceRenderResult.bind(this)\n    this.reportPickerActive = this.reportPickerActive.bind(this)\n  }\n\n  onBlur(value) {\n    if (value) {\n      this.setState({ forceRenderResult: true })\n    }\n    this.props.input.onBlur(value)\n  }\n\n  reportPickerActive(value) {\n    // if picker active, prepare to forceRenderResult when picker is no longer\n    // active and value was selected\n    if (value) {\n      return this.setState({\n        forceRenderResult: true,\n        pickerActive: true,\n      })\n    }\n\n    return this.setState({\n      pickerActive: false,\n    })\n  }\n\n  removeForceRenderResult() {\n    // this is called when edit button is clicked or field is no longer latest\n    // active\n    this.setState({ forceRenderResult: false })\n  }\n\n  /* eslint-disable class-methods-use-this */\n  renderInput(props) {\n    return (\n      <TaxonDropdownPickerSearch\n        {...props}\n        reportPickerActive={this.reportPickerActive}\n      />\n    )\n  }\n\n  renderResult(props) {\n    const { forceRenderResult, isLatestActiveField } = props\n\n    return (\n      <TaxonResult\n        displayLabel={false}\n        {...props}\n        focusOnMount={isLatestActiveField && forceRenderResult}\n        removeForceRenderResult={this.removeForceRenderResult}\n      />\n    )\n  }\n  /* eslint-enable class-methods-use-this */\n\n  render() {\n    const { forceRenderResult, pickerActive } = this.state\n    const { input } = this.props\n\n    return (\n      <TogglableField\n        {...this.props}\n        forceRenderResult={!pickerActive && !!input.value && forceRenderResult}\n        input={{\n          ...input,\n          onBlur: this.onBlur,\n        }}\n        renderEmptyState={this.renderInput /* skipping empty state */}\n        renderInput={this.renderInput}\n        renderResult={this.renderResult}\n      />\n    )\n  }\n}\n\nTogglableTaxonDropdownPickerSearch.propTypes = propTypes\n\nexport default TogglableTaxonDropdownPickerSearch\n","import * as components from './components'\nimport translations from './translations.json'\nimport { MODULE_NAME as name } from './constants'\n\nexport { components, name, translations }\n","import { actionCreators as keyObjectActionCreators } from '../keyObjectModule'\n\nconst delNestedObjectNamspace =\n  keyObjectActionCreators.del['nestedCache.:namespace.items']\n\nconst delNestedCache = keyObjectActionCreators.set.nestedCache\n\nexport default function clearNestedCache({ namespace, namespaces } = {}) {\n  return dispatch => {\n    if (namespace) {\n      return dispatch(\n        delNestedObjectNamspace({\n          namespace,\n        })\n      )\n    }\n\n    if (namespaces && namespaces.length) {\n      return namespaces.forEach(namesp =>\n        dispatch(\n          delNestedObjectNamspace({\n            namespace: namesp,\n          })\n        )\n      )\n    }\n\n    return dispatch(delNestedCache({}))\n  }\n}\n","export const CLOSE_ITEM_VIEW = 'CLOSE_ITEM_VIEW'\nexport const ITEM_SELECT = 'ITEM_SELECT'\nexport const MODULE_NAME = 'resourceManager'\nexport const NAVIGATE_CREATE = 'NAVIGATE_CREATE'\nexport const NAVIGATE_FILTER = 'NAVIGATE_FILTER'\nexport const NAVIGATE_LIST = 'NAVIGATE_LIST'\nexport const NAVIGATE_ROOT = 'NAVIGATE_ROOT'\nexport const NAVIGATE_TREE = 'NAVIGATE_TREE'\n\nexport const CREATE_CANCEL = 'CREATE_CANCEL'\nexport const CREATE_SUCCESS = 'CREATE_SUCCESS'\nexport const DEL_SUCCESS = 'DEL_SUCCESS'\nexport const EDIT_SUCCESS = 'EDIT_SUCCESS'\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS'\n\nexport const PICKER_CLOSE = 'PICKER_CLOSE'\nexport const PICKER_PICK_ITEM = 'PICKER_PICK_ITEM'\n","import { middleware } from 'redux-module-local-storage'\n\nconst name = 'localStorage'\n\nexport { middleware, name }\n","import config from 'config'\nimport { createLogger } from 'redux-logger'\n\nconst getLoggerMiddleware = () => {\n  if (config.reduxLogger.enabled) {\n    return () => {\n      return createLogger({\n        collapsed: true,\n        diff: config.reduxLogger.showDiff,\n      })\n    }\n  }\n  return null\n}\n\nconst name = 'logger'\nconst middleware = getLoggerMiddleware()\n\nexport { name, middleware }\n","import {\n  routerMiddleware as middleware,\n  routerReducer as reducer,\n} from 'react-router-redux'\nimport * as constants from './constants'\nimport * as higherOrderComponents from './higherOrderComponents'\n\nconst name = 'routing'\n\nexport { constants, higherOrderComponents, name, middleware, reducer }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { FormFieldHelpIcon } from 'coreModules/notifications/components'\nimport TranslatedHeader from '../TranslatedHeader'\n\nconst helpIconWrapperStyle = {\n  display: 'inline-block',\n  marginLeft: '0.25em',\n}\n\nconst propTypes = {\n  as: PropTypes.string,\n  helpNotificationProps: PropTypes.shape({\n    description: PropTypes.node,\n    descriptionHeaderKey: PropTypes.string,\n    descriptionKey: PropTypes.string,\n    headerKey: PropTypes.string,\n    linkTextKey: PropTypes.string,\n    linkTo: PropTypes.string,\n    size: PropTypes.string,\n  }),\n  module: PropTypes.string.isRequired,\n  textKey: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  as: 'h1',\n  helpNotificationProps: undefined,\n}\n\nconst TranslatedHeaderWithHelpIcon = ({\n  as,\n  helpNotificationProps,\n  module,\n  textKey,\n}) => {\n  return (\n    <TranslatedHeader as={as} module={module} textKey={textKey}>\n      <div style={helpIconWrapperStyle}>\n        {helpNotificationProps && (\n          <FormFieldHelpIcon helpNotificationProps={helpNotificationProps} />\n        )}\n      </div>\n    </TranslatedHeader>\n  )\n}\n\nTranslatedHeaderWithHelpIcon.propTypes = propTypes\nTranslatedHeaderWithHelpIcon.defaultProps = defaultProps\n\nexport default TranslatedHeaderWithHelpIcon\n","export default function createSerializedModuleMap(modules) {\n  return modules.reduce((obj, module) => {\n    return {\n      ...obj,\n      [module.name]: {\n        actionTypes: module.actionTypes,\n        constants: module.constants,\n        markdown: module.markdown,\n        name: module.name,\n        notifications: module.notifications,\n        shortcuts: module.shortcuts,\n        translations: module.translations,\n      },\n    }\n  }, {})\n}\n","export default function startListeners({ listenerMap, middlewareApi }) {\n  Object.keys(listenerMap).forEach(moduleName => {\n    const listener = listenerMap[moduleName]\n    if (!listener.started && listener.start) {\n      const stop = listener.start(middlewareApi)\n      listener.stop = stop\n      listener.started = true\n    }\n  })\n}\n","export const createMiddlewares = (modules, config = {}) => {\n  return modules.reduce((middlewares, module) => {\n    const middlewareFactory = module.middleware\n    if (!middlewareFactory) {\n      return middlewares\n    }\n    const { name } = module\n    const moduleConfig = config[name]\n    const moduleMiddlewareConfig = moduleConfig\n\n    const middleware = middlewareFactory(moduleMiddlewareConfig)\n    return {\n      ...middlewares,\n      [name]: middleware,\n    }\n  }, {})\n}\n\nexport default function createMiddlewareMap({\n  config,\n  middlewareMap = {},\n  newModules = [],\n  removeModules = [],\n}) {\n  const newMiddlewares = createMiddlewares(newModules, config)\n  const newMiddlewareMap = {\n    ...middlewareMap,\n    ...newMiddlewares,\n  }\n\n  removeModules.forEach(module => {\n    const { name } = module\n    if (newMiddlewareMap[name]) {\n      delete newMiddlewareMap[name] // eslint-disable-line no-param-reassign\n    }\n  })\n  return newMiddlewareMap\n}\n","import { combineReducers } from 'redux'\n\nexport const extractReducers = moduleMap => {\n  return Object.keys(moduleMap).reduce((reducers, key) => {\n    const { reducer, name } = moduleMap[key]\n\n    if (!reducer) {\n      return reducers\n    }\n\n    return {\n      ...reducers,\n      [name]: reducer,\n    }\n  }, {})\n}\n\nexport default function createRootReducer({ moduleMap }) {\n  return combineReducers(extractReducers(moduleMap))\n}\n","import createSystemFrontendValidator from 'common/es5/error/validators/createSystemFrontendValidator'\n\nexport const addModuleToValidations = (validations, module) => {\n  const moduleSchemas = module.schemas\n  const moduleConfigSchema = moduleSchemas && moduleSchemas.config\n  if (!moduleConfigSchema) {\n    return validations\n  }\n\n  const moduleName = module.name\n\n  return {\n    ...validations,\n    [moduleName]: moduleConfigSchema,\n  }\n}\n\nexport const extractConfigSchemas = modules => {\n  return modules.reduce(addModuleToValidations, {})\n}\n\nexport const addModuleToEndpoints = (endpoints, module) => {\n  const moduleEndpoints = module.endpoints\n  if (!endpoints) {\n    return moduleEndpoints\n  }\n\n  return {\n    ...endpoints,\n    ...moduleEndpoints,\n  }\n}\n\nexport const validateConfigWithSchema = (config, configSchemas = {}) => {\n  Object.keys(configSchemas).forEach(moduleName => {\n    const moduleSchema = configSchemas[moduleName]\n    const moduleConfig = config[moduleName]\n    const validate = createSystemFrontendValidator({\n      schema: moduleSchema,\n      throwError: false,\n      type: 'config',\n    })\n    const errors = validate(moduleConfig)\n    if (errors) {\n      const errorMessage = `Validating config for module: ${moduleName}: ${JSON.stringify(\n        errors,\n        null,\n        2\n      )}`\n      throw new Error(errorMessage)\n    }\n  })\n}\nexport default function createConfigValidation(modules) {\n  const configSchemas = extractConfigSchemas(modules)\n  return (config = {}) => {\n    validateConfigWithSchema(config, configSchemas)\n  }\n}\n","import createConfigValidation from './createConfigValidation'\n\nexport default function createModuleMap({\n  availableModules,\n  config,\n  moduleMap = {},\n  newModules = [],\n  removeModules = [],\n}) {\n  const validateConfig = createConfigValidation(newModules)\n  validateConfig(config)\n\n  const newModuleMap = {\n    ...moduleMap,\n  }\n  newModules.forEach(module => {\n    const { name } = module\n\n    if (!availableModules[name]) {\n      throw new Error(`Module with name ${name} is unknown`)\n    }\n\n    if (!newModuleMap[name]) {\n      newModuleMap[name] = module // eslint-disable-line no-param-reassign\n    }\n  })\n\n  removeModules.forEach(module => {\n    const { name } = module\n    if (newModuleMap[name]) {\n      delete newModuleMap[name] // eslint-disable-line no-param-reassign\n    }\n  })\n\n  return newModuleMap\n}\n","const setupListeners = ({ newModules }) => {\n  return newModules.reduce((listeners, module) => {\n    const listenerFactory = module.listener\n    const moduleName = module.name\n    if (listenerFactory && listenerFactory.start) {\n      return {\n        ...listeners,\n        [moduleName]: {\n          start: listenerFactory.start,\n          started: false,\n          stop: null,\n        },\n      }\n    }\n    return listeners\n  }, {})\n}\n\nexport default function createListeners({\n  listenerMap,\n  newModules = [],\n  removeModules = [],\n}) {\n  const newListeners = setupListeners({ newModules })\n  const newListenerMap = {\n    ...listenerMap,\n    ...newListeners,\n  }\n\n  removeModules.forEach(module => {\n    const { name } = module\n    if (newListenerMap[name]) {\n      const { stop } = newListenerMap[name]\n      if (stop) {\n        stop()\n      }\n      delete newListenerMap[name] // eslint-disable-line no-param-reassign\n    }\n  })\n  return newListenerMap\n}\n","import createMiddlewareArray from './createMiddlewareArray'\nimport createMiddlewareMap from './createMiddlewareMap'\nimport createRootReducer from './createRootReducer'\nimport createModuleMap from './createModuleMap'\nimport createListeners from './createListeners'\n\nexport default function updateModuleState({\n  availableModules,\n  config,\n  listenerMap = {},\n  middlewareApi,\n  middlewareMap = {},\n  moduleMap = {},\n  moduleOrder = [],\n  newModules = [],\n  removeModules = [],\n}) {\n  const newModuleMap = createModuleMap({\n    availableModules,\n    config,\n    moduleMap,\n    newModules,\n    removeModules,\n  })\n\n  const newMiddlewareMap = createMiddlewareMap({\n    config,\n    middlewareMap,\n    newModules,\n    removeModules,\n  })\n\n  const newMiddlewareArray = createMiddlewareArray({\n    middlewareMap: newMiddlewareMap,\n    moduleOrder,\n  })\n\n  const newReducer = createRootReducer({\n    config,\n    moduleMap: newModuleMap,\n  })\n\n  const newListenerMap = createListeners({\n    config,\n    listenerMap,\n    middlewareApi,\n    newModules,\n    removeModules,\n  })\n\n  return {\n    listenerMap: newListenerMap,\n    middlewareArray: newMiddlewareArray,\n    middlewareMap: newMiddlewareMap,\n    moduleMap: newModuleMap,\n    reducer: newReducer,\n  }\n}\n","export default function createMiddlewareArray({ middlewareMap, moduleOrder }) {\n  return moduleOrder\n    .map(moduleName => {\n      return middlewareMap[moduleName]\n    })\n    .filter(middleware => !!middleware)\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\n\nimport createSerializedModuleMap from './createSerializedModuleMap'\nimport registerModulesActionCreator from '../actionCreators/registerModules'\nimport startListeners from './startListeners'\nimport updateModuleState from './updateModuleState'\n\nconst log = createLog('modules:bootstrap:utilities:createRegisterModules')\n\nexport const dep = new Dependor(\n  {\n    createSerializedModuleMap,\n    registerModulesActionCreator,\n    startListeners,\n    updateModuleState,\n  },\n  'modules:bootstrap:utilities:createRegisterModules'\n)\n\nexport default function createRegisterModules({\n  availableModules,\n  config,\n  dynamicDispatch,\n  getModuleState,\n  middlewareApi,\n  moduleOrder,\n  setModuleState,\n  store,\n  updateDispatch,\n}) {\n  return function registerModules(modules) {\n    log.info(\n      'Register modules start:',\n      modules.map(({ name }) => name).join(', ')\n    )\n    const moduleState = getModuleState()\n\n    const newModuleState = dep.updateModuleState({\n      ...moduleState,\n      availableModules,\n      config,\n      middlewareApi,\n      moduleOrder,\n      newModules: modules,\n    })\n    log.debug('Module state updated')\n    const { middlewareArray, reducer } = newModuleState\n\n    updateDispatch(middlewareArray)\n    log.debug('Dispatch updated')\n    store.replaceReducer(reducer)\n    log.debug('Reducer replaced')\n    // leave this to translation module instead?\n    // might make sense to put in middleware\n    // add pre and post / success\n    dynamicDispatch(\n      dep.registerModulesActionCreator({\n        config,\n        modules: dep.createSerializedModuleMap(modules),\n      })\n    )\n    dep.startListeners({\n      listenerMap: newModuleState.listenerMap,\n      middlewareApi,\n    })\n    log.debug('Listeners started')\n    log.info('Register modules done')\n    setModuleState(newModuleState)\n  }\n}\n","import createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\n\nimport createSerializedModuleMap from './createSerializedModuleMap'\nimport unregisterModulesActionCreator from '../actionCreators/unregisterModules'\nimport startListeners from './startListeners'\nimport updateModuleState from './updateModuleState'\n\nconst log = createLog('modules:bootstrap:utilities:createUnregisterModules')\n\nexport const dep = new Dependor(\n  {\n    createSerializedModuleMap,\n    startListeners,\n    unregisterModulesActionCreator,\n    updateModuleState,\n  },\n  'modules:bootstrap:utilities:createUnregisterModules'\n)\n\nexport default function createUnregisterModules({\n  availableModules,\n  config,\n  dynamicDispatch,\n  getModuleState,\n  middlewareApi,\n  moduleOrder,\n  setModuleState,\n  store,\n  updateDispatch,\n}) {\n  return function unregisterModules(modules) {\n    log.info(\n      'Unregister modules start:',\n      modules.map(({ name }) => name).join(', ')\n    )\n\n    const moduleState = getModuleState()\n\n    const newModuleState = dep.updateModuleState({\n      ...moduleState,\n      availableModules,\n      config,\n      middlewareApi,\n      moduleOrder,\n      removeModules: modules,\n    })\n\n    const { middlewareArray, reducer } = newModuleState\n\n    updateDispatch(middlewareArray)\n    store.replaceReducer(reducer)\n    dynamicDispatch(\n      dep.unregisterModulesActionCreator({\n        modules: dep.createSerializedModuleMap(modules),\n      })\n    )\n\n    log.info('Unregister modules done')\n    setModuleState(newModuleState)\n  }\n}\n","import { BOOTSTRAP_UNREGISTER_MODULES } from '../actionTypes'\n\nexport default function unregisterModules({ modules }) {\n  return {\n    payload: { modules },\n    type: BOOTSTRAP_UNREGISTER_MODULES,\n  }\n}\n","import { compose } from 'redux'\nimport createLog from 'utilities/log'\nimport Dependor from 'utilities/Dependor'\n\nimport createRegisterModules from './utilities/createRegisterModules'\nimport createUnregisterModules from './utilities/createUnregisterModules'\nimport createEnhancerStateManager from './utilities/createEnhancerStateManager'\nimport createAsyncRegisterModules from './utilities/createAsyncRegisterModules'\nimport createAsyncUnregisterModules from './utilities/createAsyncUnregisterModules'\n\nconst log = createLog('modules:bootstrap:enhancer')\n\nexport const dep = new Dependor(\n  {\n    createAsyncRegisterModules,\n    createAsyncUnregisterModules,\n    createRegisterModules,\n    createUnregisterModules,\n  },\n  'modules:bootstrap:enhancer'\n)\n\nexport default function updateStoreEnhancer({ config, moduleOrder = [] }) {\n  const availableModules = moduleOrder.reduce((obj, moduleName) => {\n    return {\n      ...obj,\n      [moduleName]: true,\n    }\n  }, {})\n\n  return createStore => (...params) => {\n    log.info('Create store')\n    const store = createStore(...params)\n    const { dispatch } = store\n\n    const {\n      getDispatch,\n      getModuleState,\n      setDispatch,\n      setModuleState,\n    } = createEnhancerStateManager({\n      dispatch,\n    })\n\n    const middlewareApi = {\n      dispatch: (...args) => getDispatch()(...args),\n      getState: store.getState,\n    }\n\n    const updateDispatch = middlewares => {\n      const chain = middlewares.map(middleware => middleware(middlewareApi))\n      setDispatch(compose(...chain)(store.dispatch))\n    }\n\n    const dynamicDispatch = (...args) => {\n      return getDispatch()(...args)\n    }\n\n    const registerModules = dep.createRegisterModules({\n      availableModules,\n      config,\n      dynamicDispatch,\n      getModuleState,\n      middlewareApi,\n      moduleOrder,\n      setModuleState,\n      store,\n      updateDispatch,\n    })\n\n    const unregisterModules = dep.createUnregisterModules({\n      availableModules,\n      config,\n      dynamicDispatch,\n      getModuleState,\n      middlewareApi,\n      moduleOrder,\n      setModuleState,\n      store,\n      updateDispatch,\n    })\n\n    updateDispatch([])\n\n    return {\n      ...store,\n      dispatch: dynamicDispatch,\n      registerModules,\n      unregisterModules,\n    }\n  }\n}\n","/* not used atm\n * use in enhancer like:\n *    const unregisterModulesAsync = dep.createAsyncUnregisterModules({\n *      getModuleRegisterPipe,\n *      getModuleUnregisterPipe,\n *      setModuleUnregisterPipe,\n *      unregisterModules,\n *    })\n *\n */\n\nexport default function createAsyncRegisterModules({\n  getModuleRegisterPipe,\n  registerModules,\n  setModuleRegisterPipe,\n}) {\n  return function asyncRegisterModules(modules) {\n    const moduleRegisterPipe = getModuleRegisterPipe()\n    if (moduleRegisterPipe.length) {\n      const filteredModules = modules.filter(module => {\n        return moduleRegisterPipe.some(pipeModule => {\n          return pipeModule.name === module.name\n        })\n      })\n      moduleRegisterPipe.push(...filteredModules)\n    } else {\n      moduleRegisterPipe.push(...modules)\n    }\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (moduleRegisterPipe.length) {\n          registerModules(moduleRegisterPipe)\n          setModuleRegisterPipe([])\n        }\n        resolve(true)\n      }, 0)\n    })\n  }\n}\n","/* not used atm\n * use in enhancer like:\n *    const registerModulesAsync = dep.createAsyncRegisterModules({\n *      getModuleRegisterPipe,\n *      registerModules,\n *      setModuleRegisterPipe,\n *    })\n *\n */\n\nexport default function createAsyncUnregisterModules({\n  getModuleRegisterPipe,\n  getModuleUnregisterPipe,\n  setModuleUnregisterPipe,\n  unregisterModules,\n}) {\n  return function asyncUnregisterModules(modules) {\n    const moduleUnregisterPipe = getModuleUnregisterPipe()\n    const moduleRegisterPipe = getModuleRegisterPipe()\n    if (moduleUnregisterPipe.length) {\n      moduleUnregisterPipe.push(\n        modules.filter(module => {\n          return (\n            moduleUnregisterPipe.some(pipeModule => {\n              return pipeModule.name === module.name\n            }) ||\n            moduleRegisterPipe.some(pipeModule => {\n              return pipeModule.name === module.name\n            })\n          )\n        })\n      )\n    } else {\n      moduleUnregisterPipe.push(...modules)\n    }\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (moduleUnregisterPipe.length) {\n          unregisterModules(moduleUnregisterPipe)\n          setModuleUnregisterPipe([])\n        }\n        resolve(true)\n      }, 0)\n    })\n  }\n}\n","export default function createEnhancerStateManager(initialState) {\n  const state = {\n    availableModules: [],\n    dispatch: null,\n    moduleRegisterPipe: [],\n    moduleState: {},\n    moduleUnregisterPipe: [],\n    ...initialState,\n  }\n\n  return {\n    getAvailableModules: () => {\n      return state.availableModules\n    },\n    getDispatch: () => {\n      return state.dispatch\n    },\n    getModuleRegisterPipe: () => {\n      return state.moduleRegisterPipe\n    },\n    getModuleState: () => {\n      return state.moduleState\n    },\n    getModuleUnregisterPipe: () => {\n      return state.moduleUnregisterPipe\n    },\n    setAvailableModules: newAvailableModules => {\n      state.availableModules = newAvailableModules\n    },\n    setDispatch: newDispatch => {\n      state.dispatch = newDispatch\n    },\n    setModuleRegisterPipe: newModuleRegisterPipe => {\n      state.moduleRegisterPipe = newModuleRegisterPipe\n    },\n    setModuleState: newModuleState => {\n      state.moduleState = newModuleState\n    },\n    setModuleUnregisterPipe: newModuleUnregisterPipe => {\n      state.moduleUnregisterPipe = newModuleUnregisterPipe\n    },\n  }\n}\n","export const moduleOrder = [\n  'api',\n  'bootstrap',\n  'crud',\n  'search',\n  'commonUi',\n  'layout',\n  'devToolsExtension',\n  'error',\n  'form',\n  'formSupport',\n  'i18n',\n  'localStorage',\n  'logger',\n  'notifications',\n  'routing',\n  'size',\n  'user',\n  'keyboardShortcuts',\n  'resourceManager',\n  'documentation',\n]\n\nexport const type = 'module'\n","export const moduleOrder = [\n  'agent',\n  'collectionMammals',\n  'curatedList',\n  'locality',\n  'storage',\n  'taxon',\n]\n\nexport const type = 'module'\n","import { createStore as reduxCreateStore, compose } from 'redux'\nimport hotswapStoreEnhancer from 'coreModules/bootstrap/enhancer'\nimport createLog from 'utilities/log'\nimport { enhancer as devToolsExtensionEnhancer } from 'coreModules/devToolsExtension'\nimport { moduleOrder as coreModuleOrder } from 'coreModules'\nimport { moduleOrder as domainModuleOrder } from 'domainModules'\n\nconst log = createLog('store')\n\nexport default function createStoreMain({\n  config,\n  initialState = {},\n  modules,\n  viewOrder,\n}) {\n  log.info('Start createStoreMain')\n  log.info('Creating enhancers')\n  const enhancers = [\n    hotswapStoreEnhancer({\n      config,\n      moduleOrder: [...coreModuleOrder, ...domainModuleOrder, ...viewOrder],\n    }),\n    devToolsExtensionEnhancer && devToolsExtensionEnhancer(), // dont do this in production\n  ].filter(enhancer => !!enhancer)\n  const composedEnhancers = compose(...enhancers)\n  const emptyReducer = state => state\n\n  log.info('Creating store')\n  const store = reduxCreateStore(emptyReducer, initialState, composedEnhancers)\n\n  log.info('Register modules start')\n  store.registerModules(modules)\n  log.info('Register modules done')\n\n  return store\n}\n","import immutable from 'object-path-immutable'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst models = schemaInterface.getModels()\n\nconst createFormModels = () => {\n  let updatedModels = { ...models }\n\n  updatedModels = immutable.set(updatedModels, 'normalizedAgent.required', [\n    'agentType',\n    'fullName',\n  ])\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'normalizedAgent.properties.agentType',\n    {\n      minLength: 1,\n      type: 'string',\n    }\n  )\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'normalizedAgent.properties.fullName',\n    {\n      minLength: 1,\n      type: 'string',\n    }\n  )\n\n  updatedModels = immutable.set(updatedModels, 'dateRange', {\n    ...updatedModels.dateRange,\n    allOf: [\n      { 'x-validation-date-range-end-after-start': true },\n      { 'x-validation-date-range-valid-if-not-empty': true },\n      { 'x-validation-date-range-no-orphan-day': true },\n      { 'x-validation-date-range-no-orphan-month': true },\n    ],\n  })\n\n  // Agent role key is a temporary uuid needed for React array key\n  updatedModels = immutable.set(updatedModels, 'role.properties', {\n    ...updatedModels.role.properties,\n    key: { type: 'string' },\n  })\n\n  return updatedModels\n}\n\nconst formModels = createFormModels()\n\nexport { formModels }\n","import { createRangeDate } from 'coreModules/form/components/parts/factories'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.birthAndDeath',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'buttons.birthAndDeath',\n    },\n    initiallyShown: true,\n  },\n  ...createRangeDate({\n    baseName: 'lifespan',\n    displayDateTypeRadios: false,\n    displayEndDateLabel: true,\n    displayLabel: false,\n    displayStartDateLabel: true,\n    displaySubLabels: true,\n    endDateLabel: 'Death date',\n    initialDateType: 'openRange',\n    initiallyHidden: true,\n    stack: true,\n    startDateLabel: 'Birth date',\n  }),\n]\n\nexport default {\n  name: 'agentBirthAndDeath',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.contactDetails',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'buttons.contactDetails',\n    },\n    initiallyShown: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'telephone',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'email',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'streetAddress',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { clear: true, width: 5 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'postOfficeBoxNumber',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'city',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 7 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'stateProvince',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { clear: true, width: 5 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'postalCode',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'country',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'agentContactDetails',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.nameDetails',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'buttons.nameDetails',\n    },\n    initiallyShown: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 8 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'givenName',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 8 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'familyName',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 10 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'additionalName',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 10 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'alsoKnownAs',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { clear: true, width: 6 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'title',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { clear: true, width: 4 },\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'abbreviation',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'agentNameDetails',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.affiliations',\n    },\n  },\n  {\n    componentName: 'AgentRolesAccordion',\n    containsReduxFormField: true,\n    name: 'roles',\n    relativeNames: ['affiliation.name', 'dateRange', 'name'],\n  },\n]\n\nexport default {\n  name: 'agentRoles',\n  parts,\n}\n","import agentBirthAndDeath from './agentBirthAndDeath'\nimport agentContactDetails from './agentContactDetails'\nimport agentNameDetails from './agentNameDetails'\nimport agentRoles from './agentRoles'\nimport agentRoot from './agentRoot'\n\nexport default {\n  agentBirthAndDeath,\n  agentContactDetails,\n  agentNameDetails,\n  agentRoles,\n  agentRoot,\n}\n","import { AGENT_TYPE_OPTIONS } from 'domainModules/agent/constants'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.agent',\n    },\n  },\n  {\n    componentName: 'Radio',\n    componentProps: {\n      labelKey: 'modules.agent.fieldLabels.agentType',\n      radioOptions: AGENT_TYPE_OPTIONS,\n    },\n    name: 'agentType',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 10 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'fullName',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 10 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'disambiguatingDescription',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.agent',\n      resultPrefixTextKey: 'remarks.resultPrefix.agent',\n    },\n    name: 'remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'agentRoot',\n  parts,\n}\n","import agent from './agent'\n\nexport default [agent]\n","import {\n  legacyData,\n  recordHistoryEvents,\n} from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst {\n  agentRoot,\n  agentBirthAndDeath,\n  agentContactDetails,\n  agentNameDetails,\n  agentRoles,\n} = unitSpecs\n\nconst units = [\n  agentRoot,\n  agentNameDetails,\n  agentRoles,\n  agentContactDetails,\n  agentBirthAndDeath,\n  recordHistoryEvents,\n  legacyData,\n]\n\nexport default {\n  name: 'agent',\n  units,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { arrayRemove, change, reduxForm, reset } from 'redux-form'\n\nimport { createLinkFieldErrors } from 'coreModules/form/higherOrderComponents'\nimport { Form, FormRow } from 'coreModules/form/components'\nimport { createMapRequiredStrings } from 'coreModules/form/utilities/errorTransformations'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { formModels } from '../../../../schemas'\nimport customParts from '../../../formParts'\nimport sectionSpecs from './sectionSpecs'\n\nconst formActionBarHeight = emToPixels(4.625)\n\nconst mapDispatchToProps = {\n  changeFormValue: change,\n  removeArrayField: arrayRemove,\n  reset,\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  changeFormValue: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func.isRequired,\n  getAllowTransition: PropTypes.func,\n  handleSubmit: PropTypes.func.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  preventLeavingForm: PropTypes.bool,\n  removeArrayField: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  unsavedChangesMessage: PropTypes.string,\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  itemSubHeader: undefined,\n  preventLeavingForm: false,\n  unsavedChangesMessage: undefined,\n}\n\nclass BaseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.handleUndoChanges = this.handleUndoChanges.bind(this)\n    this.changeFieldValue = this.changeFieldValue.bind(this)\n    this.removeArrayFieldByIndex = this.removeArrayFieldByIndex.bind(this)\n  }\n\n  changeFieldValue(fieldName, value) {\n    this.props.changeFormValue(this.props.form, fieldName, value)\n  }\n\n  removeArrayFieldByIndex(fieldName, index) {\n    this.props.removeArrayField(this.props.form, fieldName, index)\n  }\n\n  handleUndoChanges() {\n    this.props.reset(this.props.form)\n  }\n\n  render() {\n    const {\n      availableHeight,\n      form,\n      formValueSelector,\n      getAllowTransition,\n      handleSubmit,\n      itemHeader,\n      itemSubHeader,\n      preventLeavingForm,\n      unsavedChangesMessage,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(() => {\n          /* submit handled in resource manager */\n        })}\n        preventLeavingForm={preventLeavingForm}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n        unsavedChangesMessage={unsavedChangesMessage}\n      >\n        <FormRow\n          {...rest}\n          availableHeight={availableHeight - formActionBarHeight}\n          changeFieldValue={this.changeFieldValue}\n          customParts={customParts}\n          formName={form}\n          formValueSelector={formValueSelector}\n          itemHeader={itemHeader}\n          itemSubHeader={itemSubHeader}\n          module=\"agent\"\n          moduleName=\"agent\"\n          removeArrayFieldByIndex={this.removeArrayFieldByIndex}\n          sectionSpecs={sectionSpecs}\n        />\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nconst EnhancedForm = compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(BaseForm)\n\nexport default compose(\n  reduxForm({\n    enableReinitialize: true,\n    validate: compose(\n      createMapRequiredStrings(['agentType', 'fullName']),\n      customFormValidator({\n        model: 'normalizedAgent',\n        models: formModels,\n      })\n    ),\n  }),\n  createLinkFieldErrors({\n    fieldPaths: ['fullName', 'disambiguatingDescription'],\n  })\n)(EnhancedForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { formValueSelector as formValueSelectorFactory } from 'redux-form'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport BaseForm from './BaseForm'\nimport setDefaultValues from './BaseForm/transformations/input'\n\nconst FORM_NAME = 'normalizedAgentCreate'\n\nconst propTypes = {\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  itemId: undefined,\n}\n\nconst getAllowTransition = (location, action) => {\n  if (action === 'POP') {\n    return false\n  }\n  return location.search.includes('mainColumn=edit')\n}\n\nexport class Create extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.formValueSelector = formValueSelectorFactory(FORM_NAME)\n  }\n\n  render() {\n    const { itemId, onInteraction, ...rest } = this.props\n\n    const initialValues = setDefaultValues({ agent: {} })\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form={FORM_NAME}\n        formValueSelector={this.formValueSelector}\n        getAllowTransition={getAllowTransition}\n        initialValues={initialValues}\n        itemHeader={\n          <ModuleTranslate capitalize module=\"agent\" textKey=\"newAgent\" />\n        }\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        preventLeavingForm\n        unsavedChangesMessage=\"You have not saved the new record, are you sure you want to leave?\"\n      />\n    )\n  }\n}\n\nCreate.propTypes = propTypes\nCreate.defaultProps = defaultProps\n\nexport default Create\n","export default function transformInput({ agent = {} }) {\n  const transformedAgent = JSON.parse(JSON.stringify(agent))\n\n  if (!transformedAgent.agentType) {\n    transformedAgent.agentType = 'person'\n  }\n  return transformedAgent\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { formValueSelector as formValueSelectorFactory } from 'redux-form'\n\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport { getChildrenIds, getParentId } from 'coreModules/crud/utilities'\n\nimport BaseForm from './BaseForm'\n\nconst FORM_NAME = 'normalizedAgentEdit'\n\nconst mapStateToProps = (state, ownProps) => {\n  const { item: normalizedAgent } = ownProps\n  const parentId = getParentId(normalizedAgent)\n  const parent =\n    parentId && globalCrudSelectors.normalizedAgent.getOne(state, parentId)\n  const children = getChildrenIds(normalizedAgent).map(id => {\n    return (\n      globalCrudSelectors.normalizedAgent.getOne(state, id) || {\n        id,\n      }\n    )\n  })\n\n  return {\n    children,\n    parent,\n  }\n}\n\nexport const include = ['resourceActivities']\n\nconst propTypes = {\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nexport class Edit extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.formValueSelector = formValueSelectorFactory(FORM_NAME)\n  }\n\n  render() {\n    const { nestedItem, onInteraction, ...rest } = this.props\n\n    if (!nestedItem) {\n      return null\n    }\n\n    const { resourceActivities } = nestedItem\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form={FORM_NAME}\n        formValueSelector={this.formValueSelector}\n        initialValues={nestedItem}\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        onInteraction={onInteraction}\n        resourceActivities={resourceActivities}\n      />\n    )\n  }\n}\n\nEdit.propTypes = propTypes\nEdit.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(Edit)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport FieldWrapper from 'coreModules/form/components/FieldWrapper'\nimport { Input, DropdownSearch } from 'coreModules/form/components'\nimport { AGENT_TYPE_OPTIONS } from '../../../constants'\n\nexport const FORM_NAME = 'normalizedAgentFilter'\n\nconst log = createLog('modules:agent:BaseForm')\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nconst noop = () => {}\n\nexport class BaseForm extends Component {\n  render() {\n    log.render()\n    const { error, handleSubmit } = this.props\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Form error={!!error} onSubmit={handleSubmit(noop)}>\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Full agent name\"\n                    model=\"agent\"\n                    module=\"agent\"\n                    name=\"fullName\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={DropdownSearch}\n                    enableHelpNotifications={false}\n                    fluid\n                    label=\"Agent type\"\n                    model=\"agent\"\n                    module=\"agent\"\n                    name=\"agentType\"\n                    options={AGENT_TYPE_OPTIONS}\n                    type=\"dropdown-search-local\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  form: FORM_NAME,\n})(BaseForm)\n","export default function buildFilterQuery({ values = {} }) {\n  const and = []\n\n  if (values.fullName) {\n    and.push({\n      filter: {\n        filterFunction: 'fullNameSearch',\n        input: {\n          value: values.fullName,\n        },\n      },\n    })\n  }\n\n  if (values.agentType) {\n    and.push({\n      filter: {\n        filterFunction: 'matchAgentType',\n        input: {\n          value: values.agentType,\n        },\n      },\n    })\n  }\n\n  if (!and.length) {\n    return {}\n  }\n\n  return {\n    and,\n  }\n}\n","import objectPath from 'object-path'\nimport { isEmpty } from 'lodash'\n\nexport default function transformOutput(normalizedAgent) {\n  const transformedNormalizedAgent = JSON.parse(JSON.stringify(normalizedAgent))\n\n  const roles = objectPath.get(transformedNormalizedAgent, 'roles')\n  if (roles && roles.length) {\n    transformedNormalizedAgent.roles = roles\n      .map(role => {\n        const patchedRole = { ...role }\n        delete patchedRole.key\n        return patchedRole\n      })\n      .filter(role => !isEmpty(role))\n  }\n  return transformedNormalizedAgent\n}\n","const tableColumnSpecifications = [\n  {\n    fieldPath: 'fullName',\n    label: 'modules.agent.fieldLabels.fullName',\n    width: 250,\n  },\n  {\n    fieldPath: 'disambiguatingDescription',\n    label: 'modules.agent.fieldLabels.disambiguatingDescription',\n    width: 250,\n  },\n  {\n    fieldPath: 'givenName',\n    label: 'modules.agent.tableColumns.givenName',\n    width: 200,\n  },\n  {\n    fieldPath: 'familyName',\n    label: 'modules.agent.tableColumns.familyName',\n    width: 200,\n  },\n  {\n    fieldPath: 'additionalName',\n    label: 'modules.agent.fieldLabels.additionalName',\n    width: 200,\n  },\n  {\n    fieldPath: 'abbreviation',\n    label: 'modules.agent.fieldLabels.abbreviation',\n    width: 200,\n  },\n  {\n    fieldPath: 'alsoKnownAs',\n    label: 'modules.agent.fieldLabels.alsoKnownAs',\n    width: 200,\n  },\n  {\n    fieldPath: 'remarks',\n    label: 'modules.agent.fieldLabels.remarks',\n    width: 200,\n  },\n]\nexport default tableColumnSpecifications\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  nestedItem: PropTypes.object.isRequired,\n}\n\nconst ItemTitle = ({ nestedItem }) => {\n  const { agentType, fullName } = nestedItem\n  if (!fullName) {\n    return ''\n  }\n\n  return (\n    <React.Fragment>\n      <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>\n        {fullName}\n      </span>\n      ({agentType})\n    </React.Fragment>\n  )\n}\n\nItemTitle.propTypes = propTypes\n\nexport default ItemTitle\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport { actionCreators as crudActionCreators } from 'coreModules/crud'\nimport { ResourceManager } from 'coreModules/resourceManager/components'\nimport CreateForm from './item/CreateForm'\nimport EditForm from './item/EditForm'\nimport FilterForm from './filter/Form'\nimport buildFilterQuery from './filter/buildFilterQuery'\nimport transformOutput from './item/BaseForm/transformations/output'\nimport tableColumnSpecifications from './tableColumnSpecifications'\nimport ItemTitle from './ItemTitle'\n\nconst resource = 'normalizedAgent'\nconst include = ['resourceActivities']\nconst createGetNestedItemHocInput = {\n  include,\n  refresh: true,\n  relationships: include,\n  resolveRelationships: ['resourceActivity'],\n  resource,\n}\n\nconst relationshipsToCheckBeforeDelete = ['specimens']\n\nconst sortOrder = ['attributes.name:asc']\n\nconst buildEditItemHeaders = nestedItem => {\n  if (!nestedItem) {\n    return {}\n  }\n\n  return {\n    itemHeader: nestedItem.fullName,\n    itemSubHeader: capitalizeFirstLetter(nestedItem.agentType),\n  }\n}\n\nconst mapDispatchToProps = {\n  getAgent: crudActionCreators.normalizedAgent.getOne,\n}\n\nconst propTypes = {\n  getAgent: PropTypes.func.isRequired,\n  itemId: PropTypes.string,\n  onNavigation: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n}\n\nclass AgentManager extends Component {\n  constructor(props) {\n    super(props)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.renderCreateForm = this.renderCreateForm.bind(this)\n    this.renderEditForm = this.renderEditForm.bind(this)\n    this.renderFilterForm = this.renderFilterForm.bind(this)\n  }\n\n  handleInteraction(type, data = {}) {\n    this.props.onNavigation(type, data)\n  }\n\n  renderEditForm(props = {}) {\n    const { itemId } = this.props\n    return (\n      <EditForm\n        {...props}\n        itemId={itemId}\n        onInteraction={this.handleInteraction}\n      />\n    )\n  }\n  renderCreateForm(props = {}) {\n    return <CreateForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  renderFilterForm(props = {}) {\n    return <FilterForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  render() {\n    return (\n      <ResourceManager\n        {...this.props}\n        buildEditItemHeaders={buildEditItemHeaders}\n        buildFilterQuery={buildFilterQuery}\n        createGetNestedItemHocInput={createGetNestedItemHocInput}\n        filterHeader=\"Find agents\"\n        ItemTitle={ItemTitle}\n        onInteraction={this.handleInteraction}\n        relationshipsToCheckBeforeDelete={relationshipsToCheckBeforeDelete}\n        renderCreateForm={this.renderCreateForm}\n        renderEditForm={this.renderEditForm}\n        renderFilterForm={this.renderFilterForm}\n        resource={resource}\n        sortOrder={sortOrder}\n        tableColumnSpecifications={tableColumnSpecifications}\n        transformOutput={transformOutput}\n        treeEnabled={false}\n      />\n    )\n  }\n}\n\nAgentManager.propTypes = propTypes\nAgentManager.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(AgentManager)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  buildTextKeys,\n  capitalizeFirstLetter,\n  getTranslationByPath,\n} from '../utilities'\n\nexport default function createWithI18n({\n  module: defaultModule = '',\n  scope: defaultScope = '',\n} = {}) {\n  return function withI18n(ComposedComponent) {\n    const contextTypes = {\n      language: PropTypes.string.isRequired,\n      translations: PropTypes.object.isRequired,\n    }\n\n    class WithI18n extends Component {\n      constructor(props) {\n        super(props)\n        this.createModuleTranslate = this.createModuleTranslate.bind(this)\n        this.moduleTranslate = this.moduleTranslate.bind(this)\n        this.translate = this.translate.bind(this)\n      }\n\n      createModuleTranslate(moduleName, { scope = '' } = {}) {\n        return ({ ...rest }) => {\n          return this.moduleTranslate({ module: moduleName, scope, ...rest })\n        }\n      }\n\n      moduleTranslate({\n        module: moduleInput = defaultModule,\n        modules: modulesInput,\n        textKey,\n        scope = defaultScope,\n        ...rest\n      } = {}) {\n        const modules =\n          modulesInput && modulesInput.length ? modulesInput : [moduleInput]\n        const textKeys = buildTextKeys({ modules, scope, textKey })\n\n        return this.translate({ textKeys, ...rest })\n      }\n\n      translate({ capitalize, fallback, params, textKey, textKeys }) {\n        const { language, translations } = this.context\n        const translation = getTranslationByPath(translations, {\n          language,\n          params,\n          textKey,\n          textKeys,\n        })\n\n        const output =\n          capitalize && translation\n            ? capitalizeFirstLetter(translation)\n            : translation\n        if (!output) {\n          /* eslint-disable no-console */\n          console.warn(\n            `Translation not found for path: ${textKey}`,\n            translations\n          )\n          /* eslint-enable no-console */\n        }\n\n        if (\n          fallback &&\n          (output === textKey ||\n            (output &&\n            textKeys &&\n            textKeys[0] && // enough to check the first textKey\n              output.indexOf(textKeys[0]) > -1))\n        ) {\n          return fallback\n        }\n\n        return output || textKey\n      }\n\n      render() {\n        return (\n          <ComposedComponent\n            i18n={{\n              createModuleTranslate: this.createModuleTranslate,\n              moduleTranslate: this.moduleTranslate,\n              translate: this.translate,\n            }}\n            {...this.props}\n          />\n        )\n      }\n    }\n\n    WithI18n.contextTypes = contextTypes\n\n    return WithI18n\n  }\n}\n","import withI18n from './withI18n'\n\nexport { withI18n }\n","import { SIZE_SET_BREAKPOINT } from '../actionTypes'\n\nexport default function setBreakpoint(breakpoint) {\n  return {\n    payload: breakpoint,\n    type: SIZE_SET_BREAKPOINT,\n  }\n}\n","import { SIZE_SET_HEIGHT } from '../actionTypes'\n\nexport default function setHeight(height) {\n  return {\n    payload: height,\n    type: SIZE_SET_HEIGHT,\n  }\n}\n","import { SIZE_SET_WIDTH } from '../actionTypes'\n\nexport default function setWidth(width) {\n  return {\n    payload: width,\n    type: SIZE_SET_WIDTH,\n  }\n}\n","import { throttle } from 'lodash'\nimport { setBreakpoint, setHeight, setWidth } from './actionCreators'\nimport globalSelectors from './globalSelectors'\n\nexport const getClientHeight = () => {\n  return window.innerHeight || document.documentElement.clientHeight\n}\n\nexport const getClientWidth = () => {\n  return window.innerWidth || document.documentElement.clientWidth\n}\n\nexport const updateBreakpoint = ({ dispatch, getState }) => {\n  const state = getState()\n  const height = getClientHeight()\n  const width = getClientWidth()\n  const fittingBreakpoint = globalSelectors.getBreakpointByWidth(state, width)\n  const currentBreakpoint = globalSelectors.getCurrentBreakpoint(state)\n  const heightInState = globalSelectors.getHeight(state)\n  const widthInState = globalSelectors.getWidth(state)\n  if (fittingBreakpoint !== currentBreakpoint) {\n    dispatch(setBreakpoint(fittingBreakpoint))\n  }\n  if (height !== heightInState) {\n    dispatch(setHeight(height))\n  }\n  if (width !== widthInState) {\n    dispatch(setWidth(width))\n  }\n}\n\nexport const start = ({ dispatch, getState }) => {\n  updateBreakpoint({\n    dispatch,\n    getState,\n  })\n\n  const listener = throttle(() => {\n    updateBreakpoint({\n      dispatch,\n      getState,\n    })\n  }, 150)\n\n  window.addEventListener('resize', listener)\n\n  return function stop() {\n    window.removeEventListener('resize', listener)\n  }\n}\n","import { SIZE_SMALL, SIZE_MEDIUM, SIZE_LARGE } from './constants'\n\nconst sizeEnum = [SIZE_SMALL, SIZE_MEDIUM, SIZE_LARGE]\n\nexport const config = {\n  additionalProperties: false,\n  properties: {\n    breakpoints: {\n      items: {\n        additionalProperties: false,\n        properties: {\n          maxWidth: {\n            type: 'number',\n          },\n          size: {\n            enum: sizeEnum,\n            type: 'string',\n          },\n        },\n        required: ['size'],\n        type: 'object',\n      },\n      maxItems: 3,\n      minItems: 3,\n      type: 'array',\n      uniqueItems: true,\n    },\n    currentBreakpoint: {\n      additionalProperties: false,\n      properties: {\n        size: {\n          enum: sizeEnum,\n          type: 'string',\n        },\n      },\n      required: ['size'],\n      type: 'object',\n    },\n  },\n  required: ['breakpoints'],\n}\n","import {\n  includesModule,\n  setModuleConfig,\n} from 'coreModules/bootstrap/utilities'\n\nimport { BOOTSTRAP_REGISTER_MODULES } from 'coreModules/bootstrap/actionTypes'\nimport {\n  SIZE_SET_BREAKPOINT,\n  SIZE_SET_HEIGHT,\n  SIZE_SET_WIDTH,\n} from './actionTypes'\n\nimport { MODULE_NAME } from './constants'\n\nconst initState = {\n  breakpoints: [],\n  currentBreakpoint: null,\n  width: null,\n}\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case BOOTSTRAP_REGISTER_MODULES: {\n      let nextState = state\n      if (includesModule(action, MODULE_NAME)) {\n        nextState = setModuleConfig({\n          action,\n          moduleName: MODULE_NAME,\n          state,\n        })\n      }\n      return nextState\n    }\n\n    case SIZE_SET_BREAKPOINT: {\n      return {\n        ...state,\n        currentBreakpoint: action.payload,\n      }\n    }\n\n    case SIZE_SET_HEIGHT: {\n      return {\n        ...state,\n        height: action.payload,\n      }\n    }\n\n    case SIZE_SET_WIDTH: {\n      return {\n        ...state,\n        width: action.payload,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as constants from './constants'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport * as listener from './listener'\nimport * as schemas from './schemas'\nimport * as selectors from './selectors'\nimport globalSelectors from './globalSelectors'\nimport reducer from './reducer'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  higherOrderComponents,\n  listener,\n  name,\n  reducer,\n  schemas,\n  selectors,\n}\n","import { Flash } from 'coreModules/notifications/components'\nimport { FIXED } from 'coreModules/notifications/constants'\nimport { USER_LOG_IN_SUCCESS } from 'coreModules/user/actionTypes'\n\nconst LOG_IN_SUCCESS = {\n  component: Flash,\n  componentProps: {\n    headerKey: 'modules.user.welcomeBack',\n  },\n  displayType: FIXED,\n  priority: 10,\n  triggerActions: [USER_LOG_IN_SUCCESS],\n  ttl: 3000,\n  type: 'LOG_IN_SUCCESS',\n}\n\nexport { LOG_IN_SUCCESS }\n","export const logout = {\n  code: 'lo',\n  description: 'LOGOUT_USER',\n}\n","import { actionCreators as localStorageAC } from 'redux-module-local-storage'\nimport { push } from 'react-router-redux'\n\nimport { KEYBOARD_SHORTCUTS_TRIGGER } from 'coreModules/keyboardShortcuts/actionTypes'\nimport { includesModule } from 'coreModules/bootstrap/utilities'\nimport { BOOTSTRAP_REGISTER_MODULES } from 'coreModules/bootstrap/actionTypes'\nimport { setLanguage } from 'coreModules/i18n/actionCreators'\n\nimport { logout as logoutShortcut } from './shortcuts'\n\nimport {\n  USER_GET_USER_FAIL,\n  USER_GET_USER_PREFERENCES_SUCCESS,\n  USER_GET_USER_SUCCESS,\n  USER_LOG_IN_SUCCESS,\n  USER_LOG_OUT_SUCCESS,\n} from './actionTypes'\nimport { AUTH_TOKEN_KEY, MODULE_NAME } from './constants'\nimport globalSelectors from './globalSelectors'\nimport { getUserPreferences, getUser, logout } from './actionCreators'\n\nconst { getAuthToken } = globalSelectors\nconst { getUserPreferencesLanguage } = globalSelectors\n\nexport default function userMiddleware() {\n  return ({ dispatch, getState }) => next => action => {\n    const result = next(action)\n    switch (action.type) {\n      case USER_LOG_IN_SUCCESS: {\n        dispatch(localStorageAC.setItem(AUTH_TOKEN_KEY, action.payload))\n        dispatch(getUser())\n        break\n      }\n\n      case USER_LOG_OUT_SUCCESS: {\n        // localStorage token cleared in action creator\n        dispatch(push('/'))\n        break\n      }\n\n      case USER_GET_USER_SUCCESS: {\n        dispatch(getUserPreferences())\n        break\n      }\n\n      case USER_GET_USER_FAIL: {\n        dispatch(logout())\n        break\n      }\n      // might make sense to move this to the app level\n      case USER_GET_USER_PREFERENCES_SUCCESS: {\n        const preferredLanguage = getUserPreferencesLanguage(getState())\n        if (preferredLanguage) {\n          dispatch(setLanguage(preferredLanguage))\n        }\n\n        break\n      }\n      case BOOTSTRAP_REGISTER_MODULES: {\n        if (includesModule(action, MODULE_NAME)) {\n          const authToken = getAuthToken(getState())\n          if (authToken) {\n            dispatch(getUser())\n          }\n        }\n        break\n      }\n\n      // inject this action instead\n      case KEYBOARD_SHORTCUTS_TRIGGER: {\n        if (action.payload.code === logoutShortcut.code) {\n          dispatch(logout())\n        }\n        break\n      }\n      default:\n        break\n    }\n    return result\n  }\n}\n","import {\n  USER_GET_USER_FAIL,\n  USER_GET_USER_PREFERENCES_SUCCESS,\n  USER_GET_USER_REQUEST,\n  USER_GET_USER_SUCCESS,\n  USER_LOG_IN_FAIL,\n  USER_LOG_OUT_SUCCESS,\n  USER_UPDATE_USER_PREFERENCES_SUCCESS,\n} from './actionTypes'\n\nconst initState = {\n  config: null,\n  loading: false,\n  preferences: null,\n  user: null,\n}\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case USER_GET_USER_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case USER_GET_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n      }\n    case USER_GET_USER_FAIL:\n    case USER_LOG_OUT_SUCCESS:\n    case USER_LOG_IN_FAIL: {\n      return {\n        ...state,\n        loading: false,\n        preferences: null,\n        user: null,\n      }\n    }\n    case USER_GET_USER_PREFERENCES_SUCCESS:\n    case USER_UPDATE_USER_PREFERENCES_SUCCESS: {\n      return {\n        ...state,\n        preferences: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as components from './components'\nimport * as constants from './constants'\nimport * as endpoints from './endpoints'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport * as notifications from './notifications'\nimport * as selectors from './selectors'\nimport * as shortcuts from './shortcuts'\nimport globalSelectors from './globalSelectors'\nimport middleware from './middleware'\nimport reducer from './reducer'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  components,\n  constants,\n  endpoints,\n  globalSelectors,\n  higherOrderComponents,\n  middleware,\n  name,\n  notifications,\n  reducer,\n  selectors,\n  shortcuts,\n  translations,\n}\n","import { Flash } from './components'\nimport { COLLISION_REPLACE, FIXED } from './constants'\n\nconst SUCCESS = {\n  collision: COLLISION_REPLACE,\n  component: Flash,\n  displayType: FIXED,\n  level: 'success',\n  priority: 20,\n  ttl: 2000,\n  type: 'SUCCESS',\n}\n\nexport { SUCCESS }\n","import { COLLISION_REPLACE } from './constants'\nimport { NOTIFICATIONS_CREATE_NOTIFICATION } from './actionTypes'\nimport globalSelectors from './globalSelectors'\nimport { createNotification, removeNotification } from './actionCreators'\n\nexport default function notificationMiddleware() {\n  return ({ dispatch, getState }) => next => action => {\n    const result = next(action)\n\n    const terminateActionMap = globalSelectors.getSpecificationTerminateActionMap(\n      getState()\n    )\n\n    if (terminateActionMap[action.type]) {\n      terminateActionMap[action.type].forEach(type => {\n        const activeNotifictions = globalSelectors.getNotificationsByType(\n          getState(),\n          type\n        )\n\n        activeNotifictions.forEach(({ sequentialId }) => {\n          dispatch(removeNotification({ sequentialId }))\n        })\n      })\n    }\n\n    const triggerActionMap = globalSelectors.getSpecificationTriggerActionMap(\n      getState()\n    )\n\n    if (triggerActionMap[action.type]) {\n      triggerActionMap[action.type].forEach(type => {\n        dispatch(createNotification({ type }))\n      })\n    }\n\n    switch (action.type) {\n      case NOTIFICATIONS_CREATE_NOTIFICATION: {\n        const {\n          sequentialId: currentSequentialId,\n          collision,\n          type,\n        } = action.payload\n        if (collision === COLLISION_REPLACE) {\n          const activeNotificationsSameType = globalSelectors.getNotificationsByType(\n            getState(),\n            type\n          )\n          activeNotificationsSameType.forEach(({ sequentialId }) => {\n            if (currentSequentialId !== sequentialId) {\n              dispatch(removeNotification({ sequentialId }))\n            }\n          })\n        }\n\n        break\n      }\n\n      default:\n        break\n    }\n    return result\n  }\n}\n","import {\n  BOOTSTRAP_REGISTER_MODULES,\n  BOOTSTRAP_UNREGISTER_MODULES,\n} from 'coreModules/bootstrap/actionTypes'\nimport {\n  registerModuleProperty,\n  unregisterModuleProperty,\n} from 'coreModules/bootstrap/utilities'\n\nimport {\n  NOTIFICATIONS_CREATE_NOTIFICATION,\n  NOTIFICATIONS_REMOVE_NOTIFICATION,\n} from './actionTypes'\nimport { NOTIFICATIONS, NOTIFICATION_SPECIFICATIONS } from './constants'\n\nconst initState = {\n  activeNotifications: {},\n  [NOTIFICATION_SPECIFICATIONS]: {},\n}\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case BOOTSTRAP_REGISTER_MODULES: {\n      const nextState = registerModuleProperty({\n        action,\n        customRegisterKey: NOTIFICATION_SPECIFICATIONS,\n        ignoreModuleNames: true,\n        property: NOTIFICATIONS,\n        state,\n      })\n      return nextState\n    }\n\n    case BOOTSTRAP_UNREGISTER_MODULES: {\n      const nextState = unregisterModuleProperty({\n        action,\n        customRegisterKey: NOTIFICATION_SPECIFICATIONS,\n        ignoreModuleNames: true,\n        property: NOTIFICATIONS,\n        state,\n      })\n      return nextState\n    }\n\n    case NOTIFICATIONS_CREATE_NOTIFICATION: {\n      const { sequentialId } = action.payload\n\n      return {\n        ...state,\n        activeNotifications: {\n          ...state.activeNotifications,\n          [sequentialId]: action.payload,\n        },\n      }\n    }\n\n    case NOTIFICATIONS_REMOVE_NOTIFICATION: {\n      const { sequentialId } = action.payload\n\n      const nextState = {\n        ...state,\n        activeNotifications: {\n          ...state.activeNotifications,\n        },\n      }\n      delete nextState.activeNotifications[sequentialId]\n\n      return nextState\n    }\n\n    default:\n      return state\n  }\n}\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as components from './components'\nimport * as constants from './constants'\nimport * as notifications from './notifications'\nimport * as selectors from './selectors'\nimport globalSelectors from './globalSelectors'\nimport middleware from './middleware'\nimport reducer from './reducer'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  components,\n  constants,\n  globalSelectors,\n  middleware,\n  name,\n  notifications,\n  reducer,\n  selectors,\n}\n","export const MARKDOWN = 'markdown'\nexport const MODULE_NAME = 'i18n'\nexport const TRANSLATIONS = 'translations'\n","const availableLanguages = ['en', 'sv']\n\nexport const config = {\n  additionalProperties: false,\n  properties: {\n    availableLanguages: {\n      items: [\n        {\n          enum: availableLanguages,\n          type: 'string',\n        },\n      ],\n      minItems: 1,\n      type: 'array',\n      uniqueItems: true,\n    },\n    defaultLanguage: {\n      enum: availableLanguages,\n      type: 'string',\n    },\n    language: {\n      enum: availableLanguages,\n      type: 'string',\n    },\n    translations: {\n      type: 'object',\n    },\n  },\n}\n","import {\n  BOOTSTRAP_UNREGISTER_MODULES,\n  BOOTSTRAP_REGISTER_MODULES,\n} from 'coreModules/bootstrap/actionTypes'\nimport {\n  includesModule,\n  registerModuleProperty,\n  setModuleConfig,\n  unregisterModuleProperty,\n} from 'coreModules/bootstrap/utilities'\n\nimport { I18N_SET_LANGUAGE } from './actionTypes'\n\nimport { MARKDOWN, MODULE_NAME, TRANSLATIONS } from './constants'\n\nexport const initialState = {\n  availableLanguages: ['en', 'sv'],\n  defaultLanguage: 'en',\n  language: 'en',\n  markdown: {},\n  translations: {},\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case BOOTSTRAP_REGISTER_MODULES: {\n      let nextState = state\n      if (includesModule(action, MODULE_NAME)) {\n        nextState = setModuleConfig({\n          action,\n          moduleName: MODULE_NAME,\n          state,\n        })\n      }\n\n      nextState = registerModuleProperty({\n        action,\n        property: TRANSLATIONS,\n        scopeUnderModules: true,\n        state: nextState,\n      })\n      nextState = registerModuleProperty({\n        action,\n        property: MARKDOWN,\n        scopeUnderModules: true,\n        state: nextState,\n      })\n\n      return nextState\n    }\n\n    case BOOTSTRAP_UNREGISTER_MODULES: {\n      const res = unregisterModuleProperty({\n        action,\n        property: TRANSLATIONS,\n        scopeUnderModules: true,\n        state,\n      })\n      return unregisterModuleProperty({\n        action,\n        property: MARKDOWN,\n        scopeUnderModules: true,\n        state: res,\n      })\n    }\n\n    case I18N_SET_LANGUAGE: {\n      return {\n        ...state,\n        language: action.payload,\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as components from './components'\nimport * as constants from './constants'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport * as schemas from './schemas'\nimport * as selectors from './selectors'\nimport globalSelectors from './globalSelectors'\nimport reducer from './reducer'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  components,\n  globalSelectors,\n  higherOrderComponents,\n  name,\n  reducer,\n  schemas,\n  selectors,\n}\n","export const MODULE_NAME = 'error'\n","import { Flash } from 'coreModules/notifications/components'\nimport { COLLISION_REPLACE, FIXED } from 'coreModules/notifications/constants'\n\nconst ERROR = {\n  collision: COLLISION_REPLACE,\n  component: Flash,\n  displayType: FIXED,\n  level: 'error',\n  priority: 20,\n  ttl: 8000,\n  type: 'ERROR',\n}\n\nexport { ERROR }\n","import config from 'config'\nimport createNotification from 'coreModules/notifications/actionCreators/createNotification'\nimport logout from 'coreModules/user/actionCreators/logout'\nimport globalUserSelectors from 'coreModules/user/globalSelectors'\n\nexport default function errorMiddleware({ debug = true } = {}) {\n  return ({ dispatch, getState }) => next => action => {\n    const result = next(action)\n    if (!debug) {\n      return result\n    }\n    if (action.error && action.payload) {\n      const error =\n        (action.payload && action.payload.requestError) || action.payload || {} // _requestError is request error after handled by redux form\n\n      if (error && error.code) {\n        console.log(`Error in action ${action.type}:`, action.payload) // eslint-disable-line no-console\n\n        dispatch(\n          createNotification({\n            componentProps: {\n              description: `${error.description}: ${error.detail}`,\n              header: error.code,\n            },\n            type: 'ERROR',\n          })\n        )\n      } else if (config.isDevelopment) {\n        dispatch(\n          createNotification({\n            componentProps: {\n              description: action.payload && action.payload.message,\n              header: 'Unknown error',\n            },\n            type: 'ERROR',\n          })\n        )\n        console.log(action.payload) // eslint-disable-line no-console\n      }\n\n      // logout user from frontend if API responds with Unauthorized or\n      // Forbidden. this will redirect to /login if user was on page that\n      // requires being logged in\n      // TODO: Implement more fine-grained behavior for 403\n      if (\n        action.payload &&\n        (action.payload.status === 401 || action.payload.status === 403)\n      ) {\n        const isLoggedIn = globalUserSelectors.getUserLoggedIn(getState())\n        if (isLoggedIn) {\n          dispatch(logout())\n        }\n      }\n    }\n    return result\n  }\n}\n","import * as components from './components'\nimport * as constants from './constants'\nimport * as notifications from './notifications'\nimport middleware from './middleware'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport { components, constants, middleware, name, notifications, translations }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport {\n  ConfirmationPopup,\n  Field,\n  Input,\n  RangeDate,\n} from 'coreModules/form/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\n\nconst log = createLog('modules:agent:AgentRolesAccordion/AgentRoleContent')\n\nconst propTypes = {\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  handleSetInactive: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\n\nclass AgentRoleContent extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  handleRemove() {\n    const {\n      getTranslationPath,\n      handleSetInactive,\n      index,\n      removeArrayFieldByIndex,\n    } = this.props\n\n    handleSetInactive(index)\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      getPath,\n      i18n: { moduleTranslate },\n    } = this.props\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"bottom\">\n        <Grid.Row className=\"relaxed\">\n          <Grid.Column width={10}>\n            <Field\n              autoComplete=\"off\"\n              component={Input}\n              fluid\n              module=\"agent\"\n              name={getPath('name')}\n              type=\"text\"\n            />\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Field\n              autoComplete=\"off\"\n              component={Input}\n              fluid\n              module=\"agent\"\n              name={getPath('affiliation.name')}\n              type=\"text\"\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              component={RangeDate}\n              displayDateTypeRadios={false}\n              displayEndDateLabel\n              displayLabel={false}\n              displayStartDateLabel\n              displaySubLabels\n              endDateLabel={moduleTranslate({\n                capitalize: true,\n                textKey: 'endDate',\n              })}\n              initialDateType=\"openRange\"\n              module=\"agent\"\n              name={getPath('dateRange')}\n              stack\n              startDateLabel={moduleTranslate({\n                capitalize: true,\n                textKey: 'startDate',\n              })}\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"right\" width={16}>\n            <ConfirmationPopup\n              cancelButtonText={moduleTranslate({\n                capitalize: true,\n                textKey: 'cancel',\n              })}\n              confirmButtonText={moduleTranslate({\n                capitalize: true,\n                textKey: 'delete',\n              })}\n              header={moduleTranslate({\n                capitalize: true,\n                textKey: 'other.removeThisAgentRole',\n              })}\n              hideOnScroll\n              onConfirm={this.handleRemove}\n              text={moduleTranslate({\n                capitalize: true,\n                textKey: 'remove',\n              })}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nAgentRoleContent.propTypes = propTypes\n\nexport default compose(\n  withI18n({ module: 'agent' }),\n  pathBuilder()\n)(AgentRoleContent)\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Grid, Icon } from 'semantic-ui-react'\n\nimport { buildYYYYMMDD } from 'common/es5/date'\nimport createLog from 'utilities/log'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\n\nconst log = createLog('modules:agent:AgentRolesAccordion/AgentRoleTitle')\n\nconst mapStateToProps = (state, { formName, getPath }) => {\n  return {\n    invalidDateRange: formSupportSelectors.getAnyFieldIsInvalid(state, {\n      fieldNames: [getPath('dateRange')],\n      formName,\n    }),\n  }\n}\n\nconst propTypes = {\n  active: PropTypes.bool.isRequired,\n  affiliation: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  dateRange: PropTypes.shape({\n    endDate: PropTypes.object,\n    startDate: PropTypes.object,\n  }),\n  invalidDateRange: PropTypes.bool,\n  name: PropTypes.string,\n}\nconst defaultProps = {\n  affiliation: undefined,\n  dateRange: undefined,\n  invalidDateRange: false,\n  name: undefined,\n}\n\nfunction AgentRoleTitle({\n  active,\n  affiliation,\n  invalidDateRange,\n  name,\n  dateRange,\n}) {\n  log.render()\n\n  const date = dateRange && [\n    dateRange.startDate && buildYYYYMMDD(dateRange.startDate),\n    dateRange.endDate && buildYYYYMMDD(dateRange.endDate),\n  ]\n\n  const headline = [date, name, affiliation && affiliation.name]\n    .filter(str => !!str)\n    .join('; ')\n\n  return (\n    <Grid className={invalidDateRange && !active ? 'error' : undefined}>\n      <Grid.Column>\n        <Icon name=\"dropdown\" />\n        {!active && headline}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nAgentRoleTitle.propTypes = propTypes\nAgentRoleTitle.defaultProps = defaultProps\n\nexport default compose(\n  pathBuilder(),\n  connect(mapStateToProps)\n)(AgentRoleTitle)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLid from 'common/es5/createLid'\nimport createLog from 'utilities/log'\nimport { Accordion } from 'coreModules/commonUi/components'\nimport { ALL_COLLAPSED } from 'coreModules/commonUi/constants'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport formParts from 'coreModules/form/components/parts'\nimport AgentRoleContent from './AgentRoleContent'\nimport AgentRoleTitle from './AgentRoleTitle'\n\nconst { AddButton } = formParts\n\nconst log = createLog('modules:agent:AgentRolesAccordion')\n\nconst mapStateToProps = (state, { formValueSelector, name }) => {\n  return {\n    agentRoles: formValueSelector(state, name),\n  }\n}\n\nconst propTypes = {\n  agentRoles: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.object,\n      determinedByAgentText: PropTypes.string,\n      remarks: PropTypes.string,\n      taxonNameStandardized: PropTypes.string,\n    })\n  ),\n  changeFieldValue: PropTypes.func.isRequired,\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func.isRequired,\n  getPath: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  agentRoles: [],\n}\n\nconst AgentRolesAccordion = ({\n  agentRoles,\n  changeFieldValue,\n  formName,\n  name,\n  removeArrayFieldByIndex,\n}) => {\n  log.render()\n  return (\n    <React.Fragment>\n      {agentRoles && agentRoles.length > 0 && (\n        <Grid.Column width={16}>\n          <Accordion\n            expandFirstItemOnMountIfEmptyOrOnlyHasKey\n            initialActiveMode={ALL_COLLAPSED}\n            items={agentRoles}\n            renderContent={({ handleSetInactive, index }) => {\n              return (\n                <AgentRoleContent\n                  handleSetInactive={handleSetInactive}\n                  index={index}\n                  removeArrayFieldByIndex={removeArrayFieldByIndex}\n                />\n              )\n            }}\n            renderTitle={({ index, ...rest }) => (\n              <AgentRoleTitle\n                formName={formName}\n                index={index}\n                {...agentRoles[index] || {}}\n                {...rest}\n              />\n            )}\n          />\n        </Grid.Column>\n      )}\n      <Grid.Column width={16}>\n        <AddButton\n          id=\"add-role\"\n          module=\"agent\"\n          onClick={event => {\n            event.preventDefault()\n            const index = (agentRoles && agentRoles.length) || 0\n\n            // Setting a unique key in value to prevent the accordion item from\n            // disappearing if the user focuses and then blurs an input without\n            // entering any value\n            changeFieldValue(`${name}.${index}`, {\n              key: createLid(),\n            })\n          }}\n          textKey=\"other.addAgentRole\"\n        />\n      </Grid.Column>\n    </React.Fragment>\n  )\n}\n\nAgentRolesAccordion.propTypes = propTypes\nAgentRolesAccordion.defaultProps = defaultProps\n\nexport default compose(\n  connect(mapStateToProps),\n  pathBuilder()\n)(AgentRolesAccordion)\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport AgentDropdownPickerSearch from '../AgentDropdownPickerSearch'\nimport AgentRolesAccordion from '../AgentRolesAccordion'\nimport TogglableAgentDropdownPickerSearch from '../TogglableAgentDropdownPickerSearch'\n\nexport default wrapReduxFormFieldParts({\n  AgentDropdownPickerSearch,\n  AgentRolesAccordion,\n  TogglableAgentDropdownPickerSearch,\n})\n","import { combineReducers } from 'redux'\nimport crudModule from './crudModule'\nimport { reducer as keyObjectModuleReducer } from './keyObjectModule'\nimport { RESOURCES_NAMESPACE, KEY_OBJECT_NAMSPACE } from './constants'\n\nexport default combineReducers({\n  [KEY_OBJECT_NAMSPACE]: keyObjectModuleReducer,\n  [RESOURCES_NAMESPACE]: crudModule.reducer,\n})\n","import crudModule from './crudModule'\n\nexport default crudModule.selectors\n","import * as constants from './constants'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport actionCreators from './actionCreators'\nimport actionTypes from './actionTypes'\nimport globalSelectors from './globalSelectors'\nimport reducer from './reducer'\nimport selectors from './selectors'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  higherOrderComponents,\n  name,\n  reducer,\n  selectors,\n}\n","export const MODULE_NAME = 'keyboardShortcuts'\n","import immutable from 'object-path-immutable'\n\nimport {\n  KEYBOARD_SHORTCUTS_REGISTER,\n  KEYBOARD_SHORTCUTS_SET_LAYER,\n  KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN,\n  KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE,\n  KEYBOARD_SHORTCUTS_UNREGISTER,\n} from './actionTypes'\n\nexport const initialState = {\n  layer: '',\n  shortcuts: {},\n  showInfo: false,\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case KEYBOARD_SHORTCUTS_SET_LAYER: {\n      return {\n        ...state,\n        layer: action.payload,\n      }\n    }\n    case KEYBOARD_SHORTCUTS_REGISTER: {\n      return immutable.set(\n        state,\n        `shortcuts.${action.payload.command}`,\n        action.payload\n      )\n    }\n\n    case KEYBOARD_SHORTCUTS_UNREGISTER: {\n      return immutable.del(state, `shortcuts.${action.payload.command}`)\n    }\n\n    case KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE: {\n      return {\n        ...state,\n        showInfo: true,\n      }\n    }\n\n    case KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN: {\n      return {\n        ...state,\n        showInfo: false,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as constants from './constants'\nimport * as selectors from './selectors'\nimport globalSelectors from './globalSelectors'\nimport reducer from './reducer'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  name,\n  reducer,\n  selectors,\n  translations,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { actionCreators } from '../keyObjectModule'\nimport { APPLICATION_LAYER_VIEW, APPLICATION_LAYER_MODAL } from '../constants'\n\nconst contextTypes = {\n  applicationLayer: PropTypes.string,\n}\n\nconst childContextTypes = {\n  applicationLayer: PropTypes.string.isRequired,\n}\n\nconst propTypes = {\n  layer: PropTypes.oneOf([APPLICATION_LAYER_VIEW, APPLICATION_LAYER_MODAL]),\n  setApplicationLayer: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  setApplicationLayer: actionCreators.set.applicationLayer,\n}\n\nexport default function createApplicationLayer({ layer }) {\n  if (!layer) {\n    throw new Error('Layer is required')\n  }\n  const defaultProps = {\n    layer,\n  }\n  return function applicationLayer(ComposedComponent) {\n    class ApplicationLayer extends Component {\n      getChildContext() {\n        return {\n          applicationLayer: this.props.layer,\n        }\n      }\n      componentWillMount() {\n        this.props.setApplicationLayer(this.props.layer)\n      }\n\n      componentWillUnmount() {\n        const parentLayer = this.context.applicationLayer\n        this.props.setApplicationLayer(parentLayer || '')\n      }\n\n      render() {\n        const { ...rest } = this.props\n        return <ComposedComponent {...rest} />\n      }\n    }\n\n    ApplicationLayer.contextTypes = contextTypes\n    ApplicationLayer.childContextTypes = childContextTypes\n    ApplicationLayer.propTypes = propTypes\n    ApplicationLayer.defaultProps = defaultProps\n\n    return compose(\n      connect(\n        undefined,\n        mapDispatchToProps\n      )\n    )(ApplicationLayer)\n  }\n}\n","import createApplicationLayer from './createApplicationLayer'\nimport withLayout from './withLayout'\n\nexport { createApplicationLayer, withLayout }\n","import crudModule from './crudModule'\n\nexport default crudModule.globalSelectors\n","import * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as components from './components'\nimport { MODULE_NAME as name } from './constants'\n\nexport { actionCreators, actionTypes, components, name }\n","export const MODULE_NAME = 'bootstrap'\n","import globalUserSelectors from 'coreModules/user/globalSelectors'\nimport createSystemFrontendValidator from 'common/es5/error/validators/createSystemFrontendValidator'\nimport { createJsonApiClient } from 'common/es5/jsonApiClient'\nimport createEndpoint from 'utilities/endpointFactory/client'\n\nexport const buildAuthHeaders = state => {\n  const authToken = globalUserSelectors.getAuthToken(state)\n  if (!authToken) {\n    return {}\n  }\n  return { Authorization: `bearer ${authToken}` }\n}\n\nexport default function createApiMiddleware(apiClientOptions) {\n  const systemValidate = (input, schema) => {\n    const validator = createSystemFrontendValidator({\n      schema,\n      type: 'config',\n    })\n    return validator(input)\n  }\n  return ({ dispatch, getState }) => {\n    const apiConfigInput = {\n      ...apiClientOptions,\n      mapHeaders: headers => {\n        return {\n          ...headers,\n          ...buildAuthHeaders(getState()),\n        }\n      },\n      systemValidate,\n    }\n\n    const apiClient = createJsonApiClient({\n      apiConfigInput,\n      createEndpoint,\n    })\n    return next => action => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState, {\n          apiClient,\n        })\n      }\n      return next(action)\n    }\n  }\n}\n","import middleware from './middleware'\nimport { MODULE_NAME as name } from './constants'\n\nexport { middleware, name }\n","export const MODULE_NAME = 'api'\n","import { LOCATION_CHANGE } from 'react-router-redux'\nimport {\n  actionCreators,\n  globalSelectors as keyObjectGlobalSelectors,\n} from './keyObjectModule'\n\nexport default function layoutMiddleware() {\n  return ({ dispatch, getState }) => next => action => {\n    const result = next(action)\n    switch (action.type) {\n      case LOCATION_CHANGE: {\n        if (keyObjectGlobalSelectors.get['leftSidebar.isOpen'](getState())) {\n          dispatch(actionCreators.set['leftSidebar.isOpen'](false))\n        }\n\n        break\n      }\n\n      default:\n        break\n    }\n    return result\n  }\n}\n","import * as components from './components'\nimport middleware from './middleware'\nimport { actionTypes, constants, reducer } from './keyObjectModule'\nimport { MODULE_NAME as name } from './constants'\n\nexport { actionTypes, components, constants, middleware, name, reducer }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { setLayer } from '../actionCreators'\n\nconst contextTypes = {\n  layer: PropTypes.string,\n}\n\nconst childContextTypes = {\n  layer: PropTypes.string.isRequired,\n}\n\nconst propTypes = {\n  layer: PropTypes.string,\n  setLayer: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = { setLayer }\n\nexport default function createShortcutLayer({ layer }) {\n  if (!layer) {\n    throw new Error('Layer is required')\n  }\n  const defaultProps = {\n    layer,\n  }\n  return function shortcutLayer(ComposedComponent) {\n    class ShortcutLayer extends Component {\n      getChildContext() {\n        return {\n          layer: this.props.layer,\n        }\n      }\n      componentWillMount() {\n        this.props.setLayer(this.props.layer)\n      }\n\n      componentWillUnmount() {\n        const parentLayer = this.context.layer\n        this.props.setLayer(parentLayer || '')\n      }\n\n      render() {\n        const { ...rest } = this.props\n        return <ComposedComponent {...rest} />\n      }\n    }\n\n    ShortcutLayer.contextTypes = contextTypes\n    ShortcutLayer.childContextTypes = childContextTypes\n    ShortcutLayer.propTypes = propTypes\n    ShortcutLayer.defaultProps = defaultProps\n\n    return compose(\n      connect(\n        undefined,\n        mapDispatchToProps\n      )\n    )(ShortcutLayer)\n  }\n}\n","import createShortcutLayer from './createShortcutLayer'\n\nexport { createShortcutLayer }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport { DropdownSearch } from 'coreModules/form/components'\nimport { CONTINENT, COUNTRY, DISTRICT, PLANET, PROVINCE } from '../../constants'\n\nconst groups = [CONTINENT, COUNTRY, DISTRICT, PROVINCE, PLANET]\n\nconst dropdownOptions = groups.map(group => {\n  return {\n    key: group,\n    text: capitalizeFirstLetter(group),\n    value: group,\n  }\n})\n\nconst propTypes = {\n  disableLevels: PropTypes.array,\n  input: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n}\n\nconst defaultProps = {\n  disableLevels: [],\n}\n\nclass GeographicLevelDropdown extends Component {\n  render() {\n    const { disableLevels, input, ...rest } = this.props\n    const { value } = input\n    let filteredDropdownOptions = dropdownOptions\n    if (disableLevels.length) {\n      filteredDropdownOptions = dropdownOptions.filter(({ key }) => {\n        return !disableLevels.includes(key)\n      })\n    }\n\n    const valueIsDisabled = disableLevels.includes(value)\n\n    return (\n      <DropdownSearch\n        {...rest}\n        disableClearValue={valueIsDisabled}\n        disabled={valueIsDisabled}\n        input={input}\n        module=\"locality\"\n        options={filteredDropdownOptions}\n        selectedOption={\n          valueIsDisabled\n            ? {\n                key: value,\n                text: capitalizeFirstLetter(value),\n                value,\n              }\n            : undefined\n        }\n        type=\"dropdown-search-local\"\n      />\n    )\n  }\n}\n\nGeographicLevelDropdown.propTypes = propTypes\nGeographicLevelDropdown.defaultProps = defaultProps\n\nexport default GeographicLevelDropdown\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport GeographicLevelDropdown from '../GeographicLevelDropdown'\nimport LocalityDropdownPickerSearch from '../LocalityDropdownPickerSearch'\nimport LocalityDropdownSearch from '../LocalityDropdownSearch'\n\nexport default wrapReduxFormFieldParts({\n  GeographicLevelDropdown,\n  LocalityDropdownPickerSearch,\n  LocalityDropdownSearch,\n})\n","export const MODULE_NAME = 'crud'\nexport const RESOURCES_NAMESPACE = 'resources'\nexport const KEY_OBJECT_NAMSPACE = 'keyObject'\n\nexport const OPERATION_TYPE_CREATE = 'create'\nexport const OPERATION_TYPE_DEL = 'del'\nexport const OPERATION_TYPE_GET_MANY = 'getMany'\nexport const OPERATION_TYPE_GET_ONE = 'getOne'\nexport const OPERATION_TYPE_QUERY = 'query'\nexport const OPERATION_TYPE_UPDATE = 'update'\n\nexport const ALL_OPERATION_TYPES = [\n  OPERATION_TYPE_CREATE,\n  OPERATION_TYPE_DEL,\n  OPERATION_TYPE_GET_MANY,\n  OPERATION_TYPE_GET_ONE,\n  OPERATION_TYPE_QUERY,\n  OPERATION_TYPE_UPDATE,\n]\n\nexport const ACTION_KEY_SET_INCLUDED = 'setIncluded'\n\nexport const API_ACTION_TYPE_FAIL = 'fail'\nexport const API_ACTION_TYPE_REQUEST = 'request'\nexport const API_ACTION_TYPE_SUCCESS = 'success'\n\nexport const SELECTOR_TYPE_GET_ALL_AS_OPTIONS = 'getAllAsOptions'\n\nexport const ALL_CUSTOM_SELECTOR_TYPES = [SELECTOR_TYPE_GET_ALL_AS_OPTIONS]\n\nexport const apiActionTypes = {\n  API_ACTION_TYPE_FAIL,\n  API_ACTION_TYPE_REQUEST,\n  API_ACTION_TYPE_SUCCESS,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Accordion } from 'semantic-ui-react'\nimport { isEmpty } from 'lodash'\n\nimport createLog from 'utilities/log'\nimport {\n  ALL_COLLAPSED,\n  ALL_EXPANDED,\n  FIRST_EXPANDED,\n  MULTI,\n  SINGLE,\n} from '../../constants'\n\nconst log = createLog('modules:commonUi:Accordion')\n\nconst propTypes = {\n  className: PropTypes.string,\n  delayItemRenderUntilActive: PropTypes.bool,\n  expandFirstItemOnMountIfEmptyOrOnlyHasKey: PropTypes.bool,\n  expandItemOnAdd: PropTypes.bool,\n  fluid: PropTypes.bool,\n  getShouldExpandFirstItemOnMount: PropTypes.func,\n  getShouldRenderItem: PropTypes.func,\n  initialActiveMode: PropTypes.oneOf([\n    ALL_COLLAPSED,\n    ALL_EXPANDED,\n    FIRST_EXPANDED,\n  ]),\n  items: PropTypes.arrayOf(PropTypes.object.isRequired),\n  renderActiveOnly: PropTypes.bool,\n  renderContent: PropTypes.func,\n  renderTitle: PropTypes.func.isRequired,\n  selectMode: PropTypes.oneOf([MULTI, SINGLE]),\n  styled: PropTypes.bool,\n}\nconst defaultProps = {\n  className: undefined,\n  delayItemRenderUntilActive: false,\n  expandFirstItemOnMountIfEmptyOrOnlyHasKey: false,\n  expandItemOnAdd: true,\n  fluid: true,\n  getShouldExpandFirstItemOnMount: undefined,\n  getShouldRenderItem: undefined,\n  initialActiveMode: ALL_COLLAPSED,\n  items: [],\n  renderActiveOnly: false,\n  renderContent: undefined,\n  selectMode: SINGLE,\n  styled: true,\n}\n\nclass AccordionWrapper extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSetActive = this.handleSetActive.bind(this)\n    this.handleSetInactive = this.handleSetInactive.bind(this)\n    this.handleToggleActive = this.handleToggleActive.bind(this)\n    this.isActive = this.isActive.bind(this)\n    this.shouldRenderContent = this.shouldRenderContent.bind(this)\n\n    const { initialActiveMode, items } = props\n\n    const initialState = {\n      hasBeenActive: {},\n    }\n\n    // set initial active indices and add them to the hasBeenActive map\n    if (initialActiveMode === ALL_EXPANDED) {\n      items.forEach((_, index) => {\n        initialState[index] = true\n        initialState.hasBeenActive[index] = true\n      })\n    } else if (initialActiveMode === FIRST_EXPANDED) {\n      initialState[0] = true\n      initialState.hasBeenActive[0] = true\n    }\n\n    this.state = initialState\n  }\n\n  componentDidMount() {\n    const {\n      expandFirstItemOnMountIfEmptyOrOnlyHasKey,\n      getShouldExpandFirstItemOnMount,\n      getShouldRenderItem,\n      items,\n    } = this.props\n\n    if (\n      items.length === 1 &&\n      expandFirstItemOnMountIfEmptyOrOnlyHasKey &&\n      (isEmpty(items[0]) ||\n        (Object.keys(items[0]).length === 1 && items[0].key !== undefined))\n    ) {\n      this.handleSetActive(0)\n    }\n\n    // if we render conditionally, first filter out those to be rendered\n    if (getShouldRenderItem) {\n      let indexToRender\n      const itemsToRender = items.filter((item, index) => {\n        const shouldRenderItem = getShouldRenderItem(item)\n\n        if (shouldRenderItem) {\n          indexToRender = index\n        }\n\n        return shouldRenderItem\n      })\n\n      // if there is only one item and it fulfils the condition to be expanded\n      // this is to enable only expanding new items, i.e. those still missing\n      // some values\n      if (\n        itemsToRender.length === 1 &&\n        getShouldExpandFirstItemOnMount &&\n        getShouldExpandFirstItemOnMount(itemsToRender[0])\n      ) {\n        this.handleSetActive(indexToRender)\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.expandItemOnAdd &&\n      nextProps.items.length > this.props.items.length\n    ) {\n      // if an item has been added, set that as active\n      this.handleSetActive(nextProps.items.length - 1)\n    }\n  }\n\n  handleSetInactive(index) {\n    if (!this.state[index]) {\n      // escape if index is already inactive\n      return\n    }\n\n    this.setState({ [index]: false })\n  }\n\n  handleSetActive(index) {\n    if (this.state[index]) {\n      // escape if index is already active\n      return\n    }\n\n    this.setState(prevState => {\n      let newState = { ...prevState }\n\n      // if delayItemRenderUntilActive is true, we add this index to the map of\n      // hasBeenActive indices\n      const { delayItemRenderUntilActive } = this.props\n\n      if (delayItemRenderUntilActive) {\n        newState.hasBeenActive = {\n          ...this.state.hasBeenActive,\n          [index]: true,\n        }\n      }\n\n      // if we're in single select mode then the rest should be set inactive\n      if (this.props.selectMode === SINGLE) {\n        newState = Object.keys(prevState).reduce((obj, key) => {\n          // escape if key is not a number (i.e. not an index)\n          if (Number.isNaN(Number(key))) {\n            return obj\n          }\n\n          return {\n            ...obj,\n            [key]: false,\n          }\n        }, newState)\n      }\n\n      // lastly, set this index to true\n      newState[index] = true\n      return newState\n    })\n  }\n\n  handleToggleActive(index) {\n    if (this.state[index]) {\n      this.handleSetInactive(index)\n    } else {\n      this.handleSetActive(index)\n    }\n  }\n\n  isActive(index) {\n    return !!this.state[index]\n  }\n\n  shouldRenderContent(index) {\n    const { delayItemRenderUntilActive, renderActiveOnly } = this.props\n\n    if (delayItemRenderUntilActive) {\n      // render & keep rendered if it has been active or if it is active now\n      return this.state.hasBeenActive[index] || this.isActive(index)\n    }\n\n    if (renderActiveOnly) {\n      return this.isActive(index)\n    }\n\n    // always render content when should not delayItemRenderUntilActive\n    return true\n  }\n\n  render() {\n    log.render()\n    const {\n      className,\n      fluid,\n      getShouldRenderItem,\n      items,\n      renderContent,\n      renderTitle,\n      styled,\n    } = this.props\n\n    return (\n      <Accordion className={className} fluid={fluid} styled={styled}>\n        {items.map((item, index) => {\n          if (getShouldRenderItem && !getShouldRenderItem(item)) {\n            return null\n          }\n\n          const isActive = this.isActive(index)\n\n          return (\n            <React.Fragment key={item.id || item.key || index}>\n              <Accordion.Title\n                active={isActive}\n                index={index}\n                onClick={event => {\n                  event.preventDefault()\n                  this.handleToggleActive(index)\n                }}\n              >\n                {renderTitle({\n                  active: isActive,\n                  handleSetActive: this.handleSetActive,\n                  handleSetInactive: this.handleSetInactive,\n                  index,\n                  ...item,\n                })}\n              </Accordion.Title>\n              {this.shouldRenderContent(index) && renderContent && (\n                <Accordion.Content active={isActive}>\n                  {renderContent({\n                    active: isActive,\n                    handleSetActive: this.handleSetActive,\n                    handleSetInactive: this.handleSetInactive,\n                    index,\n                    ...item,\n                  })}\n                </Accordion.Content>\n              )}\n            </React.Fragment>\n          )\n        })}\n      </Accordion>\n    )\n  }\n}\n\nAccordionWrapper.propTypes = propTypes\nAccordionWrapper.defaultProps = defaultProps\n\nexport default AccordionWrapper\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header, Icon } from 'semantic-ui-react'\n\nimport { Translate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  onClose: PropTypes.func,\n  text: PropTypes.string,\n  textKey: PropTypes.string,\n}\n\nconst defaultProps = {\n  onClose: undefined,\n  text: undefined,\n  textKey: undefined,\n}\n\nconst ColumnRowHeader = props => {\n  const { textKey, onClose, text } = props\n\n  return (\n    <Grid padded>\n      <Grid.Column>\n        <Header>\n          {(text || textKey) && (\n            <Translate capitalize fallback={text} textKey={textKey} />\n          )}\n          {onClose && (\n            <Icon\n              name=\"close\"\n              onClick={onClose}\n              style={{ cursor: 'pointer', float: 'right' }}\n            />\n          )}\n        </Header>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nColumnRowHeader.propTypes = propTypes\nColumnRowHeader.defaultProps = defaultProps\n\nexport default ColumnRowHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst getPaddedDateString = ({ day, month, year }) => {\n  const paddedMonth = month && `${month}`.length === 1 ? `0${month}` : month\n  const paddedDay = day && `${day}`.length === 1 ? `0${day}` : day\n\n  if (year && month && day) {\n    return `${year}-${paddedMonth}-${paddedDay}`\n  }\n\n  if (year && month) {\n    return `${year}-${paddedMonth}`\n  }\n\n  return year\n}\n\nconst propTypes = {\n  dateText: PropTypes.string,\n  day: PropTypes.number,\n  endDate: PropTypes.string,\n  i18n: PropTypes.shape({ moduleTranslate: PropTypes.func.isRequired })\n    .isRequired,\n  interpretedTimestamp: PropTypes.string,\n  month: PropTypes.number,\n  startDate: PropTypes.string,\n  timestamp: PropTypes.string,\n  year: PropTypes.number,\n}\nconst defaultProps = {\n  dateText: undefined,\n  day: undefined,\n  endDate: undefined,\n  interpretedTimestamp: undefined,\n  month: undefined,\n  startDate: undefined,\n  timestamp: undefined,\n  year: undefined,\n}\n\nconst DateString = ({\n  dateText,\n  day,\n  endDate,\n  i18n: { moduleTranslate },\n  interpretedTimestamp,\n  month,\n  startDate,\n  timestamp,\n  year,\n}) => {\n  let dateString\n  if (startDate && endDate) {\n    dateString = `${moduleTranslate({\n      capitalize: true,\n      textKey: 'between',\n    })} ${startDate} ${moduleTranslate({ textKey: 'and' })} ${endDate}`\n  } else if (startDate) {\n    dateString = `${moduleTranslate({\n      capitalize: true,\n      textKey: 'after',\n    })} ${startDate}`\n  } else if (endDate) {\n    dateString = `${moduleTranslate({\n      capitalize: true,\n      textKey: 'before',\n    })} ${endDate}`\n  } else if (year || month || day) {\n    dateString = getPaddedDateString({ day, month, year })\n  } else if (interpretedTimestamp || timestamp) {\n    dateString = interpretedTimestamp || timestamp\n  } else {\n    dateString = dateText\n  }\n\n  return <span>{dateString}</span>\n}\n\nDateString.propTypes = propTypes\nDateString.defaultProps = defaultProps\n\nexport default withI18n({ module: 'commonUi', scope: 'Date' })(DateString)\n","import React from 'react'\nimport { Container, Grid, Header, Icon, List, Segment } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\nexport default () => {\n  const size = 'large'\n  return (\n    <Segment id=\"footer\" inverted style={{ padding: '5em' }} vertical>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" content=\"Site\" inverted />\n              <List inverted link size={size}>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"home\" />\n                    <NavLink to=\"/\">Start</NavLink>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"user\" />\n                    <NavLink to=\"/login\">Login</NavLink>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"database\" />\n                    <NavLink to=\"/docs\">Data model</NavLink>\n                  </List.Content>\n                </List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" content=\"Documentation\" inverted />\n              <List inverted link size={size}>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"wikipedia\" />\n                    <a href=\"https://www.dina-project.net/wiki/Welcome_to_the_DINA_project!\">\n                      DINA wiki\n                    </a>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"database\" />\n                    <NavLink to=\"/docs\">Data model</NavLink>\n                  </List.Content>\n                </List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header as=\"h4\" content=\"Developer\" inverted />\n              <List inverted link size={size}>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"github\" />\n                    <a href=\"https://github.com/DINA-Web\">DINA-Web Github</a>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <a href=\"https://github.com/DINA-Web/dina-collections\">\n                      <Icon name=\"github\" />\n                      Collections on Github\n                    </a>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"external\" />\n                    <a href=\"https://dina-style.nrm.se/\">Style guide</a>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"external\" />\n                    <a href=\"https://dina-api.nrm.se/docs\">Api documentation</a>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <Icon name=\"external\" />\n                    <a href=\"/coverage/index.html\">Test coverage</a>\n                  </List.Content>\n                </List.Item>\n              </List>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  )\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { compose } from 'redux'\nimport { createApplicationLayer } from 'coreModules/layout/higherOrderComponents'\nimport { APPLICATION_LAYER_MODAL } from 'coreModules/layout/constants'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nclass ModalContentWrapper extends PureComponent {\n  render() {\n    const { children } = this.props\n    return <React.Fragment>{children}</React.Fragment>\n  }\n}\n\nModalContentWrapper.propTypes = propTypes\n\nexport default compose(\n  createApplicationLayer({\n    layer: APPLICATION_LAYER_MODAL,\n  })\n)(ModalContentWrapper)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal } from 'semantic-ui-react'\n\nimport ModalContentWrapper from './ModalContentWrapper'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nclass LayerModal extends PureComponent {\n  render() {\n    const { children, ...rest } = this.props\n    return (\n      <Modal {...rest}>\n        <ModalContentWrapper>{children}</ModalContentWrapper>\n      </Modal>\n    )\n  }\n}\n\nLayerModal.propTypes = propTypes\n\nexport default LayerModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\n\nconst log = createLog('modules:commonUi:ThreeColumnGrid')\n\nconst propTypes = {\n  center: PropTypes.node,\n  centerColumnTextAlign: PropTypes.string,\n  classNames: PropTypes.string,\n  left: PropTypes.node,\n  leftColumnTextAlign: PropTypes.string,\n  right: PropTypes.node,\n  rightColumnTextAlign: PropTypes.string,\n}\nconst defaultProps = {\n  center: undefined,\n  centerColumnTextAlign: 'left',\n  classNames: undefined,\n  left: undefined,\n  leftColumnTextAlign: 'left',\n  right: undefined,\n  rightColumnTextAlign: 'left',\n}\n\nfunction ThreeColumnGrid({\n  center,\n  centerColumnTextAlign,\n  classNames,\n  left,\n  leftColumnTextAlign,\n  right,\n  rightColumnTextAlign,\n}) {\n  log.render()\n  return (\n    <Grid className={classNames} columns={3}>\n      <Grid.Column textAlign={leftColumnTextAlign}>\n        {!!left && left}\n      </Grid.Column>\n      <Grid.Column textAlign={centerColumnTextAlign}>\n        {!!center && center}\n      </Grid.Column>\n      <Grid.Column textAlign={rightColumnTextAlign}>\n        {!!right && right}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nThreeColumnGrid.propTypes = propTypes\nThreeColumnGrid.defaultProps = defaultProps\n\nexport default ThreeColumnGrid\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Label } from 'semantic-ui-react'\n\nimport { Translate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  textKey: PropTypes.string.isRequired,\n}\n\nconst TranslatedLabel = ({ textKey, ...rest }) => {\n  return (\n    <Label {...rest}>\n      <Translate textKey={textKey} />\n    </Label>\n  )\n}\n\nTranslatedLabel.propTypes = propTypes\n\nexport default TranslatedLabel\n","export { default as Accordion } from './Accordion'\nexport { default as ColumnRowHeader } from './ColumnRowHeader'\nexport { default as DateString } from './DateString'\nexport { default as Footer } from './Footer'\nexport { default as LayerModal } from './LayerModal'\nexport { default as PageTemplate } from './PageTemplate'\nexport { default as ThreeColumnGrid } from './ThreeColumnGrid'\nexport { default as TranslatedLabel } from './TranslatedLabel'\n","/* eslint-disable no-console, class-methods-use-this */\nimport config from 'config'\n\nexport const PRIVATE_NAMESPACE = '_dependor'\n\nconst getKey = key => {\n  return `${PRIVATE_NAMESPACE}-${key}`\n}\n\nconst testing = config.isTest\n\nconst Dependor = class Dependor {\n  constructor(dependencies = {}) {\n    const originalDependenciesKey = getKey('dependencies')\n    this[originalDependenciesKey] = {\n      ...dependencies,\n    }\n\n    Object.keys(dependencies).forEach(key => {\n      if (this[key]) {\n        throw new Error(`Cant add dependency ${key}. Already exists`)\n      }\n      this[key] = dependencies[key]\n    })\n  }\n\n  add(dependencies) {\n    Object.keys(dependencies).forEach(key => {\n      if (this[key]) {\n        throw new Error(`Cant add dependency ${key}. Already exists`)\n      }\n      this[key] = dependencies[key]\n    })\n  }\n  mock() {\n    console.error('not allowed to call reset outside test')\n  }\n  reset() {\n    console.error('not allowed to call reset outside test')\n  }\n  freeze() {\n    console.error('not allowed to call freeze outside test')\n  }\n}\n\nexport const createFreezeFunction = key => {\n  return () => {\n    throw new Error(\n      `Function ${key} is frozen in dependor and should not be called`\n    )\n  }\n}\n\nconst TestDependor = class TestDependor extends Dependor {\n  freeze(keys) {\n    const originalDependenciesKey = getKey('dependencies')\n    const originalDependencies = this[originalDependenciesKey]\n    const keysToFreeze = keys || Object.keys(originalDependencies)\n    this.mock(\n      keysToFreeze.reduce((obj, key) => {\n        if (this[key] === originalDependencies[key]) {\n          return {\n            ...obj,\n            [key]: createFreezeFunction(key),\n          }\n        }\n        return obj\n      }, {})\n    )\n  }\n  mock(dependencies) {\n    if (!testing) {\n      throw new Error('Dependor _mock should only be used in testing')\n    }\n    Object.keys(dependencies).forEach(key => {\n      if (!this[key]) {\n        throw new Error(`Cant mock dependency ${key}. Dont exists`)\n      }\n      this[key] = dependencies[key]\n    })\n  }\n\n  reset(keys) {\n    if (!testing) {\n      throw new Error('Dependor _reset should only be used in testing')\n    }\n    const originalDependenciesKey = getKey('dependencies')\n    const originalDependencies = this[originalDependenciesKey]\n    if (!keys) {\n      return Object.keys(originalDependencies).forEach(key => {\n        this[key] = originalDependencies[key]\n      })\n    }\n\n    if (Array.isArray(keys)) {\n      return keys.forEach(key => {\n        if (!this[key]) {\n          throw new Error(`Cant reset dependency ${key}. Dont exists`)\n        }\n        this[key] = originalDependencies[key]\n      })\n    }\n\n    if (!this[keys]) {\n      throw new Error(`Cant mock dependency ${keys}. Dont exists`)\n    }\n    this[keys] = originalDependencies[keys]\n    return this[keys]\n  }\n}\n\nexport default (testing ? TestDependor : Dependor)\n","export const USER_LOG_IN_REQUEST = 'USER_LOG_IN_REQUEST'\nexport const USER_LOG_IN_SUCCESS = 'USER_LOG_IN_SUCCESS'\nexport const USER_LOG_IN_FAIL = 'USER_LOG_IN_FAIL'\nexport const USER_LOG_OUT_REQUEST = 'USER_LOG_OUT_REQUEST'\nexport const USER_LOG_OUT_SUCCESS = 'USER_LOG_OUT_SUCCESS'\nexport const USER_LOG_OUT_FAIL = 'USER_LOG_OUT_FAIL'\nexport const USER_GET_USER_REQUEST = 'USER_GET_USER_REQUEST'\nexport const USER_GET_USER_SUCCESS = 'USER_GET_USER_SUCCESS'\nexport const USER_GET_USER_FAIL = 'USER_GET_USER_FAIL'\nexport const USER_GET_USER_PREFERENCES_REQUEST =\n  'USER_GET_USER_PREFERENCES_REQUEST'\nexport const USER_GET_USER_PREFERENCES_SUCCESS =\n  'USER_GET_USER_PREFERENCES_SUCCESS'\nexport const USER_GET_USER_PREFERENCES_FAIL = 'USER_GET_USER_PREFERENCES_FAIL'\n\nexport const USER_UPDATE_USER_PREFERENCES_REQUEST =\n  'USER_UPDATE_USER_PREFERENCES_REQUEST'\nexport const USER_UPDATE_USER_PREFERENCES_SUCCESS =\n  'USER_UPDATE_USER_PREFERENCES_SUCCESS'\nexport const USER_UPDATE_USER_PREFERENCES_FAIL =\n  'USER_UPDATE_USER_PREFERENCES_FAIL'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Dropdown } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { createInjectSearch } from '../../higherOrderComponents'\nimport { ANY } from '../../constants'\n\nconst propTypes = {\n  buildLocalAggregationQuery: PropTypes.func.isRequired,\n  capitalize: PropTypes.bool,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  inline: PropTypes.bool,\n  inlineDescription: PropTypes.node,\n  input: PropTypes.shape({\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }),\n  module: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  search: PropTypes.func.isRequired,\n  tagTypeInitialOptionValue: PropTypes.string,\n  tagTypeMatchAllOptionText: PropTypes.string,\n  translationScope: PropTypes.string,\n  value: PropTypes.string,\n}\n\nconst defaultProps = {\n  capitalize: false,\n  inline: false,\n  inlineDescription: undefined,\n  input: undefined,\n  onBlur: undefined,\n  onChange: undefined,\n  placeholder: undefined,\n  tagTypeInitialOptionValue: undefined,\n  tagTypeMatchAllOptionText: undefined,\n  translationScope: undefined,\n  value: '',\n}\n\nclass TagTypeDropdown extends Component {\n  constructor(props) {\n    super(props)\n    this.onChange = objectPath.get(props, 'input.onChange') || props.onChange\n\n    if (!this.onChange) {\n      throw new Error('onChange or input.onChange must be provided')\n    }\n\n    this.state = {\n      options: [],\n    }\n\n    this.fetchAvailableTags = this.fetchAvailableTags.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    const {\n      capitalize,\n      i18n: { moduleTranslate },\n      module,\n      translationScope,\n      tagTypeInitialOptionValue,\n      tagTypeMatchAllOptionText,\n    } = this.props\n\n    return this.fetchAvailableTags().then(tags => {\n      const options = tags\n        .map(tag => {\n          return tag.attributes.key\n        })\n        .sort()\n        .map(tagKey => {\n          return {\n            key: tagKey,\n            text: moduleTranslate({\n              capitalize,\n              fallback: tagKey,\n              module,\n              scope: translationScope,\n              textKey: tagKey,\n            }),\n            value: tagKey,\n          }\n        })\n\n      if (tagTypeMatchAllOptionText) {\n        options.unshift({\n          key: tagTypeMatchAllOptionText,\n          text: tagTypeMatchAllOptionText,\n          value: ANY,\n        })\n      }\n\n      this.setState({ options })\n\n      if (tagTypeInitialOptionValue) {\n        this.onChange(tagTypeInitialOptionValue)\n      }\n    })\n  }\n\n  fetchAvailableTags() {\n    const query = this.props.buildLocalAggregationQuery({\n      input: {\n        aggregationFunctionType: 'type',\n        getAll: true,\n      },\n    })\n\n    return this.props.search(query).then(items => {\n      return items\n    })\n  }\n\n  handleChange(event, data) {\n    this.onChange(data.value)\n\n    if (this.props.input && this.props.input.onBlur) {\n      this.props.input.onBlur(data.value)\n    }\n  }\n\n  render() {\n    const {\n      inline,\n      inlineDescription,\n      input,\n      placeholder,\n      value: valueFromParent,\n    } = this.props\n\n    const { options } = this.state\n    const value = valueFromParent || (input && input.value) || ''\n\n    if (inlineDescription) {\n      return (\n        <div style={{ fontStyle: 'italic' }}>\n          <span>{inlineDescription} </span>\n          <Dropdown\n            className=\"placeholder-same-color-as-text\"\n            inline\n            onChange={this.handleChange}\n            options={options}\n            placeholder={placeholder}\n            value={value}\n          />\n        </div>\n      )\n    }\n\n    if (inline) {\n      return (\n        <Dropdown\n          className=\"placeholder-same-color-as-text\"\n          inline\n          onChange={this.handleChange}\n          options={options}\n          placeholder={placeholder}\n          value={value}\n        />\n      )\n    }\n\n    return (\n      <Dropdown\n        onChange={this.handleChange}\n        options={options}\n        placeholder={placeholder}\n        search\n        selection\n        value={value}\n      />\n    )\n  }\n}\n\nTagTypeDropdown.defaultProps = defaultProps\nTagTypeDropdown.propTypes = propTypes\n\nexport default compose(\n  createInjectSearch({\n    storeSearchResult: false,\n  }),\n  withI18n({})\n)(TagTypeDropdown)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport { DropdownSearch, Field, Input } from 'coreModules/form/components'\nimport TagTypeDropdown from '../TagTypeDropdown'\n\nconst propTypes = {\n  buildLocalAggregationQuery: PropTypes.func.isRequired,\n  capitalize: PropTypes.bool,\n  disableClearUnitValue: PropTypes.bool,\n  module: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired,\n  search: PropTypes.func.isRequired,\n  tagTypeDropdownPlaceholder: PropTypes.string,\n  tagTypeInitialOptionValue: PropTypes.string,\n  tagTypeInlineDescription: PropTypes.node,\n  tagTypeMatchAllOptionText: PropTypes.string,\n  translationScope: PropTypes.string,\n  unitOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n}\nconst defaultProps = {\n  capitalize: undefined,\n  disableClearUnitValue: undefined,\n  tagTypeDropdownPlaceholder: undefined,\n  tagTypeInitialOptionValue: undefined,\n  tagTypeInlineDescription: undefined,\n  tagTypeMatchAllOptionText: undefined,\n  translationScope: undefined,\n}\n\nconst FeatureTypeRange = ({\n  buildLocalAggregationQuery,\n  capitalize,\n  disableClearUnitValue,\n  module,\n  name: baseName,\n  resource,\n  search,\n  tagTypeDropdownPlaceholder,\n  tagTypeInitialOptionValue,\n  tagTypeInlineDescription,\n  tagTypeMatchAllOptionText,\n  translationScope,\n  unitOptions,\n}) => {\n  return (\n    <Grid textAlign=\"left\" verticalAlign=\"top\">\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            buildLocalAggregationQuery={buildLocalAggregationQuery}\n            capitalize={capitalize}\n            component={TagTypeDropdown}\n            enableHelpNotifications={false}\n            inline\n            inlineDescription={tagTypeInlineDescription}\n            module={module}\n            name={`${baseName}.rangeType`}\n            placeholder={tagTypeDropdownPlaceholder}\n            resource={resource}\n            search={search}\n            tagTypeInitialOptionValue={tagTypeInitialOptionValue}\n            tagTypeMatchAllOptionText={tagTypeMatchAllOptionText}\n            translationScope={translationScope}\n          />\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <Field\n            autoComplete=\"off\"\n            component={Input}\n            enableHelpNotifications={false}\n            fluid\n            label=\"from\"\n            min={0}\n            module={module}\n            name={`${baseName}.rangeValue.min`}\n            subLabel\n            type=\"number\"\n          />\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <Field\n            autoComplete=\"off\"\n            component={Input}\n            enableHelpNotifications={false}\n            fluid\n            label=\"to\"\n            min={0}\n            module={module}\n            name={`${baseName}.rangeValue.max`}\n            subLabel\n            type=\"number\"\n          />\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Field\n            autoComplete=\"off\"\n            component={DropdownSearch}\n            disableClearValue={disableClearUnitValue}\n            enableHelpNotifications={false}\n            fluid\n            label=\"unit\"\n            module={module}\n            name={`${baseName}.rangeUnit`}\n            options={unitOptions}\n            subLabel\n            type=\"dropdown-search-local\"\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nFeatureTypeRange.propTypes = propTypes\nFeatureTypeRange.defaultProps = defaultProps\n\nexport default FeatureTypeRange\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport Checkbox from 'coreModules/form/components/inputs/Checkbox'\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\n\nconst propTypes = {\n  aggregationFunctionName: PropTypes.string,\n  aggregationKey: PropTypes.string,\n  aggregationLimit: PropTypes.number,\n  drillDownQuery: PropTypes.shape({\n    and: PropTypes.array.isRequired,\n  }),\n  filterFunctionName: PropTypes.string.isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  }).isRequired,\n  onCheckboxChange: PropTypes.func,\n  search: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  aggregationFunctionName: undefined,\n  aggregationKey: undefined,\n  aggregationLimit: 10000,\n  drillDownQuery: undefined,\n  onCheckboxChange: undefined,\n}\n\nclass MultipleChoiceCheckboxes extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { allIds: [], drillDownIds: [], values: {} } // eslint-disable-line react/no-unused-state\n  }\n\n  componentDidMount() {\n    this.props\n      .search(this.getQuery(undefined, { getAll: true }))\n      .then(allValues => {\n        const allIds = allValues.map(({ id }) => id)\n        this.props.search(this.getQuery(allIds)).then(drillDownValues => {\n          const drillDownIds = drillDownValues.map(({ id }) => id)\n          this.setState({\n            allIds,\n            drillDownIds,\n          })\n        })\n      })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.drillDownQuery !== nextProps.drillDownQuery) {\n      this.props\n        .search(\n          this.getQuery(this.state.allIds, {\n            drillDownQuery: nextProps.drillDownQuery,\n          })\n        )\n        .then(drillDownValues => {\n          const drillDownIds = drillDownValues.map(({ id }) => id)\n          this.setState({\n            drillDownIds,\n          })\n        })\n    }\n  }\n\n  getQuery(\n    filterValues = [],\n    { drillDownQuery: nextPropsDrillDownQuery, getAll = false } = {}\n  ) {\n    const {\n      aggregationFunctionName,\n      aggregationKey,\n      aggregationLimit,\n      drillDownQuery: currentDrillDownQuery,\n      filterFunctionName,\n    } = this.props\n\n    const drillDownQuery = nextPropsDrillDownQuery || currentDrillDownQuery\n\n    const searchQuery = {\n      idsOnly: false,\n    }\n\n    if (!getAll) {\n      searchQuery.query = {\n        and: [\n          ...((drillDownQuery && drillDownQuery.and) || []),\n          {\n            or: filterValues.map(filterValue => {\n              return {\n                filter: {\n                  filterFunction: filterFunctionName,\n                  input: {\n                    value: filterValue,\n                  },\n                },\n              }\n            }),\n          },\n        ],\n      }\n    }\n\n    if (aggregationFunctionName) {\n      searchQuery.aggregations = [\n        {\n          aggregationFunction: aggregationFunctionName,\n          key: aggregationKey,\n          options: { limit: aggregationLimit },\n        },\n      ]\n    }\n\n    return searchQuery\n  }\n\n  handleCheckboxChange(newKeyValue) {\n    this.setState(prevState => {\n      const newValues = {\n        ...prevState.values,\n        ...newKeyValue,\n      }\n\n      const filterValues = Object.keys(newValues).reduce((arr, id) => {\n        if (newValues[id]) {\n          arr.push(id)\n        }\n\n        return arr\n      }, [])\n\n      this.props.input.onChange(filterValues)\n      if (this.props.onCheckboxChange) {\n        this.props.onCheckboxChange(filterValues)\n      }\n\n      return { values: newValues }\n    })\n  }\n\n  render() {\n    const { input } = this.props\n    const { allIds, drillDownIds, values } = this.state\n\n    if (!allIds || !allIds.length) {\n      return null\n    }\n\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Row>\n          {allIds.map(id => {\n            return (\n              <Grid.Column key={id} width={16}>\n                <Checkbox\n                  disabled={!drillDownIds.includes(id) && !values[id]}\n                  input={{\n                    name: `${input.name}.${id}`,\n                    onChange: checked => {\n                      this.handleCheckboxChange({ [id]: checked })\n                    },\n                    value: values[id],\n                  }}\n                  label={id}\n                />\n              </Grid.Column>\n            )\n          })}\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nMultipleChoiceCheckboxes.propTypes = propTypes\nMultipleChoiceCheckboxes.defaultProps = defaultProps\n\nexport default createInjectSearch({\n  storeSearchResult: false,\n})(MultipleChoiceCheckboxes)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid, Loader } from 'semantic-ui-react'\nimport { formValueSelector } from 'redux-form'\nimport { debounce } from 'lodash'\n\nimport Checkbox from 'coreModules/form/components/inputs/Checkbox'\nimport wrapInFieldTemplate from 'coreModules/form/higherOrderComponents/wrapInFieldTemplate'\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\n\nconst mapStateToProps = (state, { meta: { form }, input: { name } }) => {\n  return {\n    checkedValues: formValueSelector(form)(state, name),\n  }\n}\n\nconst propTypes = {\n  buildLocalAggregationQuery: PropTypes.func.isRequired,\n  checkedValues: PropTypes.arrayOf(PropTypes.string),\n  displayCount: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n  }).isRequired,\n  meta: PropTypes.object.isRequired,\n  onCheckboxChange: PropTypes.func,\n  otherFieldFilters: PropTypes.object,\n  search: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  checkedValues: [],\n  displayCount: false,\n  onCheckboxChange: undefined,\n  otherFieldFilters: undefined,\n}\n\nclass MultipleChoiceCheckboxes extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      allIds: [],\n      drillDownOptionsMap: {},\n      loading: true,\n    }\n\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this)\n    this.handleDrillDownSearchResult = this.handleDrillDownSearchResult.bind(\n      this\n    )\n\n    this.debounceSearch = debounce(\n      () => {\n        this.props\n          .search(this.props.buildLocalAggregationQuery())\n          .then(this.handleDrillDownSearchResult)\n      },\n      400,\n      {\n        maxWait: 800,\n      }\n    )\n  }\n\n  componentDidMount() {\n    return this.props\n      .search(\n        this.props.buildLocalAggregationQuery({ input: { getAll: true } })\n      )\n      .then(allSearchResults => {\n        const allIds = allSearchResults.map(({ id }) => id).sort()\n        this.setState({\n          allIds,\n        })\n\n        return this.props\n          .search(this.props.buildLocalAggregationQuery())\n          .then(this.handleDrillDownSearchResult)\n      })\n      .then(() => {\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.otherFieldFilters !== nextProps.otherFieldFilters) {\n      this.debounceSearch()\n    }\n  }\n\n  componentWillUnmount() {\n    this.debounceSearch.cancel()\n  }\n\n  handleCheckboxChange(key, isChecked) {\n    let newValues\n    if (isChecked) {\n      newValues = [...this.props.checkedValues, key]\n    } else {\n      newValues = this.props.checkedValues.filter(\n        checkedKey => checkedKey !== key\n      )\n    }\n\n    this.props.input.onChange(newValues)\n\n    if (this.props.onCheckboxChange) {\n      this.props.onCheckboxChange(newValues)\n    }\n  }\n\n  handleDrillDownSearchResult(drillDownSearchResult) {\n    const drillDownOptionsMap = drillDownSearchResult.reduce(\n      (obj, { attributes, id }) => {\n        // prettier-ignore\n        obj[id] = { // eslint-disable-line no-param-reassign\n          count: attributes && attributes.count,\n          key: attributes && attributes.key,\n        }\n        return obj\n      },\n      {}\n    )\n\n    this.setState({\n      drillDownOptionsMap,\n    })\n  }\n\n  render() {\n    const { checkedValues, displayCount, input, meta } = this.props\n    const { allIds, drillDownOptionsMap, loading } = this.state\n\n    if (loading) {\n      return (\n        <Grid padded textAlign=\"left\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Loader active inline size=\"tiny\" />\n          </Grid.Column>\n        </Grid>\n      )\n    }\n\n    if (!allIds || !allIds.length) {\n      return (\n        <Grid padded textAlign=\"left\" verticalAlign=\"middle\">\n          <Grid.Column>No options available</Grid.Column>\n        </Grid>\n      )\n    }\n\n    return (\n      <Grid\n        style={{ pointerEvents: 'none' }}\n        textAlign=\"left\"\n        verticalAlign=\"middle\"\n      >\n        <Grid.Row>\n          {allIds.map(id => {\n            const drillDownOption = drillDownOptionsMap[id]\n            const isChecked = checkedValues.includes(id)\n\n            return (\n              <Grid.Column\n                key={id}\n                style={{ pointerEvents: 'initial' }}\n                width={16}\n              >\n                <Checkbox\n                  disabled={!drillDownOption && !isChecked}\n                  input={{\n                    name: `${input.name}.${id}`,\n                    onChange: checked => {\n                      this.handleCheckboxChange(id, checked)\n                    },\n                    value: isChecked,\n                  }}\n                  label={\n                    displayCount && drillDownOption\n                      ? `${id} (${drillDownOption.count})`\n                      : id\n                  }\n                  meta={meta}\n                />\n              </Grid.Column>\n            )\n          })}\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nMultipleChoiceCheckboxes.propTypes = propTypes\nMultipleChoiceCheckboxes.defaultProps = defaultProps\n\nexport default compose(\n  wrapInFieldTemplate,\n  createInjectSearch({\n    storeSearchResult: false,\n  }),\n  connect(mapStateToProps)\n)(MultipleChoiceCheckboxes)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Grid, Header, Label } from 'semantic-ui-react'\n\nconst propTypes = {\n  addTagTypeToText: PropTypes.bool.isRequired,\n  onDeselectAllForSearchQuery: PropTypes.func.isRequired,\n  onSelectAllForSearchQuery: PropTypes.func.isRequired,\n  onToggleTagSelected: PropTypes.func.isRequired,\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      selected: PropTypes.bool.isRequire,\n    })\n  ).isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\nconst TagGroup = ({\n  addTagTypeToText,\n  onDeselectAllForSearchQuery: handleDeselectAllForSearchQuery,\n  onSelectAllForSearchQuery: handleSelectAllForSearchQuery,\n  onToggleTagSelected: handleToggleTagSelected,\n  results,\n  searchQuery,\n  title,\n}) => {\n  return (\n    <Grid verticalAlign=\"middle\">\n      <Grid.Column width={16}>\n        <Header size=\"medium\">\n          {title}\n          <Button\n            onClick={() => handleDeselectAllForSearchQuery(searchQuery)}\n            style={{ marginLeft: '1em' }}\n          >\n            Deselect all\n          </Button>\n          <Button onClick={() => handleSelectAllForSearchQuery(searchQuery)}>\n            Select all\n          </Button>\n        </Header>\n      </Grid.Column>\n      <Grid.Column width={16}>\n        <Label.Group>\n          {results.map(({ attributes, id, selected }) => {\n            const tagTypeText = addTagTypeToText\n              ? ` (${attributes.tagType}) `\n              : ' '\n            return (\n              <Label\n                as=\"a\"\n                color={selected ? 'green' : undefined}\n                key={id}\n                onClick={() => handleToggleTagSelected({ id, searchQuery })}\n              >{`${attributes.tagValue}${tagTypeText}${\n                attributes && attributes.count !== undefined\n                  ? ` (${attributes.count})`\n                  : ''\n              }`}</Label>\n            )\n          })}\n        </Label.Group>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nTagGroup.propTypes = propTypes\n\nexport default TagGroup\n","import { createSelector } from 'reselect'\n\nexport const getAllFreeTextSearchResults = createSelector(\n  searchQueryResultsMap => searchQueryResultsMap,\n  searchQueryResultsMap => {\n    return Object.values(searchQueryResultsMap || {}).reduce(\n      (allResults, { matchingTags, searchOption }) => {\n        if (searchOption.other.optionType !== 'freeText') {\n          return allResults\n        }\n        return allResults.concat(matchingTags)\n      },\n      []\n    )\n  }\n)\n\nexport const getAllFreeTextQueries = createSelector(\n  searchQueryResultsMap => searchQueryResultsMap,\n  searchQueryResultsMap => {\n    return Object.keys(searchQueryResultsMap || {}).reduce(\n      (allResults, searchQuery) => {\n        const { searchOption } = searchQueryResultsMap[searchQuery]\n        if (searchOption.other.optionType !== 'freeText') {\n          return allResults\n        }\n        return [...allResults, searchQuery]\n      },\n      []\n    )\n  }\n)\n\nexport const getNumberOfFreeTextSearchResults = createSelector(\n  getAllFreeTextSearchResults,\n  allResults => {\n    return allResults.length\n  }\n)\nexport const getNumberOfSelectedFreeTextResults = createSelector(\n  getAllFreeTextSearchResults,\n  allResults => {\n    return allResults.reduce((count, { selected }) => {\n      if (!selected) {\n        return count\n      }\n\n      return count + 1\n    }, 0)\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, Header } from 'semantic-ui-react'\nimport { FormModal } from '../../../form/components'\nimport TagGroup from './TagGroup'\nimport * as selectors from './selectors'\n\nconst propTypes = {\n  addTagTypeToText: PropTypes.bool.isRequired,\n  inline: PropTypes.bool.isRequired,\n  numberOfSearchResults: PropTypes.number.isRequired,\n  numberOfSelectedResults: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDeselectAllForSearchQuery: PropTypes.func.isRequired,\n  onSelectAllForSearchQuery: PropTypes.func.isRequired,\n  onToggleTagSelected: PropTypes.func.isRequired,\n  reduxFormValues: PropTypes.objectOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      matchingTags: PropTypes.array.isRequired,\n      searchOption: PropTypes.object.isRequired,\n    }).isRequired\n  ),\n}\n\nconst defaultProps = {\n  reduxFormValues: {},\n}\n\nconst RefineTagSelection = ({\n  addTagTypeToText,\n  inline,\n  numberOfSearchResults,\n  numberOfSelectedResults,\n  onClose: handleClose,\n  onDeselectAllForSearchQuery: handleDeselectAllForSearchQuery,\n  onSelectAllForSearchQuery: handleSelectAllForSearchQuery,\n  onToggleTagSelected: handleToggleTagSelected,\n  reduxFormValues,\n}) => {\n  const freeTextQueries = selectors.getAllFreeTextQueries(reduxFormValues)\n  if (inline) {\n    return (\n      <React.Fragment>\n        <Header size=\"medium\">{`Refine filter (${numberOfSelectedResults}/${numberOfSearchResults})`}</Header>\n        {freeTextQueries.map(searchQuery => {\n          const title = reduxFormValues[searchQuery].searchOption.text\n          return (\n            <TagGroup\n              addTagTypeToText={addTagTypeToText}\n              key={searchQuery}\n              onDeselectAllForSearchQuery={handleDeselectAllForSearchQuery}\n              onSelectAllForSearchQuery={handleSelectAllForSearchQuery}\n              onToggleTagSelected={handleToggleTagSelected}\n              results={reduxFormValues[searchQuery].matchingTags}\n              searchQuery={searchQuery}\n              title={title}\n            />\n          )\n        })}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <FormModal closeIcon onClose={handleClose} open>\n      <Modal.Header>{`Refine filter (${numberOfSelectedResults}/${numberOfSearchResults})`}</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {freeTextQueries.map(searchQuery => {\n            const title = reduxFormValues[searchQuery].searchOption.text\n            return (\n              <TagGroup\n                addTagTypeToText={addTagTypeToText}\n                key={searchQuery}\n                onDeselectAllForSearchQuery={handleDeselectAllForSearchQuery}\n                onSelectAllForSearchQuery={handleSelectAllForSearchQuery}\n                onToggleTagSelected={handleToggleTagSelected}\n                results={reduxFormValues[searchQuery].matchingTags}\n                searchQuery={searchQuery}\n                title={title}\n              />\n            )\n          })}\n        </Modal.Description>\n      </Modal.Content>\n    </FormModal>\n  )\n}\n\nRefineTagSelection.propTypes = propTypes\nRefineTagSelection.defaultProps = defaultProps\n\nexport default RefineTagSelection\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport * as selectors from './selectors'\n\nconst propTypes = {\n  onCloseRefine: PropTypes.func.isRequired,\n  onOpenRefine: PropTypes.func.isRequired,\n  reduxFormValues: PropTypes.object,\n  refineOpen: PropTypes.bool,\n}\n\nconst defaultProps = {\n  reduxFormValues: {},\n  refineOpen: false,\n}\n\nclass RefineTagSelectionButton extends Component {\n  render() {\n    const {\n      refineOpen,\n      reduxFormValues,\n      onCloseRefine,\n      onOpenRefine,\n    } = this.props\n\n    const numberOfSearchResults = selectors.getNumberOfFreeTextSearchResults(\n      reduxFormValues\n    )\n    const numberOfSelectedResults = selectors.getNumberOfSelectedFreeTextResults(\n      reduxFormValues\n    )\n\n    return (\n      <Button\n        disabled={!numberOfSearchResults}\n        onClick={refineOpen ? onCloseRefine : onOpenRefine}\n        style={{\n          paddingLeft: '0.5em',\n          paddingRight: '0.5em',\n          textAlign: 'left',\n          width: '3.5em',\n        }}\n      >\n        <Icon name=\"sliders\" style={{ margin: '0px' }} />\n        {!!numberOfSearchResults &&\n          numberOfSearchResults !== numberOfSelectedResults && (\n            <Icon\n              name=\"check circle\"\n              style={{\n                fontSize: '0.8em',\n                margin: '0px',\n                position: 'relative',\n                top: '-0.25em',\n              }}\n            />\n          )}\n      </Button>\n    )\n  }\n}\n\nRefineTagSelectionButton.defaultProps = defaultProps\nRefineTagSelectionButton.propTypes = propTypes\n\nexport default RefineTagSelectionButton\n","/* eslint-disable class-methods-use-this */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport objectPath from 'object-path'\nimport { debounce } from 'lodash'\n\nimport { MultipleSearchSelectionDropdown } from 'coreModules/form/components'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\nimport TagTypeDropdown from '../TagTypeDropdown'\nimport RefineTagSelection from './RefineTagSelection'\nimport RefineTagSelectionButton from './RefineTagSelectionButton'\nimport * as selectors from './selectors'\nimport { ANY } from '../../constants'\n\nconst propTypes = {\n  addTagTypeToText: PropTypes.bool,\n  buildLocalAggregationQuery: PropTypes.func.isRequired,\n  capitalize: PropTypes.bool,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  inlineRefine: PropTypes.bool,\n  input: PropTypes.shape({\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.objectOf(\n        PropTypes.shape({\n          key: PropTypes.string.isRequired,\n          matchingTags: PropTypes.array.isRequired,\n          searchOption: PropTypes.object.isRequired,\n        }).isRequired\n      ).isRequired,\n      PropTypes.string.isRequired,\n    ]).isRequired,\n  }).isRequired,\n  module: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired,\n  search: PropTypes.func.isRequired,\n  tagTypeFilterEnabled: PropTypes.bool,\n  tagTypeInitialOptionValue: PropTypes.string,\n  tagTypeInlineDescription: PropTypes.string,\n  tagTypeMatchAllOptionText: PropTypes.string,\n  translationScope: PropTypes.string,\n}\nconst defaultProps = {\n  addTagTypeToText: true,\n  capitalize: undefined,\n  inlineRefine: false,\n  tagTypeFilterEnabled: false,\n  tagTypeInitialOptionValue: undefined,\n  tagTypeInlineDescription: undefined,\n  tagTypeMatchAllOptionText: undefined,\n  translationScope: undefined,\n}\n\nclass RawMultipleSearchTagsSelect extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.getItemsForSearchQuery = this.getItemsForSearchQuery.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.getSelectedOptions = this.getSelectedOptions.bind(this)\n    this.setSearchQueryResultsSelected = this.setSearchQueryResultsSelected.bind(\n      this\n    )\n    this.handleGetSearchQuery = this.handleGetSearchQuery.bind(this)\n    this.handleCloseRefine = this.handleCloseRefine.bind(this)\n    this.handleOpenRefine = this.handleOpenRefine.bind(this)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleSelectSearchQueries = this.handleSelectSearchQueries.bind(this)\n    this.handleSelectAllForSearchQuery = this.handleSelectAllForSearchQuery.bind(\n      this\n    )\n    this.handleDeselectAllForSearchQuery = this.handleDeselectAllForSearchQuery.bind(\n      this\n    )\n    this.handleToggleTagSelected = this.handleToggleTagSelected.bind(this)\n    this.handleUpdateTagFilterValue = this.handleUpdateTagFilterValue.bind(this)\n\n    this.state = {\n      options: [],\n      refineOpen: false,\n      searchQuery: '',\n      tagTypeFilterValue: '',\n    }\n\n    this.debouncedGetItemsForSearchQuery = debounce(\n      searchQuery => {\n        const { tagTypeFilterValue } = this.state\n        return this.getItemsForSearchQuery({\n          tagType:\n            tagTypeFilterValue && tagTypeFilterValue !== ANY\n              ? tagTypeFilterValue\n              : undefined,\n          tagValue: searchQuery,\n        }).then(items => {\n          const options = this.createOptions({\n            items,\n            searchQuery,\n          })\n\n          this.setState({\n            options,\n          })\n        })\n      },\n      400,\n      {\n        maxWait: 800,\n      }\n    )\n  }\n\n  componentWillUnmount() {\n    this.debouncedGetItemsForSearchQuery.cancel()\n  }\n\n  getItemsForSearchQuery({\n    aggregationFunctionType = 'value',\n    exact,\n    limit = 10,\n    tagType,\n    tagValue,\n  }) {\n    const query = this.props.buildLocalAggregationQuery({\n      input: {\n        aggregationFunctionType,\n        exact,\n        limit,\n        tagType,\n        tagValue,\n      },\n    })\n    query.limit = limit\n    return this.props.search(query).then(items => {\n      return items\n    })\n  }\n\n  getOptions() {\n    return this.state.options\n  }\n\n  setSearchQueryResultsSelected(searchQuery, selected = true) {\n    const reduxFormValues = this.props.input.value\n    const reduxFormValue = objectPath.get(reduxFormValues, searchQuery)\n    if (reduxFormValue) {\n      const { matchingTags, searchOption } = reduxFormValue\n\n      const updatedReduxFormValues = this.createReduxFormValues({\n        matchingTags,\n        prevReduxFormValues: reduxFormValues,\n        searchOption,\n        selected,\n      })\n\n      this.props.input.onChange(updatedReduxFormValues)\n    }\n  }\n\n  getSelectedOptions(_, queryStrings) {\n    const selectedOptions = queryStrings.map(key => {\n      return this.props.input.value[key].searchOption\n    })\n    return selectedOptions\n  }\n\n  handleGetSearchQuery() {\n    return this.state.searchQuery\n  }\n\n  handleCloseRefine() {\n    this.setState({\n      refineOpen: false,\n    })\n  }\n\n  handleOpenRefine() {\n    this.setState({\n      refineOpen: true,\n    })\n  }\n\n  handleSearchChange(input) {\n    const { searchQuery } = input\n    this.setState({\n      searchQuery,\n    })\n\n    if (!searchQuery) {\n      return this.setState({\n        options: [],\n        searchQuery,\n      })\n    }\n\n    return this.debouncedGetItemsForSearchQuery(searchQuery)\n  }\n\n  handleSelectSearchQueries(queryStrings) {\n    if (!queryStrings.length) {\n      this.props.input.onChange({})\n    }\n\n    const { value: prevReduxFormValues } = this.props.input\n    if (queryStrings.length > Object.keys(prevReduxFormValues || {}).length) {\n      const queryString = queryStrings[queryStrings.length - 1]\n\n      const searchOption = this.state.options.find(option => {\n        return option.key === queryString\n      })\n      if (!searchOption) {\n        return null\n      }\n\n      const { key } = searchOption\n\n      const { tagType, tagValue, optionType } = searchOption.other\n\n      return this.getItemsForSearchQuery({\n        exact: !!(tagType && key && optionType !== 'freeText'),\n        limit: 1000,\n        tagType: tagType === ANY ? undefined : tagType,\n        tagValue,\n      }).then(items => {\n        const newReduxFormValues = this.createReduxFormValues({\n          matchingTags: items,\n          prevReduxFormValues,\n          searchOption,\n          selected: true,\n        })\n\n        return this.props.input.onChange(newReduxFormValues)\n      })\n    }\n\n    const newTags =\n      prevReduxFormValues &&\n      queryStrings.reduce((obj, queryString) => {\n        obj[queryString] = prevReduxFormValues[queryString] // eslint-disable-line no-param-reassign\n        return obj\n      }, {})\n\n    return this.props.input.onChange(newTags)\n  }\n\n  handleSelectAllForSearchQuery(searchQuery) {\n    this.setSearchQueryResultsSelected(searchQuery, true)\n  }\n\n  handleDeselectAllForSearchQuery(searchQuery) {\n    this.setSearchQueryResultsSelected(searchQuery, false)\n  }\n\n  handleToggleTagSelected({ searchQuery, id }) {\n    const reduxFormValues = this.props.input.value\n    const reduxFormValue = objectPath.get(reduxFormValues, searchQuery)\n    if (reduxFormValue) {\n      const { matchingTags, searchOption } = reduxFormValue\n\n      const updatedReduxFormValues = this.createReduxFormValues({\n        matchingTags: matchingTags.map(tag => {\n          if (tag.id !== id) {\n            return tag\n          }\n\n          return {\n            ...tag,\n            selected: !tag.selected,\n          }\n        }),\n        prevReduxFormValues: reduxFormValues,\n        searchOption,\n      })\n\n      this.props.input.onChange(updatedReduxFormValues)\n    }\n  }\n  createOption({ key, optionType, tagType, tagValue, text, value }) {\n    return {\n      key,\n      other: {\n        optionType,\n        tagType,\n        tagValue,\n      },\n      text,\n      value,\n    }\n  }\n  createOptions({ searchQuery, items }) {\n    const { tagTypeFilterValue } = this.state\n    const { addTagTypeToText } = this.props\n    const itemOptions = items\n      .map(({ attributes }) => {\n        if (attributes) {\n          const { key, tagType, tagValue } = attributes\n          const tagTypeText = addTagTypeToText ? ` [${tagType}] ` : ' '\n\n          return this.createOption({\n            key,\n            optionType: 'tag',\n            tagType,\n            tagValue,\n            text: `${tagValue}${tagTypeText}`,\n            value: key,\n          })\n        }\n\n        return null\n      })\n      .filter(item => !!item)\n\n    const freeTextSuffix =\n      tagTypeFilterValue === ANY\n        ? '(free text)'\n        : `(free text ${tagTypeFilterValue})`\n    const freeTextOption = this.createOption({\n      key: searchQuery,\n      optionType: 'freeText',\n      tagType: tagTypeFilterValue,\n      tagValue: searchQuery,\n      text: `${searchQuery} ${freeTextSuffix}`,\n      value: searchQuery,\n    })\n\n    const options = [freeTextOption, ...itemOptions]\n    return options\n  }\n\n  createReduxFormValues({\n    matchingTags,\n    prevReduxFormValues = {},\n    searchOption,\n    selected,\n  }) {\n    const { key } = searchOption\n\n    const newFieldValue = {\n      key,\n      matchingTags: matchingTags.map(matchingTag => {\n        if (selected === undefined) {\n          return matchingTag\n        }\n        return {\n          ...matchingTag,\n          selected,\n        }\n      }),\n      searchOption,\n    }\n\n    return {\n      ...prevReduxFormValues,\n      [key]: newFieldValue,\n    }\n  }\n\n  handleUpdateTagFilterValue(value) {\n    this.setState({\n      tagTypeFilterValue: value,\n    })\n  }\n\n  render() {\n    const {\n      addTagTypeToText,\n      buildLocalAggregationQuery,\n      capitalize,\n      i18n: { moduleTranslate },\n      inlineRefine,\n      input,\n      module,\n      resource,\n      tagTypeFilterEnabled,\n      tagTypeInlineDescription,\n      tagTypeInitialOptionValue,\n      tagTypeMatchAllOptionText,\n      translationScope,\n      ...rest\n    } = this.props\n\n    const { refineOpen, tagTypeFilterValue } = this.state\n    const { value: reduxFormValues } = input\n\n    const patchedInput = {\n      ...input,\n      onBlur: this.handleSelectSearchQueries,\n      value: Object.keys(reduxFormValues || {}),\n    }\n\n    const numberOfSearchResults = selectors.getNumberOfFreeTextSearchResults(\n      reduxFormValues\n    )\n    const numberOfSelectedResults = selectors.getNumberOfSelectedFreeTextResults(\n      reduxFormValues\n    )\n\n    return (\n      <React.Fragment>\n        {tagTypeFilterEnabled && (\n          <TagTypeDropdown\n            buildLocalAggregationQuery={buildLocalAggregationQuery}\n            capitalize={capitalize}\n            inline\n            inlineDescription={tagTypeInlineDescription}\n            module={module}\n            onChange={this.handleUpdateTagFilterValue}\n            resource={resource}\n            tagTypeInitialOptionValue={tagTypeInitialOptionValue}\n            tagTypeMatchAllOptionText={tagTypeMatchAllOptionText}\n            translationScope={translationScope}\n            value={tagTypeFilterValue}\n          />\n        )}\n        <MultipleSearchSelectionDropdown\n          {...rest}\n          enableHelpNotifications={false}\n          getOptions={this.getOptions}\n          getSearchQuery={this.handleGetSearchQuery}\n          getSelectedOptions={this.getSelectedOptions}\n          icon=\"search\"\n          input={patchedInput}\n          label={false}\n          noResultsMessage={moduleTranslate({\n            textKey: 'typeQueryAndPressEnter',\n          })}\n          onSearchChange={this.handleSearchChange}\n          resource={resource}\n          rightButton={\n            <RefineTagSelectionButton\n              onCloseRefine={this.handleCloseRefine}\n              onOpenRefine={this.handleOpenRefine}\n              reduxFormValues={reduxFormValues || undefined}\n              refineOpen={refineOpen}\n            />\n          }\n          type=\"multiple-search-selection-dropdown-connect\"\n        />\n        {refineOpen && (\n          <RefineTagSelection\n            addTagTypeToText={addTagTypeToText}\n            inline={inlineRefine}\n            numberOfSearchResults={numberOfSearchResults}\n            numberOfSelectedResults={numberOfSelectedResults}\n            onClose={this.handleCloseRefine}\n            onDeselectAllForSearchQuery={this.handleDeselectAllForSearchQuery}\n            onSelectAllForSearchQuery={this.handleSelectAllForSearchQuery}\n            onToggleTagSelected={this.handleToggleTagSelected}\n            open\n            reduxFormValues={{ ...(reduxFormValues || {}) }}\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nRawMultipleSearchTagsSelect.propTypes = propTypes\nRawMultipleSearchTagsSelect.defaultProps = defaultProps\n\nexport const MultipleSearchTagsSelect = withI18n({ module: 'search' })(\n  RawMultipleSearchTagsSelect\n)\n\nexport default createInjectSearch({\n  storeSearchResult: false,\n})(MultipleSearchTagsSelect)\n","import wrapInFieldTemplate from 'coreModules/form/higherOrderComponents/wrapInFieldTemplate'\nimport MultipleSearchTagsSelect from './index'\n\nexport default wrapInFieldTemplate(MultipleSearchTagsSelect)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Message } from 'semantic-ui-react'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n}\n\nconst NoResultsFound = ({ i18n: { moduleTranslate } }) => {\n  return (\n    <div style={{ padding: '1em' }}>\n      <Message\n        content={moduleTranslate({\n          capitalize: true,\n          module: 'search',\n          textKey: 'noResultFound.content',\n        })}\n        header={moduleTranslate({\n          capitalize: true,\n          module: 'search',\n          textKey: 'noResultFound.header',\n        })}\n        icon=\"info\"\n        size=\"small\"\n      />\n    </div>\n  )\n}\n\nNoResultsFound.propTypes = propTypes\nexport default compose(withI18n())(NoResultsFound)\n","/* eslint-disable react/no-danger */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport { debounce } from 'lodash'\nimport Input from 'coreModules/form/components/fields/Input'\n\nimport { createInjectSearch } from 'coreModules/search/higherOrderComponents'\n\nconst propTypes = {\n  buildLocalAggregationQuery: PropTypes.func.isRequired,\n  displayCount: PropTypes.bool,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.object.isRequired,\n  otherFieldFilters: PropTypes.object,\n  search: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  displayCount: false,\n  otherFieldFilters: undefined,\n}\n\nclass SearchPreview extends Component {\n  constructor(props) {\n    const startValue = props.input && props.input.value\n    super(props)\n    this.state = {\n      previews: [],\n      searchString: startValue || '',\n    }\n\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleDrillDownSearchResult = this.handleDrillDownSearchResult.bind(\n      this\n    )\n\n    this.debouncedUpdateFormValue = debounce(\n      value => {\n        this.props.input.onChange(value)\n      },\n      200,\n      {\n        maxWait: 400,\n      }\n    )\n\n    this.debounceSearch = debounce(\n      searchString => {\n        this.props\n          .search(\n            this.props.buildLocalAggregationQuery({ input: { searchString } })\n          )\n          .then(this.handleDrillDownSearchResult)\n      },\n      400,\n      {\n        maxWait: 800,\n      }\n    )\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.otherFieldFilters !== nextProps.otherFieldFilters &&\n      nextProps.input.value\n    ) {\n      this.debounceSearch(nextProps.input.value)\n    }\n    if (\n      this.props.input.value !== nextProps.input.value &&\n      nextProps.input.value\n    ) {\n      this.debounceSearch(nextProps.input.value)\n    }\n  }\n\n  componentWillUnmount() {\n    this.debounceSearch.cancel()\n  }\n\n  handleOnChange(event) {\n    this.setState({\n      searchString: event.target.value,\n    })\n    this.debouncedUpdateFormValue(event.target.value)\n  }\n\n  handleDrillDownSearchResult(drillDownSearchResult) {\n    const previews = drillDownSearchResult.map(({ attributes, id }) => {\n      return {\n        id,\n        preview: attributes.preview,\n        srcField: attributes.srcField,\n      }\n    })\n\n    this.setState({\n      previews,\n    })\n  }\n\n  render() {\n    const { previews, searchString } = this.state\n    const { input, ...rest } = this.props\n    const { value } = input\n\n    const displayPreview = previews.length && value\n\n    const patchedInput = {\n      ...input,\n      onChange: this.handleOnChange,\n      value: searchString,\n    }\n\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Column width={16}>\n          <Input\n            {...rest}\n            icon=\"search\"\n            iconPosition=\"right\"\n            input={patchedInput}\n            type=\"text\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Segment\n            style={{ background: 'white', height: 300, overflowY: 'scroll' }}\n          >\n            {!displayPreview && <p> Preview (top 50 matches)</p>}\n            {!displayPreview\n              ? null\n              : previews.map(item => {\n                  return (\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: `${item.preview} (${item.srcField})`,\n                      }}\n                      key={`${item.id}-${item.srcField}-${item.preview}`}\n                    />\n                  )\n                })}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nSearchPreview.propTypes = propTypes\nSearchPreview.defaultProps = defaultProps\n\nexport default compose(\n  createInjectSearch({\n    storeSearchResult: false,\n  })\n)(SearchPreview)\n","import wrapInFieldTemplate from 'coreModules/form/higherOrderComponents/wrapInFieldTemplate'\nimport TagTypeDropdown from './index'\n\nexport default wrapInFieldTemplate(TagTypeDropdown)\n","export { default as FeatureTypeRange } from './FeatureTypeRange'\nexport {\n  default as MultipleChoiceCheckboxes,\n} from './MultipleChoiceCheckboxes/Local'\nexport {\n  default as MultipleChoiceCheckboxesField,\n} from './MultipleChoiceCheckboxes/Field'\nexport { default as MultipleSearchTagsSelect } from './MultipleSearchTagsSelect'\nexport {\n  default as MultipleSearchTagsSelectField,\n} from './MultipleSearchTagsSelect/Field'\nexport { default as NoResultsFound } from './NoResultsFound'\nexport { default as SearchPreviewField } from './SearchPreview/Field'\nexport { default as TagTypeDropdownField } from './TagTypeDropdown/Field'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport { Icon } from 'semantic-ui-react'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\n\nconst ModuleTranslate = createModuleTranslate('commonUi')\n\nconst propTypes = {\n  navItem: PropTypes.shape({\n    exact: PropTypes.bool.isRequired,\n    icon: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    push: PropTypes.bool,\n  }).isRequired,\n}\n\nconst SidebarNavItem = ({ navItem }) => {\n  const { exact, icon, name, path, push, translate = true } = navItem\n  return (\n    <NavLink\n      activeClassName=\"active\"\n      className={push ? 'item push bottom' : 'item'}\n      exact={exact}\n      key={path}\n      style={{ textAlign: 'left' }}\n      to={path}\n    >\n      {icon && <Icon name={icon} size=\"large\" />}\n      {translate ? (\n        <ModuleTranslate capitalize textKey={`routes.${name}`} />\n      ) : (\n        name\n      )}\n    </NavLink>\n  )\n}\n\nSidebarNavItem.propTypes = propTypes\n\nexport default SidebarNavItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Icon } from 'semantic-ui-react'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\n\nimport SidebarNavItem from './SidebarNavItem'\n\nconst ModuleTranslate = createModuleTranslate('commonUi')\n\nconst propTypes = {\n  navGroupItem: PropTypes.shape({\n    exact: PropTypes.bool,\n    icon: PropTypes.string,\n    items: PropTypes.array,\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string,\n    push: PropTypes.bool,\n    translate: PropTypes.bool,\n  }).isRequired,\n}\n\nconst SidebarNavItemGroup = ({ navGroupItem }) => {\n  const {\n    exact,\n    icon,\n    items,\n    name,\n    path,\n    push,\n    translate = true,\n  } = navGroupItem\n  if (path) {\n    return (\n      <NavLink\n        activeClassName=\"active\"\n        className={push ? 'item push bottom' : 'item'}\n        exact={exact}\n        key={path || name}\n        to={path}\n      >\n        {icon && <Icon name={icon} size=\"large\" />}\n        {translate ? (\n          <ModuleTranslate capitalize textKey={`routes.${name}`} />\n        ) : (\n          name\n        )}\n        <Menu.Menu>\n          {items.map(navItem => {\n            return <SidebarNavItem key={navItem.name} navItem={navItem} />\n          })}\n        </Menu.Menu>\n      </NavLink>\n    )\n  }\n\n  return (\n    <Menu.Item\n      className={push ? 'push bottom' : 'item'}\n      exact={exact}\n      key={name}\n    >\n      {icon && <Icon name={icon} size=\"large\" />}\n      {translate ? (\n        <ModuleTranslate capitalize textKey={`routes.${name}`} />\n      ) : (\n        name\n      )}\n      <Menu.Menu>\n        {items.map(navItem => {\n          return <SidebarNavItem key={navItem.name} navItem={navItem} />\n        })}\n      </Menu.Menu>\n    </Menu.Item>\n  )\n}\n\nSidebarNavItemGroup.propTypes = propTypes\n\nexport default SidebarNavItemGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { Sidebar, Icon, Menu } from 'semantic-ui-react'\nimport logoutActionCreator from 'coreModules/user/actionCreators/logout'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\n\nimport SidebarNavItem from './SidebarNavItem'\nimport SidebarNavItemGroup from './SidebarNavItemGroup'\n\nconst ModuleTranslate = createModuleTranslate('commonUi')\n\nconst mapDispatchToProps = {\n  logout: logoutActionCreator,\n}\n\nconst propTypes = {\n  displayHome: PropTypes.bool,\n  displayLogout: PropTypes.bool,\n  logout: PropTypes.func.isRequired,\n  navigationItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      exact: PropTypes.bool,\n      icon: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      path: PropTypes.string,\n      push: PropTypes.bool,\n    })\n  ),\n  nested: PropTypes.bool,\n  width: PropTypes.number,\n}\n\nconst defaultProps = {\n  displayHome: false,\n  displayLogout: false,\n  navigationItems: [],\n  nested: false,\n  width: 100,\n}\n\nexport const NavigationSidebar = ({\n  displayHome,\n  displayLogout,\n  nested,\n  logout,\n  navigationItems,\n  width,\n}) => {\n  return (\n    <Sidebar\n      animation=\"overlay\"\n      as={Menu}\n      borderless={nested}\n      className=\"flex\"\n      icon={nested ? undefined : 'labeled'}\n      inverted\n      size=\"large\"\n      style={{ overflow: 'hidden', width }}\n      vertical\n      visible\n    >\n      {navigationItems.map(navItem => {\n        if (navItem.items) {\n          return (\n            <SidebarNavItemGroup key={navItem.name} navGroupItem={navItem} />\n          )\n        }\n\n        return <SidebarNavItem key={navItem.name} navItem={navItem} />\n      })}\n      {displayHome && (\n        <NavLink\n          activeClassName=\"active\"\n          className=\"item push bottom\"\n          exact\n          key=\"/\"\n          to=\"/\"\n        >\n          <Icon name=\"reply\" />\n          <ModuleTranslate capitalize textKey=\"routes.start\" />\n        </NavLink>\n      )}\n      {displayLogout && (\n        <Menu.Item\n          onClick={event => {\n            event.preventDefault()\n            logout()\n          }}\n        >\n          <Icon name=\"sign out\" />\n          <ModuleTranslate capitalize textKey=\"Navbar.logout\" />\n        </Menu.Item>\n      )}\n    </Sidebar>\n  )\n}\n\nNavigationSidebar.propTypes = propTypes\nNavigationSidebar.defaultProps = defaultProps\n\nexport default compose(\n  withRouter,\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(NavigationSidebar)\n","import { injectNavigationItems } from 'coreModules/routing/higherOrderComponents'\n\nimport NavigationSidebar from '../NavigationSidebar'\n\nexport default injectNavigationItems(NavigationSidebar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  title: PropTypes.node.isRequired,\n}\n\nconst Title = ({ title }) => {\n  return <h2>{title}</h2>\n}\n\nTitle.propTypes = propTypes\n\nexport default Title\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport Title from './Title'\n\nconst propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  title: PropTypes.node.isRequired,\n}\n\nconst defaultProps = {\n  children: null,\n  color: 'blue',\n}\n\nconst Header = ({ color, title, children }) => {\n  return (\n    <Segment color={color} inverted>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Title title={title} />\n          </Grid.Column>\n          <Grid.Column floated=\"right\" textAlign=\"right\" width={4}>\n            {children}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  )\n}\n\nHeader.propTypes = propTypes\nHeader.defaultProps = defaultProps\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nconst propTypes = {\n  children: PropTypes.node,\n  preContent: PropTypes.node,\n}\n\nconst defaultProps = {\n  children: null,\n  preContent: null,\n}\n\nconst Content = ({ children, preContent }) => {\n  return (\n    <Grid.Row>\n      {preContent && <Grid.Column width={16}>{preContent}</Grid.Column>}\n      <Grid.Column width={16}>\n        <Segment stacked>{children}</Segment>\n      </Grid.Column>\n    </Grid.Row>\n  )\n}\n\nContent.propTypes = propTypes\nContent.defaultProps = defaultProps\n\nexport default Content\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\nimport Header from './Header'\nimport Content from './Content'\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst defaultProps = {}\n\nconst Block = ({ children }) => {\n  return <Grid>{children}</Grid>\n}\n\nBlock.propTypes = propTypes\nBlock.defaultProps = defaultProps\nBlock.Header = Header\nBlock.Content = Content\n\nexport default Block\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport extractProps from 'utilities/extractProps'\n\nconst propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      renderColumn: PropTypes.func,\n      style: PropTypes.object,\n      width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }).isRequired\n  ),\n  renderColumn: PropTypes.func,\n  wrapperClassNames: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n}\nconst defaultProps = {\n  columns: undefined,\n  renderColumn: undefined,\n  wrapperClassNames: undefined,\n  wrapperStyle: undefined,\n}\n\nclass ColumnLayout extends Component {\n  render() {\n    const {\n      columns,\n      renderColumn,\n      wrapperClassNames,\n      wrapperStyle,\n    } = this.props\n\n    if (!columns || !columns.length) {\n      return null\n    }\n\n    return (\n      <div\n        className={wrapperClassNames}\n        style={{\n          display: 'flex',\n          ...(wrapperStyle || {}),\n        }}\n      >\n        {columns.map((columnSpec, index) => {\n          const { extractedProps: columnProps, rest } = extractProps({\n            keys: ['classNames', 'id', 'key', 'renderColumn', 'style', 'width'],\n            props: columnSpec,\n          })\n\n          return (\n            <div\n              className={columnProps.classNames}\n              id={columnProps.id}\n              key={columnProps.key || index}\n              style={\n                columnProps.width\n                  ? {\n                      flex: 'none',\n                      float: 'left',\n                      width: columnProps.width,\n                      ...(columnProps.style || {}),\n                    }\n                  : {\n                      flex: 'auto',\n                      float: 'left',\n                      minWidth: 0, // needed to fix flexbox issue, kind of like: https://css-tricks.com/flexbox-truncated-text/\n                      ...(columnProps.style || {}),\n                    }\n              }\n            >\n              {!columnProps.renderColumn &&\n                renderColumn &&\n                renderColumn(columnProps.key, {\n                  ...this.props,\n                  ...rest,\n                })}\n              {columnProps.renderColumn &&\n                columnProps.renderColumn({ ...this.props, ...rest })}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nColumnLayout.propTypes = propTypes\nColumnLayout.defaultProps = defaultProps\n\nexport default ColumnLayout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { NotificationDisplay } from 'coreModules/notifications/components'\nimport layoutSelectors from '../../globalSelectors'\n\nconst mapStateToProps = state => {\n  return {\n    rightSidebarIsOpen: layoutSelectors.getRightSidebarIsOpen(state),\n  }\n}\n\nconst propTypes = {\n  rightSidebarIsOpen: PropTypes.bool.isRequired,\n}\n\nexport const InformationSidebar = ({ rightSidebarIsOpen }) => {\n  if (!rightSidebarIsOpen) {\n    return null\n  }\n  return <NotificationDisplay displayType=\"inline\" />\n}\n\nInformationSidebar.propTypes = propTypes\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps)\n)(InformationSidebar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport extractProps from 'utilities/extractProps'\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  renderRow: PropTypes.func,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      key: PropTypes.string.isRequired,\n      renderRow: PropTypes.func,\n    }).isRequired\n  ),\n  wrapperClassNames: PropTypes.string,\n  wrapperId: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n}\nconst defaultProps = {\n  renderRow: undefined,\n  rows: undefined,\n  wrapperClassNames: undefined,\n  wrapperId: undefined,\n  wrapperStyle: undefined,\n}\n\nclass RowLayout extends Component {\n  render() {\n    const {\n      availableHeight,\n      renderRow,\n      rows,\n      wrapperClassNames,\n      wrapperId,\n      wrapperStyle,\n    } = this.props\n\n    if (!rows || !rows.length) {\n      return null\n    }\n\n    return (\n      <div\n        className={wrapperClassNames}\n        id={wrapperId}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: `${availableHeight}px`,\n          overflow: 'hidden',\n          ...(wrapperStyle || {}),\n        }}\n      >\n        {rows.map((rowSpec, index) => {\n          const { extractedProps: rowProps, rest } = extractProps({\n            keys: ['classNames', 'id', 'height', 'key', 'renderRow', 'style'],\n            props: rowSpec,\n          })\n\n          return (\n            <div\n              className={rowProps.classNames}\n              id={rowProps.id}\n              key={rowProps.key || index}\n              style={\n                rowProps.height\n                  ? {\n                      flex: 'none',\n                      float: 'left',\n                      height: rowProps.height,\n                      ...(rowProps.style || {}),\n                    }\n                  : {\n                      flex: 'auto',\n                      float: 'left',\n                      minHeight: 0, // needed to fix flexbox issue, kind of like: https://css-tricks.com/flexbox-truncated-text/\n                      ...(rowProps.style || {}),\n                    }\n              }\n            >\n              {!rowProps.renderRow &&\n                renderRow &&\n                renderRow(rowProps.key, { ...this.props, ...rest })}\n              {rowProps.renderRow &&\n                rowProps.renderRow({ ...this.props, ...rest })}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nRowLayout.propTypes = propTypes\nRowLayout.defaultProps = defaultProps\n\nexport default RowLayout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Button, Divider, Grid, Header, Icon } from 'semantic-ui-react'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport userSelectors from 'coreModules/user/globalSelectors'\n\nconst ModuleTranslate = createModuleTranslate('commonUi')\n\nconst mapStateToProps = state => {\n  return {\n    username: userSelectors.getUsername(state),\n  }\n}\n\nconst propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onLogout: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n}\n\nconst UserMenu = ({\n  onLogout: handleLogout,\n  onClick: handleClick,\n  username,\n}) => {\n  return (\n    <Grid padded textAlign=\"left\" verticalAlign=\"middle\">\n      <Grid.Row>\n        <Header>{username}</Header>\n      </Grid.Row>\n      <Divider style={{ margin: 0 }} />\n      <Grid.Row>\n        <Button\n          icon\n          labelPosition=\"left\"\n          onClick={event => {\n            event.preventDefault()\n            handleLogout()\n            handleClick()\n          }}\n          size=\"large\"\n        >\n          <Icon name=\"sign out\" />\n          <ModuleTranslate capitalize textKey=\"Navbar.logout\" />\n        </Button>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nUserMenu.propTypes = propTypes\n\nexport default compose(connect(mapStateToProps))(UserMenu)\n\n// <Grid.Row>\n//   <Link onClick={handleClick} to=\"/app/settings\">\n//     <Button icon labelPosition=\"left\" size=\"large\">\n//       <Icon name=\"setting\" />\n//       <ModuleTranslate capitalize textKey=\"routes.settings\" />\n//     </Button>\n//   </Link>\n// </Grid.Row>\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Icon, Menu, Popup } from 'semantic-ui-react'\n\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\nimport { injectActiveLocationDescription } from 'coreModules/routing/higherOrderComponents'\nimport { logout as logoutAC } from 'coreModules/user/actionCreators'\nimport UserMenu from './UserMenu'\n\nconst mapDispatchToProps = { logout: logoutAC }\n\nconst propTypes = {\n  activeLocationSubtitle: PropTypes.string,\n  activeLocationTitle: PropTypes.string,\n  logout: PropTypes.func.isRequired,\n  toggleLeftSidebar: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  activeLocationSubtitle: undefined,\n  activeLocationTitle: undefined,\n}\n\nclass TopMenu extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = { isOpen: false }\n    this.handleClose = this.handleClose.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleOpen() {\n    this.setState({ isOpen: true })\n  }\n\n  handleClose() {\n    this.setState({ isOpen: false })\n  }\n\n  handleLogout() {\n    this.props.logout()\n  }\n\n  render() {\n    const {\n      activeLocationSubtitle,\n      activeLocationTitle,\n      toggleLeftSidebar,\n    } = this.props\n    return (\n      <React.Fragment>\n        <KeyboardShortcuts\n          shortcuts={[\n            {\n              command: 'l o',\n              description: 'Log out',\n              onPress: this.handleLogout,\n            },\n          ]}\n        />\n        <Menu inverted style={{ borderRadius: 0, margin: 0 }}>\n          <Menu.Item onClick={toggleLeftSidebar}>\n            <Icon name=\"sidebar\" size=\"large\" />\n          </Menu.Item>\n          {activeLocationTitle && (\n            <Grid padded textAlign=\"center\" verticalAlign=\"middle\">\n              <Grid.Column>\n                <Header inverted>\n                  {activeLocationTitle}\n                  {activeLocationSubtitle && ' '}\n                  {activeLocationSubtitle && activeLocationSubtitle}\n                </Header>\n              </Grid.Column>\n            </Grid>\n          )}\n          <Popup\n            basic\n            content={\n              <UserMenu\n                onClick={this.handleClose}\n                onLogout={this.handleLogout}\n              />\n            }\n            on=\"click\"\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            open={this.state.isOpen}\n            position=\"bottom right\"\n            trigger={\n              <Menu.Item position=\"right\" style={{ cursor: 'pointer' }}>\n                <Icon name=\"user\" size=\"large\" />\n              </Menu.Item>\n            }\n          />\n        </Menu>\n      </React.Fragment>\n    )\n  }\n}\n\nTopMenu.propTypes = propTypes\nTopMenu.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  ),\n  injectActiveLocationDescription\n)(TopMenu)\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Dimmer } from 'semantic-ui-react'\n\nimport { createApplicationLayer } from 'coreModules/layout/higherOrderComponents'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport sizeSelectors from 'coreModules/size/globalSelectors'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport {\n  actionCreators as keyObjectActionCreators,\n  globalSelectors as keyObjectGlobalSelectors,\n} from '../keyObjectModule'\nimport { APPLICATION_LAYER_VIEW } from '../constants'\n\nimport TopMenu from './TopMenu'\n\nexport const getViewWrapStyle = ({\n  leftSidebarAlwaysVisible,\n  leftSidebarIsOpen,\n  leftSidebarTogglable,\n  leftSidebarWidth,\n}) => {\n  const viewWrapBaseStyle = {\n    height: '100vh',\n    left: 0,\n    minWidth: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    top: 0,\n    transition: 'transform 0.2s',\n    zIndex: 200,\n  }\n\n  const leftSidebarStyle = leftSidebarTogglable\n    ? {\n        transform: leftSidebarIsOpen\n          ? `translate(${leftSidebarWidth}px, 0px)`\n          : '',\n        WebkitTransform: leftSidebarIsOpen\n          ? `translate(${leftSidebarWidth}px, 0px)`\n          : '',\n\n        zIndex: 200,\n      }\n    : {\n        paddingLeft: leftSidebarAlwaysVisible ? leftSidebarWidth : 0,\n        zIndex: 1,\n      }\n\n  return {\n    ...viewWrapBaseStyle,\n    ...leftSidebarStyle,\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLarge: sizeSelectors.getIsLarge(state),\n    leftSidebarIsOpen: keyObjectGlobalSelectors.get['leftSidebar.isOpen'](\n      state\n    ),\n  }\n}\n\nconst mapDispatchToProps = {\n  setLeftSidebarIsOpen: keyObjectActionCreators.set['leftSidebar.isOpen'],\n}\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  isLarge: PropTypes.bool.isRequired,\n  leftSidebarEnabled: PropTypes.bool,\n  leftSidebarIsOpen: PropTypes.bool.isRequired,\n  leftSidebarTogglable: PropTypes.bool,\n  leftSidebarWidth: PropTypes.number,\n  setLeftSidebarIsOpen: PropTypes.func.isRequired,\n  topMenuEnabled: PropTypes.bool,\n  windowHeight: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  leftSidebarEnabled: false,\n  leftSidebarTogglable: false,\n  leftSidebarWidth: 100,\n  topMenuEnabled: false,\n}\n\nconst ViewWrap = ({\n  children,\n  isLarge,\n  leftSidebarEnabled,\n  leftSidebarIsOpen,\n  leftSidebarTogglable,\n  leftSidebarWidth,\n  setLeftSidebarIsOpen,\n  topMenuEnabled,\n  windowHeight,\n}) => {\n  if (!windowHeight) {\n    return null\n  }\n\n  const leftSidebarAlwaysVisible = isLarge && leftSidebarEnabled\n\n  const viewWrapStyle = getViewWrapStyle({\n    leftSidebarAlwaysVisible,\n    leftSidebarIsOpen,\n    leftSidebarTogglable,\n    leftSidebarWidth,\n  })\n  const dimmerActive = leftSidebarTogglable && leftSidebarIsOpen\n\n  const toggleLeftSidebar = () => setLeftSidebarIsOpen(!leftSidebarIsOpen)\n\n  return (\n    <div style={viewWrapStyle}>\n      <Dimmer.Dimmable dimmed={dimmerActive}>\n        {topMenuEnabled && (\n          <TopMenu\n            toggleLeftSidebar={\n              leftSidebarEnabled && leftSidebarTogglable && toggleLeftSidebar\n            }\n          />\n        )}\n        <Dimmer active={dimmerActive} onClickOutside={toggleLeftSidebar} />\n        <div\n          className=\"ui fluid dina background\"\n          // deducting the menu height from this div\n          style={{\n            height: topMenuEnabled\n              ? windowHeight - emToPixels(3.4375)\n              : windowHeight,\n            overflow: 'auto',\n          }}\n        >\n          {children}\n        </div>\n      </Dimmer.Dimmable>\n    </div>\n  )\n}\n\nViewWrap.propTypes = propTypes\nViewWrap.defaultProps = defaultProps\n\nexport default compose(\n  createApplicationLayer({\n    layer: APPLICATION_LAYER_VIEW,\n  }),\n  injectWindowHeight,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ViewWrap)\n","export { default as AppNavigationSidebar } from './AppNavigationSidebar'\nexport { default as Block } from './Block'\nexport { default as ColumnLayout } from './ColumnLayout'\nexport { default as InformationSidebar } from './InformationSidebar'\nexport { default as NavigationSidebar } from './NavigationSidebar'\nexport { default as RowLayout } from './RowLayout'\nexport { default as ViewWrap } from './ViewWrap'\n","export const LATEST = 'latest'\nexport const DAY = 'day'\nexport const MODULE_NAME = 'form'\nexport const MONTH = 'month'\nexport const OPEN_RANGE = 'openRange'\nexport const RANGE = 'range'\nexport const SINGLE = 'single'\nexport const YEAR = 'year'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'semantic-ui-react'\n\nconst propTypes = {\n  children: PropTypes.node,\n  container: PropTypes.bool,\n  fullViewHeight: PropTypes.bool,\n}\nconst defaultProps = {\n  children: null,\n  container: true,\n  fullViewHeight: false,\n}\n\nconst PageTemplate = ({ children, container, fullViewHeight }) => {\n  if (container) {\n    return (\n      <Container\n        style={{\n          minHeight: fullViewHeight ? '100vh' : undefined,\n          paddingBottom: 30,\n          paddingTop: 30,\n        }}\n      >\n        {children}\n      </Container>\n    )\n  }\n  return (\n    <div\n      style={{\n        minHeight: fullViewHeight ? '100vh' : undefined,\n        padding: 20,\n        paddingTop: 20,\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nPageTemplate.propTypes = propTypes\nPageTemplate.defaultProps = defaultProps\n\nexport default PageTemplate\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { push } from 'react-router-redux'\nimport config from 'config'\nimport globalSelectors from '../globalSelectors'\n\nexport default function requireLoggedInUser(ComposedComponent) {\n  const mapStateToProps = state => ({\n    loggedIn: globalSelectors.getUserLoggedIn(state),\n    userLoading: globalSelectors.getUserLoading(state),\n  })\n\n  const mapDispathToProps = {\n    push,\n  }\n\n  const propTypes = {\n    loggedIn: PropTypes.bool.isRequired,\n    push: PropTypes.func.isRequired,\n    userLoading: PropTypes.bool.isRequired,\n  }\n\n  class LoggedInUser extends Component {\n    componentWillMount() {\n      this.checkAuth(this.props.loggedIn, this.props.userLoading)\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.checkAuth(nextProps.loggedIn, nextProps.userLoading)\n    }\n    checkAuth(loggedIn, userLoading) {\n      if (config.auth.active && !userLoading && !loggedIn) {\n        this.props.push('/login')\n      }\n    }\n\n    render() {\n      if (this.props.loggedIn || !config.auth.active) {\n        return <ComposedComponent {...this.props} />\n      }\n      return null\n    }\n  }\n\n  LoggedInUser.propTypes = propTypes\n  const wrappedComponent = compose(\n    connect(\n      mapStateToProps,\n      mapDispathToProps\n    )\n  )(LoggedInUser)\n  wrappedComponent.requireLoggedInUser = true\n  return wrappedComponent\n}\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { push } from 'react-router-redux'\nimport globalSelectors from '../globalSelectors'\n\nexport default function requireLoggedOutUser(ComposedComponent) {\n  const mapStateToProps = state => ({\n    loggedIn: globalSelectors.getUserLoggedIn(state),\n    userLoading: globalSelectors.getUserLoading(state),\n  })\n\n  const mapDispathToProps = {\n    push,\n  }\n\n  const propTypes = {\n    loggedIn: PropTypes.bool.isRequired,\n    push: PropTypes.func.isRequired,\n    userLoading: PropTypes.bool.isRequired,\n  }\n\n  class LoggedOutUser extends Component {\n    componentWillMount() {\n      this.checkAuth(this.props.loggedIn, this.props.userLoading)\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.checkAuth(nextProps.loggedIn, nextProps.userLoading)\n    }\n    checkAuth(loggedIn, userLoading) {\n      if (!userLoading && loggedIn) {\n        this.props.push('/app')\n      }\n    }\n\n    render() {\n      if (this.props.loggedIn) {\n        return null\n      }\n      return <ComposedComponent {...this.props} />\n    }\n  }\n\n  LoggedOutUser.propTypes = propTypes\n\n  return compose(\n    connect(\n      mapStateToProps,\n      mapDispathToProps\n    )\n  )(LoggedOutUser)\n}\n","import requireLoggedIn from './requireLoggedIn'\nimport requireLoggedOut from './requireLoggedOut'\n\nexport { requireLoggedIn, requireLoggedOut }\n","import immutable from 'object-path-immutable'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst models = schemaInterface.getModels()\n\nconst createFormModels = () => {\n  let updatedModels = { ...models }\n\n  /*\n   * taxon\n   */\n  updatedModels = immutable.set(updatedModels, 'taxon.required', [\n    'acceptedTaxonName',\n    'parent',\n  ])\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'taxon.properties.acceptedTaxonName',\n    {\n      properties: {\n        id: {\n          minLength: 1,\n          type: 'string',\n        },\n      },\n      required: ['id'],\n      type: 'object',\n    }\n  )\n\n  updatedModels = immutable.set(updatedModels, 'taxon.properties.parent', {\n    properties: {\n      id: {\n        minLength: 1,\n        type: 'string',\n      },\n    },\n    required: ['id'],\n    type: 'object',\n  })\n\n  updatedModels = immutable.set(updatedModels, 'taxon.properties.synonyms', {\n    items: {\n      properties: {\n        id: {\n          minLength: 1,\n          type: 'string',\n        },\n      },\n    },\n    type: 'array',\n  })\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'taxon.properties.vernacularNames',\n    {\n      items: {\n        properties: {\n          language: { type: 'string' },\n          name: { type: 'string' },\n        },\n        type: 'object',\n      },\n      type: 'array',\n    }\n  )\n\n  /*\n   * taxonName\n   */\n  updatedModels = immutable.set(updatedModels, 'taxonName.required', [\n    'name',\n    'rank',\n  ])\n\n  updatedModels = immutable.set(updatedModels, 'taxonName.properties.name', {\n    minLength: 1,\n    type: 'string',\n  })\n\n  updatedModels = immutable.set(updatedModels, 'taxonName.properties.rank', {\n    minLength: 1,\n    type: 'string',\n  })\n\n  return updatedModels\n}\n\nconst formModels = createFormModels()\n\nexport { formModels }\n","import scientificNameRoot from './scientificNameRoot'\nimport taxonStatus from './taxonStatus'\n\nexport default {\n  scientificNameRoot,\n  taxonStatus,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.scientificName',\n    },\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'name',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'RankDropdown',\n    componentProps: {\n      columnProps: { clear: true, width: 9 },\n    },\n    name: 'rank',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 6 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'rubinNumber',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'scientificNameRoot',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.status',\n    },\n  },\n  {\n    componentName: 'TaxonNameTaxonStatus',\n  },\n]\n\nexport default {\n  name: 'taxonStatus',\n  parts,\n}\n","import scientificName from './scientificName'\n\nexport default [scientificName]\n","import { recordHistoryEvents } from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst { scientificNameRoot, taxonStatus } = unitSpecs\n\nconst units = [scientificNameRoot, taxonStatus, recordHistoryEvents]\n\nexport default {\n  name: 'scientificName',\n  units,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  formValueSelector as formValueSelectorFactory,\n  reduxForm,\n  reset,\n} from 'redux-form'\n\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { Form, FormRow } from 'coreModules/form/components'\nimport { createMapRequiredStrings } from 'coreModules/form/utilities/errorTransformations'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { formModels } from '../../../../schemas'\nimport customParts from '../../../formParts'\nimport sectionSpecs from './sectionSpecs'\n\nconst formActionBarHeight = emToPixels(4.625)\n\nconst mapDispatchToProps = {\n  reset,\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  form: PropTypes.string.isRequired,\n  getAllowTransition: PropTypes.func,\n  handleSubmit: PropTypes.func.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  preventLeavingForm: PropTypes.bool,\n  reset: PropTypes.func.isRequired,\n  unsavedChangesMessage: PropTypes.string,\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  itemSubHeader: undefined,\n  preventLeavingForm: false,\n  unsavedChangesMessage: undefined,\n}\n\nclass BaseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.handleUndoChanges = this.handleUndoChanges.bind(this)\n    this.formValueSelector = formValueSelectorFactory(props.form)\n  }\n\n  handleUndoChanges() {\n    this.props.reset(this.props.form)\n  }\n\n  render() {\n    const {\n      availableHeight,\n      form,\n      getAllowTransition,\n      handleSubmit,\n      itemHeader,\n      itemSubHeader,\n      preventLeavingForm,\n      unsavedChangesMessage,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(() => {\n          /* submit handled in resource manager */\n        })}\n        preventLeavingForm={preventLeavingForm}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n        unsavedChangesMessage={unsavedChangesMessage}\n      >\n        <FormRow\n          {...rest}\n          availableHeight={availableHeight - formActionBarHeight}\n          customParts={customParts}\n          formName={form}\n          formValueSelector={this.formValueSelector}\n          itemHeader={itemHeader}\n          itemSubHeader={itemSubHeader}\n          module=\"taxon\"\n          moduleName=\"taxon\"\n          sectionSpecs={sectionSpecs}\n        />\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nconst EnhancedForm = compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(BaseForm)\n\nexport default reduxForm({\n  enableReinitialize: true,\n  validate: compose(\n    createMapRequiredStrings(['name', 'rank']),\n    customFormValidator({ model: 'taxonName', models: formModels })\n  ),\n})(EnhancedForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  itemId: undefined,\n}\n\nconst getAllowTransition = (location, action) => {\n  if (action === 'POP') {\n    return false\n  }\n  return location.search.includes('mainColumn=edit')\n}\n\nexport class Create extends PureComponent {\n  render() {\n    const { itemId, onInteraction, ...rest } = this.props\n    const initialValues = itemId\n      ? { parent: { id: itemId }, taxonNameType: 'scientific' }\n      : { taxonNameType: 'scientific' }\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"taxonNameCreate\"\n        getAllowTransition={getAllowTransition}\n        initialValues={initialValues}\n        itemHeader={\n          <ModuleTranslate\n            capitalize\n            module=\"taxon\"\n            textKey=\"headers.newScientificName\"\n          />\n        }\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        preventLeavingForm\n        unsavedChangesMessage=\"You have not saved the new record, are you sure you want to leave?\"\n      />\n    )\n  }\n}\n\nCreate.propTypes = propTypes\nCreate.defaultProps = defaultProps\n\nexport default Create\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport BaseForm from './BaseForm'\n\nconst passthroughProps = ['nestedTaxonName', 'resourceActivities']\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nexport class Edit extends PureComponent {\n  render() {\n    const { nestedItem, onInteraction, ...rest } = this.props\n\n    if (!nestedItem) {\n      return null\n    }\n\n    const {\n      name,\n      rank,\n      resourceActivities,\n      rubinNumber,\n      taxonNameType,\n    } = nestedItem\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"taxonNameEdit\"\n        initialValues={{\n          name,\n          rank,\n          rubinNumber,\n          taxonNameType,\n        }}\n        nestedTaxonName={nestedItem}\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        onInteraction={onInteraction}\n        passthroughProps={passthroughProps}\n        resourceActivities={resourceActivities}\n      />\n    )\n  }\n}\n\nEdit.propTypes = propTypes\nEdit.defaultProps = defaultProps\n\nexport default compose(withI18n({ module: 'taxon' }))(Edit)\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport FieldWrapper from 'coreModules/form/components/FieldWrapper'\nimport { DropdownSearch, Input } from 'coreModules/form/components'\nimport { DROPDOWN_FILTER_OPTIONS } from '../../../constants'\n\nexport const FORM_NAME = 'taxonNameFilter'\n\nconst log = createLog('modules:locality:BaseForm')\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nconst noop = () => {}\n\nexport class BaseForm extends Component {\n  render() {\n    log.render()\n    const { error, handleSubmit } = this.props\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Form error={!!error} onSubmit={handleSubmit(noop)}>\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Scientific name\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"name\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={DropdownSearch}\n                    enableHelpNotifications={false}\n                    fluid\n                    label=\"Rank\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"rank\"\n                    options={DROPDOWN_FILTER_OPTIONS}\n                    type=\"dropdown-search-local\"\n                  />\n                </Grid.Column>\n\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"RUBIN no.\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"rubinNumber\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  form: FORM_NAME,\n})(BaseForm)\n","export default function buildFilterQuery({ values }) {\n  const and = [\n    {\n      filter: {\n        filterFunction: 'taxonNameType',\n        input: {\n          value: 'scientific',\n        },\n      },\n    },\n  ]\n\n  if (values.name) {\n    and.push({\n      filter: {\n        filterFunction: 'nameSearch',\n        input: {\n          value: values.name,\n        },\n      },\n    })\n  }\n\n  if (values.rank) {\n    and.push({\n      filter: {\n        filterFunction: 'rank',\n        input: {\n          value: values.rank,\n        },\n      },\n    })\n  }\n\n  if (values.rubinNumber) {\n    and.push({\n      filter: {\n        filterFunction: 'rubinNumber',\n        input: {\n          value: values.rubinNumber,\n        },\n      },\n    })\n  }\n\n  if (!and.length) {\n    return {}\n  }\n\n  return {\n    and,\n  }\n}\n","const tableColumnSpecifications = [\n  {\n    fieldPath: 'name',\n    label: 'modules.taxon.fieldLabels.scientificName',\n    width: 250,\n  },\n  {\n    fieldPath: 'rank',\n    label: 'modules.taxon.fieldLabels.rank',\n    width: 250,\n  },\n  {\n    fieldPath: 'rubinNumber',\n    label: 'modules.taxon.fieldLabels.rubinNumber',\n    width: 250,\n  },\n]\nexport default tableColumnSpecifications\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\n\nimport { ResourceManager } from 'coreModules/resourceManager/components'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport CreateForm from './item/CreateForm'\nimport EditForm from './item/EditForm'\nimport FilterForm from './filter/Form'\nimport buildFilterQuery from './filter/buildFilterQuery'\nimport tableColumnSpecifications from './tableColumnSpecifications'\n\nconst resource = 'taxonName'\nconst include = ['acceptedToTaxon', 'resourceActivities', 'synonymToTaxon']\nconst createGetNestedItemHocInput = {\n  include,\n  refresh: true,\n  relationships: include,\n  resolveRelationships: ['resourceActivity', 'taxon'],\n  resource: 'taxonName',\n}\nconst filterResourceCount = { taxonNameType: 'scientific' }\nconst relationshipsToCheckBeforeDelete = ['acceptedToTaxon', 'synonymToTaxon']\n\nconst sortOrder = ['attributes.name:asc']\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  itemId: PropTypes.string,\n  onNavigation: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n}\n\nclass TaxonNameManager extends Component {\n  constructor(props) {\n    super(props)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.buildEditItemHeaders = this.buildEditItemHeaders.bind(this)\n    this.renderCreateForm = this.renderCreateForm.bind(this)\n    this.renderEditForm = this.renderEditForm.bind(this)\n    this.renderFilterForm = this.renderFilterForm.bind(this)\n  }\n\n  handleInteraction(type, data = {}) {\n    this.props.onNavigation(type, data)\n  }\n\n  buildEditItemHeaders(nestedItem) {\n    if (!nestedItem) {\n      return {}\n    }\n\n    return {\n      itemHeader: nestedItem.name,\n      itemSubHeader: `${this.props.i18n.moduleTranslate({\n        textKey: 'scientificNameOfRank',\n      })} ${nestedItem.rank}`,\n    }\n  }\n\n  renderEditForm(props = {}) {\n    const { itemId } = this.props\n    return (\n      <EditForm\n        {...props}\n        itemId={itemId}\n        onInteraction={this.handleInteraction}\n      />\n    )\n  }\n  renderCreateForm(props = {}) {\n    return <CreateForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  renderFilterForm(props = {}) {\n    return <FilterForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  render() {\n    return (\n      <ResourceManager\n        {...this.props}\n        buildEditItemHeaders={this.buildEditItemHeaders}\n        buildFilterQuery={buildFilterQuery}\n        createGetNestedItemHocInput={createGetNestedItemHocInput}\n        filterHeader=\"Find scientific names\"\n        filterResourceCount={filterResourceCount}\n        onInteraction={this.handleInteraction}\n        relationshipsToCheckBeforeDelete={relationshipsToCheckBeforeDelete}\n        renderCreateForm={this.renderCreateForm}\n        renderEditForm={this.renderEditForm}\n        renderFilterForm={this.renderFilterForm}\n        resource={resource}\n        sortOrder={sortOrder}\n        tableColumnSpecifications={tableColumnSpecifications}\n        treeEnabled={false}\n      />\n    )\n  }\n}\n\nTaxonNameManager.propTypes = propTypes\nTaxonNameManager.defaultProps = defaultProps\n\nexport default compose(withI18n({ module: 'taxon' }))(TaxonNameManager)\n","import { compose } from 'redux'\nimport {\n  createLocalState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonNameManager from './Base'\n\nexport default compose(\n  createLocalState(),\n  createNavigationState()\n)(TaxonNameManager)\n","import scientificNames from './scientificNames'\nimport taxonRoot from './taxonRoot'\nimport vernacularNames from './vernacularNames'\n\nexport default {\n  scientificNames,\n  taxonRoot,\n  vernacularNames,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.connectedScientificNames',\n    },\n  },\n  {\n    componentName: 'ScientificNamesTable',\n    containsReduxFormField: true,\n  },\n]\n\nexport default {\n  name: 'scientificNames',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.taxon',\n    },\n  },\n  {\n    componentName: 'TaxonDropdownPickerSearch',\n    componentProps: {\n      columnProps: { width: 14 },\n    },\n    name: 'parent.id',\n    required: true,\n    wrapInField: true,\n  },\n]\nexport default {\n  name: 'taxonRoot',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.vernacularNames',\n    },\n  },\n  {\n    componentName: 'VernacularNamesTable',\n    containsReduxFormField: true,\n    name: 'vernacularNames',\n  },\n]\n\nexport default {\n  name: 'vernacularNames',\n  parts,\n}\n","import taxon from './taxon'\n\nexport default [taxon]\n","import { recordHistoryEvents } from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst { scientificNames, taxonRoot, vernacularNames } = unitSpecs\n\nconst units = [taxonRoot, scientificNames, vernacularNames, recordHistoryEvents]\n\nexport default {\n  name: 'taxon',\n  units,\n}\n","import objectPath from 'object-path'\n\nconst mapAcceptedTaxonNameError = syncErrors => {\n  const acceptedTaxonNameErrorPath =\n    objectPath.get(syncErrors, 'acceptedTaxonName.fullPath') ||\n    objectPath.get(syncErrors, 'acceptedTaxonName.id.fullPath')\n\n  if (acceptedTaxonNameErrorPath) {\n    return {\n      ...syncErrors,\n      acceptedTaxonName: {\n        id: {\n          errorCode: 'REQUIRED',\n          fullPath: 'acceptedTaxonName.id',\n        },\n      },\n    }\n  }\n\n  return syncErrors\n}\n\nexport default mapAcceptedTaxonNameError\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport {\n  formValueSelector as formValueSelectorFactory,\n  reduxForm,\n  reset,\n} from 'redux-form'\n\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { Form, FormRow } from 'coreModules/form/components'\nimport { mapParentError } from 'coreModules/form/utilities/errorTransformations'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { formModels } from '../../../../schemas'\nimport customParts from '../../../formParts'\nimport sectionSpecs from './sectionSpecs'\nimport { mapAcceptedTaxonNameError } from './transformations/syncErrors'\n\nconst formActionBarHeight = emToPixels(4.625)\n\nconst mapDispatchToProps = {\n  reset,\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  form: PropTypes.string.isRequired,\n  getAllowTransition: PropTypes.func,\n  handleSubmit: PropTypes.func.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  preventLeavingForm: PropTypes.bool,\n  reset: PropTypes.func.isRequired,\n  unsavedChangesMessage: PropTypes.string,\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  itemSubHeader: undefined,\n  preventLeavingForm: false,\n  unsavedChangesMessage: undefined,\n}\n\nclass BaseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.handleUndoChanges = this.handleUndoChanges.bind(this)\n    this.formValueSelector = formValueSelectorFactory(props.form)\n  }\n\n  handleUndoChanges() {\n    this.props.reset(this.props.form)\n  }\n\n  render() {\n    const {\n      availableHeight,\n      form,\n      getAllowTransition,\n      handleSubmit,\n      itemHeader,\n      itemSubHeader,\n      preventLeavingForm,\n      unsavedChangesMessage,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(() => {\n          /* submit handled in resource manager */\n        })}\n        preventLeavingForm={preventLeavingForm}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n        unsavedChangesMessage={unsavedChangesMessage}\n      >\n        <FormRow\n          {...rest}\n          availableHeight={availableHeight - formActionBarHeight}\n          customParts={customParts}\n          formName={form}\n          formValueSelector={this.formValueSelector}\n          itemHeader={itemHeader}\n          itemSubHeader={itemSubHeader}\n          module=\"taxon\"\n          moduleName=\"taxon\"\n          sectionSpecs={sectionSpecs}\n        />\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nconst EnhancedForm = compose(\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(BaseForm)\n\nexport default reduxForm({\n  enableReinitialize: true,\n  validate: compose(\n    mapAcceptedTaxonNameError,\n    mapParentError,\n    customFormValidator({\n      model: 'taxon',\n      models: formModels,\n    })\n  ),\n})(EnhancedForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  allTaxonNamesFetched: PropTypes.bool,\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  allTaxonNamesFetched: undefined,\n  itemId: undefined,\n}\n\nconst getAllowTransition = (location, action) => {\n  if (action === 'POP') {\n    return false\n  }\n  return location.search.includes('mainColumn=edit')\n}\n\nexport class Create extends PureComponent {\n  render() {\n    const { itemId, onInteraction, ...rest } = this.props\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"taxonCreate\"\n        getAllowTransition={getAllowTransition}\n        itemHeader={\n          <ModuleTranslate\n            capitalize\n            module=\"taxon\"\n            textKey=\"headers.newTaxon\"\n          />\n        }\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        preventLeavingForm\n        unsavedChangesMessage=\"You have not saved the new record, are you sure you want to leave?\"\n      />\n    )\n  }\n}\n\nCreate.propTypes = propTypes\nCreate.defaultProps = defaultProps\n\nexport default Create\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport objectPath from 'object-path'\n\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nexport class Edit extends PureComponent {\n  render() {\n    const { onInteraction, nestedItem, ...rest } = this.props\n\n    if (!nestedItem) {\n      return null\n    }\n\n    const { resourceActivities } = nestedItem\n\n    const initialValues = { ...nestedItem }\n\n    if (objectPath.get(initialValues, 'parent.acceptedTaxonName')) {\n      delete initialValues.parent.acceptedTaxonName\n    }\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"taxonEdit\"\n        initialValues={initialValues}\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        onInteraction={onInteraction}\n        resourceActivities={resourceActivities}\n      />\n    )\n  }\n}\n\nEdit.propTypes = propTypes\nEdit.defaultProps = defaultProps\n\nexport default Edit\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport FieldWrapper from 'coreModules/form/components/FieldWrapper'\nimport { DropdownSearch, Input } from 'coreModules/form/components'\nimport { DROPDOWN_FILTER_OPTIONS } from '../../../constants'\n\nexport const FORM_NAME = 'taxonFilter'\n\nconst log = createLog('modules:locality:BaseForm')\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nconst noop = () => {}\n\nexport class BaseForm extends Component {\n  render() {\n    log.render()\n    const { error, handleSubmit } = this.props\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Form error={!!error} onSubmit={handleSubmit(noop)}>\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Accepted name\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"name\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={DropdownSearch}\n                    enableHelpNotifications={false}\n                    fluid\n                    label=\"Accepted name rank\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"rank\"\n                    options={DROPDOWN_FILTER_OPTIONS}\n                    type=\"dropdown-search-local\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Vernacular name\"\n                    model=\"taxonName\"\n                    module=\"taxon\"\n                    name=\"vernacularName\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  form: FORM_NAME,\n})(BaseForm)\n","export default function buildFilterQuery({ values }) {\n  const and = []\n\n  if (values.name) {\n    and.push({\n      filter: {\n        filterFunction: 'nameSearch',\n        input: {\n          value: values.name,\n        },\n      },\n    })\n  }\n\n  if (values.rank) {\n    and.push({\n      filter: {\n        filterFunction: 'nameRank',\n        input: {\n          value: values.rank,\n        },\n      },\n    })\n  }\n\n  if (values.vernacularName) {\n    and.push({\n      filter: {\n        filterFunction: 'vernacularNameSearch',\n        input: {\n          value: values.vernacularName,\n        },\n      },\n    })\n  }\n\n  if (!and.length) {\n    return {}\n  }\n\n  return {\n    and,\n  }\n}\n","import React from 'react'\n\nconst findParentWithSpecificRank = (item, rank) => {\n  if (!item) {\n    return null\n  }\n\n  if (item && item.acceptedTaxonName && item.acceptedTaxonName.rank === rank) {\n    return item\n  }\n\n  if (!(item && item.parent)) {\n    return null\n  }\n\n  return findParentWithSpecificRank(item.parent, rank)\n}\n\nconst tableColumnSpecifications = [\n  {\n    fieldPath: 'acceptedTaxonName.name',\n    label: 'modules.taxon.fieldLabels.acceptedTaxonName.name',\n    width: 350,\n  },\n  {\n    fieldPath: 'acceptedTaxonName.rank',\n    label: 'modules.taxon.fieldLabels.acceptedTaxonName.rank',\n    width: 350,\n  },\n\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'class')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.class',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'order')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.order',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'family')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.family',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'genus')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.genus',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'species')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.species',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificRank(value, 'subspecies')\n      if (!parent) {\n        return ''\n      }\n\n      const { acceptedTaxonName } = parent\n      if (!acceptedTaxonName) {\n        return ''\n      }\n\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${\n            acceptedTaxonName.name\n          } (removed)`}</span>\n        )\n      }\n\n      return acceptedTaxonName.name\n    },\n    fieldPath: '',\n    label: 'modules.taxon.fieldLabels.subspecies',\n    width: 250,\n  },\n\n  {\n    buildText: ({ value: vernacularNames }) => {\n      return vernacularNames\n        .map(vernacularName => {\n          return vernacularName.name\n        })\n        .join(', ')\n    },\n    fieldPath: 'vernacularNames',\n    label: 'modules.taxon.fieldLabels.vernacularNames.name',\n    width: 350,\n  },\n  {\n    buildText: ({ value: synonyms }) => {\n      return synonyms\n        .map(synonym => {\n          return synonym.name\n        })\n        .join(', ')\n    },\n    fieldPath: 'synonyms',\n    label: 'modules.taxon.fieldLabels.synonyms.name',\n    width: 350,\n  },\n]\nexport default tableColumnSpecifications\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  nestedItem: PropTypes.object.isRequired,\n}\n\nconst ItemTitle = ({ nestedItem }) => {\n  const { acceptedTaxonName } = nestedItem\n  if (!acceptedTaxonName) {\n    return ''\n  }\n\n  return (\n    <span>\n      <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>\n        {acceptedTaxonName.name}\n      </span>\n      <span>[{acceptedTaxonName.rank}]</span>\n    </span>\n  )\n}\n\nItemTitle.propTypes = propTypes\n\nexport default ItemTitle\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport objectPath from 'object-path'\n\nimport { ResourceManager } from 'coreModules/resourceManager/components'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport CreateForm from './item/CreateForm'\nimport EditForm from './item/EditForm'\nimport FilterForm from './filter/Form'\nimport buildFilterQuery from './filter/buildFilterQuery'\nimport tableColumnSpecifications from './tableColumnSpecifications'\nimport ItemTitle from './ItemTitle'\n\nconst resource = 'taxon'\nconst include = [\n  'acceptedTaxonName',\n  'parent',\n  'resourceActivities',\n  'synonyms',\n  'vernacularNames',\n]\nconst createGetNestedItemHocInput = {\n  include,\n  refresh: true,\n  relationships: include,\n  resolveRelationships: ['resourceActivity', 'taxon', 'taxonName'],\n  resource,\n}\n\nconst relationshipsToCheckBeforeDelete = [\n  'children',\n  'specimens',\n  'storageLocations',\n]\n\nconst baseTreeFilter = {\n  id: '1',\n}\n\nconst tableBatchFetchOptions = {\n  include: [\n    'parent.acceptedTaxonName',\n    'parent.parent.acceptedTaxonName',\n    'parent.parent.parent.acceptedTaxonName',\n    'parent.parent.parent.parent.acceptedTaxonName',\n    'acceptedTaxonName',\n    'vernacularNames',\n    'synonyms',\n  ],\n  relationships: [\n    'parent',\n    'parent.acceptedTaxonName',\n    'parent.parent.acceptedTaxonName',\n    'parent.parent.parent.acceptedTaxonName',\n    'parent.parent.parent.parent.acceptedTaxonName',\n    'acceptedTaxonName',\n    'vernacularNames',\n    'synonyms',\n  ],\n  resolveRelationships: ['taxonName', 'taxon'],\n}\n\nconst itemFetchOptions = {\n  include: ['acceptedTaxonName'],\n  relationships: ['acceptedTaxonName', 'children'],\n  resolveRelationships: ['taxonName'],\n}\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  itemId: PropTypes.string,\n  onNavigation: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n}\n\nclass TaxonManager extends Component {\n  constructor(props) {\n    super(props)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.buildEditItemHeaders = this.buildEditItemHeaders.bind(this)\n    this.renderCreateForm = this.renderCreateForm.bind(this)\n    this.renderEditForm = this.renderEditForm.bind(this)\n    this.renderFilterForm = this.renderFilterForm.bind(this)\n  }\n\n  handleInteraction(type, data = {}) {\n    this.props.onNavigation(type, data)\n  }\n\n  buildEditItemHeaders(nestedItem) {\n    if (!nestedItem) {\n      return {}\n    }\n\n    const name = objectPath.get(nestedItem, 'acceptedTaxonName.name')\n    const rank = objectPath.get(nestedItem, 'acceptedTaxonName.rank')\n\n    return {\n      itemHeader: name,\n      itemSubHeader: `${this.props.i18n.moduleTranslate({\n        textKey: 'taxonOfRank',\n      })} ${rank}`,\n    }\n  }\n\n  renderEditForm(props = {}) {\n    const { itemId } = this.props\n    return (\n      <EditForm\n        {...props}\n        itemId={itemId}\n        onInteraction={this.handleInteraction}\n      />\n    )\n  }\n  renderCreateForm(props = {}) {\n    return <CreateForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  renderFilterForm(props = {}) {\n    return <FilterForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  render() {\n    return (\n      <ResourceManager\n        {...this.props}\n        baseTreeFilter={baseTreeFilter}\n        buildEditItemHeaders={this.buildEditItemHeaders}\n        buildFilterQuery={buildFilterQuery}\n        createGetNestedItemHocInput={createGetNestedItemHocInput}\n        filterHeader=\"Find taxa\"\n        itemFetchOptions={itemFetchOptions}\n        ItemTitle={ItemTitle}\n        onInteraction={this.handleInteraction}\n        relationshipsToCheckBeforeDelete={relationshipsToCheckBeforeDelete}\n        renderCreateForm={this.renderCreateForm}\n        renderEditForm={this.renderEditForm}\n        renderFilterForm={this.renderFilterForm}\n        resource=\"taxon\"\n        tableBatchFetchOptions={tableBatchFetchOptions}\n        tableColumnSpecifications={tableColumnSpecifications}\n        treeEnabled\n      />\n    )\n  }\n}\n\nTaxonManager.propTypes = propTypes\nTaxonManager.defaultProps = defaultProps\n\nexport default compose(withI18n({ module: 'taxon' }))(TaxonManager)\n","import { compose } from 'redux'\nimport {\n  createLocalState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonManager from './Base'\n\nexport default compose(\n  createLocalState(),\n  createNavigationState()\n)(TaxonManager)\n","import { compose } from 'redux'\nimport {\n  createQueryState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonManager from './Base'\n\nexport default compose(\n  createQueryState(),\n  createNavigationState()\n)(TaxonManager)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react'\nimport { LayerModal } from 'coreModules/commonUi/components'\nimport { createPickerWrapper } from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonNameDropdownSearch from '../TaxonNameDropdownSearch'\n\nlet TaxonNameManager = null\n\nexport function setLocalManager(InjectedTaxonNameManager) {\n  TaxonNameManager = InjectedTaxonNameManager\n}\n\nconst propTypes = {\n  fieldSearchQuery: PropTypes.string,\n  fieldValue: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n  onPickerButtonClick: PropTypes.func.isRequired,\n  pickerActive: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  fieldSearchQuery: undefined,\n  fieldValue: undefined,\n}\n\nexport class TaxonNameDropdownPickerSearch extends Component {\n  render() {\n    const {\n      fieldSearchQuery,\n      fieldValue,\n      onClose,\n      onInteraction,\n      onPickerButtonClick,\n      pickerActive,\n      ...rest\n    } = this.props\n\n    if (pickerActive) {\n      const initialFilterValues = fieldSearchQuery\n        ? {\n            name: fieldSearchQuery,\n          }\n        : undefined\n      return (\n        <LayerModal onClose={onClose} open style={{ overflow: 'hidden' }}>\n          <Modal.Content>\n            <TaxonNameManager\n              initialFilterValues={initialFilterValues}\n              initialItemId={fieldValue}\n              isPicker\n              onInteraction={onInteraction}\n              pickerTitle=\"Pick Taxon name\"\n              treeEnabled={false}\n            />\n          </Modal.Content>\n        </LayerModal>\n      )\n    }\n\n    const picker = <Button onClick={onPickerButtonClick}>Picker</Button>\n\n    return <TaxonNameDropdownSearch rightButton={picker} {...rest} />\n  }\n}\n\nTaxonNameDropdownPickerSearch.propTypes = propTypes\nTaxonNameDropdownPickerSearch.defaultProps = defaultProps\n\nexport default createPickerWrapper({})(TaxonNameDropdownPickerSearch)\n","import { compose } from 'redux'\nimport {\n  createQueryState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport TaxonNameManager from './Base'\n\nexport default compose(\n  createQueryState(),\n  createNavigationState()\n)(TaxonNameManager)\n","import LocalTaxonNameManager from './TaxonNameManager/Local'\nimport LocalTaxonManager from './TaxonManager/Local'\n\nimport AcceptedTaxonNameDropdownPickerSearch, {\n  setLocalManager as setAcceptedTaxonLocalityManager,\n} from './AcceptedTaxonNameDropdownPickerSearch'\n\nimport RankDropdown from './RankDropdown'\nimport TaxonDropdownPickerSearch, {\n  setLocalManager as setTaxonLocalityManager,\n} from './TaxonDropdownPickerSearch'\nimport TaxonDropdownSearch from './TaxonDropdownSearch'\nimport TaxonManager from './TaxonManager/Query'\nimport TaxonNameDropdownPickerSearch, {\n  setLocalManager as setTaxonNameLocalityManager,\n} from './TaxonNameDropdownPickerSearch'\nimport TaxonNameDropdownSearch from './TaxonNameDropdownSearch'\nimport TaxonNameManager from './TaxonNameManager/Query'\nimport TaxonNameTaxonStatus from './TaxonNameTaxonStatus'\nimport TogglableTaxonDropdownPickerSearch from './TogglableTaxonDropdownPickerSearch'\n\nsetAcceptedTaxonLocalityManager(LocalTaxonManager)\nsetTaxonLocalityManager(LocalTaxonManager)\nsetTaxonNameLocalityManager(LocalTaxonNameManager)\n\nexport {\n  AcceptedTaxonNameDropdownPickerSearch,\n  RankDropdown,\n  TaxonDropdownPickerSearch,\n  TaxonDropdownSearch,\n  TaxonManager,\n  TaxonNameDropdownPickerSearch,\n  TaxonNameDropdownSearch,\n  TaxonNameManager,\n  TaxonNameTaxonStatus,\n  TogglableTaxonDropdownPickerSearch,\n}\n","export const MODULE_NAME = 'app'\n","export const MODULE_NAME = 'dataViewer'\n","export const MODULE_NAME = 'docs'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Markdown } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      docName: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nconst GeneralDocs = ({ match }) => {\n  const {\n    params: { docName = 'general' },\n  } = match\n\n  return (\n    <div>\n      <Markdown\n        fallbackLanguage=\"en\"\n        textKey={`modules.docs.overview.${docName}`}\n      />\n    </div>\n  )\n}\nGeneralDocs.propTypes = propTypes\n\nexport default GeneralDocs\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MarkdownToHtmlAsync from 'coreModules/i18n/components/MarkdownToHtmlAsync'\nimport { Segment } from 'semantic-ui-react'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst specification = schemaInterface.getOpenApiSpec()\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      schemaVersion: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nconst VersionOverview = ({ match }) => {\n  const activeVersion = match.params.schemaVersion\n  if (!activeVersion) {\n    return <div>Unknown version: {match.params.schemaVersion}</div>\n  }\n\n  return (\n    <div>\n      <h2>Version: {activeVersion}</h2>\n      <Segment>\n        <MarkdownToHtmlAsync markdown={specification.info['x-versionInfo']} />\n      </Segment>\n    </div>\n  )\n}\nVersionOverview.propTypes = propTypes\nexport default VersionOverview\n","export const MODULE_NAME = 'public'\n","export function joinSubqueries(queries) {\n  const filteredQueries = queries.filter(query => {\n    return !!query\n  })\n  return {\n    and: filteredQueries,\n  }\n}\n\nexport function buildRootQuery({ aggregation, query }) {\n  const rootQuery = {}\n  if (aggregation) {\n    rootQuery.aggregations = [aggregation]\n    rootQuery.limit = 0\n  }\n\n  if (query) {\n    rootQuery.query = query\n  }\n\n  return rootQuery\n}\n\nexport function buildLocalAggregationQuery({\n  fieldName,\n  fieldValue,\n  input = {},\n  otherFieldFilters,\n  querySpecificationsMap,\n  sectionValues,\n}) {\n  const specification = querySpecificationsMap[fieldName]\n\n  if (!specification) {\n    throw new Error(`Specification not found for: ${fieldName}`)\n  }\n\n  const {\n    aggregation: aggregationFunction,\n    rootQueryModifier: rootQueryModifierFunction,\n    searchFilter: filterFunction,\n  } = specification\n\n  const { getAll } = input\n\n  const aggregation = aggregationFunction({\n    fieldValue,\n    input,\n    sectionValues,\n  })\n\n  let query = null\n  if (!getAll) {\n    query = otherFieldFilters\n\n    if (filterFunction) {\n      const filterQuery = filterFunction({\n        fieldValue,\n        input,\n        sectionValues,\n      })\n\n      if (filterQuery) {\n        query = joinSubqueries([otherFieldFilters, filterQuery])\n      }\n    }\n  }\n\n  const rootQuery = buildRootQuery({\n    aggregation,\n    query,\n  })\n\n  if (!rootQueryModifierFunction) {\n    return rootQuery\n  }\n\n  return rootQueryModifierFunction({\n    rootQuery,\n  })\n}\n\nexport function buildQuery({ formName, getSubQueries, formState }) {\n  const patchedGlobalState = {\n    form: {\n      [formName]: {\n        values: formState,\n      },\n    },\n  }\n  const subQueries = getSubQueries(patchedGlobalState)\n\n  const rootQuery = buildRootQuery({\n    query: joinSubqueries(subQueries),\n  })\n\n  return rootQuery\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { buildLocalAggregationQuery } from '../utilities'\n\nexport default function createFieldHocFactory({\n  querySpecificationsMap,\n  selectors,\n}) {\n  const createFieldHoc = () => ComposedComponent => {\n    const propTypes = {\n      fieldName: PropTypes.string.isRequired,\n      fieldValue: PropTypes.any,\n      formValues: PropTypes.object,\n      otherFieldFilters: PropTypes.object,\n      sectionValues: PropTypes.object,\n    }\n\n    const defaultProps = {\n      fieldValue: undefined,\n      formValues: {},\n      otherFieldFilters: undefined,\n      sectionValues: {},\n    }\n\n    const mapStateToProps = (state, { input, name }) => {\n      const fieldName = (input && input.name) || name\n      if (!fieldName) {\n        throw new Error('fieldName is required')\n      }\n\n      const { sectionName } = querySpecificationsMap[fieldName]\n\n      return {\n        fieldName,\n        fieldValue: selectors.fieldValueSelectors[fieldName](state),\n        formValues: selectors.getFormSelector(state),\n        otherFieldFilters: selectors.otherFieldFiltersSelectors[fieldName](\n          state\n        ),\n        sectionValues: sectionName\n          ? selectors.sectionValueSelectors[sectionName](state)\n          : undefined,\n      }\n    }\n\n    class FieldHoc extends Component {\n      constructor(props) {\n        super(props)\n        this.buildLocalAggregationQuery = this.buildLocalAggregationQuery.bind(\n          this\n        )\n      }\n\n      buildLocalAggregationQuery({ input } = {}) {\n        const {\n          fieldName,\n          fieldValue,\n          formValues,\n          otherFieldFilters,\n          sectionValues,\n        } = this.props\n\n        return buildLocalAggregationQuery({\n          fieldName,\n          fieldValue,\n          formValues,\n          input,\n          otherFieldFilters,\n          querySpecificationsMap,\n          sectionValues,\n        })\n      }\n\n      render() {\n        const { otherFieldFilters } = this.props\n\n        return (\n          <ComposedComponent\n            {...this.props}\n            buildLocalAggregationQuery={this.buildLocalAggregationQuery}\n            otherFieldFilters={otherFieldFilters}\n          />\n        )\n      }\n    }\n\n    FieldHoc.propTypes = propTypes\n    FieldHoc.defaultProps = defaultProps\n    return compose(connect(mapStateToProps))(FieldHoc)\n  }\n\n  return createFieldHoc\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { buildQuery } from '../utilities'\n\nexport default function createFormHocFactory({ formName, selectors }) {\n  const createFormHoc = () => ComposedComponent => {\n    const propTypes = {\n      formState: PropTypes.object,\n    }\n\n    const defaultProps = {\n      formState: undefined,\n    }\n\n    const mapStateToProps = state => {\n      return {\n        formState: selectors.getFormSelector(state),\n      }\n    }\n\n    class FormHoc extends Component {\n      constructor(props) {\n        super(props)\n        this.buildQuery = this.buildQuery.bind(this)\n      }\n\n      buildQuery() {\n        const { formState } = this.props\n        return buildQuery({\n          formName,\n          formState,\n          getSubQueries: selectors.getSubQueries,\n        })\n      }\n\n      render() {\n        return (\n          <ComposedComponent {...this.props} buildQuery={this.buildQuery} />\n        )\n      }\n    }\n\n    FormHoc.propTypes = propTypes\n    FormHoc.defaultProps = defaultProps\n\n    return compose(connect(mapStateToProps))(FormHoc)\n  }\n\n  return createFormHoc\n}\n","export default function createTagTypesSpecification({\n  sectionName,\n  fieldName,\n  matchFilterFunctionName,\n  aggregationFunctionName,\n}) {\n  const stringAggregation = () => {\n    return {\n      aggregationFunction: aggregationFunctionName,\n    }\n  }\n\n  const stringMatchFilter = ({ fieldValue }) => {\n    if (!(fieldValue && fieldValue.length)) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: matchFilterFunctionName,\n        input: {\n          tagTypes: fieldValue,\n        },\n      },\n    }\n  }\n\n  return [\n    {\n      aggregation: stringAggregation,\n      fieldName,\n      matchFilter: stringMatchFilter,\n      sectionName,\n    },\n  ]\n}\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\nimport createNumberRangeSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/numberRangeSpecification'\n\nconst rangeSpecification = createNumberRangeSpecification({\n  fieldName: 'ageAndStage.age',\n  rangeFilterFunctionName: 'rangeAge',\n  sectionName: 'ageAndStage',\n})\n\nconst checkboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateAgeStageTags',\n  fieldName: 'ageAndStage.stages',\n  matchFilterFunctionName: 'matchAgeStageTags',\n  sectionName: 'ageAndStage',\n})\n\nexport default [...rangeSpecification, ...checkboxSpecification]\n","export default function createNumberRangeSpecification({\n  sectionName,\n  fieldName,\n  rangeFilterFunctionName,\n}) {\n  const rangeFilter = (input = {}) => {\n    const { fieldValue: { min, max } = {} } = input\n\n    if (min === undefined && max === undefined) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: rangeFilterFunctionName,\n        input: {\n          value: {\n            max,\n            min,\n          },\n        },\n      },\n    }\n  }\n\n  return [\n    {\n      fieldName,\n      matchFilter: rangeFilter,\n      sectionName,\n    },\n  ]\n}\n","import objectPath from 'object-path'\n\nexport default function multipleSearchTagsSpecification({\n  sectionName,\n  includeTagTypesInAggregation = true,\n  matchFilterFunctionName,\n  searchFilterFunctionName,\n  tagTypeAggregationFunctionName,\n  tagValuesAggregationFunctionName,\n  tagValuesFieldName,\n}) {\n  const tagValuesAggregation = ({ input = {}, sectionValues }) => {\n    const selectedTagTypes = sectionValues && sectionValues.tagTypes\n\n    const {\n      exact,\n      tagType: tagInputType,\n      tagValue,\n      limit = 10,\n      aggregationFunctionType = 'value',\n    } = input\n\n    if (aggregationFunctionType === 'type') {\n      return {\n        aggregationFunction: tagTypeAggregationFunctionName,\n      }\n    }\n\n    const tagTypes = tagInputType ? [tagInputType] : selectedTagTypes\n\n    return {\n      aggregationFunction: tagValuesAggregationFunctionName,\n      input: {\n        exact,\n        limit,\n        tagTypes: includeTagTypesInAggregation ? tagTypes : undefined,\n        tagValue,\n      },\n    }\n  }\n\n  const searchFilter = ({ input }) => {\n    const { tagType, tagValue } = input\n    return {\n      filter: {\n        filterFunction: searchFilterFunctionName,\n        input: {\n          tagType,\n          tagValue,\n        },\n      },\n    }\n  }\n\n  const matchTagValuesFilter = ({ fieldValue }) => {\n    if (!fieldValue) {\n      return null\n    }\n\n    const tagFilters = []\n    Object.keys(fieldValue).forEach(key => {\n      const dropdownEntry = fieldValue[key]\n\n      const isFreeText =\n        objectPath.get(dropdownEntry, 'searchOption.other.optionType') ===\n        'freeText'\n      const hasNoMatchingTag = !objectPath.get(dropdownEntry, 'matchingTags')\n        .length\n\n      if (isFreeText && hasNoMatchingTag) {\n        tagFilters.push({\n          filter: {\n            filterFunction: matchFilterFunctionName,\n            input: {\n              tagType: objectPath.get(\n                dropdownEntry,\n                'searchOption.other.tagType'\n              ),\n              // using the verbose text to make it more clear for any developer\n              // inspecting the query\n              tagValue: objectPath.get(dropdownEntry, 'searchOption.text'),\n            },\n          },\n        })\n      } else {\n        fieldValue[key].matchingTags\n          .filter(tag => {\n            return !!tag.selected\n          })\n          .forEach(tag => {\n            tagFilters.push({\n              filter: {\n                filterFunction: matchFilterFunctionName,\n                input: {\n                  tagType: tag.attributes.tagType,\n                  tagValue: tag.attributes.tagValue,\n                },\n              },\n            })\n          })\n      }\n    })\n\n    if (!tagFilters.length) {\n      return null\n    }\n\n    return {\n      or: tagFilters,\n    }\n  }\n\n  return [\n    {\n      aggregation: tagValuesAggregation,\n      fieldName: tagValuesFieldName,\n      matchFilter: matchTagValuesFilter,\n      searchFilter: searchFilterFunctionName && searchFilter,\n      sectionName,\n    },\n  ]\n}\n","import createMultipleSearchTagsSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification'\n\nexport default createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchAgentTags',\n  searchFilterFunctionName: 'searchAgentTags',\n  sectionName: 'agent',\n  tagTypeAggregationFunctionName: 'aggregateAgentTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateAgentTagValues',\n  tagValuesFieldName: 'agent.tagValues',\n})\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\n\nexport default createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateBoneTags',\n  fieldName: 'bones.bones',\n  matchFilterFunctionName: 'matchBoneTags',\n  sectionName: 'bones',\n})\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\n\nexport default createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateConditionTags',\n  fieldName: 'collectingCondition.collectingConditions',\n  matchFilterFunctionName: 'matchConditionTags',\n  sectionName: 'collectingCondition',\n})\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\nimport createDateRangeSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/dateRangeSpecification'\n\nconst rangeSpecification = createDateRangeSpecification({\n  fieldName: 'datePeriod.date',\n  rangeFilterFunctionName: 'searchDates',\n  sectionName: 'datePeriod',\n})\n\nconst checkboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateDateTags',\n  fieldName: 'datePeriod.types',\n  matchFilterFunctionName: 'matchDateTags',\n  sectionName: 'datePeriod',\n})\n\nexport default [...rangeSpecification, ...checkboxSpecification]\n","export default function createDateRangeSpecification({\n  sectionName,\n  fieldName,\n  rangeFilterFunctionName,\n}) {\n  const rangeFilter = (input = {}) => {\n    const { fieldValue: { startDate, endDate } = {} } = input\n\n    const start = startDate && startDate.interpretedTimestamp\n    const end = endDate && endDate.interpretedTimestamp\n\n    if (start === undefined && end === undefined) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: rangeFilterFunctionName,\n        input: {\n          value: {\n            end,\n            start,\n            // dateType,\n          },\n        },\n      },\n    }\n  }\n\n  return [\n    {\n      fieldName,\n      matchFilter: rangeFilter,\n      sectionName,\n    },\n  ]\n}\n","import createMultipleSearchTagsSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification'\n\nexport default createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchIdentifierTags',\n  searchFilterFunctionName: 'searchIdentifierTags',\n  sectionName: 'identifier',\n  tagTypeAggregationFunctionName: 'aggregateIdentifierTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateIdentifierTagValues',\n  tagValuesFieldName: 'identifier.tagValues',\n})\n","export default function featureRangeSpecification({\n  fieldName,\n  rangeFilterFunctionName,\n  rangeTypeAggregateTagsFunctionName,\n  sectionName,\n}) {\n  const stringAggregation = () => {\n    return {\n      aggregationFunction: rangeTypeAggregateTagsFunctionName,\n    }\n  }\n\n  const rangeFilter = (options = {}) => {\n    const { fieldValue: { rangeType, rangeValue, rangeUnit } = {} } = options\n\n    const { max, min } = rangeValue || {}\n\n    if (min === undefined && max === undefined) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: rangeFilterFunctionName,\n        input: {\n          value: {\n            max,\n            min,\n            rangeUnit,\n            tagType: rangeType,\n          },\n        },\n      },\n    }\n  }\n\n  return [\n    {\n      aggregation: stringAggregation,\n      fieldName,\n      matchFilter: rangeFilter,\n      sectionName,\n    },\n  ]\n}\n","import createFeatureRangeSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/featureRangeSpecification'\n\nconst featureRangeSpecification = createFeatureRangeSpecification({\n  fieldName: 'length',\n  rangeFilterFunctionName: 'rangeLength',\n  rangeTypeAggregateTagsFunctionName: 'aggregateLengthTags',\n  sectionName: 'length',\n})\n\nexport default [...featureRangeSpecification]\n","import createMultipleSearchTagsSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification'\nimport createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\n\nconst multipleSearchTagsSpecifications = createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchLocationTags',\n  searchFilterFunctionName: 'searchLocationTags',\n  sectionName: 'locality.localities',\n  tagTypeAggregationFunctionName: 'aggregateLocationTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateLocationTagValues',\n  tagValuesFieldName: 'locality.localities.tagValues',\n})\n\nconst higherGeographySpecifications = createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchHigherGeographyTags',\n  searchFilterFunctionName: 'searchHigherGeographyTags',\n  sectionName: 'locality.higherGeography',\n  tagTypeAggregationFunctionName: 'aggregateHigherGeographyTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateHigherGeographyTagValues',\n  tagValuesFieldName: 'locality.higherGeography.tagValues',\n})\n\nconst appearanceCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateAppearanceTags',\n  fieldName: 'collectingInformation.establishmentMeansType',\n  matchFilterFunctionName: 'matchAppearanceTags',\n  sectionName: 'locality.appearance',\n})\n\nconst selectiveBreedingCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateSelectiveBreedingTags',\n  fieldName: 'originInformation.isResultOfSelectiveBreeding',\n  matchFilterFunctionName: 'matchSelectiveBreedingTags',\n  sectionName: 'locality.selectiveBreeding',\n})\n\nexport default [\n  ...appearanceCheckboxSpecification,\n  ...higherGeographySpecifications,\n  ...multipleSearchTagsSpecifications,\n  ...selectiveBreedingCheckboxSpecification,\n]\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\n\nconst skeletonCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateSkeletonTags',\n  fieldName: 'physicalObject.skeleton',\n  matchFilterFunctionName: 'matchSkeletonTags',\n  sectionName: 'physicalObject',\n})\n\nconst skinCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateSkinTags',\n  fieldName: 'physicalObject.skin',\n  matchFilterFunctionName: 'matchSkinTags',\n  sectionName: 'physicalObject',\n})\n\nconst wetPreparationCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateWetPreparationTags',\n  fieldName: 'physicalObject.wetPreparation',\n  matchFilterFunctionName: 'matchWetPreparationTags',\n  sectionName: 'physicalObject',\n})\n\nconst otherPreparationCheckboxSpecification = createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateOtherPreparationTags',\n  fieldName: 'physicalObject.otherPreparation',\n  matchFilterFunctionName: 'matchOtherPreparationTags',\n  sectionName: 'physicalObject',\n})\n\nexport default [\n  ...skeletonCheckboxSpecification,\n  ...skinCheckboxSpecification,\n  ...wetPreparationCheckboxSpecification,\n  ...otherPreparationCheckboxSpecification,\n]\n","import createPreviewSearchSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/previewSearchSpecification'\n\nexport default createPreviewSearchSpecification({\n  inputFieldName: 'remarks.search',\n  searchFilterFunctionName: 'searchRemarks',\n  searchPreviewAggregationFunctionName: 'aggregateRemarksTextPreview',\n  sectionName: 'remarks',\n  srcFieldFieldName: 'remarks.srcField',\n  srcFieldsAggregationFunctionName: 'aggregateRemarkSrcFields',\n})\n","export default function createPreviewSearchSpecification({\n  inputFieldName,\n  searchFilterFunctionName,\n  searchPreviewAggregationFunctionName,\n  sectionName,\n  srcFieldFieldName,\n  srcFieldsAggregationFunctionName,\n}) {\n  const searchPreviewAggregation = ({ input = {}, sectionValues }) => {\n    const { searchString = '' } = input\n    const { srcField } = sectionValues\n    if (!searchString) {\n      return null\n    }\n    return {\n      aggregationFunction: searchPreviewAggregationFunctionName,\n      input: {\n        searchString,\n        srcFields: srcField === 'any' ? undefined : [srcField],\n      },\n    }\n  }\n\n  const srcFieldsAggregation = () => {\n    return {\n      aggregationFunction: srcFieldsAggregationFunctionName,\n    }\n  }\n\n  const searchFilter = ({ input, sectionValues = {} }) => {\n    const { searchString } = input\n    const { srcField } = sectionValues\n    if (!searchString) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: searchFilterFunctionName,\n        input: {\n          searchString,\n          srcFields: srcField === 'any' ? undefined : [srcField],\n        },\n      },\n    }\n  }\n\n  const matchSearchFilter = ({ fieldValue, sectionValues = {} }) => {\n    const { srcField } = sectionValues\n    if (!fieldValue) {\n      return null\n    }\n    return {\n      filter: {\n        filterFunction: searchFilterFunctionName,\n        input: {\n          searchString: fieldValue,\n          srcFields: srcField === 'any' ? undefined : [srcField],\n        },\n      },\n    }\n  }\n\n  const rootQueryModifier = ({ rootQuery }) => {\n    return {\n      ...rootQuery,\n      limit: 50,\n      sort: ['relevance'],\n    }\n  }\n\n  return [\n    {\n      aggregation: searchPreviewAggregation,\n      fieldName: inputFieldName,\n      matchFilter: searchFilterFunctionName && matchSearchFilter,\n      rootQueryModifier,\n      searchFilter: searchFilterFunctionName && searchFilter,\n      sectionName,\n    },\n    {\n      aggregation: srcFieldsAggregation,\n      fieldName: srcFieldFieldName,\n      sectionName,\n    },\n  ]\n}\n","import createCheckboxSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/tagTypesSpecification'\n\nexport default createCheckboxSpecification({\n  aggregationFunctionName: 'aggregateSexTags',\n  fieldName: 'sex.sex',\n  matchFilterFunctionName: 'matchSexTags',\n  sectionName: 'collectingSex',\n})\n","import { ANY } from '../../../../constants'\n\nexport default function createStringSpecification({\n  aggregationFunctionName,\n  fieldName,\n  matchFilterFunctionName,\n  sectionName,\n}) {\n  const stringAggregation = () => {\n    return {\n      aggregationFunction: aggregationFunctionName,\n    }\n  }\n\n  const stringMatchFilter = ({ fieldValue }) => {\n    if (!fieldValue || fieldValue === ANY) {\n      return null\n    }\n\n    return {\n      filter: {\n        filterFunction: matchFilterFunctionName,\n        input: {\n          value: fieldValue,\n        },\n      },\n    }\n  }\n\n  return [\n    {\n      aggregation: stringAggregation,\n      fieldName,\n      matchFilter: stringMatchFilter,\n      sectionName,\n    },\n  ]\n}\n","import createMultipleSearchTagsSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification'\nimport createStringSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/stringSpecification'\n\nconst multipleSearchTagsSpecification = createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchStorageLocationTags',\n  searchFilterFunctionName: 'searchStorageLocationTags',\n  sectionName: 'storage',\n  tagTypeAggregationFunctionName: 'aggregateStorageLocationTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateStorageLocationTagValues',\n  tagValuesFieldName: 'storage.tagValues',\n})\n\nconst stringSpecification = createStringSpecification({\n  aggregationFunctionName: 'aggregateStorageLocationTagTypes',\n  fieldName: 'storage.tagType',\n  matchFilterFunctionName: 'matchPhysicalObjectStorageLocationGroups',\n  sectionName: 'storage',\n})\n\nexport default [...multipleSearchTagsSpecification, ...stringSpecification]\n","import createMultipleSearchTagsSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/multipleSearchTagsSpecification'\nimport createStringSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/stringSpecification'\n\nconst multipleSearchTagsSpecification = createMultipleSearchTagsSpecification({\n  matchFilterFunctionName: 'matchTaxonomyTags',\n  searchFilterFunctionName: 'searchTaxonomyTags',\n  sectionName: 'taxonomy',\n  tagTypeAggregationFunctionName: 'aggregateTaxonomyTagTypes',\n  tagValuesAggregationFunctionName: 'aggregateTaxonomyTagValues',\n  tagValuesFieldName: 'taxonomy.tagValues',\n})\n\nconst stringSpecification = createStringSpecification({\n  aggregationFunctionName: 'aggregateTaxonomyTagTypes',\n  fieldName: 'taxonomy.tagType',\n  matchFilterFunctionName: 'matchCuratorialTaxonRank',\n  sectionName: 'taxonomy',\n})\n\nexport default [...multipleSearchTagsSpecification, ...stringSpecification]\n","import createFeatureRangeSpecification from 'coreModules/search/utilities/queryBuilderFactory/utilities/factories/featureRangeSpecification'\n\nconst featureRangeSpecification = createFeatureRangeSpecification({\n  fieldName: 'weight',\n  rangeFilterFunctionName: 'rangeWeight',\n  rangeTypeAggregateTagsFunctionName: 'aggregateWeightTags',\n  sectionName: 'weight',\n})\n\nexport default [...featureRangeSpecification]\n","import createQueryBuilder from 'coreModules/search/utilities/queryBuilderFactory'\nimport { SPECIMEN_FILTERS_FORM_NAME } from '../../../constants'\n\nimport ageAndStageSpecification from './Filters/FilterFormSections/AgeAndStage/querySpecification'\nimport agentSpecification from './Filters/FilterFormSections/Agent/querySpecification'\nimport bonesSpecification from './Filters/FilterFormSections/Bones/querySpecification'\nimport collectionConditionSpecification from './Filters/FilterFormSections/CollectingCondition/querySpecification'\nimport datePeriodSpecification from './Filters/FilterFormSections/DatePeriod/querySpecification'\nimport identifierSpecification from './Filters/FilterFormSections/Identifier/querySpecification'\nimport lengthSpecification from './Filters/FilterFormSections/Length/querySpecification'\nimport localitySpecification from './Filters/FilterFormSections/Locality/querySpecification'\nimport physicalObjectSpecification from './Filters/FilterFormSections/PhysicalObject/querySpecification'\nimport remarksSpecification from './Filters/FilterFormSections/Remarks/querySpecification'\nimport sexSpecification from './Filters/FilterFormSections/Sex/querySpecification'\nimport storageSpecification from './Filters/FilterFormSections/Storage/querySpecification'\nimport taxonomySpecification from './Filters/FilterFormSections/Taxonomy/querySpecification'\nimport weightSpecification from './Filters/FilterFormSections/Weight/querySpecification'\n\nconst querySpecifications = [\n  ...ageAndStageSpecification,\n  ...agentSpecification,\n  ...bonesSpecification,\n  ...collectionConditionSpecification,\n  ...datePeriodSpecification,\n  ...identifierSpecification,\n  ...lengthSpecification,\n  ...localitySpecification,\n  ...physicalObjectSpecification,\n  ...remarksSpecification,\n  ...sexSpecification,\n  ...storageSpecification,\n  ...taxonomySpecification,\n  ...weightSpecification,\n]\n\nconst { higherOrderComponents } = createQueryBuilder({\n  formName: SPECIMEN_FILTERS_FORM_NAME,\n  querySpecifications,\n})\nexport { higherOrderComponents }\n","import createSelectors from './createSelectors'\nimport createHigherOrderComponents from './createHigherOrderComponents'\n\nexport default function createQueryBuilder({ formName, querySpecifications }) {\n  const querySpecificationsMap = querySpecifications.reduce(\n    (obj, querySpecification) => {\n      return {\n        ...obj,\n        [querySpecification.fieldName]: querySpecification,\n      }\n    },\n    {}\n  )\n\n  const selectors = createSelectors({\n    formName,\n    querySpecifications,\n  })\n\n  const higherOrderComponents = createHigherOrderComponents({\n    formName,\n    querySpecificationsMap,\n    selectors,\n  })\n\n  return {\n    higherOrderComponents,\n    selectors,\n  }\n}\n","import objectPath from 'object-path'\nimport { getFormValues } from 'redux-form'\nimport { createSelector } from 'reselect'\n\nexport default function createSelectors({ formName, querySpecifications }) {\n  const getFormSelector = state => {\n    const values = getFormValues(formName)(state)\n    return values\n  }\n\n  const sectionNames = querySpecifications.reduce((arr, { sectionName }) => {\n    if (!sectionName) {\n      return arr\n    }\n\n    if (arr.includes(sectionName)) {\n      return arr\n    }\n\n    return [...arr, sectionName]\n  }, [])\n\n  const noopSelector = () => null\n\n  const sectionValueSelectors = sectionNames.reduce(\n    (selectors, sectionName) => {\n      const selector = function sectionValueSelector(state) {\n        const form = getFormSelector(state)\n        return objectPath.get(form, sectionName)\n      }\n\n      return {\n        ...selectors,\n        [sectionName]: selector,\n      }\n    },\n    {}\n  )\n\n  const fieldValueSelectors = querySpecifications.reduce(\n    (selectors, { fieldName }) => {\n      const selector = function fieldValueSelector(state) {\n        const form = getFormSelector(state)\n        return objectPath.get(form, fieldName)\n      }\n      return {\n        ...selectors,\n        [fieldName]: selector,\n      }\n    },\n    {}\n  )\n\n  const fieldMatchFilterSelectors = querySpecifications.reduce(\n    (selectors, { fieldName, matchFilter, sectionName }) => {\n      if (!matchFilter) {\n        return selectors\n      }\n\n      const fieldValueSelector = fieldValueSelectors[fieldName]\n      const sectionValueSelector = sectionName\n        ? sectionValueSelectors[sectionName]\n        : noopSelector\n\n      const selector = createSelector(\n        fieldValueSelector,\n        sectionValueSelector,\n        (fieldValue, sectionValues) => {\n          return matchFilter({ fieldValue, sectionValues })\n        }\n      )\n      return {\n        ...selectors,\n        [fieldName]: selector,\n      }\n    },\n    {}\n  )\n\n  const otherFieldFiltersSelectors = querySpecifications.reduce(\n    (selectors, { fieldName }) => {\n      const otherFieldNames = querySpecifications\n        .map(({ fieldName: otherFieldName }) => {\n          return otherFieldName\n        })\n        .filter(otherFieldName => {\n          return fieldName !== otherFieldName\n        })\n\n      const subSelectors = otherFieldNames\n        .map(otherFieldName => {\n          return fieldMatchFilterSelectors[otherFieldName]\n        })\n        .filter(selector => {\n          return !!selector\n        })\n\n      const selector = createSelector(\n        subSelectors,\n        (...otherQueries) => {\n          if (otherQueries && otherQueries.length) {\n            return {\n              and: otherQueries.filter(filter => {\n                return !!filter\n              }),\n            }\n          }\n          return null\n        }\n      )\n      return {\n        ...selectors,\n        [fieldName]: selector,\n      }\n    },\n    {}\n  )\n\n  const getSubQueries = state => {\n    return querySpecifications\n      .map(({ fieldName }) => {\n        const selector = fieldMatchFilterSelectors[fieldName]\n        if (!selector) {\n          return null\n        }\n        return selector(state)\n      })\n      .filter(queryValue => {\n        return !!queryValue\n      })\n  }\n\n  return {\n    fieldMatchFilterSelectors,\n    fieldValueSelectors,\n    getFormSelector,\n    getSubQueries,\n    otherFieldFiltersSelectors,\n    sectionValueSelectors,\n  }\n}\n","import createFieldHocFactory from './createFieldHocFactory'\nimport createFormHocFactory from './createFormHocFactory'\n\nexport default function createHigherOrderComponents({\n  formName,\n  querySpecificationsMap,\n  selectors,\n}) {\n  const createFieldHoc = createFieldHocFactory({\n    querySpecificationsMap,\n    selectors,\n  })\n  const createFormHoc = createFormHocFactory({\n    formName,\n    querySpecificationsMap,\n    selectors,\n  })\n\n  return {\n    createFieldHoc,\n    createFormHoc,\n  }\n}\n","import objectPath from 'object-path'\n\nconst INITIAL_VALUES = {\n  featureObservations: {},\n}\n\nexport default function transformFeatureObservations({\n  featureObservations,\n  featureTypes,\n}) {\n  if (!featureObservations) {\n    return INITIAL_VALUES.featureObservations\n  }\n\n  const transformedFeatureObservations = Object.values(featureTypes).reduce(\n    (obj, featureType) => {\n      const { attributes, id } = featureType\n\n      const existingFeatureObservation = featureObservations.find(\n        featureObservation => {\n          return objectPath.get(featureObservation, 'featureType.id') === id\n        }\n      )\n\n      if (existingFeatureObservation) {\n        return {\n          ...obj,\n          [id]: existingFeatureObservation,\n        }\n      }\n\n      const initialFeatureObservation = { featureType }\n\n      if (attributes.group === 'length' || attributes.group === 'weight') {\n        initialFeatureObservation.featureObservationUnit = 'unspecified'\n      }\n\n      return {\n        ...obj,\n        [id]: initialFeatureObservation,\n      }\n    },\n    {}\n  )\n\n  return transformedFeatureObservations\n}\n","import { createSelector } from 'reselect'\n\nimport transformFeatureObservations from './transformFeatureObservations'\n\nfunction transformInput({\n  establishmentMeansTypes = [],\n  featureTypes = [],\n  identifierTypes = [],\n  specimen = {},\n}) {\n  const transformedSpecimen = JSON.parse(JSON.stringify(specimen))\n\n  if (!transformedSpecimen.individual) {\n    transformedSpecimen.individual = {}\n  }\n\n  if (!transformedSpecimen.individual.determinations) {\n    transformedSpecimen.individual.determinations = []\n  }\n\n  if (\n    !transformedSpecimen.individual.identifiers &&\n    identifierTypes.length > 0\n  ) {\n    const identifierType = identifierTypes.find(({ attributes }) => {\n      return attributes && attributes.key === 'catalog-no'\n    })\n\n    transformedSpecimen.individual.identifiers = [\n      {\n        identifierType: {\n          id: identifierType.id,\n        },\n        namespace: '',\n        remarks: '',\n        value: '',\n      },\n    ]\n  }\n\n  if (!transformedSpecimen.individual.recordHistoryEvents) {\n    transformedSpecimen.individual.recordHistoryEvents = []\n  }\n\n  if (\n    !transformedSpecimen.individual.collectingInformation &&\n    establishmentMeansTypes.length > 0\n  ) {\n    const establishmentMeansType = establishmentMeansTypes.find(\n      ({ attributes }) => {\n        return attributes && attributes.key === 'wild-and-native'\n      }\n    )\n    transformedSpecimen.individual.collectingInformation = [\n      { establishmentMeansType: { id: establishmentMeansType.id } },\n    ]\n  }\n\n  if (\n    !transformedSpecimen.individual.originInformation &&\n    establishmentMeansTypes.length > 0\n  ) {\n    const establishmentMeansType = establishmentMeansTypes.find(\n      ({ attributes }) => {\n        return attributes && attributes.key === 'unknown'\n      }\n    )\n    transformedSpecimen.individual.originInformation = [\n      {\n        establishmentMeansType: { id: establishmentMeansType.id },\n        isResultOfSelectiveBreeding: 'unknown',\n      },\n    ]\n  }\n\n  transformedSpecimen.individual.featureObservations = transformFeatureObservations(\n    {\n      featureObservations: transformedSpecimen.individual.featureObservations,\n      featureTypes,\n    }\n  )\n\n  return transformedSpecimen\n}\n\nexport const getBaseValues = createSelector(\n  ({ establishmentMeansTypes }) => establishmentMeansTypes,\n  ({ featureTypes }) => featureTypes,\n  ({ identifierTypes }) => identifierTypes,\n  (establishmentMeansTypes, featureTypes, identifierTypes) => {\n    return transformInput({\n      establishmentMeansTypes,\n      featureTypes,\n      identifierTypes,\n    })\n  }\n)\n\nexport default transformInput\n","import immutable from 'object-path-immutable'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst models = schemaInterface.getModels()\n\nconst createMammalFormModels = () => {\n  let updatedModels = { ...models }\n\n  // date range validation\n  updatedModels = immutable.set(updatedModels, 'dateRange', {\n    ...updatedModels.dateRange,\n    allOf: [\n      { 'x-validation-date-range-in-the-past': true },\n      { 'x-validation-date-range-end-after-start': true },\n      { 'x-validation-date-range-start-and-end': true },\n      { 'x-validation-date-range-valid-if-not-empty': true },\n      { 'x-validation-date-range-no-orphan-day': true },\n      { 'x-validation-date-range-no-orphan-month': true },\n    ],\n  })\n\n  // determination key is a temporary uuid needed for React array key\n  updatedModels = immutable.set(updatedModels, 'determination.properties', {\n    ...updatedModels.determination.properties,\n    key: { type: 'string' },\n  })\n\n  // feature observations have object structure in form\n  updatedModels = immutable.set(\n    updatedModels,\n    'individual.properties.featureObservations',\n    {\n      ...updatedModels.individual.properties.featureObservations,\n      patternProperties: {\n        '/./g': {\n          $ref: 'featureObservation',\n        },\n      },\n      type: 'object',\n    }\n  )\n\n  // latitude and longitude validation\n  updatedModels = immutable.set(updatedModels, 'position.properties.latitude', {\n    ...updatedModels.position.properties.latitude,\n    allOf: [\n      { 'x-validation-digits-and-decimal-point': true },\n      { 'x-validation-latitude': true },\n    ],\n  })\n\n  updatedModels = immutable.set(\n    updatedModels,\n    'position.properties.longitude',\n    {\n      ...updatedModels.position.properties.longitude,\n      allOf: [\n        { 'x-validation-digits-and-decimal-point': true },\n        { 'x-validation-longitude': true },\n      ],\n    }\n  )\n\n  // storage location is required for physical object in collection item\n  updatedModels = immutable.set(updatedModels, 'collectionItem.required', [\n    'physicalObject',\n  ])\n  updatedModels = immutable.set(updatedModels, 'physicalObject.required', [\n    'storageLocation',\n  ])\n  updatedModels = immutable.set(updatedModels, 'storageLocation.required', [\n    'id',\n  ])\n  updatedModels = immutable.set(\n    updatedModels,\n    'storageLocation.properties.id',\n    {\n      minLength: 1,\n      type: 'string',\n    }\n  )\n\n  return updatedModels\n}\n\nconst mammalFormModels = createMammalFormModels()\n\nexport { mammalFormModels }\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { isSubmitting } from 'redux-form'\nimport { Button, Grid, Modal } from 'semantic-ui-react'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { Field, FormModal, Input } from 'coreModules/form/components'\n\nconst mustBe6Or8Digits = value => {\n  const regex = /^(\\d{6}|\\d{8})$/\n\n  if (!value) {\n    return {\n      errorCode: 'INVALID_CATALOG_NUMBER',\n    }\n  }\n  if (!value.match(regex)) {\n    return {\n      errorCode: 'INVALID_CATALOG_NUMBER',\n    }\n  }\n  return undefined\n}\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst mapStateToProps = (state, { formName }) => {\n  return {\n    submitting: isSubmitting(formName)(state),\n  }\n}\n\nconst propTypes = {\n  formName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func,\n  history: PropTypes.object,\n  reset: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  valid: PropTypes.bool,\n}\nconst defaultProps = {\n  handleSubmit: undefined,\n  history: undefined,\n  valid: false,\n}\n\nclass CatalogNumberModal extends PureComponent {\n  constructor() {\n    super()\n\n    this.handleBackToModalOne = this.handleBackToModalOne.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.handleGotoModalTwo = this.handleGotoModalTwo.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n    this.state = {\n      createManually: false,\n    }\n  }\n\n  handleCancel() {\n    this.props.history.go(-1)\n  }\n\n  handleBackToModalOne() {\n    const { formName, reset } = this.props\n    reset(formName)\n    this.setState({ createManually: false })\n  }\n\n  handleGotoModalTwo() {\n    this.setState({ createManually: true })\n  }\n\n  handleSubmit(formData) {\n    this.props.handleSubmit(formData)\n  }\n\n  render() {\n    const { submitting, valid } = this.props\n    const { createManually } = this.state\n\n    return (\n      <FormModal open size=\"small\">\n        <Modal.Header>\n          <ModuleTranslate textKey=\"other.createNewSpecimen\" />\n        </Modal.Header>\n        {createManually && (\n          <React.Fragment>\n            <Modal.Content>\n              <Modal.Description>\n                <Grid>\n                  <Grid.Column width={8}>\n                    <Field\n                      autoComplete=\"off\"\n                      className=\"transparent\"\n                      component={Input}\n                      enableHelpNotifications={false}\n                      helpText={\n                        <ModuleTranslate textKey=\"other.sixOrEightDigits\" />\n                      }\n                      label={<ModuleTranslate textKey=\"other.catalogNumber\" />}\n                      module=\"collectionMammals\"\n                      name=\"individual.identifiers.0.value\"\n                      type=\"text\"\n                      validate={[mustBe6Or8Digits]}\n                    />\n                  </Grid.Column>\n                </Grid>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions style={{ textAlign: 'left' }}>\n              <Button\n                disabled={!valid}\n                loading={submitting}\n                onClick={this.handleSubmit}\n              >\n                <ModuleTranslate textKey=\"other.useThisNumber\" />\n              </Button>\n              <Button onClick={this.handleBackToModalOne}>\n                <ModuleTranslate textKey=\"other.back\" />\n              </Button>\n              <Button basic onClick={this.handleCancel}>\n                <ModuleTranslate textKey=\"other.cancel\" />\n              </Button>\n            </Modal.Actions>\n          </React.Fragment>\n        )}\n\n        {!createManually && (\n          <React.Fragment>\n            <Modal.Content>\n              <Modal.Description>\n                <ModuleTranslate textKey=\"other.automaticCatalogNumber\" />\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions style={{ textAlign: 'left' }}>\n              <Button loading={submitting} onClick={this.handleSubmit}>\n                <ModuleTranslate textKey=\"other.yesCreateNumber\" />\n              </Button>\n              <Button onClick={this.handleGotoModalTwo}>\n                <ModuleTranslate textKey=\"other.enterManully\" />\n              </Button>\n              <Button basic onClick={this.handleCancel}>\n                <ModuleTranslate textKey=\"other.cancel\" />\n              </Button>\n            </Modal.Actions>\n          </React.Fragment>\n        )}\n      </FormModal>\n    )\n  }\n}\n\nCatalogNumberModal.propTypes = propTypes\nCatalogNumberModal.defaultProps = defaultProps\n\nexport default compose(\n  connect(mapStateToProps),\n  withRouter\n)(CatalogNumberModal)\n","import objectPath from 'object-path'\nimport { isEmpty } from 'lodash'\n\nimport transformFeatureObservations from './transformFeatureObservations'\nimport transformOriginInformation from './transformOriginInformation'\n\nexport default function transformOutput({\n  establishmentMeansTypes,\n  specimen = {},\n}) {\n  const transformedSpecimen = JSON.parse(JSON.stringify(specimen))\n\n  if (!transformedSpecimen.individual) {\n    transformedSpecimen.individual = {}\n  }\n\n  const determinations = objectPath.get(\n    transformedSpecimen,\n    'individual.determinations'\n  )\n\n  if (determinations && determinations.length) {\n    transformedSpecimen.individual.determinations = determinations\n      .map(determination => {\n        const patchedDetermination = { ...determination }\n        delete patchedDetermination.key\n        return patchedDetermination\n      })\n      .filter(determination => !isEmpty(determination))\n  }\n\n  const identifiers = objectPath.get(\n    transformedSpecimen,\n    'individual.identifiers'\n  )\n\n  if (identifiers && identifiers.length) {\n    transformedSpecimen.individual.identifiers = identifiers.filter(\n      ({ value }) => !!value\n    )\n  }\n\n  const customTaxonNames = objectPath.get(\n    transformedSpecimen,\n    'individual.taxonInformation.customTaxonNames'\n  )\n\n  if (customTaxonNames && customTaxonNames.length) {\n    transformedSpecimen.individual.taxonInformation.customTaxonNames = customTaxonNames.filter(\n      ({ value }) => !!value\n    )\n  }\n\n  if (transformedSpecimen.individual.featureObservations) {\n    transformedSpecimen.individual.featureObservations = transformFeatureObservations(\n      transformedSpecimen.individual.featureObservations\n    )\n  }\n\n  if (transformedSpecimen.individual.originInformation) {\n    transformedSpecimen.individual.originInformation = transformOriginInformation(\n      establishmentMeansTypes,\n      transformedSpecimen.individual\n    )\n    if (transformedSpecimen.individual.originInformation.length === 0) {\n      delete transformedSpecimen.individual.originInformation\n    }\n  }\n\n  return transformedSpecimen\n}\n","export default function transformFeatureObservations(featureObservations = {}) {\n  return Object.keys(featureObservations)\n    .map(featureTypeId => {\n      const featureObservation = featureObservations[featureTypeId]\n\n      if (!featureObservation) {\n        return null\n      }\n\n      const { featureType, ...rest } = featureObservation\n\n      if (!Object.keys(rest).length) {\n        return null\n      }\n\n      if (!featureObservation.featureObservationText) {\n        return null\n      }\n\n      const transformedFeatureType = {\n        id: featureType.id,\n      }\n\n      return {\n        ...rest,\n        featureType: transformedFeatureType,\n      }\n    })\n    .filter(item => !!item)\n}\n","import { isEmpty } from 'lodash'\n\nexport default function transformOriginInformation(\n  establishmentMeansTypes,\n  { originInformation } = {}\n) {\n  return originInformation\n    .map(origin => {\n      const {\n        establishmentMeansType,\n        isResultOfSelectiveBreeding,\n        originLocality,\n        remarks,\n      } = origin\n\n      const mappedOrigin = { ...origin }\n      const defaultEstablishmentMeansType = establishmentMeansTypes.find(\n        ({ attributes }) => {\n          return attributes.key === 'unknown'\n        }\n      )\n\n      if (\n        !originLocality &&\n        !remarks &&\n        establishmentMeansType.id === defaultEstablishmentMeansType.id &&\n        isResultOfSelectiveBreeding === 'unknown'\n      ) {\n        delete mappedOrigin.establishmentMeansType\n        delete mappedOrigin.isResultOfSelectiveBreeding\n        delete mappedOrigin.originLocality\n        delete mappedOrigin.remarks\n      }\n      return mappedOrigin\n    })\n    .filter(origin => !isEmpty(origin))\n}\n","import objectPath from 'object-path'\n\nexport const mapCollectionItemError = collectionItem => {\n  const physicalObjectErrorPath = objectPath.get(\n    collectionItem,\n    'physicalObject.fullPath'\n  )\n\n  const storageLocationErrorPath = objectPath.get(\n    collectionItem,\n    'physicalObject.storageLocation.fullPath'\n  )\n\n  if (physicalObjectErrorPath || storageLocationErrorPath) {\n    return {\n      physicalObject: {\n        storageLocation: {\n          id: {\n            errorCode: 'REQUIRED',\n            fullPath: physicalObjectErrorPath\n              ? `${physicalObjectErrorPath}.storageLocation.id`\n              : `${storageLocationErrorPath}.id`,\n          },\n        },\n      },\n    }\n  }\n\n  return collectionItem\n}\n\nconst mapCollectionItemsErrors = syncErrors => {\n  const collectionItems = objectPath.get(\n    syncErrors,\n    'individual.collectionItems'\n  )\n\n  if (collectionItems) {\n    objectPath.set(\n      syncErrors,\n      'individual.collectionItems',\n      collectionItems.map(mapCollectionItemError)\n    )\n  }\n\n  return syncErrors\n}\n\nexport default mapCollectionItemsErrors\n","import {\n  createAgentInputs,\n  createSingleDate,\n} from 'coreModules/form/components/parts/factories'\n\nconst model = 'acquisition'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.acquisition',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'other.addAcquisition',\n    },\n    initiallyShown: true,\n  },\n  ...createSingleDate({\n    initiallyHidden: true,\n    name: 'individual.acquisition.date',\n  }),\n  ...createAgentInputs({\n    baseName: 'individual.acquisition.handedInByAgent',\n    initiallyHidden: true,\n    model,\n  }),\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.acquisition',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.acquisition',\n    },\n    initiallyHidden: true,\n    name: 'individual.acquisition.remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'acquisition',\n  parts,\n}\n","import { createRangeDateWithRemarks } from 'coreModules/form/components/parts/factories'\n\nconst model = 'collectingInformation'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeaderWithHelpIcon',\n    componentProps: {\n      as: 'h3',\n      helpNotificationProps: {\n        descriptionHeaderKey:\n          'modules.collectionMammals.headers.collectingDate',\n        descriptionKey:\n          'modules.collectionMammals.helpTexts.collectingInformation.collectingDate',\n      },\n      textKey: 'headers.collectingDate',\n    },\n  },\n  ...createRangeDateWithRemarks({\n    baseName: 'individual.collectingInformation.0.event.dateRange',\n    displayDateTypeRadios: true,\n    emptyStateTextKey: 'remarks.emptyState.date',\n    model,\n    resultPrefixTextKey: 'remarks.resultPrefix.date',\n  }),\n]\n\nexport default {\n  name: 'collectingDate',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.collectingAndDeathDetails',\n    },\n  },\n]\n\nexport default {\n  name: 'collectingDeathRoot',\n  parts,\n}\n","const model = 'collectingInformation'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.collectingLocality',\n    },\n  },\n  {\n    componentName: 'CollectingLocality',\n    containsReduxFormField: true,\n    name: 'individual.collectingInformation.0.event.locationInformation',\n  },\n  {\n    componentName: 'TextArea',\n    componentProps: {\n      columnProps: { width: 11 },\n      rows: 2,\n      type: 'text',\n    },\n    name:\n      'individual.collectingInformation.0.event.locationInformation.localityI',\n    wrapInField: true,\n  },\n  {\n    componentName: 'LocalityDropdownPickerSearch',\n    componentProps: {\n      columnProps: { width: 11 },\n    },\n    name:\n      'individual.collectingInformation.0.event.locationInformation.places.0.id',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { clear: true, width: 5 },\n      type: 'text',\n    },\n    name:\n      'individual.collectingInformation.0.event.locationInformation.swedishGrid5km',\n    wrapInField: true,\n  },\n  {\n    componentName: 'EstablishmentMeansTypeRadioGroup',\n    label: 'other.appearanceAtCollecting',\n    module: 'collectionMammals',\n    name: 'individual.collectingInformation.0.establishmentMeansType.id',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.collectingLocationRemarks',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.collectingLocationRemarks',\n    },\n    name: 'individual.collectingInformation.0.remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'collectingLocation',\n  parts,\n}\n","import { createAgentInputs } from 'coreModules/form/components/parts/factories'\n\nconst model = 'collectingInformation'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.collectorAndExpedition',\n    },\n  },\n  ...createAgentInputs({\n    baseName: 'individual.collectingInformation.0.collectedByAgent',\n    model,\n  }),\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 10 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'individual.collectingInformation.0.event.expeditionText',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'collectorExpedition',\n  parts,\n}\n","const model = 'deathInformation'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.death',\n    },\n  },\n  {\n    componentName: 'Checkbox',\n    componentProps: {\n      inline: true,\n      textKey: 'diedAtColleting',\n    },\n    name: 'individual.collectingInformation.0.isDeathDate',\n    wrapInField: true,\n  },\n  {\n    componentName: 'CauseOfDeathDropdownSearch',\n    componentProps: {\n      columnProps: { width: 6 },\n      inline: true,\n      textKey: 'causeOfDeathType',\n    },\n    name: 'individual.deathInformation.0.causeOfDeathType.id',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.death',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.death',\n    },\n    name: 'individual.deathInformation.0.remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'death',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.determinations',\n    },\n  },\n  {\n    componentName: 'DeterminationsAccordion',\n    containsReduxFormField: true,\n    name: 'individual.determinations',\n    relativeNames: [\n      'taxonNameV',\n      'taxonNameI',\n      'determinedByAgent.textV',\n      'determinedByAgent.textI',\n      'determinedByAgent.normalized.id',\n      'date',\n      'remarks',\n    ],\n  },\n]\n\nexport default {\n  name: 'determinations',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.features',\n    },\n  },\n  {\n    componentName: 'FeatureObservations',\n    containsReduxFormField: true,\n    name: 'individual.featureObservations',\n    relativeNames: [\n      'featureType.id',\n      'featureObservationText',\n      'featureObservationUnit',\n      'methodText',\n    ],\n  },\n]\n\nexport default {\n  name: 'features',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeaderWithHelpIcon',\n    componentProps: {\n      as: 'h3',\n      helpNotificationProps: {\n        descriptionHeaderKey: 'modules.collectionMammals.headers.identifiers',\n        descriptionKey: 'modules.collectionMammals.helpTexts.identifiers',\n      },\n      textKey: 'headers.identifiers',\n    },\n    name: 'individual.identifiers',\n  },\n  {\n    componentName: 'IdentifiersTable',\n    containsReduxFormField: true,\n    name: 'individual.identifiers',\n    relativeNames: ['identifierType.id', 'value'],\n  },\n]\n\nexport default {\n  name: 'identifiers',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.localityOrigin',\n    },\n  },\n]\n\nexport default {\n  name: 'localityOriginRoot',\n  parts,\n}\n","const model = 'originInformation'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.origin',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'other.addOrigin',\n    },\n    initiallyShown: true,\n  },\n  {\n    componentName: 'TextArea',\n    componentProps: {\n      columnProps: { width: 11 },\n      rows: 2,\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'individual.originInformation.0.originLocality',\n    wrapInField: true,\n  },\n  {\n    componentName: 'EstablishmentMeansTypeRadioGroup',\n    initiallyHidden: true,\n    label: 'other.appearanceAtOrigin',\n    module: 'collectionMammals',\n    name: 'individual.originInformation.0.establishmentMeansType.id',\n    wrapInField: true,\n  },\n  {\n    componentName: 'SelectiveBreeding',\n    initiallyHidden: true,\n    label: 'other.selectiveBreeding',\n    name: 'individual.originInformation.0.isResultOfSelectiveBreeding',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.origin',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.origin',\n    },\n    initiallyHidden: true,\n    name: 'individual.originInformation.0.remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  compareInitiallyHiddenWithBaseValues: true,\n  name: 'origin',\n  parts,\n}\n","import { camelCase } from 'lodash'\n\nexport default function createPhysicalObjectsByCategory(category) {\n  const camelCaseCategory = camelCase(category)\n\n  return [\n    {\n      componentName: 'TranslatedHeader',\n      componentProps: {\n        as: 'h3',\n        textKey: `headers.physicalObjects.${camelCaseCategory}`,\n      },\n    },\n    {\n      componentName: 'PhysicalObjectsAccordion',\n      componentProps: {\n        category,\n      },\n      containsReduxFormField: true,\n      name: 'individual.collectionItems',\n      relativeNames: [\n        'preparationType.id',\n        'physicalObject.storageLocation.id',\n        'description',\n      ],\n    },\n  ]\n}\n","import { OTHER_PREPARATION } from 'domainModules/curatedList/constants'\n\nimport { createPhysicalObjectsByCategory } from '../../formParts/factories'\n\nconst parts = [...createPhysicalObjectsByCategory(OTHER_PREPARATION)]\n\nexport default {\n  name: 'physicalObjectsOtherPreparation',\n  parts,\n}\n","import acquisition from './acquisition'\nimport collectingDate from './collectingDate'\nimport collectingDeathRoot from './collectingDeathRoot'\nimport collectingLocation from './collectingLocation'\nimport collectorExpedition from './collectorExpedition'\nimport death from './death'\nimport determinations from './determinations'\nimport features from './features'\nimport identifiers from './identifiers'\nimport localityOriginRoot from './localityOriginRoot'\nimport origin from './origin'\nimport physicalObjectsOtherPreparation from './physicalObjectsOtherPreparation'\nimport physicalObjectsRoot from './physicalObjectsRoot'\nimport physicalObjectsSkeleton from './physicalObjectsSkeleton'\nimport physicalObjectsSkin from './physicalObjectsSkin'\nimport physicalObjectsWetPreparation from './physicalObjectsWetPreparation'\nimport recordHistoryExternalEvents from './recordHistoryExternalEvents'\nimport specimenRoot from './specimenRoot'\nimport taxonomyRoot from './taxonomyRoot'\nimport taxonOtherName from './taxonOtherName'\nimport taxonPreferredName from './taxonPreferredName'\nimport typeStatus from './typeStatus'\n\nexport default {\n  acquisition,\n  collectingDate,\n  collectingDeathRoot,\n  collectingLocation,\n  collectorExpedition,\n  death,\n  determinations,\n  features,\n  identifiers,\n  localityOriginRoot,\n  origin,\n  physicalObjectsOtherPreparation,\n  physicalObjectsRoot,\n  physicalObjectsSkeleton,\n  physicalObjectsSkin,\n  physicalObjectsWetPreparation,\n  recordHistoryExternalEvents,\n  specimenRoot,\n  taxonomyRoot,\n  taxonOtherName,\n  taxonPreferredName,\n  typeStatus,\n}\n","const model = 'specimen'\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.physicalObjects',\n    },\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.collectionItems',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.physicalObjects',\n    },\n    name: 'collectionItemsRemarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'physicalObjectsRoot',\n  parts,\n}\n","import { SKELETON } from 'domainModules/curatedList/constants'\n\nimport { createPhysicalObjectsByCategory } from '../../formParts/factories'\n\nconst parts = [...createPhysicalObjectsByCategory(SKELETON)]\n\nexport default {\n  name: 'physicalObjectsSkeleton',\n  parts,\n}\n","import { SKIN } from 'domainModules/curatedList/constants'\n\nimport { createPhysicalObjectsByCategory } from '../../formParts/factories'\n\nconst parts = [...createPhysicalObjectsByCategory(SKIN)]\n\nexport default {\n  name: 'physicalObjectsSkin',\n  parts,\n}\n","import { WET_PREPARATION } from 'domainModules/curatedList/constants'\n\nimport { createPhysicalObjectsByCategory } from '../../formParts/factories'\n\nconst parts = [...createPhysicalObjectsByCategory(WET_PREPARATION)]\n\nexport default {\n  name: 'physicalObjectsWetPreparation',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.externalEvents',\n    },\n  },\n  {\n    componentName: 'RecordHistoryExternalEvents',\n    containsReduxFormField: true,\n    name: 'individual.recordHistoryEvents',\n    relativeNames: ['agent', 'date'],\n  },\n]\n\nexport default {\n  name: 'recordHistoryExternalEvents',\n  parts,\n}\n","const model = 'specimen'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      columnProps: { width: 12 },\n      textKey: 'headers.basicInformation',\n    },\n  },\n  {\n    componentName: 'Checkbox',\n    componentProps: {\n      columnProps: { width: 4 },\n      inline: true,\n      model,\n      textKey: 'public',\n    },\n    name: 'publishRecord',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.specimen',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.specimen',\n    },\n    name: 'remarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'specimenRoot',\n  parts,\n}\n","const model = 'taxonomy'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.taxonomy',\n    },\n  },\n  {\n    componentName: 'Remarks',\n    componentProps: {\n      emptyStateTextKey: 'remarks.emptyState.taxonomy',\n      model,\n      resultPrefixTextKey: 'remarks.resultPrefix.taxonomy',\n    },\n    name: 'individual.taxonInformation.taxonRemarks',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'taxonomyRoot',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.taxonOtherNames',\n    },\n  },\n  {\n    componentName: 'CustomTaxonNamesTable',\n    containsReduxFormField: true,\n    name: 'individual.taxonInformation.customTaxonNames',\n    relativeNames: ['customTaxonNameType.id', 'value'],\n  },\n]\n\nexport default {\n  name: 'taxonOtherName',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.taxon',\n    },\n  },\n  {\n    componentName: 'TogglableTaxonDropdownPickerSearch',\n    name: 'individual.taxonInformation.curatorialTaxon.id',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'taxonPreferredName',\n  parts,\n}\n","const parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h3',\n      textKey: 'headers.typeInformation',\n    },\n  },\n  {\n    componentName: 'AddButton',\n    componentProps: {\n      textKey: 'other.addTypeStatus',\n    },\n    initiallyShown: true,\n  },\n  {\n    componentName: 'TypeSpecimenTypeDropdownSearch',\n    componentProps: {\n      columnProps: { clear: true, width: 6 },\n    },\n    initiallyHidden: true,\n    name: 'individual.taxonInformation.typeStatus.id',\n    wrapInField: true,\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 8 },\n      fluid: true,\n      type: 'text',\n    },\n    initiallyHidden: true,\n    name: 'individual.taxonInformation.typifiedName',\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'typeStatus',\n  parts,\n}\n","import basicInformation from './basicInformation'\nimport collectingDeath from './collectingDeath'\nimport localityOrigin from './localityOrigin'\nimport physicalObjects from './physicalObjects'\nimport taxonomy from './taxonomy'\nimport features from './features'\n\nexport default [\n  basicInformation,\n  taxonomy,\n  localityOrigin,\n  collectingDeath,\n  physicalObjects,\n  features,\n]\n","import {\n  legacyData,\n  recordHistoryEvents,\n} from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst {\n  specimenRoot,\n  identifiers,\n  acquisition,\n  recordHistoryExternalEvents,\n} = unitSpecs\n\nconst units = [\n  specimenRoot,\n  identifiers,\n  acquisition,\n  recordHistoryExternalEvents,\n  recordHistoryEvents,\n  legacyData,\n]\n\nexport default {\n  name: 'basicInformation',\n  units,\n}\n","import unitSpecs from '../../unitSpecs'\n\nconst {\n  taxonomyRoot,\n  taxonPreferredName,\n  taxonOtherName,\n  typeStatus,\n  determinations,\n} = unitSpecs\n\nconst units = [\n  taxonomyRoot,\n  taxonPreferredName,\n  taxonOtherName,\n  typeStatus,\n  determinations,\n]\n\nexport default {\n  name: 'taxonomy',\n  units,\n}\n","import unitSpecs from '../../unitSpecs'\n\nconst { localityOriginRoot, collectingLocation, origin } = unitSpecs\n\nconst units = [localityOriginRoot, collectingLocation, origin]\n\nexport default {\n  name: 'localityOrigin',\n  units,\n}\n","import unitSpecs from '../../unitSpecs'\n\nconst {\n  collectingDeathRoot,\n  collectorExpedition,\n  collectingDate,\n  death,\n} = unitSpecs\n\nconst units = [collectingDeathRoot, collectorExpedition, collectingDate, death]\n\nexport default {\n  name: 'collectingDeath',\n  units,\n}\n","import unitSpecs from '../../unitSpecs'\n\nconst {\n  physicalObjectsOtherPreparation,\n  physicalObjectsRoot,\n  physicalObjectsSkeleton,\n  physicalObjectsSkin,\n  physicalObjectsWetPreparation,\n} = unitSpecs\n\nconst units = [\n  physicalObjectsRoot,\n  physicalObjectsSkeleton,\n  physicalObjectsSkin,\n  physicalObjectsWetPreparation,\n  physicalObjectsOtherPreparation,\n]\n\nexport default {\n  name: 'physicalObjects',\n  units,\n}\n","import unitSpecs from '../../unitSpecs'\n\nconst { features } = unitSpecs\n\nconst units = [features]\n\nexport default {\n  name: 'features',\n  units,\n}\n","import wrapReduxFormFieldParts from 'coreModules/form/utilities/wrapReduxFormFieldParts'\n\nimport CauseOfDeathDropdownSearch from '../CauseOfDeathDropdownSearch'\nimport EstablishmentMeansTypeRadioGroup from '../EstablishmentMeansTypeRadioGroup'\nimport TypeSpecimenTypeDropdownSearch from '../TypeSpecimenTypeDropdownSearch'\n\nexport default wrapReduxFormFieldParts({\n  CauseOfDeathDropdownSearch,\n  EstablishmentMeansTypeRadioGroup,\n  TypeSpecimenTypeDropdownSearch,\n})\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { Icon } from 'semantic-ui-react'\n\nconst iconStyle = {\n  float: 'left',\n}\n\nconst getCoordinates = (latitude, longitude) => {\n  const latNumber = latitude && Number(latitude)\n  const lat = latNumber < 0 ? 'S' : 'N'\n\n  const lonNumber = longitude && Number(longitude)\n  const lon = longitude < 0 ? 'W' : 'E'\n\n  if (latitude && longitude) {\n    return `${Math.abs(latNumber)} ${lat}, ${Math.abs(lonNumber)}\n      ${lon} (WGS84)`\n  }\n  if (latitude) {\n    return `${Math.abs(latNumber)} ${lat} (WGS84)`\n  }\n  return `${Math.abs(lonNumber)} ${lon} (WGS84)`\n}\n\nconst getElevation = (maximumElevationInMeters, minimumElevationInMeters) => {\n  if (maximumElevationInMeters === undefined) {\n    return `Elevation: ${minimumElevationInMeters} m`\n  }\n\n  if (minimumElevationInMeters === undefined) {\n    return `Elevation: ${maximumElevationInMeters} m`\n  }\n  return `Elevation: ${minimumElevationInMeters} to\n    ${maximumElevationInMeters} m`\n}\n\nconst getDepth = (maximumDepthInMeters, minimumDepthInMeters) => {\n  if (maximumDepthInMeters === undefined) {\n    return `Depth: ${minimumDepthInMeters} m`\n  }\n\n  if (minimumDepthInMeters === undefined) {\n    return `Depth: ${maximumDepthInMeters} m`\n  }\n  return `Depth: ${minimumDepthInMeters} to ${maximumDepthInMeters} m`\n}\n\nconst buildCollectingPosition = (...values) => {\n  return values.filter(Boolean).join(', ')\n}\n\nconst propTypes = {\n  coordinatesVerbatim: PropTypes.string,\n  georeferenceSourcesText: PropTypes.string,\n  onEdit: PropTypes.func,\n  position: PropTypes.shape({\n    latitude: PropTypes.string,\n    longitude: PropTypes.string,\n    uncertaintyInMeters: PropTypes.number,\n  }),\n  verticalPosition: PropTypes.shape({\n    maximumDepthInMeters: PropTypes.number,\n    maximumElevationInMeters: PropTypes.number,\n    minimumDepthInMeters: PropTypes.number,\n    minimumElevationInMeters: PropTypes.number,\n  }),\n}\n\nconst defaultProps = {\n  coordinatesVerbatim: undefined,\n  georeferenceSourcesText: undefined,\n  onEdit: undefined,\n  position: undefined,\n  verticalPosition: undefined,\n}\n\nclass CollectingPosition extends PureComponent {\n  render() {\n    const {\n      coordinatesVerbatim,\n      georeferenceSourcesText,\n      onEdit: handleEditCoordinate,\n      position,\n      verticalPosition,\n    } = this.props\n\n    const { latitude, longitude, uncertaintyInMeters } = position || {}\n    const hasDecimalCoordinates = latitude || longitude\n\n    const coordinates = hasDecimalCoordinates\n      ? getCoordinates(latitude, longitude)\n      : coordinatesVerbatim\n\n    const uncertainty =\n      uncertaintyInMeters !== undefined &&\n      `Uncertainty: ${uncertaintyInMeters} m`\n\n    const {\n      maximumDepthInMeters,\n      maximumElevationInMeters,\n      minimumDepthInMeters,\n      minimumElevationInMeters,\n    } = verticalPosition || {}\n\n    const hasElevation =\n      maximumElevationInMeters !== undefined ||\n      minimumElevationInMeters !== undefined\n    const elevation =\n      hasElevation &&\n      getElevation(maximumElevationInMeters, minimumElevationInMeters)\n\n    const hasDepth =\n      maximumDepthInMeters !== undefined || minimumDepthInMeters !== undefined\n    const depth =\n      hasDepth && getDepth(maximumDepthInMeters, minimumDepthInMeters)\n\n    const collectingPosition = buildCollectingPosition(\n      coordinates,\n      uncertainty,\n      elevation,\n      depth,\n      georeferenceSourcesText\n    )\n\n    return (\n      <React.Fragment>\n        {hasDecimalCoordinates && (\n          <div style={iconStyle}>\n            <Icon name=\"marker\" />\n          </div>\n        )}\n        {collectingPosition && collectingPosition}\n        <span style={{ paddingLeft: '0.8em' }}>\n          <Icon\n            name=\"edit\"\n            onClick={handleEditCoordinate}\n            style={{ cursor: 'pointer' }}\n          />\n        </span>\n      </React.Fragment>\n    )\n  }\n}\n\nCollectingPosition.propTypes = propTypes\nCollectingPosition.defaultProps = defaultProps\n\nexport default compose(pathBuilder())(CollectingPosition)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Field, FieldTemplate, Input } from 'coreModules/form/components'\n\nconst inputStyle = {\n  float: 'left',\n  paddingRight: '0.1em',\n  width: '6em',\n}\n\nconst propTypes = {\n  max: PropTypes.string.isRequired,\n  min: PropTypes.string.isRequired,\n  module: PropTypes.string.isRequired,\n  name: PropTypes.string,\n}\n\nexport const defaultProps = {\n  name: undefined,\n}\n\nclass VerticalPosition extends PureComponent {\n  render() {\n    const { name, max, min, module } = this.props\n    return (\n      <FieldTemplate float=\"left\" meta={{}} module={module} name={name}>\n        <div>\n          <div style={inputStyle}>\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={Input}\n              displayLabel={false}\n              displaySubLabels={false}\n              fluid\n              labelPosition=\"right\"\n              module={module}\n              name={min}\n              type=\"number\"\n            />\n          </div>\n          <div\n            style={{\n              float: 'left',\n              marginTop: '0.5em',\n              textAlign: 'center',\n              width: '2em',\n            }}\n          >\n            {'/'}\n          </div>\n          <div style={inputStyle}>\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={Input}\n              displayLabel={false}\n              displaySubLabels={false}\n              fluid\n              labelPosition=\"right\"\n              module={module}\n              name={max}\n              type=\"number\"\n            />\n          </div>\n        </div>\n      </FieldTemplate>\n    )\n  }\n}\n\nVerticalPosition.propTypes = propTypes\nVerticalPosition.defaultProps = defaultProps\n\nexport default VerticalPosition\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Grid, Modal } from 'semantic-ui-react'\nimport memoize from 'memoize-one'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport {\n  Coordinates,\n  Field,\n  FormModal,\n  Input,\n  TextArea,\n} from 'coreModules/form/components'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\nimport VerticalPosition from './VerticalPosition'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst getFieldNames = memoize(getPath => {\n  return [\n    getPath('coordinatesVerbatim'),\n    getPath('position.latitude'),\n    getPath('position.longitude'),\n    getPath('georeferenceSourcesText'),\n    getPath('position.uncertaintyInMeters'),\n    getPath('verticalPosition'),\n    getPath('verticalPosition'),\n  ]\n})\n\nconst mapStateToProps = (state, { open, formName, getPath }) => {\n  return {\n    isInvalid:\n      open &&\n      formSupportSelectors.getAnyFieldIsInvalid(state, {\n        fieldNames: getFieldNames(getPath),\n        formName,\n        requireTouched: false,\n      }),\n  }\n}\n\nconst propTypes = {\n  getPath: PropTypes.func.isRequired,\n  isInvalid: PropTypes.bool.isRequired,\n  module: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n}\n\nclass PositionModal extends PureComponent {\n  render() {\n    const {\n      isInvalid,\n      getPath,\n      module,\n      onClose: handleClose,\n      open,\n    } = this.props\n\n    return (\n      <FormModal open={open} size=\"tiny\">\n        <Modal.Header>\n          <ModuleTranslate module={module} textKey=\"headers.localityPosition\" />\n        </Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Grid>\n              <Grid.Row className=\"relaxed\">\n                <Grid.Column width={13}>\n                  <Field\n                    autoComplete=\"off\"\n                    component={Input}\n                    fluid\n                    module={module}\n                    name={getPath('coordinatesVerbatim')}\n                    type=\"text\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <Field\n                    autoComplete=\"off\"\n                    component={Coordinates}\n                    label={<ModuleTranslate textKey=\"other.coordinates\" />}\n                    latitudeLabel={<ModuleTranslate textKey=\"other.latitude\" />}\n                    longitudeLabel={\n                      <ModuleTranslate textKey=\"other.longitude\" />\n                    }\n                    module={module}\n                    name={getPath('position')}\n                  />\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Field\n                    autoComplete=\"off\"\n                    component={Input}\n                    fluid\n                    module={module}\n                    name={getPath('position.uncertaintyInMeters')}\n                    type=\"number\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <VerticalPosition\n                    max={getPath('verticalPosition.maximumElevationInMeters')}\n                    min={getPath('verticalPosition.minimumElevationInMeters')}\n                    module={module}\n                    name={getPath('verticalPosition.elevation')}\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <VerticalPosition\n                    max={getPath('verticalPosition.maximumDepthInMeters')}\n                    min={getPath('verticalPosition.minimumDepthInMeters')}\n                    module={module}\n                    name={getPath('verticalPosition.depth')}\n                  />\n                </Grid.Column>\n                <Grid.Column width={13}>\n                  <Field\n                    autoComplete=\"off\"\n                    component={TextArea}\n                    fluid\n                    module={module}\n                    name={getPath('georeferenceSourcesText')}\n                    type=\"text\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions style={{ textAlign: 'left' }}>\n          <Button disabled={isInvalid} onClick={handleClose}>\n            <ModuleTranslate textKey=\"other.done\" />\n          </Button>\n        </Modal.Actions>\n      </FormModal>\n    )\n  }\n}\n\nPositionModal.propTypes = propTypes\n\nexport default connect(mapStateToProps)(PositionModal)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { Button, Grid, Icon } from 'semantic-ui-react'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport { Field, TextArea } from 'coreModules/form/components'\nimport createLog from 'utilities/log'\n\nimport CollectingPosition from './CollectingPosition'\nimport PositionModal from './PositionModal'\n\nconst log = createLog('modules:collectionMammals:MammalForm:CollectingLocality')\n\nconst buttonStyle = {\n  float: 'left',\n  marginBottom: '1.56em',\n  paddingLeft: '1.32em',\n  paddingRight: '1.32em',\n}\n\nconst propTypes = {\n  coordinatesVerbatim: PropTypes.string,\n  formName: PropTypes.string.isRequired,\n  georeferenceSourcesText: PropTypes.string,\n  getPath: PropTypes.func.isRequired,\n  module: PropTypes.string.isRequired,\n  position: PropTypes.object,\n  verticalPosition: PropTypes.object,\n}\n\nconst defaultProps = {\n  coordinatesVerbatim: undefined,\n  georeferenceSourcesText: undefined,\n  position: undefined,\n  verticalPosition: undefined,\n}\n\nconst mapStateToProps = (state, { formValueSelector, getPath }) => {\n  return {\n    coordinatesVerbatim: formValueSelector(\n      state,\n      getPath('coordinatesVerbatim')\n    ),\n    georeferenceSourcesText: formValueSelector(\n      state,\n      getPath('georeferenceSourcesText')\n    ),\n    position: formValueSelector(state, getPath('position')),\n    verticalPosition: formValueSelector(state, getPath('verticalPosition')),\n  }\n}\n\nclass CollectingLocality extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleClose = this.handleClose.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleClose() {\n    this.setState({ open: false })\n  }\n\n  handleOpen() {\n    this.setState({ open: true })\n  }\n\n  render() {\n    const {\n      coordinatesVerbatim,\n      georeferenceSourcesText,\n      getPath,\n      formName,\n      module,\n      position,\n      verticalPosition,\n    } = this.props\n\n    const { open } = this.state\n\n    const hasPosition = position && Object.keys(position).length\n    const hasVerticalPosition =\n      verticalPosition && Object.keys(verticalPosition).length\n    const hasPositionData =\n      coordinatesVerbatim ||\n      georeferenceSourcesText ||\n      hasPosition ||\n      hasVerticalPosition\n\n    log.render()\n    return (\n      <React.Fragment>\n        <Grid.Column width={11}>\n          <Field\n            autoComplete=\"off\"\n            component={TextArea}\n            displayLabel\n            fluid\n            module={module}\n            name={getPath('localityV')}\n            rows={2}\n            type=\"text\"\n          />\n        </Grid.Column>\n        {hasPositionData ? (\n          <Grid.Column width={11}>\n            <CollectingPosition\n              coordinatesVerbatim={coordinatesVerbatim}\n              georeferenceSourcesText={georeferenceSourcesText}\n              module={module}\n              onEdit={this.handleOpen}\n              position={position}\n              verticalPosition={verticalPosition}\n            />\n          </Grid.Column>\n        ) : (\n          <Grid.Column width={5}>\n            <Button\n              floated=\"left\"\n              onClick={this.handleOpen}\n              style={buttonStyle}\n              type=\"button\"\n            >\n              <Icon name=\"marker\" />\n              <ModuleTranslate\n                capitalize\n                module={module}\n                textKey=\"other.addPosition\"\n              />\n            </Button>\n          </Grid.Column>\n        )}\n\n        <PositionModal\n          formName={formName}\n          getPath={getPath}\n          module={module}\n          name={getPath('position')}\n          onClose={this.handleClose}\n          open={open}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nCollectingLocality.propTypes = propTypes\nCollectingLocality.defaultProps = defaultProps\n\nexport default compose(\n  pathBuilder(),\n  connect(mapStateToProps)\n)(CollectingLocality)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport {\n  ConfirmationPopup,\n  DropdownSearch,\n  Field,\n  Input,\n} from 'coreModules/form/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/CustomTaxonNamesTable/Row'\n)\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  customTaxonName: PropTypes.shape({\n    customTaxonNameType: PropTypes.object,\n    id: PropTypes.string,\n    remarks: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  customTaxonNameTypeOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\n\nclass CustomTaxonNamesTableRow extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  componentWillMount() {\n    const { changeFieldValue, customTaxonName, getPath } = this.props\n    changeFieldValue(getPath('customTaxonName.id'), customTaxonName.id)\n  }\n\n  handleRemove() {\n    const { getTranslationPath, index, removeArrayFieldByIndex } = this.props\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      customTaxonNameTypeOptions,\n      getPath,\n      i18n: { moduleTranslate },\n    } = this.props\n\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Column width={6}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={DropdownSearch}\n            displayLabel={false}\n            module=\"collectionMammals\"\n            name={getPath('customTaxonNameType.id')}\n            options={customTaxonNameTypeOptions}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.selectKindOfName',\n            })}\n            type=\"dropdown-search-local\"\n          />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={Input}\n            displayLabel={false}\n            fluid\n            module=\"collectionMammals\"\n            name={getPath('value')}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.addNameOrNames',\n            })}\n            type=\"text\"\n          />\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ConfirmationPopup\n            cancelButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.cancel',\n            })}\n            confirmButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.remove',\n            })}\n            header={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.removeThisOtherName',\n            })}\n            hideOnScroll\n            iconName=\"trash\"\n            onConfirm={this.handleRemove}\n            size=\"large\"\n            type=\"icon\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nCustomTaxonNamesTableRow.propTypes = propTypes\n\nexport default compose(\n  withI18n({ module: 'collectionMammals' }),\n  pathBuilder()\n)(CustomTaxonNamesTableRow)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport formParts from 'coreModules/form/components/parts'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport { globalSelectors as crudKeyObjectSelectors } from 'coreModules/crud/keyObjectModule'\nimport CustomTaxonNamesTableRow from './Row'\n\nconst { AddButton } = formParts\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/CustomTaxonNamesTable'\n)\n\nconst mapStateToProps = (state, { formValueSelector, name }) => {\n  return {\n    allCustomTaxonNameTypesFetched: crudKeyObjectSelectors.get[\n      ':resource.allItems.fetched'\n    ](state, { resource: 'customTaxonNameType' }),\n    customTaxonNames: formValueSelector(state, name),\n    customTaxonNameTypeOptions: globalCrudSelectors.customTaxonNameType.getAllAsOptions(\n      state\n    ),\n  }\n}\n\nconst propTypes = {\n  allCustomTaxonNameTypesFetched: PropTypes.bool,\n  changeFieldValue: PropTypes.func.isRequired,\n  customTaxonNames: PropTypes.arrayOf(PropTypes.object),\n  customTaxonNameTypeOptions: PropTypes.array.isRequired,\n  getPath: PropTypes.func.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  allCustomTaxonNameTypesFetched: false,\n  customTaxonNames: [],\n}\n\nfunction CustomTaxonNamesTable({\n  allCustomTaxonNameTypesFetched,\n  changeFieldValue,\n  getPath,\n  customTaxonNames,\n  customTaxonNameTypeOptions,\n  removeArrayFieldByIndex,\n}) {\n  log.render()\n  if (!allCustomTaxonNameTypesFetched) {\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      {customTaxonNames\n        .map((customTaxonName, index) => {\n          return (\n            <Grid.Column\n              key={index} // eslint-disable-line react/no-array-index-key\n              width={16}\n            >\n              <CustomTaxonNamesTableRow\n                changeFieldValue={changeFieldValue}\n                customTaxonName={customTaxonName}\n                customTaxonNameTypeOptions={customTaxonNameTypeOptions}\n                index={index}\n                key={index} // eslint-disable-line react/no-array-index-key\n                removeArrayFieldByIndex={removeArrayFieldByIndex}\n              />\n            </Grid.Column>\n          )\n        })\n        .filter(item => !!item)}\n      <AddButton\n        id=\"add-customTaxonName\"\n        onClick={event => {\n          event.preventDefault()\n          changeFieldValue(getPath(customTaxonNames.length), {})\n        }}\n        textKey=\"other.addOtherName\"\n      />\n    </React.Fragment>\n  )\n}\n\nCustomTaxonNamesTable.propTypes = propTypes\nCustomTaxonNamesTable.defaultProps = defaultProps\n\nexport default compose(\n  connect(mapStateToProps),\n  pathBuilder()\n)(CustomTaxonNamesTable)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Button, Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport {\n  ConfirmationPopup,\n  Field,\n  Input,\n  Remarks,\n  SingleDate,\n} from 'coreModules/form/components'\n\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { TogglableAgentDropdownPickerSearch } from 'domainModules/agent/components'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion/DeterminationContent'\n)\n\nconst propTypes = {\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  handleSetInactive: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n  skipRemoveDeterminationConfirmation: PropTypes.bool.isRequired,\n}\n\nclass DeterminationContent extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  handleRemove() {\n    const {\n      getTranslationPath,\n      handleSetInactive,\n      index,\n      removeArrayFieldByIndex,\n    } = this.props\n    handleSetInactive(index)\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      getPath,\n      getTranslationPath,\n      handleSetInactive,\n      i18n: { moduleTranslate },\n      index,\n      removeArrayFieldByIndex,\n      skipRemoveDeterminationConfirmation,\n    } = this.props\n\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"bottom\">\n        <Grid.Row className=\"relaxed\">\n          <Grid.Column width={8}>\n            <Field\n              autoComplete=\"off\"\n              component={Input}\n              fluid\n              module=\"collectionMammals\"\n              name={getPath('taxonNameV')}\n              type=\"text\"\n            />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Field\n              autoComplete=\"off\"\n              component={Input}\n              fluid\n              module=\"collectionMammals\"\n              name={getPath('taxonNameI')}\n              type=\"text\"\n            />\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Field\n              autoComplete=\"off\"\n              component={Input}\n              fluid\n              model=\"determinations\"\n              module=\"collectionMammals\"\n              name={getPath('determinedByAgent.textV')}\n              type=\"text\"\n            />\n          </Grid.Column>\n          <Grid.Column width={9}>\n            <Field\n              autoComplete=\"off\"\n              buttonTextKey=\"other.interpretThisName\"\n              component={TogglableAgentDropdownPickerSearch}\n              displayEmptyStateLabel={false}\n              displayResultLabel={false}\n              module=\"collectionMammals\"\n              name={getPath('determinedByAgent')}\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              autoComplete=\"off\"\n              component={SingleDate}\n              module=\"collectionMammals\"\n              name={getPath('date')}\n              parameterKey=\"determinations.date\"\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              autoComplete=\"off\"\n              component={Remarks}\n              emptyStateTextKey=\"remarks.emptyState.determination\"\n              model=\"determination\"\n              module=\"collectionMammals\"\n              name={getPath('remarks')}\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"right\" width={16}>\n            {skipRemoveDeterminationConfirmation && (\n              <Button\n                basic\n                onClick={event => {\n                  event.preventDefault()\n                  handleSetInactive(index)\n                  removeArrayFieldByIndex(getTranslationPath(), index)\n                }}\n                type=\"button\"\n              >\n                {moduleTranslate({ capitalize: true, textKey: 'other.remove' })}\n              </Button>\n            )}\n            {!skipRemoveDeterminationConfirmation && (\n              <ConfirmationPopup\n                cancelButtonText={moduleTranslate({\n                  capitalize: true,\n                  textKey: 'other.cancel',\n                })}\n                confirmButtonText={moduleTranslate({\n                  capitalize: true,\n                  textKey: 'other.remove',\n                })}\n                header={moduleTranslate({\n                  capitalize: true,\n                  textKey: 'other.removeThisDetermination',\n                })}\n                hideOnScroll\n                onConfirm={this.handleRemove}\n                text={moduleTranslate({\n                  capitalize: true,\n                  textKey: 'other.deleteDetermination',\n                })}\n              />\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nDeterminationContent.propTypes = propTypes\n\nexport default compose(\n  withI18n({ module: 'collectionMammals' }),\n  pathBuilder()\n)(DeterminationContent)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid, Icon } from 'semantic-ui-react'\n\nimport { buildYYYYMMDD } from 'common/es5/date'\nimport createLog from 'utilities/log'\nimport { createGetNestedItemById } from 'coreModules/crud/higherOrderComponents'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion/DeterminationTitle'\n)\n\nconst mapStateToProps = (state, { formName, getPath }) => {\n  return {\n    invalidDate: formSupportSelectors.getAnyFieldIsInvalid(state, {\n      fieldNames: [getPath('date')],\n      formName,\n    }),\n  }\n}\n\nconst propTypes = {\n  active: PropTypes.bool.isRequired,\n  date: PropTypes.shape({ startDate: PropTypes.object }),\n  determinedByAgent: PropTypes.shape({\n    textI: PropTypes.string,\n    textV: PropTypes.string,\n  }),\n  invalidDate: PropTypes.bool,\n  normalizedAgent: PropTypes.shape({ fullName: PropTypes.string }),\n  remarks: PropTypes.string,\n  taxonNameI: PropTypes.string,\n  taxonNameV: PropTypes.string,\n}\nconst defaultProps = {\n  date: undefined,\n  determinedByAgent: undefined,\n  invalidDate: false,\n  normalizedAgent: undefined,\n  remarks: undefined,\n  taxonNameI: undefined,\n  taxonNameV: undefined,\n}\n\nfunction DeterminationContent({\n  active,\n  date,\n  determinedByAgent,\n  invalidDate,\n  normalizedAgent,\n  remarks,\n  taxonNameI,\n  taxonNameV,\n}) {\n  log.render()\n\n  const headline = [\n    taxonNameI || taxonNameV,\n    (normalizedAgent && normalizedAgent.fullName) ||\n      (determinedByAgent && determinedByAgent.textI) ||\n      (determinedByAgent && determinedByAgent.textV),\n    date && date.startDate && buildYYYYMMDD(date.startDate),\n    remarks,\n  ]\n    .filter(str => !!str)\n    .join('; ')\n\n  return (\n    <Grid className={invalidDate && !active ? 'error' : undefined}>\n      <Grid.Column>\n        <Icon name=\"dropdown\" />\n        {!active && headline}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nDeterminationContent.propTypes = propTypes\nDeterminationContent.defaultProps = defaultProps\n\nexport default compose(\n  createGetNestedItemById({\n    idPath: 'determinedByAgent.normalized.id',\n    nestedItemKey: 'normalizedAgent',\n    resource: 'normalizedAgent',\n  }),\n  pathBuilder(),\n  connect(mapStateToProps)\n)(DeterminationContent)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLid from 'common/es5/createLid'\nimport config from 'config'\nimport createLog from 'utilities/log'\nimport { Accordion } from 'coreModules/commonUi/components'\nimport { ALL_COLLAPSED } from 'coreModules/commonUi/constants'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport formParts from 'coreModules/form/components/parts'\nimport DeterminationContent from './DeterminationContent'\nimport DeterminationTitle from './DeterminationTitle'\n\nconst { AddButton } = formParts\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/DeterminationsAccordion'\n)\n\nconst mapStateToProps = (state, { formValueSelector }) => {\n  return {\n    determinations: formValueSelector(state, 'individual.determinations'),\n  }\n}\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  determinations: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.object,\n      determinedByAgentText: PropTypes.string,\n      remarks: PropTypes.string,\n      taxonNameStandardized: PropTypes.string,\n    })\n  ),\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func.isRequired,\n  getPath: PropTypes.func.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  determinations: [],\n}\n\nconst DeterminationsAccordion = ({\n  changeFieldValue,\n  determinations,\n  formName,\n  removeArrayFieldByIndex,\n}) => {\n  log.render()\n\n  return (\n    <React.Fragment>\n      {determinations && determinations.length > 0 && (\n        <Grid.Column width={16}>\n          <Accordion\n            expandFirstItemOnMountIfEmptyOrOnlyHasKey\n            initialActiveMode={ALL_COLLAPSED}\n            items={determinations}\n            renderContent={props => (\n              <DeterminationContent\n                removeArrayFieldByIndex={removeArrayFieldByIndex}\n                skipRemoveDeterminationConfirmation={config.isTest}\n                {...props}\n              />\n            )}\n            renderTitle={({ index, ...rest }) => (\n              <DeterminationTitle\n                formName={formName}\n                index={index}\n                {...determinations[index] || {}}\n                {...rest}\n              />\n            )}\n            skipRemoveDeterminationConfirmation={config.isTest}\n          />\n        </Grid.Column>\n      )}\n      <Grid.Column width={16}>\n        <AddButton\n          id=\"add-determination\"\n          module=\"collectionMammals\"\n          onClick={event => {\n            event.preventDefault()\n            const index = (determinations && determinations.length) || 0\n\n            // Setting a unique key in value to prevent the accordion item from\n            // disappearing if the user focuses and then blurs an input without\n            // entering any value\n            changeFieldValue(`individual.determinations.${index}`, {\n              key: createLid(),\n            })\n          }}\n          textKey=\"other.addDetermination\"\n        />\n      </Grid.Column>\n    </React.Fragment>\n  )\n}\n\nDeterminationsAccordion.propTypes = propTypes\nDeterminationsAccordion.defaultProps = defaultProps\n\nexport default compose(\n  connect(mapStateToProps),\n  pathBuilder()\n)(DeterminationsAccordion)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Table } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { Field, FieldTemplate, Input } from 'coreModules/form/components'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { FeatureObservationDropdownSearch } from 'domainModules/curatedList/components'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalForm:FeatureObservations:FeatureObservationsTableRow'\n)\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst getPlaceholder = (group, key) => {\n  let placeholderKey\n  switch (group) {\n    case 'bone-count': {\n      break\n    }\n    case 'length': {\n      placeholderKey = 'length'\n      break\n    }\n    case 'weight': {\n      placeholderKey = 'weight'\n      break\n    }\n    default: {\n      placeholderKey = key\n      break\n    }\n  }\n  return placeholderKey && `featureObservations.placeholders.${placeholderKey}`\n}\n\nconst getColumnWidth = group => {\n  switch (group) {\n    case 'bone-count': {\n      return 1\n    }\n    case 'carcass-condition': {\n      return 7\n    }\n    case 'age-and-stage':\n    case 'age-stage':\n    case 'sex': {\n      return 6\n    }\n    default: {\n      return 4\n    }\n  }\n}\n\nconst getLabelWidth = group => {\n  switch (group) {\n    case 'bone-count':\n    case 'sex': {\n      return 2\n    }\n    case 'length':\n    case 'carcass-condition': {\n      return 3\n    }\n    case 'age-and-stage':\n    case 'age-stage': {\n      return 5\n    }\n    default: {\n      return 4\n    }\n  }\n}\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  featureType: PropTypes.object.isRequired,\n  getPath: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  index: PropTypes.string.isRequired,\n  module: PropTypes.string.isRequired,\n}\n\nclass FeatureObservationTableRow extends PureComponent {\n  componentWillMount() {\n    const { changeFieldValue, getPath, featureType } = this.props\n    changeFieldValue(getPath('featureType.id'), featureType.id)\n  }\n\n  render() {\n    const {\n      featureType,\n      getPath,\n      i18n: { moduleTranslate },\n      index,\n      module,\n    } = this.props\n\n    const {\n      attributes: {\n        group,\n        key,\n        selectableMethods,\n        selectableUnits,\n        selectableValues,\n      },\n    } = featureType\n\n    const placeholderKey = getPlaceholder(group, key)\n\n    const hasSelectableMethods = !!selectableMethods\n    const hasSelectableUnits = !!selectableUnits\n    const hasSelectableValues = !!selectableValues\n\n    const moreThanTwoColumns = hasSelectableUnits || hasSelectableMethods\n\n    const isLengthOrWeight = group === 'length' || group === 'weight'\n\n    const columnWidth = getColumnWidth(group)\n    const labelWidth = getLabelWidth(group)\n\n    log.render()\n    return (\n      <Table.Row key={index}>\n        <Table.Cell key={getPath('featureType.id')} width={labelWidth}>\n          <FieldTemplate\n            label={\n              <ModuleTranslate\n                fallback={key}\n                module={module}\n                scope=\"featureObservations\"\n                textKey={`other.${key}`}\n              />\n            }\n            module={module}\n            name={`features.${key}`}\n          />\n        </Table.Cell>\n        {hasSelectableValues ? (\n          <Table.Cell\n            key={getPath('featureObservationText')}\n            width={columnWidth}\n          >\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={FeatureObservationDropdownSearch}\n              displayLabel={false}\n              module={module}\n              name={getPath('featureObservationText')}\n              placeholder={\n                placeholderKey &&\n                moduleTranslate({\n                  capitalize: true,\n                  module,\n                  textKey: placeholderKey,\n                })\n              }\n              rawOptions={selectableValues}\n              type=\"text\"\n            />\n          </Table.Cell>\n        ) : (\n          <Table.Cell\n            key={getPath('featureObservationText')}\n            width={columnWidth}\n          >\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={Input}\n              displayLabel={false}\n              fluid\n              module={module}\n              name={getPath('featureObservationText')}\n              placeholder={\n                placeholderKey &&\n                moduleTranslate({\n                  capitalize: true,\n                  module,\n                  textKey: placeholderKey,\n                })\n              }\n              type=\"text\"\n            />\n          </Table.Cell>\n        )}\n\n        {hasSelectableUnits && (\n          <Table.Cell key={getPath('featureObservationUnit')} width={5}>\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={FeatureObservationDropdownSearch}\n              defaultOptionValue={isLengthOrWeight ? 'unspecified' : undefined}\n              disableClearValue={isLengthOrWeight}\n              displayLabel={false}\n              module={module}\n              name={getPath('featureObservationUnit')}\n              placeholder={moduleTranslate({\n                capitalize: true,\n                module,\n                textKey: 'featureObservations.placeholders.selectUnit',\n              })}\n              rawOptions={selectableUnits}\n              type=\"text\"\n            />\n          </Table.Cell>\n        )}\n        {hasSelectableMethods && (\n          <Table.Cell key={getPath('methodText')} width={6}>\n            <Field\n              autoComplete=\"off\"\n              className=\"transparent\"\n              component={FeatureObservationDropdownSearch}\n              displayLabel={false}\n              module={module}\n              name={getPath('methodText')}\n              placeholder={moduleTranslate({\n                capitalize: true,\n                module,\n                textKey: 'featureObservations.placeholders.selectMethod',\n              })}\n              rawOptions={selectableMethods}\n              type=\"text\"\n            />\n          </Table.Cell>\n        )}\n\n        {!moreThanTwoColumns && <Table.Cell width={6} />}\n        {hasSelectableUnits && <Table.Cell width={4} />}\n      </Table.Row>\n    )\n  }\n}\n\nFeatureObservationTableRow.propTypes = propTypes\n\nexport default compose(\n  withI18n(),\n  pathBuilder()\n)(FeatureObservationTableRow)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Table } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport { makeGetFeatureTypesInGroups } from 'domainModules/curatedList/globalSelectorFactories'\nimport FeatureObservationsTableRow from './FeatureObservationsTableRow'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalForm:FeatureObservations:FeatureObservationsTable'\n)\n\nconst makeMapStateToProps = () => {\n  const getFeatureTypesInGroups = makeGetFeatureTypesInGroups()\n  return (state, { groups }) => {\n    return {\n      featureTypes: getFeatureTypesInGroups(state, groups),\n    }\n  }\n}\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  featureTypes: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nfunction FeatureObservationTable({ changeFieldValue, featureTypes }) {\n  if (!featureTypes.length) {\n    return null\n  }\n\n  log.render()\n  return (\n    <Table basic=\"very\">\n      <Table.Body>\n        {featureTypes.map(featureType => {\n          return (\n            <FeatureObservationsTableRow\n              changeFieldValue={changeFieldValue}\n              featureType={featureType}\n              index={featureType.id}\n              key={featureType.attributes.key}\n              module=\"collectionMammals\"\n            />\n          )\n        })}\n      </Table.Body>\n    </Table>\n  )\n}\n\nFeatureObservationTable.propTypes = propTypes\n\nexport default compose(connect(makeMapStateToProps))(FeatureObservationTable)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalForm:FeatureObservations:FeatureObservationsTitle'\n)\n\nconst propTypes = {\n  headlineKey: PropTypes.string.isRequired,\n}\n\nfunction FeatureObservationsTitle({ headlineKey }) {\n  log.render()\n  return (\n    <React.Fragment>\n      <Icon name=\"dropdown\" />\n      <ModuleTranslate\n        module=\"collectionMammals\"\n        scope=\"enums.featureObservations\"\n        textKey={headlineKey}\n      />\n    </React.Fragment>\n  )\n}\n\nFeatureObservationsTitle.propTypes = propTypes\n\nexport default FeatureObservationsTitle\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport config from 'config'\nimport createLog from 'utilities/log'\nimport { Accordion } from 'coreModules/commonUi/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { globalSelectors as crudKeyObjectSelectors } from 'coreModules/crud/keyObjectModule'\nimport FeatureObservationsTable from './FeatureObservationsTable'\nimport FeatureObservationsTitle from './FeatureObservationsTitle'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalForm:FeatureObservations'\n)\n\nconst GROUPS_AND_HEADLINES = [\n  {\n    groups: ['age-and-stage', 'age-stage'],\n    headlineKey: 'age-development-stage',\n  },\n  { groups: ['sex'], headlineKey: 'sex' },\n  { groups: ['carcass-condition'], headlineKey: 'carcass-condition' },\n  { groups: ['bone-count'], headlineKey: 'bone-count' },\n  { groups: ['weight'], headlineKey: 'weight' },\n  { groups: ['length'], headlineKey: 'length' },\n]\n\nconst mapStateToProps = state => {\n  return {\n    allFeatureTypesFetched: crudKeyObjectSelectors.get[\n      ':resource.allItems.fetched'\n    ](state, { resource: 'featureType' }),\n  }\n}\n\nconst propTypes = {\n  allFeatureTypesFetched: PropTypes.bool,\n  changeFieldValue: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  allFeatureTypesFetched: false,\n}\n\nclass FeatureObservations extends PureComponent {\n  render() {\n    const { allFeatureTypesFetched, changeFieldValue } = this.props\n\n    if (!allFeatureTypesFetched) {\n      return null\n    }\n    log.render()\n    return (\n      <Grid.Column width={16}>\n        <Accordion\n          delayItemRenderUntilActive={!config.isTest}\n          items={GROUPS_AND_HEADLINES}\n          renderContent={props => (\n            <FeatureObservationsTable\n              changeFieldValue={changeFieldValue}\n              {...props}\n            />\n          )}\n          renderTitle={props => <FeatureObservationsTitle {...props} />}\n        />\n      </Grid.Column>\n    )\n  }\n}\n\nFeatureObservations.defaultProps = defaultProps\nFeatureObservations.propTypes = propTypes\n\nexport default compose(\n  connect(mapStateToProps),\n  pathBuilder()\n)(FeatureObservations)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport {\n  ConfirmationPopup,\n  DropdownSearch,\n  Field,\n  Input,\n} from 'coreModules/form/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/IdentifiersTable/Row'\n)\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  identifier: PropTypes.shape({\n    id: PropTypes.string,\n    identifierType: PropTypes.object,\n    remarks: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  identifierTypeOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  index: PropTypes.number.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\n\nclass IdentifiersTableRow extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  componentWillMount() {\n    const { changeFieldValue, getPath, identifier } = this.props\n    changeFieldValue(getPath('identifier.id'), identifier.id)\n  }\n\n  handleRemove() {\n    const { getTranslationPath, index, removeArrayFieldByIndex } = this.props\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      identifierTypeOptions,\n      getPath,\n      i18n: { moduleTranslate },\n    } = this.props\n\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"middle\">\n        <Grid.Column width={6}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={DropdownSearch}\n            displayLabel={false}\n            module=\"collectionMammals\"\n            name={getPath('identifierType.id')}\n            options={identifierTypeOptions}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.selectIdentifierType',\n            })}\n            type=\"dropdown-search-local\"\n          />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Field\n            autoComplete=\"off\"\n            className=\"transparent\"\n            component={Input}\n            displayLabel={false}\n            fluid\n            module=\"collectionMammals\"\n            name={getPath('value')}\n            placeholder={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.addIdentifierOrIdentifiers',\n            })}\n            type=\"text\"\n          />\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <ConfirmationPopup\n            cancelButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.cancel',\n            })}\n            confirmButtonText={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.remove',\n            })}\n            header={moduleTranslate({\n              capitalize: true,\n              textKey: 'other.removeThisIdentifier',\n            })}\n            hideOnScroll\n            iconName=\"trash\"\n            onConfirm={this.handleRemove}\n            size=\"large\"\n            type=\"icon\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nIdentifiersTableRow.propTypes = propTypes\n\nexport default compose(\n  withI18n({ module: 'collectionMammals' }),\n  pathBuilder()\n)(IdentifiersTableRow)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\n\nimport createLog from 'utilities/log'\nimport formParts from 'coreModules/form/components/parts'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport globalCrudSelectors from 'coreModules/crud/globalSelectors'\nimport { globalSelectors as crudKeyObjectSelectors } from 'coreModules/crud/keyObjectModule'\nimport IdentifiersTableRow from './Row'\n\nconst { AddButton } = formParts\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager/MainColumn/RecordForm/formParts/IdentifiersTable'\n)\n\nconst mapStateToProps = (state, { formValueSelector, name }) => {\n  return {\n    allIdentifierTypesFetched: crudKeyObjectSelectors.get[\n      ':resource.allItems.fetched'\n    ](state, { resource: 'identifierType' }),\n    identifiers: formValueSelector(state, name),\n    identifierTypeOptions: globalCrudSelectors.identifierType\n      .getAllAsOptions(state)\n      .filter(option => {\n        return option.text !== 'Catalog no.'\n      }),\n  }\n}\n\nconst propTypes = {\n  allIdentifierTypesFetched: PropTypes.bool,\n  changeFieldValue: PropTypes.func.isRequired,\n  getPath: PropTypes.func.isRequired,\n  identifiers: PropTypes.arrayOf(PropTypes.object),\n  identifierTypeOptions: PropTypes.array.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  allIdentifierTypesFetched: false,\n  identifiers: [],\n}\n\nfunction IdentifiersTable({\n  allIdentifierTypesFetched,\n  changeFieldValue,\n  getPath,\n  identifiers,\n  identifierTypeOptions,\n  removeArrayFieldByIndex,\n}) {\n  if (!identifiers.length || !allIdentifierTypesFetched) {\n    return null\n  }\n\n  log.render()\n  return (\n    <React.Fragment>\n      {identifiers[0].value && (\n        <Grid.Column width={16}>\n          {`Catalog no.: ${identifiers[0].value}`}\n        </Grid.Column>\n      )}\n      {// TODO fix this and check for the value. Cant trust the order\n      identifiers\n        .slice(1) // skip first as that is the catalog number\n        .map((identifier, index) => {\n          return (\n            <Grid.Column\n              key={index} // eslint-disable-line react/no-array-index-key\n              width={16}\n            >\n              <IdentifiersTableRow\n                changeFieldValue={changeFieldValue}\n                identifier={identifier}\n                identifierTypeOptions={identifierTypeOptions}\n                index={index + 1}\n                key={index + 1} // eslint-disable-line react/no-array-index-key\n                removeArrayFieldByIndex={removeArrayFieldByIndex}\n              />\n            </Grid.Column>\n          )\n        })\n        .filter(item => !!item)}\n      <AddButton\n        id=\"add-identifier\"\n        onClick={event => {\n          event.preventDefault()\n          changeFieldValue(getPath(identifiers.length), {})\n        }}\n        textKey=\"other.addIdentifier\"\n      />\n    </React.Fragment>\n  )\n}\n\nIdentifiersTable.propTypes = propTypes\nIdentifiersTable.defaultProps = defaultProps\n\nexport default compose(\n  connect(mapStateToProps),\n  pathBuilder()\n)(IdentifiersTable)\n","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { Button, Grid, Message } from 'semantic-ui-react'\n\nimport config from 'config'\nimport { ConnectedFormSchemaError } from 'coreModules/error/components'\nimport createLog from 'utilities/log'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { ConfirmationPopup } from 'coreModules/form/components'\n\nconst log = createLog(\n  'modules:collectionMammals:formParts:PhysicalObjectsAccordion:CuratorialAssessmentForm:FormActions'\n)\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst propTypes = {\n  displayBackButton: PropTypes.bool,\n  displayRemoveButton: PropTypes.bool,\n  displayResetButton: PropTypes.bool,\n  error: PropTypes.string,\n  form: PropTypes.string.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onRemove: PropTypes.func,\n  pristine: PropTypes.bool.isRequired,\n  reset: PropTypes.func.isRequired,\n  submitButtonTextKey: PropTypes.string,\n  submitFailed: PropTypes.bool.isRequired,\n  submitSucceeded: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  displayBackButton: false,\n  displayRemoveButton: false,\n  displayResetButton: false,\n  error: '',\n  onRemove: undefined,\n  submitButtonTextKey: undefined,\n}\n\nexport class FormActions extends PureComponent {\n  render() {\n    const skipRemoveConfirmation = config.isTest\n\n    log.render()\n    const {\n      displayBackButton,\n      displayRemoveButton,\n      displayResetButton,\n      error,\n      form,\n      invalid,\n      onClose: handleClose,\n      onRemove: handleRemove,\n      pristine,\n      reset,\n      submitButtonTextKey,\n      submitFailed,\n      submitSucceeded,\n      submitting,\n    } = this.props\n    return (\n      <Grid.Row>\n        <Grid.Column mobile={16}>\n          <Button disabled={submitting} size=\"large\" type=\"submit\">\n            <ModuleTranslate textKey={submitButtonTextKey || 'other.add'} />\n          </Button>\n          {displayResetButton && (\n            <Button\n              basic\n              disabled={pristine || submitting}\n              onClick={reset}\n              size=\"large\"\n              type=\"button\"\n            >\n              <ModuleTranslate textKey=\"other.reset\" />\n            </Button>\n          )}\n          {displayBackButton && (\n            <Button basic onClick={handleClose} size=\"large\" type=\"button\">\n              <ModuleTranslate textKey=\"other.cancel\" />\n            </Button>\n          )}\n          {displayRemoveButton && skipRemoveConfirmation && handleRemove && (\n            <Button onClick={handleRemove} size=\"large\" type=\"button\">\n              <ModuleTranslate textKey=\"other.remove\" />\n            </Button>\n          )}\n\n          {displayRemoveButton && !skipRemoveConfirmation && handleRemove && (\n            <ConfirmationPopup\n              cancelButtonText={<ModuleTranslate textKey=\"other.cancel\" />}\n              confirmButtonText={<ModuleTranslate textKey=\"other.remove\" />}\n              header={\n                <ModuleTranslate textKey=\"other.removeThisCuratorialAssessment\" />\n              }\n              hideOnScroll\n              onConfirm={handleRemove}\n              size=\"large\"\n              text={<ModuleTranslate textKey=\"other.remove\" />}\n            />\n          )}\n          <ConnectedFormSchemaError form={form} />\n          {invalid && !error && submitFailed && (\n            <Message\n              error\n              header={<ModuleTranslate textKey=\"other.formContainsErrors\" />}\n            />\n          )}\n          {submitFailed && error && (\n            <Message\n              content={error}\n              error\n              header={<ModuleTranslate textKey=\"other.submitFailed\" />}\n            />\n          )}\n          {submitSucceeded && (\n            <Message\n              header={<ModuleTranslate textKey=\"other.saved\" />}\n              success\n            />\n          )}\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n}\n\nFormActions.propTypes = propTypes\nFormActions.defaultProps = defaultProps\n\nexport default FormActions\n","import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport createLog from 'utilities/log'\nimport { Field, Input, Remarks, SingleDate } from 'coreModules/form/components'\nimport {\n  formatBooleanRadio,\n  parseBooleanRadio,\n} from 'coreModules/form/utilities'\nimport { AgentDropdownPickerSearch } from 'domainModules/agent/components'\nimport { mammalFormModels } from 'domainModules/collectionMammals/schemas'\nimport FormActions from './FormActions'\n\nconst log = createLog(\n  'modules:collectionMammals:formParts:PhysicalObjectsAccordion:CuratorialAssessmentForm:Base'\n)\n\nconst propTypes = {\n  displayBackButton: PropTypes.bool,\n  displayRemoveButton: PropTypes.bool,\n  displayResetButton: PropTypes.bool,\n  error: PropTypes.string,\n  form: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onRemove: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  reset: PropTypes.func.isRequired,\n  submitButtonTextKey: PropTypes.string,\n  submitFailed: PropTypes.bool.isRequired,\n  submitSucceeded: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  displayBackButton: false,\n  displayRemoveButton: false,\n  displayResetButton: false,\n  error: '',\n  onRemove: undefined,\n  submitButtonTextKey: undefined,\n}\n\nexport class BaseForm extends PureComponent {\n  render() {\n    log.render()\n    const {\n      displayBackButton,\n      displayRemoveButton,\n      displayResetButton,\n      error,\n      form,\n      handleSubmit,\n      invalid,\n      onClose,\n      onRemove,\n      pristine,\n      reset,\n      submitButtonTextKey,\n      submitFailed,\n      submitSucceeded,\n      submitting,\n    } = this.props\n\n    return (\n      <Form error={!!error} onSubmit={handleSubmit(this.props.onSubmit)}>\n        <Grid textAlign=\"left\" verticalAlign=\"top\">\n          <Grid.Row className=\"relaxed\">\n            <Grid.Column width={16}>\n              <Field\n                autoComplete=\"off\"\n                component={SingleDate}\n                module=\"collectionMammals\"\n                name=\"date\"\n                parameterKey=\"curatorialAssessment.date\"\n                type=\"input-text\"\n              />\n            </Grid.Column>\n            <Grid.Column width={16}>\n              <Field\n                autoComplete=\"off\"\n                component={AgentDropdownPickerSearch}\n                enablePlainTextOption={false}\n                module=\"collectionMammals\"\n                name=\"agent\"\n                parameterKey=\"curatorialAssessment.agent\"\n              />\n            </Grid.Column>\n            <Grid.Column width={16}>\n              <Field\n                autoComplete=\"off\"\n                component={Input}\n                module=\"collectionMammals\"\n                name=\"condition\"\n                parameterKey=\"curatorialAssessment.condition\"\n                type=\"input-text\"\n              />\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <label htmlFor=\"isInStorage true\">\n                <Field\n                  component=\"input\"\n                  format={formatBooleanRadio}\n                  name=\"isInStorage\"\n                  parse={parseBooleanRadio}\n                  type=\"radio\"\n                  value=\"true\"\n                />{' '}\n                In storage\n              </label>\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <label htmlFor=\"isInStorage false\">\n                <Field\n                  component=\"input\"\n                  format={formatBooleanRadio}\n                  name=\"isInStorage\"\n                  parse={parseBooleanRadio}\n                  type=\"radio\"\n                  value=\"false\"\n                />{' '}\n                Not in storage\n              </label>\n            </Grid.Column>\n            <Grid.Column width={16}>\n              <Field\n                autoComplete=\"off\"\n                component={Remarks}\n                model=\"curatorialAssessment\"\n                module=\"collectionMammals\"\n                name=\"remarks\"\n                parameterKey=\"curatorialAssessment.remarks\"\n                type=\"input-text\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <FormActions\n            displayBackButton={displayBackButton}\n            displayRemoveButton={displayRemoveButton}\n            displayResetButton={displayResetButton}\n            error={error}\n            form={form}\n            invalid={invalid}\n            onClose={onClose}\n            onRemove={onRemove}\n            pristine={pristine}\n            reset={reset}\n            submitButtonTextKey={submitButtonTextKey}\n            submitFailed={submitFailed}\n            submitSucceeded={submitSucceeded}\n            submitting={submitting}\n          />\n        </Grid>\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: true,\n  enableReinitialize: false,\n  form: 'curatorialAssessmentForm',\n  validate: customFormValidator({\n    model: 'curatorialAssessment',\n    models: mammalFormModels,\n  }),\n})(BaseForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport BaseForm from './Base'\n\nconst mapStateToProps = state => {\n  return {\n    username: userSelectors.getUsername(state),\n  }\n}\n\nconst propTypes = {\n  agent: PropTypes.object,\n  agentText: PropTypes.string,\n  changeFieldValue: PropTypes.func.isRequired,\n  condition: PropTypes.string,\n  conditionRemarks: PropTypes.string,\n  date: PropTypes.object,\n  fieldName: PropTypes.string.isRequired,\n  inventoryStatusRemarks: PropTypes.string,\n  isInStorage: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  remarks: PropTypes.string,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n  username: PropTypes.string,\n}\nconst defaultProps = {\n  agent: undefined,\n  agentText: undefined,\n  condition: undefined,\n  conditionRemarks: undefined,\n  date: undefined,\n  inventoryStatusRemarks: undefined,\n  isInStorage: undefined,\n  remarks: undefined,\n  username: undefined,\n}\n\nexport class EditCuratorialAssessment extends PureComponent {\n  render() {\n    const {\n      agent,\n      changeFieldValue,\n      condition,\n      date,\n      fieldName,\n      isInStorage,\n      onClose: handleClose,\n      remarks,\n      removeArrayFieldByIndex,\n      ...rest\n    } = this.props\n\n    return (\n      <BaseForm\n        displayBackButton\n        displayRemoveButton\n        initialValues={{\n          agent,\n          condition,\n          date,\n          isInStorage,\n          remarks,\n        }}\n        onClose={event => {\n          event.preventDefault()\n          handleClose()\n        }}\n        onRemove={() => {\n          const segments = fieldName.split('.')\n          const index = segments[segments.length - 1]\n          const arrayPath = segments.slice(0, -1).join('.')\n          removeArrayFieldByIndex(arrayPath, index)\n          handleClose()\n        }}\n        onSubmit={data => {\n          changeFieldValue(fieldName, data)\n          handleClose()\n        }}\n        submitButtonTextKey=\"other.save\"\n        {...rest}\n      />\n    )\n  }\n}\n\nEditCuratorialAssessment.propTypes = propTypes\nEditCuratorialAssessment.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(EditCuratorialAssessment)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Grid, Modal, List } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { buildYYYYMMDD } from 'common/es5/date'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\nimport { FormModal } from 'coreModules/form/components'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport EditCuratorialAssessment from './CuratorialAssessmentForm/Edit'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst propTypes = {\n  agent: PropTypes.shape({\n    normalized: { id: PropTypes.string },\n    textI: PropTypes.string,\n  }),\n  changeFieldValue: PropTypes.func.isRequired,\n  condition: PropTypes.string,\n  date: PropTypes.object,\n  getPath: PropTypes.func.isRequired,\n  isInStorage: PropTypes.bool,\n  normalizedAgent: PropTypes.shape({\n    attributes: PropTypes.shape({\n      fullName: PropTypes.string,\n    }),\n    id: PropTypes.string.isRequired,\n  }),\n  remarks: PropTypes.string,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  agent: undefined,\n  condition: undefined,\n  date: undefined,\n  isInStorage: undefined,\n  normalizedAgent: undefined,\n  remarks: undefined,\n}\n\nclass CuratorialAssessmentItem extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleClose() {\n    this.setState({ open: false })\n  }\n\n  handleOpen() {\n    this.setState({ open: true })\n  }\n\n  render() {\n    const {\n      agent,\n      changeFieldValue,\n      condition,\n      date,\n      getPath,\n      isInStorage,\n      normalizedAgent,\n      remarks,\n      removeArrayFieldByIndex,\n    } = this.props\n\n    const { open } = this.state\n\n    const fullName =\n      objectPath.get(normalizedAgent, 'attributes.fullName') ||\n      (agent && agent.textI)\n    const disambiguatingDescription = objectPath.get(\n      normalizedAgent,\n      'attributes.disambiguatingDescription'\n    )\n    return (\n      <List.Item>\n        <List.Content style={{ padding: '0.5em' }} verticalAlign=\"bottom\">\n          <FormModal\n            open={open}\n            size=\"small\"\n            trigger={\n              /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n              !open && (\n                <Grid\n                  onClick={this.handleOpen}\n                  style={{ cursor: 'pointer' }}\n                  textAlign=\"left\"\n                >\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      {[\n                        date && date.startDate && buildYYYYMMDD(date.startDate),\n                        disambiguatingDescription\n                          ? `${fullName} (${disambiguatingDescription})`\n                          : fullName,\n                        isInStorage !== undefined &&\n                          (isInStorage ? 'In storage' : 'Not in storage'),\n                        condition,\n                        remarks,\n                      ]\n                        .filter(Boolean)\n                        .join('; ')}\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              )\n              /* eslint-enable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n            }\n          >\n            <Modal.Header>\n              <ModuleTranslate textKey=\"headers.editCuratorialAssessment\" />\n            </Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <EditCuratorialAssessment\n                  agent={agent}\n                  changeFieldValue={changeFieldValue}\n                  condition={condition}\n                  date={date}\n                  fieldName={getPath()}\n                  isInStorage={isInStorage}\n                  onClose={this.handleClose}\n                  remarks={remarks}\n                  removeArrayFieldByIndex={removeArrayFieldByIndex}\n                />\n              </Modal.Description>\n            </Modal.Content>\n          </FormModal>\n        </List.Content>\n      </List.Item>\n    )\n  }\n}\n\nCuratorialAssessmentItem.propTypes = propTypes\nCuratorialAssessmentItem.defaultProps = defaultProps\n\nexport default compose(\n  createGetItemById({\n    idPath: 'agent.normalized.id',\n    itemKey: 'normalizedAgent',\n    resource: 'normalizedAgent',\n  }),\n  pathBuilder()\n)(CuratorialAssessmentItem)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { getTimestampFromYMD } from 'common/es5/date'\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport BaseForm from './Base'\n\nconst mapStateToProps = state => {\n  return {\n    username: userSelectors.getUsername(state),\n  }\n}\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  fieldName: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  username: PropTypes.string,\n}\nconst defaultProps = {\n  username: undefined,\n}\n\nexport class CreateCuratorialAssessment extends PureComponent {\n  render() {\n    const {\n      changeFieldValue,\n      fieldName,\n      onClose: handleClose,\n      username,\n      ...rest\n    } = this.props\n\n    const now = moment()\n\n    const dateInput = {\n      day: now.date(),\n      month: now.month() + 1,\n      year: now.year(),\n    }\n\n    return (\n      <BaseForm\n        displayBackButton\n        initialValues={{\n          date: {\n            dateType: 'single',\n            endDate: {\n              ...dateInput,\n              interpretedTimestamp: getTimestampFromYMD({\n                ...dateInput,\n                isEndDate: true,\n              }),\n            },\n            startDate: {\n              ...dateInput,\n              interpretedTimestamp: getTimestampFromYMD({\n                ...dateInput,\n                isStartDate: true,\n              }),\n            },\n          },\n          isInStorage: true,\n        }}\n        onClose={event => {\n          event.preventDefault()\n          handleClose()\n        }}\n        onSubmit={data => {\n          changeFieldValue(fieldName, data)\n          handleClose()\n        }}\n        {...rest}\n      />\n    )\n  }\n}\n\nCreateCuratorialAssessment.propTypes = propTypes\nCreateCuratorialAssessment.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(CreateCuratorialAssessment)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Field, Input } from 'coreModules/form/components'\n\nconst propTypes = {\n  getPath: PropTypes.func.isRequired,\n  index: PropTypes.number,\n}\nconst defaultProps = {\n  index: 0,\n}\n\nconst FieldsForTest = ({ getPath, index }) => {\n  return (\n    <React.Fragment>\n      <Field\n        component=\"input\"\n        label=\"Is in storage\"\n        name={getPath(`${index}.isInStorage`)}\n        type=\"checkbox\"\n      />\n      <Field\n        autoComplete=\"off\"\n        component={Input}\n        label=\"Remarks\"\n        module=\"collectionMammals\"\n        name={getPath(`${index}.remarks`)}\n        type=\"input-text\"\n      />\n      <Field\n        autoComplete=\"off\"\n        component={Input}\n        label=\"Condition\"\n        module=\"collectionMammals\"\n        name={getPath(`${index}.condition`)}\n        type=\"input-text\"\n      />\n      <Field\n        autoComplete=\"off\"\n        component={Input}\n        label=\"Date\"\n        module=\"collectionMammals\"\n        name={getPath(`${index}.date`)}\n        type=\"input-text\"\n      />\n      <Field\n        autoComplete=\"off\"\n        component={Input}\n        label=\"Agent\"\n        module=\"collectionMammals\"\n        name={getPath(`${index}.agent`)}\n        type=\"input-text\"\n      />\n    </React.Fragment>\n  )\n}\n\nFieldsForTest.propTypes = propTypes\nFieldsForTest.defaultProps = defaultProps\n\nexport default FieldsForTest\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { Button, List, Modal } from 'semantic-ui-react'\n\nimport config from 'config'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { FormModal } from 'coreModules/form/components'\nimport TranslatedHeaderWithHelpIcon from 'coreModules/form/components/parts/StaticContent/TranslatedHeaderWithHelpIcon'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport CuratorialAssessmentItem from './CuratorialAssessmentItem'\nimport CreateCuratorialAssessment from './CuratorialAssessmentForm/Create'\nimport FieldsForTest from './CuratorialAssessmentForm/Test'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst propTypes = {\n  changeFieldValue: PropTypes.func.isRequired,\n  curatorialAssessments: PropTypes.arrayOf(PropTypes.object),\n  getPath: PropTypes.func.isRequired,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  curatorialAssessments: [],\n}\n\nconst helpNotificationProps = {\n  descriptionHeaderKey:\n    'modules.collectionMammals.headers.curatorialAssessments',\n  descriptionKey:\n    'modules.collectionMammals.helpTexts.physicalObject.curatorialAssessments',\n}\n\nclass CuratorialAssessmentsList extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleClose() {\n    this.setState({ open: false })\n  }\n\n  handleOpen() {\n    this.setState({ open: true })\n  }\n\n  render() {\n    const {\n      changeFieldValue,\n      curatorialAssessments,\n      getPath,\n      removeArrayFieldByIndex,\n    } = this.props\n    const { open } = this.state\n\n    return (\n      <React.Fragment>\n        <TranslatedHeaderWithHelpIcon\n          as=\"h4\"\n          helpNotificationProps={helpNotificationProps}\n          module=\"collectionMammals\"\n          textKey=\"headers.curatorialAssessments\"\n        />\n        {curatorialAssessments.length > 0 && (\n          <List divided>\n            {[...curatorialAssessments]\n              .map((item, index) => {\n                return (\n                  <CuratorialAssessmentItem\n                    changeFieldValue={changeFieldValue}\n                    index={index} // needed for pathBuilder\n                    key={index} // eslint-disable-line react/no-array-index-key\n                    removeArrayFieldByIndex={removeArrayFieldByIndex}\n                    {...item}\n                  />\n                )\n              })\n              .reverse() // to show latest first\n            }\n          </List>\n        )}\n        <FormModal\n          open={open}\n          size=\"small\"\n          trigger={\n            /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n            !open && (\n              <Button\n                onClick={event => {\n                  event.preventDefault()\n                  this.handleOpen()\n                }}\n              >\n                <ModuleTranslate textKey=\"other.newAssessment\" />\n              </Button>\n            )\n            /* eslint-enable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n          }\n        >\n          <Modal.Header>\n            <ModuleTranslate textKey=\"other.newCuratorialAssessment\" />\n          </Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <CreateCuratorialAssessment\n                changeFieldValue={changeFieldValue}\n                fieldName={`${getPath()}.${curatorialAssessments.length}`}\n                onClose={this.handleClose}\n              />\n            </Modal.Description>\n          </Modal.Content>\n        </FormModal>\n        {config.isTest && <FieldsForTest getPath={getPath} />}\n      </React.Fragment>\n    )\n  }\n}\n\nCuratorialAssessmentsList.propTypes = propTypes\nCuratorialAssessmentsList.defaultProps = defaultProps\n\nexport default compose(\n  pathBuilder({\n    name: 'curatorialAssessments',\n  })\n)(CuratorialAssessmentsList)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { touch } from 'redux-form'\nimport { Grid } from 'semantic-ui-react'\nimport { camelCase } from 'lodash'\n\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\nimport {\n  ConfirmationPopup,\n  DropdownSearch,\n  Field,\n  Remarks,\n} from 'coreModules/form/components'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport { StorageLocationDropdownPickerSearch } from 'domainModules/storage/components'\nimport { createGetItemById } from 'coreModules/crud/higherOrderComponents'\nimport curatedListSelectors from 'domainModules/curatedList/globalSelectors'\nimport { ALL } from 'domainModules/storage/constants'\nimport createLog from 'utilities/log'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport CuratorialAssessmentsList from './CuratorialAssessmentsList'\n\nconst log = createLog(\n  'modules:collectionMammals:formParts:PhysicalObjectContent'\n)\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst mapStateToProps = (state, { category, preparationType }) => {\n  // TODO use selector for preparationType options\n  return {\n    preparationTypeOptions: curatedListSelectors.getPreparationTypeOptions(\n      state,\n      (preparationType && preparationType.category) || category || 'undefined'\n    ),\n  }\n}\nconst mapDispatchToProps = { touch }\n\nconst propTypes = {\n  category: PropTypes.string.isRequired,\n  changeFieldValue: PropTypes.func.isRequired,\n  curatorialAssessments: PropTypes.array,\n  formName: PropTypes.string.isRequired,\n  getPath: PropTypes.func.isRequired,\n  getTranslationPath: PropTypes.func.isRequired,\n  handleSetInactive: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  preparationTypeOptions: PropTypes.array,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n  touch: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  curatorialAssessments: undefined,\n  preparationTypeOptions: [],\n}\n\nclass PhysicalObjectContent extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRemove = this.handleRemove.bind(this)\n  }\n\n  componentWillUnmount() {\n    // trigger validation even if the field has not been touched, because it is\n    // easy to miss (hard to find) this otherwise\n    this.props.touch(\n      this.props.formName,\n      this.props.getPath('physicalObject.storageLocation.id')\n    )\n  }\n\n  handleRemove() {\n    const {\n      getTranslationPath,\n      handleSetInactive,\n      index,\n      removeArrayFieldByIndex,\n    } = this.props\n\n    handleSetInactive(index)\n    removeArrayFieldByIndex(getTranslationPath(), index)\n  }\n\n  render() {\n    const {\n      category,\n      changeFieldValue,\n      curatorialAssessments,\n      preparationTypeOptions,\n      getPath,\n      removeArrayFieldByIndex,\n    } = this.props\n    log.render()\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Row className=\"relaxed\">\n          <Grid.Column width={9}>\n            <Field\n              autoComplete=\"off\"\n              component={DropdownSearch}\n              disableClearValue\n              module=\"collectionMammals\"\n              name={getPath('preparationType.id')}\n              options={preparationTypeOptions}\n              type=\"dropdown-search-local\"\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              autoComplete=\"off\"\n              component={StorageLocationDropdownPickerSearch}\n              group={ALL}\n              module=\"collectionMammals\"\n              name={getPath('physicalObject.storageLocation.id')}\n              showParentName\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <CuratorialAssessmentsList\n              changeFieldValue={changeFieldValue}\n              curatorialAssessments={curatorialAssessments}\n              removeArrayFieldByIndex={removeArrayFieldByIndex}\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              autoComplete=\"off\"\n              component={Remarks}\n              emptyStateTextKey={`remarks.emptyState.physicalObject.${category}`}\n              model=\"specimen\"\n              module=\"collectionMammals\"\n              name={getPath('physicalObject.remarks')}\n              showParentName\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"right\" width={16}>\n            <ConfirmationPopup\n              cancelButtonText={<ModuleTranslate textKey=\"other.cancel\" />}\n              confirmButtonText={<ModuleTranslate textKey=\"other.remove\" />}\n              header={\n                <ModuleTranslate\n                  textKey={`other.physicalObjects.remove${capitalizeFirstLetter(\n                    camelCase(category)\n                  )}`}\n                />\n              }\n              hideOnScroll\n              onConfirm={this.handleRemove}\n              text={\n                <ModuleTranslate\n                  textKey={`other.physicalObjects.delete${capitalizeFirstLetter(\n                    camelCase(category)\n                  )}`}\n                />\n              }\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nPhysicalObjectContent.propTypes = propTypes\nPhysicalObjectContent.defaultProps = defaultProps\n\nexport default compose(\n  createGetItemById({\n    idPath: 'preparationTypeId',\n    relationships: null,\n    resource: 'preparationType',\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  pathBuilder()\n)(PhysicalObjectContent)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Icon, Label } from 'semantic-ui-react'\n\nimport extractNameWithFirstLevelParent from 'common/es5/storage/extractNameWithFirstLevelParent'\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\nimport { ThreeColumnGrid } from 'coreModules/commonUi/components'\nimport {\n  createGetItemById,\n  createGetNestedItemById,\n} from 'coreModules/crud/higherOrderComponents'\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\nimport createLog from 'utilities/log'\n\nconst log = createLog('modules:collectionMammals:formParts:PhysicalObjectTitle')\n\nconst mapStateToProps = (state, { formName, getPath }) => {\n  return {\n    invalidStorageLocation: formSupportSelectors.getAnyFieldIsInvalid(state, {\n      fieldNames: [getPath('physicalObject.storageLocation.id')],\n      formName,\n    }),\n  }\n}\n\nconst propTypes = {\n  active: PropTypes.bool.isRequired,\n  category: PropTypes.string,\n  curatorialAssessments: PropTypes.array,\n  invalidStorageLocation: PropTypes.bool,\n  preparationType: PropTypes.shape({\n    category: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  storageLocation: PropTypes.object,\n}\nconst defaultProps = {\n  category: undefined,\n  curatorialAssessments: undefined,\n  invalidStorageLocation: false,\n  preparationType: undefined,\n  storageLocation: undefined,\n}\n\nfunction PhysicalObjectTitle({\n  active,\n  category,\n  curatorialAssessments,\n  invalidStorageLocation,\n  preparationType,\n  storageLocation,\n}) {\n  log.render()\n\n  if (active) {\n    return (\n      <ThreeColumnGrid\n        className={invalidStorageLocation ? 'error' : undefined}\n        left={<Icon name=\"dropdown\" />}\n      />\n    )\n  }\n\n  const lastCuratorialAssessment =\n    curatorialAssessments &&\n    curatorialAssessments.length &&\n    curatorialAssessments[curatorialAssessments.length - 1]\n\n  return (\n    <ThreeColumnGrid\n      center={\n        storageLocation && (\n          <span style={{ fontWeight: 'normal' }}>\n            {extractNameWithFirstLevelParent(storageLocation)}\n          </span>\n        )\n      }\n      classNames={invalidStorageLocation ? 'error' : undefined}\n      left={\n        preparationType || category ? (\n          <React.Fragment>\n            <Icon name=\"dropdown\" />\n            {preparationType &&\n              preparationType.attributes &&\n              preparationType.attributes.name &&\n              preparationType.attributes.name.en && (\n                <span style={{ fontWeight: 'normal' }}>\n                  {capitalizeFirstLetter(preparationType.attributes.name.en)}\n                </span>\n              )}\n          </React.Fragment>\n        ) : (\n          <Icon name=\"dropdown\" />\n        )\n      }\n      right={\n        lastCuratorialAssessment &&\n        lastCuratorialAssessment.isInStorage !== undefined && (\n          <Label\n            color={lastCuratorialAssessment.isInStorage ? 'green' : 'red'}\n            horizontal\n          >\n            {lastCuratorialAssessment.isInStorage\n              ? 'In storage'\n              : 'Not in storage'}\n          </Label>\n        )\n      }\n      rightColumnTextAlign=\"right\"\n    />\n  )\n}\n\nPhysicalObjectTitle.propTypes = propTypes\nPhysicalObjectTitle.defaultProps = defaultProps\n\nexport default compose(\n  createGetItemById({\n    idPath: 'preparationTypeId',\n    itemKey: 'preparationType',\n    relationships: null,\n    resource: 'preparationType',\n  }),\n  createGetNestedItemById({\n    idPath: 'physicalObject.storageLocation.id',\n    include: ['parent.parent.parent.parent.parent'],\n    nestedItemKey: 'storageLocation',\n    relationships: [\n      'parent',\n      'parent.parent',\n      'parent.parent.parent',\n      'parent.parent.parent.parent',\n      'parent.parent.parent.parent.parent',\n    ],\n    resolveRelationships: ['storageLocation'],\n    resource: 'storageLocation',\n  }),\n  pathBuilder(),\n  connect(mapStateToProps)\n)(PhysicalObjectTitle)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\nimport objectPath from 'object-path'\nimport { camelCase } from 'lodash'\n\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\nimport createLog from 'utilities/log'\nimport { Accordion } from 'coreModules/commonUi/components'\nimport { ALL_COLLAPSED } from 'coreModules/commonUi/constants'\nimport { globalSelectors as crudKeyObjectSelectors } from 'coreModules/crud/keyObjectModule'\nimport {\n  UNSPECIFIED_OTHER_PREPARATION_PREPARATION_TYPE_ID,\n  UNSPECIFIED_SKELETON_PREPARATION_TYPE_ID,\n  UNSPECIFIED_SKIN_PREPARATION_TYPE_ID,\n  UNSPECIFIED_WET_PREPARATION_PREPARATION_TYPE_ID,\n} from 'domainModules/curatedList/constants'\nimport formParts from 'coreModules/form/components/parts'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport crudSelectors from 'coreModules/crud/globalSelectors'\n\nimport { pathBuilder } from 'coreModules/form/higherOrderComponents'\nimport PhysicalObjectContent from './PhysicalObjectContent'\nimport PhysicalObjectTitle from './PhysicalObjectTitle'\n\nconst { AddButton } = formParts\n\nconst log = createLog(\n  'modules:collectionMammals:formParts:PhysicalObjectsAccordion'\n)\n\nconst categoryUnspecifiedTypeIdMap = {\n  'other-preparation': UNSPECIFIED_OTHER_PREPARATION_PREPARATION_TYPE_ID,\n  skeleton: UNSPECIFIED_SKELETON_PREPARATION_TYPE_ID,\n  skin: UNSPECIFIED_SKIN_PREPARATION_TYPE_ID,\n  'wet-preparation': UNSPECIFIED_WET_PREPARATION_PREPARATION_TYPE_ID,\n}\n\nconst getMatchesCategory = ({\n  category,\n  preparationType,\n  preparationTypes,\n}) => {\n  if (\n    preparationType &&\n    preparationType.category &&\n    preparationType.category === category\n  ) {\n    return true\n  }\n\n  if (preparationType && preparationType.id) {\n    const resource = preparationTypes[preparationType.id]\n    if (resource) {\n      return objectPath.get(resource, 'attributes.category') === category\n    }\n  }\n\n  return false\n}\n\nconst getShouldExpandFirstItemOnMount = (item = {}) => {\n  return Object.keys(item).length === 1\n}\n\nconst mapStateToProps = (state, { formValueSelector, name }) => {\n  return {\n    allPreparationTypesFetched: crudKeyObjectSelectors.get[\n      ':resource.allItems.fetched'\n    ](state, { resource: 'preparationType' }),\n    collectionItems: formValueSelector(state, name),\n    preparationTypes: crudSelectors.preparationType.getItemsObject(state),\n  }\n}\nconst mapDispatchToProps = {\n  getStorageLocations: crudActionCreators.storageLocation.getMany,\n}\n\nconst propTypes = {\n  allPreparationTypesFetched: PropTypes.bool.isRequired,\n  category: PropTypes.string.isRequired,\n  changeFieldValue: PropTypes.func.isRequired,\n  collectionItems: PropTypes.array,\n  formName: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func.isRequired,\n  getStorageLocations: PropTypes.func.isRequired,\n  preparationTypes: PropTypes.object,\n  removeArrayFieldByIndex: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  collectionItems: [],\n  preparationTypes: {},\n}\n\nclass PhysicalObjectsAccordion extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.getShouldRenderAccordion = this.getShouldRenderAccordion.bind(this)\n    this.getShouldRenderItem = this.getShouldRenderItem.bind(this)\n  }\n\n  getShouldRenderItem({ preparationType }) {\n    const { category, preparationTypes } = this.props\n    return getMatchesCategory({ category, preparationType, preparationTypes })\n  }\n\n  getShouldRenderAccordion() {\n    const { category, collectionItems, preparationTypes } = this.props\n\n    for (let index = 0; index < collectionItems.length; index += 1) {\n      const { preparationType } = collectionItems[index]\n      if (\n        this.getShouldRenderItem({\n          category,\n          preparationType,\n          preparationTypes,\n        })\n      ) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  render() {\n    log.render()\n    const {\n      allPreparationTypesFetched,\n      category,\n      changeFieldValue,\n      collectionItems,\n      formName,\n      formValueSelector,\n      removeArrayFieldByIndex,\n    } = this.props\n\n    if (!allPreparationTypesFetched) {\n      return null\n    }\n\n    return (\n      <React.Fragment>\n        {this.getShouldRenderAccordion() && collectionItems.length > 0 && (\n          <Grid.Column computer={16}>\n            <Accordion\n              expandItemOnAdd\n              getShouldExpandFirstItemOnMount={getShouldExpandFirstItemOnMount}\n              getShouldRenderItem={this.getShouldRenderItem}\n              initialActiveMode={ALL_COLLAPSED}\n              items={collectionItems}\n              renderActiveOnly\n              renderContent={props => {\n                return (\n                  <PhysicalObjectContent\n                    category={category}\n                    changeFieldValue={changeFieldValue}\n                    formName={formName}\n                    formValueSelector={formValueSelector}\n                    preparationTypeId={\n                      props.preparationType && props.preparationType.id\n                    }\n                    removeArrayFieldByIndex={removeArrayFieldByIndex}\n                    {...props}\n                  />\n                )\n              }}\n              renderTitle={props => {\n                return (\n                  <PhysicalObjectTitle\n                    category={category}\n                    formName={formName}\n                    preparationTypeId={\n                      props.preparationType && props.preparationType.id\n                    }\n                    {...props}\n                  />\n                )\n              }}\n            />\n          </Grid.Column>\n        )}\n        <Grid.Column width={16}>\n          <AddButton\n            module=\"collectionMammals\"\n            onClick={event => {\n              event.preventDefault()\n              changeFieldValue(\n                `individual.collectionItems.${collectionItems.length}`,\n                {\n                  preparationType: {\n                    id: categoryUnspecifiedTypeIdMap[category],\n                  },\n                }\n              )\n            }}\n            textKey={`other.physicalObjects.add${capitalizeFirstLetter(\n              camelCase(category)\n            )}`}\n          />\n        </Grid.Column>\n      </React.Fragment>\n    )\n  }\n}\n\nPhysicalObjectsAccordion.propTypes = propTypes\nPhysicalObjectsAccordion.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  pathBuilder({\n    name: 'individual.collectionItems',\n  })\n)(PhysicalObjectsAccordion)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field, SingleDate } from 'coreModules/form/components'\nimport { AgentDropdownPickerSearch } from 'domainModules/agent/components'\n\nconst propTypes = {\n  baseName: PropTypes.string.isRequired,\n}\n\nconst Fields = ({ baseName }) => {\n  return (\n    <React.Fragment>\n      <Grid.Column width={16}>\n        <Field\n          autoComplete=\"off\"\n          component={AgentDropdownPickerSearch}\n          module=\"collectionMammals\"\n          name={`${baseName}.agent`}\n          resultSuffix=\"(agent)\"\n          type=\"input-text\"\n        />\n      </Grid.Column>\n      <Grid.Column width={16}>\n        <Field\n          autoComplete=\"off\"\n          component={SingleDate}\n          module=\"collectionMammals\"\n          name={`${baseName}.date`}\n        />\n      </Grid.Column>\n    </React.Fragment>\n  )\n}\n\nFields.propTypes = propTypes\n\nexport default Fields\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Icon } from 'semantic-ui-react'\nimport objectPath from 'object-path'\nimport { isEmpty } from 'lodash'\n\nimport { buildYYYYMMDD, getYYYYMMDDFromTimestamp } from 'common/es5/date'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { AgentIdTextResult } from 'domainModules/agent/components'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst propTypes = {\n  agent: PropTypes.object,\n  date: PropTypes.object,\n  description: PropTypes.string.isRequired,\n  onEdit: PropTypes.func,\n}\nconst defaultProps = {\n  agent: undefined,\n  date: undefined,\n  onEdit: undefined,\n}\n\nclass EventRow extends PureComponent {\n  render() {\n    const {\n      agent: eventAgent,\n      date,\n      description,\n      onEdit: handleEdit,\n    } = this.props\n\n    let dateToShow\n    if (date) {\n      const startDate = objectPath.get(date, 'startDate')\n      const dateText = objectPath.get(date, 'dateText')\n\n      const YYYYMMDD = buildYYYYMMDD(startDate || {})\n\n      dateToShow = YYYYMMDD || getYYYYMMDDFromTimestamp(dateText)\n    }\n\n    return (\n      <Grid.Column width={16}>\n        {dateToShow && `${dateToShow}: `}\n        {`${description} `}\n        {eventAgent && !isEmpty(eventAgent) && (\n          <React.Fragment>\n            <ModuleTranslate textKey=\"other.by\" />{' '}\n            <AgentIdTextResult\n              includeVerbatimAgent\n              input={{ value: eventAgent }}\n              textOnly\n            />\n          </React.Fragment>\n        )}\n        {handleEdit && (\n          <Icon\n            name=\"edit\"\n            onClick={handleEdit}\n            size=\"large\"\n            style={{ cursor: 'pointer', marginLeft: '0.5em' }}\n          />\n        )}\n      </Grid.Column>\n    )\n  }\n}\n\nEventRow.propTypes = propTypes\nEventRow.defaultProps = defaultProps\n\nexport default EventRow\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Button, Grid, Modal } from 'semantic-ui-react'\nimport { isEmpty } from 'lodash'\n\nimport {\n  CATALOG_CARD,\n  CATALOG_CARD_CREATION_DESCRIPTION,\n} from 'common/es5/constants/recordHistoryEvents'\nimport config from 'config'\nimport { FormModal } from 'coreModules/form/components'\nimport formParts from 'coreModules/form/components/parts'\nimport formSupportSelectors from 'coreModules/formSupport/globalSelectors'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\n\nimport Fields from './Fields'\nimport EventRow from './EventRow'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst { AddButton } = formParts\n\nconst mapStateToProps = (state, { formName, formValueSelector, name }) => {\n  const recordHistoryEvents = formValueSelector(state, name)\n\n  const catalogCardCreationEventIndex = (recordHistoryEvents || []).findIndex(\n    ({ description }) => description === CATALOG_CARD_CREATION_DESCRIPTION\n  )\n\n  if (\n    !recordHistoryEvents ||\n    !recordHistoryEvents.length ||\n    catalogCardCreationEventIndex === -1\n  ) {\n    return {\n      catalogCardCreationEventIndex: -1,\n      fieldsBaseName: `${name}.0`,\n      otherEvents: recordHistoryEvents,\n      recordHistoryEvents,\n    }\n  }\n\n  const fieldsBaseName = `${name}.${\n    catalogCardCreationEventIndex === -1\n      ? recordHistoryEvents.length\n      : catalogCardCreationEventIndex\n  }`\n\n  const catalogCardCreationEvent =\n    recordHistoryEvents[catalogCardCreationEventIndex]\n  const { agent, date } = catalogCardCreationEvent\n\n  return {\n    agent,\n    catalogCardCreationEvent,\n    catalogCardCreationEventIndex,\n    fieldsBaseName,\n    hasAgentOrDate: !isEmpty(agent) || !isEmpty(date),\n    invalidInput: formSupportSelectors.getAnyFieldIsInvalid(state, {\n      fieldNames: [`${fieldsBaseName}.agent`, `${fieldsBaseName}.date`],\n      formName,\n    }),\n    otherEvents: recordHistoryEvents.filter(\n      ({ description }) => description !== CATALOG_CARD_CREATION_DESCRIPTION\n    ),\n    recordHistoryEvents,\n  }\n}\n\nconst propTypes = {\n  catalogCardCreationEvent: PropTypes.shape({\n    agent: PropTypes.object,\n    date: PropTypes.object,\n    description: PropTypes.string,\n  }),\n  catalogCardCreationEventIndex: PropTypes.number,\n  changeFieldValue: PropTypes.func.isRequired,\n  fieldsBaseName: PropTypes.string.isRequired,\n  hasAgentOrDate: PropTypes.bool,\n  invalidInput: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  otherEvents: PropTypes.arrayOf(\n    PropTypes.shape({\n      agent: PropTypes.object,\n      date: PropTypes.object,\n      description: PropTypes.string,\n    })\n  ),\n  recordHistoryEvents: PropTypes.arrayOf(\n    PropTypes.shape({\n      agent: PropTypes.object,\n      date: PropTypes.object,\n      description: PropTypes.string,\n    })\n  ),\n}\nconst defaultProps = {\n  catalogCardCreationEvent: undefined,\n  catalogCardCreationEventIndex: undefined,\n  hasAgentOrDate: false,\n  invalidInput: undefined,\n  otherEvents: undefined,\n  recordHistoryEvents: [],\n}\n\nclass RecordHistoryExternalEvents extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleOpen = this.handleOpen.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      catalogCardCreationEventIndex,\n      changeFieldValue,\n      hasAgentOrDate,\n      name,\n      recordHistoryEvents,\n    } = this.props\n\n    if (\n      recordHistoryEvents &&\n      catalogCardCreationEventIndex > -1 &&\n      !hasAgentOrDate\n    ) {\n      let updatedRecordHistoryEvents = [...recordHistoryEvents]\n      updatedRecordHistoryEvents[catalogCardCreationEventIndex] = undefined\n      updatedRecordHistoryEvents = updatedRecordHistoryEvents.filter(\n        item => !!item\n      )\n      changeFieldValue(name, updatedRecordHistoryEvents)\n    }\n  }\n\n  handleClose() {\n    this.setState({ open: false })\n  }\n\n  handleOpen() {\n    const {\n      catalogCardCreationEventIndex,\n      changeFieldValue,\n      name,\n      recordHistoryEvents,\n    } = this.props\n\n    if (catalogCardCreationEventIndex === -1) {\n      changeFieldValue(`${name}.${recordHistoryEvents.length}`, {\n        description: CATALOG_CARD_CREATION_DESCRIPTION,\n        system: CATALOG_CARD,\n      })\n    }\n\n    this.setState({ open: true })\n  }\n\n  render() {\n    const {\n      catalogCardCreationEvent,\n      fieldsBaseName,\n      hasAgentOrDate,\n      invalidInput,\n      otherEvents,\n    } = this.props\n    const { open } = this.state\n\n    return (\n      <React.Fragment>\n        {otherEvents &&\n          otherEvents.map(({ agent: eventAgent, date, description }, index) => {\n            return (\n              <EventRow\n                agent={eventAgent}\n                date={date}\n                description={description}\n                key={`${date}-${description}-${index}`} // eslint-disable-line react/no-array-index-key\n              />\n            )\n          })}\n        <FormModal\n          open={open}\n          size=\"tiny\"\n          trigger={\n            /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n            !open &&\n            (hasAgentOrDate ? (\n              <EventRow\n                agent={catalogCardCreationEvent.agent}\n                date={catalogCardCreationEvent.date}\n                description={catalogCardCreationEvent.description}\n                onEdit={this.handleOpen}\n              />\n            ) : (\n              <AddButton\n                onClick={event => {\n                  event.preventDefault()\n                  this.handleOpen()\n                }}\n                textKey=\"other.addCatalogCardCreation\"\n              />\n            ))\n            /* eslint-enable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n          }\n        >\n          <Modal.Header>\n            <ModuleTranslate textKey=\"other.addCatalogCardInformation\" />\n          </Modal.Header>\n          <Modal.Content>\n            <Grid>\n              <Grid.Row className=\"relaxed\">\n                <Fields baseName={fieldsBaseName} />\n              </Grid.Row>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions style={{ textAlign: 'left' }}>\n            <Button disabled={invalidInput} onClick={this.handleClose}>\n              <ModuleTranslate capitalize textKey=\"other.done\" />\n            </Button>\n          </Modal.Actions>\n        </FormModal>\n        {config.isTest && <Fields />}\n      </React.Fragment>\n    )\n  }\n}\n\nRecordHistoryExternalEvents.propTypes = propTypes\nRecordHistoryExternalEvents.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(RecordHistoryExternalEvents)\n","import React, { Component } from 'react'\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types'\n\nimport createLog from 'utilities/log'\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { Radio } from 'coreModules/form/components'\nimport { wrapInColumn } from 'coreModules/form/higherOrderComponents'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalForm:OriginInformation:SelectiveBreeding'\n)\n\nconst propTypes = {\n  i18n: PropTypes.shape({\n    moduleTranslate: PropTypes.func.isRequired,\n  }).isRequired,\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  }).isRequired,\n  label: PropTypes.string.isRequired,\n}\n\nclass SelectiveBreeding extends Component {\n  constructor(props) {\n    super(props)\n\n    const {\n      i18n: { moduleTranslate },\n    } = props\n\n    this.radioOptions = [\n      {\n        key: 'no',\n        text: moduleTranslate({\n          capitalize: true,\n          module: 'collectionMammals',\n          textKey: 'other.wildAnimal',\n        }),\n        value: 'no',\n      },\n      {\n        key: 'yes',\n        text: moduleTranslate({\n          capitalize: true,\n          module: 'collectionMammals',\n          textKey: 'other.zooAnimal',\n        }),\n        value: 'yes',\n      },\n      {\n        key: 'unknown',\n        text: moduleTranslate({\n          capitalize: true,\n          module: 'collectionMammals',\n          textKey: 'other.unknown',\n        }),\n        value: 'unknown',\n      },\n    ]\n  }\n\n  render() {\n    const { input, label } = this.props\n\n    log.render()\n    return (\n      <Radio\n        input={input}\n        label={<ModuleTranslate module=\"collectionMammals\" textKey={label} />}\n        radioOptions={this.radioOptions}\n      />\n    )\n  }\n}\n\nSelectiveBreeding.propTypes = propTypes\nexport default compose(\n  withI18n(),\n  wrapInColumn\n)(SelectiveBreeding)\n","import agentParts from 'domainModules/agent/components/formParts'\nimport curatedListParts from 'domainModules/curatedList/components/formParts'\nimport localityParts from 'domainModules/locality/components/formParts'\nimport taxonParts from 'domainModules/taxon/components/formParts'\n\nimport CollectingLocality from './CollectingLocality'\nimport CustomTaxonNamesTable from './CustomTaxonNamesTable'\nimport DeterminationsAccordion from './DeterminationsAccordion'\n\nimport FeatureObservations from './FeatureObservations'\nimport IdentifiersTable from './IdentifiersTable'\nimport PhysicalObjectsAccordion from './PhysicalObjectsAccordion'\nimport RecordHistoryExternalEvents from './RecordHistoryExternalEvents'\nimport SelectiveBreeding from './SelectiveBreeding'\n\nexport default {\n  ...agentParts,\n  ...curatedListParts,\n  ...localityParts,\n  ...taxonParts,\n  CollectingLocality,\n  CustomTaxonNamesTable,\n  DeterminationsAccordion,\n  FeatureObservations,\n  IdentifiersTable,\n  PhysicalObjectsAccordion,\n  RecordHistoryExternalEvents,\n  SelectiveBreeding,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport { arrayRemove, change, reduxForm, reset, submit } from 'redux-form'\nimport objectPath from 'object-path'\n\nimport { Form, FormRow } from 'coreModules/form/components'\nimport { handleReduxFormSubmitError } from 'coreModules/form/utilities'\nimport { RecordActionBar } from 'coreModules/resourceManager/components'\nimport { createHandleDelete } from 'coreModules/resourceManager/components/ResourceManager/MainColumn/item/ActionBars/higherOrderComponents'\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { mammalFormModels } from 'domainModules/collectionMammals/schemas'\nimport CatalogNumberModal from 'domainModules/collectionMammals/components/CatalogNumberModal'\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport filterOutput from './transformations/output'\nimport { mapCollectionItemsErrors } from './transformations/syncErrors'\nimport sectionSpecs from './sectionSpecs'\nimport customParts from './formParts'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst EnhancedRecordActionBar = compose(createHandleDelete())(RecordActionBar)\n\nconst recordActionBarHeight = emToPixels(4.625)\n\nconst rows = [\n  { key: 'formRow' },\n  {\n    height: `${recordActionBarHeight}px`,\n    key: 'recordActionBar',\n    style: { borderTop: '1px solid #D4D4D5' },\n  },\n]\n\nconst getAllowTransition = location =>\n  location.pathname.includes('app/specimens/mammals') &&\n  location.pathname.includes('edit/sections')\n\nconst mapDispatchToProps = {\n  changeFormValue: change,\n  push,\n  removeArrayField: arrayRemove,\n  reset,\n  submit,\n}\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  catalogNumber: PropTypes.string,\n  changeFormValue: PropTypes.func.isRequired,\n  curatorialTaxon: PropTypes.shape({\n    acceptedTaxonName: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }),\n  error: PropTypes.string,\n  establishmentMeansTypes: PropTypes.array,\n  form: PropTypes.string.isRequired,\n  formValueSelector: PropTypes.func.isRequired,\n  handleFormSubmit: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  mainColumnActiveTab: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      specimenId: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  mode: PropTypes.oneOf(['edit', 'register']),\n  push: PropTypes.func.isRequired,\n  redirectOnSuccess: PropTypes.bool,\n  removeArrayField: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  submitFailed: PropTypes.bool.isRequired,\n  submitSucceeded: PropTypes.bool.isRequired,\n}\nconst defaultProps = {\n  catalogNumber: undefined,\n  curatorialTaxon: undefined,\n  error: '',\n  establishmentMeansTypes: undefined,\n  loading: false,\n  mode: 'register',\n  redirectOnSuccess: false,\n}\n\nclass RecordForm extends Component {\n  constructor(props) {\n    super(props)\n    this.changeFieldValue = this.changeFieldValue.bind(this)\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleSubmitFromModal = this.handleSubmitFromModal.bind(this)\n    this.handleUndoChanges = this.handleUndoChanges.bind(this)\n    this.removeArrayFieldByIndex = this.removeArrayFieldByIndex.bind(this)\n    this.renderRow = this.renderRow.bind(this)\n    this.setFormRef = this.setFormRef.bind(this)\n  }\n\n  setFormRef(element) {\n    this.form = element\n  }\n\n  handleSubmitFromModal() {\n    if (this.form) {\n      const event = document.createEvent('Event')\n      event.initEvent('submit', true, true)\n      this.form.dispatchEvent(event)\n    }\n  }\n\n  handleFormSubmit(formData) {\n    const {\n      establishmentMeansTypes,\n      handleFormSubmit,\n      match,\n      push: pushRoute,\n      redirectOnSuccess,\n    } = this.props\n\n    const specimen = {\n      id: match && match.params && match.params.specimenId,\n      ...formData,\n    }\n\n    return handleFormSubmit(filterOutput({ establishmentMeansTypes, specimen }))\n      .then(({ id: specimenId }) => {\n        if (!match.params.specimenId && specimenId && redirectOnSuccess) {\n          pushRoute(\n            `/app/specimens/mammals/${specimenId}/edit/sections/${match.params\n              .sectionId || '0'}`\n          )\n        }\n      })\n      .catch(handleReduxFormSubmitError)\n  }\n\n  changeFieldValue(fieldName, value) {\n    this.props.changeFormValue(this.props.form, fieldName, value)\n  }\n\n  removeArrayFieldByIndex(fieldName, index) {\n    this.props.removeArrayField(this.props.form, fieldName, index)\n  }\n\n  handleUndoChanges() {\n    this.props.reset(this.props.form)\n  }\n\n  renderRow(key, props) {\n    switch (key) {\n      case 'formRow': {\n        const { availableHeight, catalogNumber, curatorialTaxon } = this.props\n\n        const curatorialTaxonAcceptedName = objectPath.get(\n          curatorialTaxon,\n          'acceptedTaxonName.name'\n        )\n\n        return (\n          <FormRow\n            {...this.props}\n            {...props}\n            availableHeight={availableHeight - recordActionBarHeight}\n            customParts={customParts}\n            itemHeader={\n              catalogNumber || <ModuleTranslate textKey=\"headers.newSpecimen\" />\n            }\n            itemSubHeader={curatorialTaxonAcceptedName}\n            resourceIdPathParamKey=\"specimenId\"\n            showSectionsInNavigation\n          />\n        )\n      }\n\n      case 'recordActionBar': {\n        return (\n          <EnhancedRecordActionBar\n            {...this.props}\n            {...props}\n            onUndoChanges={this.handleUndoChanges}\n            resource=\"specimen\"\n          />\n        )\n      }\n\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const {\n      availableHeight,\n      catalogNumber,\n      form,\n      handleSubmit,\n      mode,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(this.handleFormSubmit)}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n      >\n        <RowLayout\n          {...rest}\n          availableHeight={availableHeight}\n          changeFieldValue={this.changeFieldValue}\n          formName={form}\n          module=\"collectionMammals\" // to be deprecated in favor of moduleName\n          moduleName=\"collectionMammals\"\n          removeArrayFieldByIndex={this.removeArrayFieldByIndex}\n          renderRow={this.renderRow}\n          rows={rows}\n          sectionSpecs={sectionSpecs}\n        />\n        {mode === 'register' && (\n          <CatalogNumberModal\n            formName={form}\n            handleSubmit={this.handleSubmitFromModal}\n            {...rest}\n          />\n        )}\n      </Form>\n    )\n  }\n}\n\nRecordForm.propTypes = propTypes\nRecordForm.defaultProps = defaultProps\n\nconst EnhancedForm = compose(\n  withRouter,\n  connect(\n    undefined,\n    mapDispatchToProps\n  )\n)(RecordForm)\n\nexport default reduxForm({\n  enableReinitialize: true,\n  keepDirtyOnReinitialize: false,\n  shouldError: params => {\n    if (params) {\n      const { props, nextProps } = params\n\n      return (\n        (props && props.registeredFields) !==\n          (nextProps && nextProps.registeredFields) ||\n        (props && props.values) !== (nextProps && nextProps.values)\n      )\n    }\n\n    return false\n  },\n  updateUnregisteredFields: true,\n  validate: compose(\n    mapCollectionItemsErrors,\n    customFormValidator({\n      model: 'specimen',\n      models: mammalFormModels,\n    })\n  ),\n})(EnhancedForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { formValueSelector as formValueSelectorFactory } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport nestedToCoreSync from 'common/es5/formatObject/nestedToCoreSync'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport crudGlobalSelectors from 'coreModules/crud/globalSelectors'\nimport {\n  createEnsureAllItemsFetched,\n  createGetResourceCount,\n} from 'coreModules/crud/higherOrderComponents'\nimport { CREATE_SUCCESS } from 'coreModules/resourceManager/constants'\nimport transformInput, {\n  getBaseValues,\n} from '../RecordForm/transformations/input'\nimport RecordForm from '../RecordForm'\n\nconst log = createLog(\n  'modules:collectionMammals:components:MammalManager:CreateSpecimen'\n)\n\nconst FORM_NAME = 'createSpecimen'\n\nconst formValueSelector = formValueSelectorFactory(FORM_NAME)\n\nconst mapStateToProps = state => {\n  return {\n    establishmentMeansTypes: crudGlobalSelectors.establishmentMeansType.getAll(\n      state\n    ),\n    identifierTypes: crudGlobalSelectors.identifierType.getAll(state),\n  }\n}\nconst mapDispatchToProps = {\n  createSpecimen: crudActionCreators.specimen.create,\n}\n\nconst propTypes = {\n  createSpecimen: PropTypes.func.isRequired,\n  establishmentMeansTypes: PropTypes.array.isRequired,\n  establishmentMeansTypesFetched: PropTypes.bool.isRequired,\n  fetchResourceCount: PropTypes.func.isRequired,\n  identifierTypes: PropTypes.array.isRequired,\n  identifierTypesFetched: PropTypes.bool.isRequired,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nclass CreateSpecimen extends PureComponent {\n  render() {\n    log.render()\n\n    const {\n      createSpecimen,\n      establishmentMeansTypes,\n      establishmentMeansTypesFetched,\n      fetchResourceCount,\n      identifierTypes,\n      identifierTypesFetched,\n      onInteraction,\n      ...rest\n    } = this.props\n\n    if (!establishmentMeansTypesFetched || !identifierTypesFetched) {\n      return null\n    }\n\n    const baseValues = getBaseValues({\n      establishmentMeansTypes,\n      identifierTypes,\n    })\n\n    const initialValues = transformInput({\n      establishmentMeansTypes,\n      identifierTypes,\n      specimen: {},\n    })\n\n    log.debug('initialValues', initialValues)\n    return (\n      <RecordForm\n        baseValues={baseValues}\n        establishmentMeansTypes={establishmentMeansTypes}\n        form={FORM_NAME}\n        formName={FORM_NAME}\n        formValueSelector={formValueSelector}\n        handleFormSubmit={formOutput => {\n          const item = nestedToCoreSync({\n            item: formOutput,\n            type: 'specimen',\n          })\n          return createSpecimen({ item }).then(res => {\n            fetchResourceCount()\n            onInteraction(CREATE_SUCCESS, { itemId: res.id })\n            return new Promise(resolve => {\n              setTimeout(() => {\n                return resolve(res)\n              }, 3000)\n            })\n          })\n        }}\n        initialValues={initialValues}\n        mode=\"register\"\n        redirectOnSuccess\n        {...rest}\n      />\n    )\n  }\n}\n\nCreateSpecimen.propTypes = propTypes\n\nexport default compose(\n  createGetResourceCount({ resource: 'specimen' }),\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'establishmentMeansTypesFetched',\n    resource: 'establishmentMeansType',\n  }),\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'identifierTypesFetched',\n    resource: 'identifierType',\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(CreateSpecimen)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { formValueSelector as formValueSelectorFactory } from 'redux-form'\nimport objectPath from 'object-path'\n\nimport nestedToCoreSync from 'common/es5/formatObject/nestedToCoreSync'\nimport createLog from 'utilities/log'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport crudGlobalSelectors from 'coreModules/crud/globalSelectors'\nimport {\n  createEnsureAllItemsFetched,\n  createGetNestedItemById,\n  createGetResourceCount,\n} from 'coreModules/crud/higherOrderComponents'\nimport collectionMammalsSelectors from 'domainModules/collectionMammals/globalSelectors'\nimport transformInput, {\n  getBaseValues,\n} from '../RecordForm/transformations/input'\nimport RecordForm from '../RecordForm'\n\nconst log = createLog(\n  'modules:collectionMammals:components:MammalManager:EditSpecimen'\n)\n\nconst FORM_NAME = 'editSpecimen'\n\nconst formValueSelector = formValueSelectorFactory(FORM_NAME)\n\nconst mapStateToProps = state => {\n  return {\n    catalogNumber: collectionMammalsSelectors.createGetCatalogNumber(FORM_NAME)(\n      state\n    ),\n    establishmentMeansTypes: crudGlobalSelectors.establishmentMeansType.getAll(\n      state\n    ),\n    featureTypes: crudGlobalSelectors.featureType.getAll(state),\n    identifierTypes: crudGlobalSelectors.identifierType.getAll(state),\n  }\n}\n\nconst mapDispatchToProps = {\n  updateSpecimen: crudActionCreators.specimen.update,\n}\n\nconst propTypes = {\n  clearNestedCacheNamespace: PropTypes.func.isRequired,\n  establishmentMeansTypes: PropTypes.array.isRequired,\n  featureTypes: PropTypes.array.isRequired,\n  featureTypesFetched: PropTypes.bool.isRequired,\n  fetchOneItemById: PropTypes.func.isRequired,\n  identifierTypes: PropTypes.array.isRequired,\n  nestedSpecimen: PropTypes.object,\n  updateSpecimen: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedSpecimen: null,\n}\n\nclass EditSpecimen extends PureComponent {\n  render() {\n    log.render()\n\n    const {\n      clearNestedCacheNamespace,\n      establishmentMeansTypes,\n      fetchOneItemById,\n      identifierTypes,\n      nestedSpecimen,\n      updateSpecimen,\n      featureTypes,\n      featureTypesFetched,\n      ...rest\n    } = this.props\n\n    if (!nestedSpecimen || !featureTypesFetched) {\n      return null\n    }\n\n    const curatorialTaxon = objectPath.get(\n      nestedSpecimen,\n      'individual.taxonInformation.curatorialTaxon'\n    )\n\n    const baseValues = getBaseValues({\n      establishmentMeansTypes,\n      featureTypes,\n      identifierTypes,\n    })\n\n    const { resourceActivities, ...initialValues } = transformInput({\n      establishmentMeansTypes,\n      featureTypes,\n      identifierTypes,\n      specimen: nestedSpecimen || {},\n    })\n\n    log.debug('initialValues', initialValues)\n    return (\n      <RecordForm\n        {...rest}\n        baseValues={baseValues}\n        curatorialTaxon={curatorialTaxon}\n        establishmentMeansTypes={establishmentMeansTypes}\n        form={FORM_NAME}\n        formName={FORM_NAME}\n        formValueSelector={formValueSelector}\n        handleFormSubmit={formOutput => {\n          const item = nestedToCoreSync({\n            item: formOutput,\n            type: 'specimen',\n          })\n          return updateSpecimen({\n            item,\n          }).then(({ id }) => {\n            return fetchOneItemById(id).then(() => {\n              return { id }\n            })\n          })\n        }}\n        initialValues={initialValues}\n        itemId={nestedSpecimen.id}\n        loading={!nestedSpecimen}\n        mode=\"edit\"\n        resourceActivities={resourceActivities}\n      />\n    )\n  }\n}\n\nEditSpecimen.propTypes = propTypes\nEditSpecimen.defaultProps = defaultProps\n\nexport default compose(\n  withRouter,\n  createGetResourceCount({ resource: 'specimen' }),\n  createGetNestedItemById({\n    idPath: 'match.params.specimenId',\n    include: [\n      'featureTypes',\n      'normalizedAgents',\n      'physicalObjects.storageLocation',\n      'places',\n      'resourceActivities',\n      'taxa.acceptedTaxonName',\n      'taxonNames',\n    ],\n    nestedItemKey: 'nestedSpecimen',\n    relationships: ['all'],\n    resolveRelationships: [\n      'physicalObject',\n      'storageLocation',\n      'resourceActivity',\n      'taxon',\n      'taxonName',\n    ],\n    resource: 'specimen',\n  }),\n  createEnsureAllItemsFetched({\n    allItemsFetchedKey: 'featureTypesFetched',\n    resource: 'featureType',\n  }),\n  createEnsureAllItemsFetched({\n    resource: 'establishmentMeansType',\n  }),\n  createEnsureAllItemsFetched({ resource: 'customTaxonNameType' }),\n  createEnsureAllItemsFetched({ resource: 'identifierType' }),\n  createEnsureAllItemsFetched({\n    resource: 'preparationType',\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(EditSpecimen)\n","const tableColumnSpecifications = [\n  {\n    name: 'identifiersCatalogNumber',\n    width: 180,\n  },\n  {\n    name: 'taxonomyCuratorialName',\n    width: 250,\n  },\n  {\n    name: 'taxonomyRank',\n    width: 150,\n  },\n  {\n    name: 'taxonomyFamily',\n    width: 150,\n  },\n  {\n    name: 'taxonomyGenus',\n    width: 150,\n  },\n  {\n    name: 'taxonomySpecies',\n    width: 150,\n  },\n  {\n    name: 'taxonomySubspecies',\n    width: 150,\n  },\n  {\n    name: 'collectingEventCollectors',\n    width: 250,\n  },\n  // {\n  //   name: 'nomenclaturalTypeTypeStatus',\n  //   width: 150,\n  // },\n  {\n    name: 'collectingEventStartDate',\n    width: 150,\n  },\n  {\n    name: 'collectingEventEndDate',\n    width: 150,\n  },\n  {\n    name: 'collectingEventLocality',\n    width: 300,\n  },\n  {\n    name: 'collectingEventInterpretedLocality',\n    width: 300,\n  },\n  {\n    name: 'collectingEventCountry',\n    width: 200,\n  },\n  {\n    name: 'collectingEventProvince',\n    width: 200,\n  },\n  {\n    name: 'collectingEventDistrict',\n    width: 200,\n  },\n  {\n    name: 'originInformationLocality',\n    width: 300,\n  },\n  {\n    name: 'deathInformationDeath',\n    width: 200,\n  },\n  {\n    name: 'physicalUnitSkeleton',\n    width: 400,\n  },\n  {\n    name: 'physicalUnitSkin',\n    width: 400,\n  },\n  {\n    name: 'physicalUnitWetPreparation',\n    width: 400,\n  },\n  {\n    name: 'physicalUnitOtherPreparation',\n    width: 400,\n  },\n  {\n    name: 'featureSex',\n    width: 100,\n  },\n  {\n    name: 'featureAgeStage',\n    width: 100,\n  },\n  {\n    name: 'featureAge',\n    width: 100,\n  },\n  {\n    name: 'featureCompleteBodyWeight',\n    width: 180,\n  },\n  {\n    name: 'featureTotalLength',\n    width: 150,\n  },\n  {\n    name: 'featureBodyLength',\n    width: 150,\n  },\n  {\n    name: 'featureCondition',\n    width: 180,\n  },\n  {\n    name: 'identifiersOtherIdentifiers',\n    width: 300,\n  },\n  {\n    name: 'recordEventCataloged',\n    width: 250,\n  },\n  {\n    name: 'recordEventRegistered',\n    width: 150,\n  },\n  {\n    name: 'recordEventLastModified',\n    width: 200,\n  },\n]\n\nexport const tableColumnNames = tableColumnSpecifications.map(\n  ({ name }) => name\n)\n\nexport const getTableWidth = (includedTableColumns = tableColumnNames) => {\n  return tableColumnSpecifications.reduce((totalWidth, { name, width }) => {\n    if (includedTableColumns.includes(name)) {\n      return totalWidth + width\n    }\n\n    return totalWidth\n  }, 0)\n}\n\nexport default tableColumnSpecifications\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { Button, Icon, Menu, Modal, Popup } from 'semantic-ui-react'\nimport { globalSelectors as searchSelectors } from 'coreModules/search/keyObjectModule'\nimport crudActionCreators from 'coreModules/crud/actionCreators'\nimport downloadFileActionCreator from 'coreModules/api/actionCreators/downloadFile'\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\nimport { FormModal } from 'coreModules/form/components'\nimport { SPECIMENS_MAMMALS_TABLE_COLUMNS } from '../../../../constants'\nimport tableColumnSpecifications from '../tableColumnSpecifications'\n\nconst SEARCH_SPECIMEN = 'searchSpecimen'\n\nconst mapStateToProps = state => {\n  const userPreferences = userSelectors.getUserPreferences(state)\n\n  return {\n    columns:\n      (userPreferences && userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS]) ||\n      undefined,\n    searchResult: searchSelectors.get[':resource.searchState'](state, {\n      resource: SEARCH_SPECIMEN,\n    }),\n  }\n}\n\nconst mapDispatchToProps = {\n  createExportInfo: crudActionCreators.exportJob.create,\n  downloadFile: downloadFileActionCreator,\n  getOneExportInfo: crudActionCreators.exportJob.getOne,\n}\n\nconst propTypes = {\n  columns: PropTypes.array,\n  createExportInfo: PropTypes.func.isRequired,\n  downloadFile: PropTypes.func.isRequired,\n  getOneExportInfo: PropTypes.func.isRequired,\n  i18n: PropTypes.object.isRequired,\n  pollInterval: PropTypes.number,\n  pollLimit: PropTypes.number,\n  searchResult: PropTypes.object,\n}\n\nconst defaultProps = {\n  columns: tableColumnSpecifications.map(({ name }) => {\n    return name\n  }),\n  pollInterval: 500,\n  pollLimit: 100,\n  searchResult: undefined,\n}\n\nexport class CsvExporter extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleExportToCsv = this.handleExportToCsv.bind(this)\n    this.exportToCsv = this.exportToCsv.bind(this)\n    this.pollId = this.pollId.bind(this)\n    this.state = {\n      exportJobId: undefined,\n      exportStatus: '',\n      fileName: '',\n    }\n  }\n\n  pollId(id) {\n    const { pollLimit, pollInterval } = this.props\n    let count = 0\n    const poll = () => {\n      if (!this.isExporting) {\n        return null\n      }\n      count += 1\n      return this.props\n        .getOneExportInfo({\n          id,\n          queryParams: {\n            includeFields: [\n              'id',\n              'attributes.filePath',\n              'attributes.succeededAt',\n              'attributes.failedAt',\n            ],\n          },\n          relationships: [],\n          storeInState: false,\n        })\n        .then(item => {\n          if (item) {\n            const attributes = item && item.attributes\n            if (attributes.succeededAt) {\n              this.updateStatus('exportDone', {\n                exportJobId: item.id,\n                fileName: attributes.filePath,\n              })\n            }\n            if (attributes.failedAt) {\n              this.updateStatus('failed')\n            }\n          }\n\n          if (count >= pollLimit) {\n            return this.updateStatus('failed')\n          }\n          return setTimeout(() => {\n            poll()\n          }, pollInterval)\n        })\n        .catch(() => {\n          this.updateStatus('failed')\n        })\n    }\n    return poll()\n  }\n\n  exportToCsv() {\n    const { columns, searchResult = {}, i18n } = this.props\n\n    const exportFields = columns.map(column => {\n      return {\n        default: 'NULL',\n        fieldPath: `attributes.${column}`,\n        label: i18n.moduleTranslate({\n          capitalize: true,\n          textKey: `tableColumns.${column}`,\n        }),\n      }\n    })\n    exportFields.push({\n      fieldPath: 'id',\n      label: 'Id',\n    })\n\n    const exportIds = (searchResult.items || []).map(item => {\n      return item.id\n    })\n    return this.props\n      .createExportInfo({\n        item: {\n          attributes: {\n            exportFields,\n            exportIds,\n            resource: SEARCH_SPECIMEN,\n          },\n        },\n      })\n      .then(({ id }) => {\n        return this.pollId(id)\n      })\n  }\n\n  handleExportToCsv(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    this.exportToCsv()\n    setTimeout(() => {\n      this.updateStatus('exporting')\n    })\n  }\n\n  updateStatus(status, params = {}) {\n    if (status === 'exporting') {\n      this.isExporting = true\n    } else {\n      this.isExporting = false\n    }\n    const newState = {\n      exportStatus: status,\n      ...params,\n    }\n    this.setState(newState)\n  }\n\n  handleClose() {\n    this.setState({\n      exportJobId: undefined,\n      exportStatus: '',\n      fileName: '',\n    })\n  }\n\n  render() {\n    const { exportJobId, fileName, exportStatus } = this.state\n    const fileUrl = `/api/export/v01/exportJobs/${exportJobId}/actions/downloadExport/${fileName}`\n\n    let modalContent\n    if (exportStatus === 'failed') {\n      modalContent = (\n        <div>\n          Something went wrong{' '}\n          <Button content=\"Close\" onClick={this.handleClose} type=\"button\" />\n        </div>\n      )\n    }\n\n    if (exportStatus === 'exportDone') {\n      modalContent = (\n        <div>\n          <Button\n            onClick={event => {\n              this.props.downloadFile({ fileName, fileUrl })\n              this.handleClose(event)\n            }}\n            type=\"button\"\n          >\n            Download\n          </Button>\n          <Button content=\"Close\" onClick={this.handleClose} type=\"button\" />\n        </div>\n      )\n    }\n\n    if (exportStatus === 'exporting') {\n      modalContent = (\n        <div>\n          <Button disabled loading type=\"button\">\n            Download\n          </Button>\n\n          <Button content=\"Close\" onClick={this.handleClose} type=\"button\" />\n        </div>\n      )\n    }\n\n    let exportModal = null\n    if (modalContent) {\n      exportModal = (\n        <FormModal onClose={this.handleClose} open>\n          <Modal.Header>\n            Exporting{' '}\n            <Icon\n              name=\"close\"\n              onClick={this.handleClose}\n              size=\"small\"\n              style={{ float: 'right' }}\n            />\n          </Modal.Header>\n          <Modal.Content>{modalContent}</Modal.Content>\n        </FormModal>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        {exportModal}\n\n        {!modalContent && (\n          <Popup\n            content={\n              !exportModal && (\n                <Button\n                  content=\"Export result to CSV\"\n                  onClick={event => this.handleExportToCsv(event)}\n                  type=\"button\"\n                />\n              )\n            }\n            on=\"click\"\n            position=\"bottom right\"\n            trigger={\n              <Menu.Item link>\n                <Icon name=\"share\" style={{ cursor: 'pointer' }} />\n              </Menu.Item>\n            }\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nCsvExporter.defaultProps = defaultProps\nCsvExporter.propTypes = propTypes\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withI18n({ module: 'collectionMammals' })\n)(CsvExporter)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon, Menu } from 'semantic-ui-react'\nimport CsvExporter from './CsvExporter'\n\nconst propTypes = {\n  isItemViewOrSettings: PropTypes.bool.isRequired,\n  isTableViewOrSettings: PropTypes.bool.isRequired,\n  onExportCsv: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]).isRequired,\n  onFormTabClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onSettingClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onTableTabClick: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n  onToggleFilters: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n    .isRequired,\n}\n\nexport class ResultOptionsBar extends Component {\n  render() {\n    const {\n      isItemViewOrSettings,\n      isTableViewOrSettings,\n      onExportCsv: handleExportToCsv,\n      onFormTabClick: handleFormTabClick,\n      onSettingClick: handleSettingClick,\n      onTableTabClick: handleTableTabClick,\n      onToggleFilters: handleToggleFilters,\n    } = this.props\n\n    return (\n      <Menu attached=\"top\" icon tabular>\n        <Menu.Item\n          active={isTableViewOrSettings}\n          link\n          name=\"table\"\n          onClick={event => {\n            if (handleTableTabClick) {\n              handleTableTabClick(event)\n            }\n          }}\n        >\n          <Icon name=\"table\" />\n        </Menu.Item>\n        <Menu.Item\n          active={isItemViewOrSettings}\n          link\n          name=\"form\"\n          onClick={event => {\n            if (handleFormTabClick) {\n              handleFormTabClick(event)\n            }\n          }}\n        >\n          <Icon name=\"wordpress forms\" />\n        </Menu.Item>\n        <Menu.Menu className=\"icon secondary  ui\" position=\"right\">\n          {handleExportToCsv && <CsvExporter />}\n          {handleSettingClick && (\n            <Menu.Item link onClick={event => handleSettingClick(event)}>\n              <Icon name=\"setting\" />\n            </Menu.Item>\n          )}\n          <Menu.Item\n            link\n            onClick={event => handleToggleFilters(event)}\n            style={{ marginLeft: '3.125em' }}\n          >\n            <Icon name=\"search\" />\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n\nResultOptionsBar.propTypes = propTypes\n\nexport default ResultOptionsBar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { reduxForm, SubmissionError } from 'redux-form'\nimport { Button, Form, Grid, Header, Icon, Message } from 'semantic-ui-react'\nimport { Checkbox, Field } from 'coreModules/form/components'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { updateUserPreference } from 'coreModules/user/actionCreators'\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport { SPECIMENS_MAMMALS_TABLE_COLUMNS } from '../../../../constants'\nimport { tableColumnNames } from '../tableColumnSpecifications'\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst transformColumnNamesToFormValues = columnNames => {\n  return columnNames.reduce((obj, columnName) => {\n    return {\n      ...obj,\n      [columnName]: true,\n    }\n  }, {})\n}\nconst transformFormValuesToColumnNames = formValues => {\n  return Object.keys(formValues).reduce((columnNames, name) => {\n    if (formValues[name]) {\n      columnNames.push(name)\n    }\n    return columnNames\n  }, [])\n}\n\nconst mapStateToProps = state => {\n  const userPreferences = userSelectors.getUserPreferences(state)\n\n  return {\n    savedValue:\n      (userPreferences && userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS]) ||\n      undefined,\n  }\n}\nconst mapDispatchToProps = { updateUserPreference }\n\nconst propTypes = {\n  change: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  initialize: PropTypes.func.isRequired,\n  onTableTabClick: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  savedValue: PropTypes.arrayOf(PropTypes.string.isRequired),\n  submitting: PropTypes.bool.isRequired,\n  updateUserPreference: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  error: undefined,\n  savedValue: undefined,\n}\n\nclass ResultTableSettings extends Component {\n  constructor(props) {\n    super(props)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n    this.handleSetAll = this.handleSetAll.bind(this)\n  }\n\n  componentWillMount() {\n    if (Array.isArray(this.props.savedValue)) {\n      this.props.initialize(\n        transformColumnNamesToFormValues(this.props.savedValue)\n      )\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.savedValue !== nextProps.savedValue &&\n      Array.isArray(nextProps.savedValue)\n    ) {\n      this.props.initialize(\n        transformColumnNamesToFormValues(nextProps.savedValue)\n      )\n    }\n  }\n\n  handleCancel() {\n    this.props.onTableTabClick()\n  }\n\n  handleSetAll(value) {\n    tableColumnNames.forEach(name => {\n      this.props.change(name, value)\n    })\n  }\n\n  handleSave(formValues = {}) {\n    const columnNames = transformFormValuesToColumnNames(formValues)\n\n    return this.props\n      .updateUserPreference(SPECIMENS_MAMMALS_TABLE_COLUMNS, columnNames)\n      .then(() => {\n        return this.props.onTableTabClick()\n      })\n      .catch(error => {\n        throw new SubmissionError({\n          _error: error.error_description,\n        })\n      })\n  }\n\n  render() {\n    const { error, handleSubmit, pristine, submitting } = this.props\n    return (\n      <Form error={!!error}>\n        <Grid textAlign=\"left\" verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column width={15}>\n              <Header>Set visible table columns</Header>\n            </Grid.Column>\n            <Grid.Column textAlign=\"right\" width={1}>\n              <Icon\n                name=\"close\"\n                onClick={this.handleCancel}\n                size=\"large\"\n                style={{ cursor: 'pointer' }}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <Button onClick={() => this.handleSetAll(true)} size=\"small\">\n                Select all\n              </Button>\n              <Button onClick={() => this.handleSetAll(false)} size=\"small\">\n                Deselect all\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            {tableColumnNames.map(name => {\n              return (\n                <Grid.Column key={name} width={16}>\n                  <Field\n                    autoComplete=\"off\"\n                    component={Checkbox}\n                    enableHelpNotifications={false}\n                    inline\n                    label={\n                      <ModuleTranslate\n                        capitalize\n                        textKey={`tableColumns.${name}`}\n                      />\n                    }\n                    module=\"collectionMammals\"\n                    name={name}\n                    type=\"checkbox\"\n                  />\n                </Grid.Column>\n              )\n            })}\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <Button\n                disabled={pristine || submitting}\n                onClick={handleSubmit(this.handleSave)}\n                size=\"large\"\n              >\n                Save\n              </Button>\n              <Button basic onClick={this.handleCancel} size=\"large\">\n                Cancel\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {error && <Message error>{error}</Message>}\n      </Form>\n    )\n  }\n}\n\nResultTableSettings.propTypes = propTypes\nResultTableSettings.defaultProps = defaultProps\n\nconst ResultTableSettingsForm = reduxForm({\n  form: 'resultTableSettingsForm',\n})(ResultTableSettings)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResultTableSettingsForm)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Dimmer, Grid, Loader } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport crudSelectors from 'coreModules/crud/globalSelectors'\n\nimport tableColumnSpecifications from '../tableColumnSpecifications'\n\nconst mapStateToProps = (state, { itemId, resource }) => {\n  return {\n    item: itemId && crudSelectors[resource].getOne(state, itemId),\n  }\n}\n\nconst propTypes = {\n  background: PropTypes.string.isRequired,\n  item: PropTypes.object,\n  itemId: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n  // language: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  rowNumber: PropTypes.number.isRequired,\n  tableColumnsToShow: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  item: undefined,\n  itemId: undefined,\n}\n\nconst InfiniteTableRow = ({\n  background,\n  item,\n  itemId,\n  // language, // TODO implement translations\n  onClick,\n  rowNumber,\n  tableColumnsToShow,\n  width,\n}) => {\n  if (!item) {\n    return (\n      <Grid.Row style={{ height: emToPixels(3.5), width }}>\n        <Grid.Column style={{ width: 60 }}>\n          <Dimmer active inverted>\n            <Loader inverted size=\"mini\" />\n          </Dimmer>\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  return (\n    <Grid.Row\n      onClick={event => {\n        event.preventDefault()\n        onClick(rowNumber, itemId)\n      }}\n      style={{ background, cursor: 'pointer', height: emToPixels(3.5), width }}\n    >\n      {tableColumnSpecifications.map(({ name, width: columnWidth }) => {\n        if (tableColumnsToShow.includes(name)) {\n          let value = objectPath.get(item, `attributes.${name}`)\n\n          if (Array.isArray(value)) {\n            value = value.join('; ')\n          }\n\n          return (\n            <Grid.Column\n              key={name}\n              style={{\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                width: columnWidth,\n              }}\n            >\n              {value}\n            </Grid.Column>\n          )\n        }\n\n        return null\n      })}\n    </Grid.Row>\n  )\n}\n\nInfiniteTableRow.propTypes = propTypes\nInfiniteTableRow.defaultProps = defaultProps\n\nexport default connect(mapStateToProps)(InfiniteTableRow)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types'\nimport ReactList from 'react-list'\nimport { Dimmer, Grid, Loader } from 'semantic-ui-react'\nimport objectPath from 'object-path'\n\nimport createLog from 'utilities/log'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { globalSelectors as searchSelectors } from 'coreModules/search/keyObjectModule'\nimport i18nSelectors from 'coreModules/i18n/globalSelectors'\nimport { createBatchFetchItems } from 'coreModules/crud/higherOrderComponents'\nimport { createInjectSearchResult } from 'coreModules/search/higherOrderComponents'\nimport { NoResultsFound } from 'coreModules/search/components/'\nimport { actionCreators as keyObjectActionCreators } from '../../../../keyObjectModule'\nimport InfiniteTableRow from './InfiniteTableRow'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager:ResultTableView:InfiniteTable'\n)\n\nconst SEARCH_SPECIMEN = 'searchSpecimen'\n\nconst handleFirstSearchResult = props => {\n  const index = props.currentTableRowNumber - 1\n  const specimenId = objectPath.get(props, `searchResult.items.${index}.id`)\n\n  if (specimenId) {\n    props.setFocusedSpecimenId(specimenId)\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language:\n      i18nSelectors.getLanguage(state) ||\n      i18nSelectors.getDefaultLanguage(state),\n    searchResult: searchSelectors.get[':resource.searchState'](state, {\n      resource: SEARCH_SPECIMEN,\n    }),\n  }\n}\n\nconst mapDispatchToProps = {\n  setCurrentTableRowNumber: keyObjectActionCreators.set.currentTableRowNumber,\n  setFocusedSpecimenId: keyObjectActionCreators.set.focusedSpecimenId,\n}\n\nconst propTypes = {\n  currentTableRowNumber: PropTypes.number,\n  fetchItemById: PropTypes.func.isRequired,\n  focusedItemId: PropTypes.string,\n  language: PropTypes.string.isRequired,\n  searchResult: PropTypes.object,\n  setCurrentTableRowNumber: PropTypes.func.isRequired,\n  setFocusedSpecimenId: PropTypes.func.isRequired,\n  tableColumnsToShow: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  currentTableRowNumber: 1,\n  focusedItemId: undefined,\n  searchResult: undefined,\n}\n\nconst itemsRenderer = (items, ref) => {\n  return (\n    <div className=\"ui padded grid\" ref={ref}>\n      {items}\n    </div>\n  )\n}\n\nexport class InfiniteTable extends Component {\n  constructor(props) {\n    super(props)\n    this.list = null\n    this.setListRef = element => {\n      this.list = element\n    }\n\n    this.renderItem = this.renderItem.bind(this)\n    this.handleRowClick = this.handleRowClick.bind(this)\n  }\n\n  componentDidMount() {\n    this.scroll()\n    handleFirstSearchResult(this.props)\n  }\n\n  componentDidUpdate(prevProps) {\n    this.scroll(prevProps)\n\n    if (\n      !objectPath.get(prevProps, 'searchResult.items.length') &&\n      objectPath.get(this.props, 'searchResult.items.length')\n    ) {\n      handleFirstSearchResult(this.props)\n    }\n  }\n\n  handleRowClick(rowNumber, specimenId) {\n    this.props.setFocusedSpecimenId(specimenId)\n    this.props.setCurrentTableRowNumber(rowNumber)\n  }\n\n  scroll(prevProps = {}) {\n    const { currentTableRowNumber, focusedItemId } = this.props\n\n    const {\n      currentTableRowNumber: prevCurrentTableRowNumber,\n      focusedItemId: prevFocusedItemId,\n    } = prevProps\n\n    if (\n      this.list &&\n      (currentTableRowNumber !== prevCurrentTableRowNumber ||\n        (focusedItemId && focusedItemId !== prevFocusedItemId))\n    ) {\n      const [firstVisibleRow] = this.list.getVisibleRange()\n\n      if (firstVisibleRow === undefined) {\n        setTimeout(() => this.scroll())\n      }\n\n      // this special case is to avoid that the focused row is hidden behind the\n      // table header, which is fixed positioned and therefore seen by\n      // react-list as the first row in terms of scroll position\n      if (currentTableRowNumber <= firstVisibleRow + 1) {\n        this.list.scrollTo(currentTableRowNumber - 1)\n      } else {\n        this.list.scrollAround(currentTableRowNumber)\n      }\n    }\n  }\n\n  renderItem(index) {\n    const {\n      currentTableRowNumber,\n      fetchItemById,\n      language,\n      searchResult,\n      tableColumnsToShow,\n      width,\n    } = this.props\n\n    const itemId = searchResult.items[index].id\n    fetchItemById(itemId)\n\n    const rowNumber = index + 1\n    const isFocused = rowNumber === currentTableRowNumber\n\n    const background = isFocused // eslint-disable-line no-nested-ternary\n      ? '#b5b5b5'\n      : index % 2 === 0\n      ? '#e5e7e9'\n      : '#fff'\n\n    return (\n      <InfiniteTableRow\n        background={background}\n        itemId={itemId}\n        key={itemId}\n        language={language}\n        onClick={this.handleRowClick}\n        resource={SEARCH_SPECIMEN}\n        rowNumber={rowNumber}\n        tableColumnsToShow={tableColumnsToShow}\n        width={width}\n      />\n    )\n  }\n\n  render() {\n    log.render()\n    const { currentTableRowNumber, searchResult, width } = this.props\n\n    if (!(searchResult && searchResult.items)) {\n      return (\n        <Grid padded>\n          <Grid.Row style={{ height: emToPixels(3.5), width }}>\n            <Grid.Column style={{ paddingTop: 60, width: 150 }}>\n              <Dimmer active inverted>\n                <Loader content=\"Loading\" inverted />\n              </Dimmer>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )\n    }\n\n    if (searchResult.items.length === 0) {\n      return <NoResultsFound />\n    }\n\n    return (\n      <div style={{ width }}>\n        <ReactList\n          initialIndex={currentTableRowNumber - 1}\n          itemRenderer={this.renderItem}\n          itemsRenderer={itemsRenderer}\n          length={searchResult.items.length}\n          ref={this.setListRef}\n          type=\"uniform\"\n        />\n      </div>\n    )\n  }\n}\n\nInfiniteTable.propTypes = propTypes\nInfiniteTable.defaultProps = defaultProps\n\nexport default compose(\n  createInjectSearchResult({\n    resource: SEARCH_SPECIMEN,\n  }),\n  createBatchFetchItems({\n    includeFields: ['id', 'attributes'],\n    resource: SEARCH_SPECIMEN,\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(InfiniteTable)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Header, Icon } from 'semantic-ui-react'\n\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport createLog from 'utilities/log'\nimport { createInjectScrollLeft } from 'coreModules/size/higherOrderComponents'\nimport tableColumnSpecifications from '../tableColumnSpecifications'\n\nconst log = createLog(\n  'modules:collectionMammals:MammalManager:ResultTableView:InfiniteTableHeader'\n)\n\nconst ModuleTranslate = createModuleTranslate('collectionMammals')\n\nconst propTypes = {\n  height: PropTypes.number.isRequired,\n  onSaveTableColumnsToSort: PropTypes.func.isRequired,\n  scrollLeft: PropTypes.number,\n  tableColumnsToShow: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  tableColumnsToSort: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  topOffset: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nconst defaultProps = {\n  scrollLeft: 0,\n}\n\nclass InfiniteTableHeader extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleClickSorting = this.handleClickSorting.bind(this)\n  }\n\n  handleClickSorting(event, columnName, sortOrder) {\n    if (event) {\n      event.preventDefault()\n    }\n\n    // let columnsToSort\n    const { tableColumnsToSort } = this.props\n    if (tableColumnsToSort) {\n      const columnsToSort = [...tableColumnsToSort]\n      const index = columnsToSort.findIndex(\n        column => column.name === columnName\n      )\n\n      if (index > -1) {\n        const sort = sortOrder === 'asc' ? 'desc' : 'asc'\n        columnsToSort[index] = { name: columnName, sort }\n        return this.props.onSaveTableColumnsToSort(columnsToSort)\n      }\n\n      return this.props.onSaveTableColumnsToSort([\n        // ...tableColumnsToSort,\n        { name: columnName, sort: sortOrder },\n      ])\n    }\n    return this.props.onSaveTableColumnsToSort([\n      { name: columnName, sort: sortOrder },\n    ])\n  }\n\n  renderColumnHeader(columnWidth, name) {\n    const { tableColumnsToSort } = this.props\n\n    if (tableColumnsToSort) {\n      const sortedColumn = tableColumnsToSort.find(\n        column => column.name === name\n      )\n\n      if (sortedColumn) {\n        const sortOrder = sortedColumn.sort\n        const iconName = sortOrder === 'asc' ? 'caret down' : 'caret up'\n        return (\n          <Grid.Column key={name} style={{ width: columnWidth }}>\n            <Header\n              onClick={event => this.handleClickSorting(event, name, sortOrder)}\n              size=\"small\"\n            >\n              <Header.Content>\n                <ModuleTranslate capitalize textKey={`tableColumns.${name}`} />\n                <Icon name={iconName} />\n              </Header.Content>\n            </Header>\n          </Grid.Column>\n        )\n      }\n    }\n\n    return (\n      <Grid.Column key={name} style={{ width: columnWidth }}>\n        <Header\n          onClick={event => this.handleClickSorting(event, name, 'asc')}\n          size=\"small\"\n        >\n          <Header.Content>\n            <ModuleTranslate capitalize textKey={`tableColumns.${name}`} />\n          </Header.Content>\n        </Header>\n      </Grid.Column>\n    )\n  }\n\n  render() {\n    log.render()\n    const {\n      height,\n      topOffset,\n      scrollLeft,\n      tableColumnsToShow,\n      width,\n    } = this.props\n    return (\n      <React.Fragment>\n        <Grid\n          padded\n          style={{\n            height,\n            left: -scrollLeft,\n            position: 'absolute',\n            top: topOffset,\n            width,\n          }}\n          textAlign=\"left\"\n          verticalAlign=\"middle\"\n        >\n          {tableColumnSpecifications.map(({ name, width: columnWidth }) => {\n            if (tableColumnsToShow.includes(name)) {\n              return this.renderColumnHeader(columnWidth, name)\n            }\n            return null\n          })}\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nInfiniteTableHeader.propTypes = propTypes\nInfiniteTableHeader.defaultProps = defaultProps\n\nexport default createInjectScrollLeft('resultTableScrollContainer')(\n  InfiniteTableHeader\n)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport { updateUserPreference } from 'coreModules/user/actionCreators'\nimport {\n  SPECIMENS_MAMMALS_TABLE_COLUMNS,\n  SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING,\n} from '../../../../constants'\nimport { getTableWidth, tableColumnNames } from '../tableColumnSpecifications'\nimport InfiniteTable from './InfiniteTable'\nimport InfiniteTableHeader from './InfiniteTableHeader'\n\nconst mapStateToProps = state => {\n  const userPreferences = userSelectors.getUserPreferences(state)\n\n  return {\n    tableColumnsToShow:\n      (userPreferences && userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS]) ||\n      undefined,\n    tableColumnsToSort:\n      (userPreferences &&\n        userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING]) ||\n      undefined,\n  }\n}\n\nconst mapDispatchToProps = { updateUserPreference }\n\nconst infiniteTable = {\n  id: 'resultTableScrollContainer',\n  key: 'infiniteTable',\n  renderRow: props => <InfiniteTable {...props} />,\n  style: { overflow: 'auto' },\n}\n\nconst infiniteTableHeader = {\n  height: emToPixels(3.5),\n  key: 'infiniteTableHeader',\n  renderRow: props => (\n    <InfiniteTableHeader\n      {...props}\n      height={emToPixels(3.5)}\n      topOffset={emToPixels(11.1875)}\n    />\n  ),\n  style: { borderBottom: '1px solid #b5b5b5' },\n}\n\nconst rows = [infiniteTableHeader, infiniteTable]\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  onFormTabClick: PropTypes.func.isRequired,\n  onSearchSpecimens: PropTypes.func.isRequired,\n  onToggleFilters: PropTypes.func.isRequired,\n  tableColumnsToShow: PropTypes.arrayOf(PropTypes.string.isRequired),\n  tableColumnsToSort: PropTypes.arrayOf(PropTypes.object.isRequired),\n  updateUserPreference: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  tableColumnsToShow: tableColumnNames,\n  tableColumnsToSort: [],\n}\n\nclass ResultTableView extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.handleSaveTableColumnsToSort = this.handleSaveTableColumnsToSort.bind(\n      this\n    )\n\n    this.shortcuts = [\n      {\n        command: 'space',\n        description: 'Open focused record',\n        onPress: props.onFormTabClick,\n      },\n      {\n        command: 'f',\n        description: 'Show/hide filters',\n        onPress: props.onToggleFilters,\n      },\n    ]\n  }\n\n  handleSaveTableColumnsToSort(columnsToSort) {\n    return this.props.updateUserPreference(\n      SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING,\n      columnsToSort\n    )\n  }\n\n  render() {\n    const {\n      availableHeight,\n      tableColumnsToShow,\n      tableColumnsToSort,\n      ...rest\n    } = this.props\n\n    return (\n      <React.Fragment>\n        <KeyboardShortcuts shortcuts={this.shortcuts} />\n        <RowLayout\n          {...rest}\n          availableHeight={availableHeight}\n          onSaveTableColumnsToSort={this.handleSaveTableColumnsToSort}\n          rows={rows}\n          tableColumnsToShow={tableColumnsToShow}\n          tableColumnsToSort={tableColumnsToSort}\n          width={getTableWidth(tableColumnsToShow)}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nResultTableView.propTypes = propTypes\nResultTableView.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectWindowHeight\n)(ResultTableView)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect'\n\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport { RecordNavigationBar } from 'coreModules/resourceManager/components'\n\nimport CreateSpecimen from './CreateSpecimen'\nimport EditSpecimen from './EditSpecimen'\nimport ResultOptionsBar from './ResultOptionsBar'\nimport ResultTableSettings from './ResultTableSettings'\nimport ResultTableView from './ResultTableView'\n\nconst recordNavigationHeight = emToPixels(4.25)\nconst recordNavigation = {\n  height: `${recordNavigationHeight}px`,\n  key: 'recordNavigation',\n  renderRow: props => {\n    const isCreateItemActive = props.mainColumnActiveTab === 'recordNew' // eslint-disable-line react/prop-types\n\n    return (\n      <RecordNavigationBar\n        {...props}\n        createItemActive={isCreateItemActive}\n        disabled={isCreateItemActive}\n      />\n    )\n  },\n}\n\nconst recordOptionsHeight = emToPixels(3.625)\nconst recordOptions = {\n  height: `${recordOptionsHeight}px`,\n  key: 'recordOptions',\n  renderRow: props => <ResultOptionsBar {...props} />,\n  style: {\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n  },\n}\n\n/* eslint-disable react/prop-types */\nconst recordNew = {\n  key: 'recordNew',\n  renderRow: ({ availableHeight, ...rest }) => {\n    return (\n      <CreateSpecimen\n        {...rest}\n        availableHeight={\n          availableHeight - recordNavigationHeight - recordOptionsHeight\n        }\n      />\n    )\n  },\n  style: { overflow: 'auto' },\n}\nconst recordEdit = {\n  key: 'recordEdit',\n  renderRow: ({ availableHeight, ...rest }) => {\n    return (\n      <EditSpecimen\n        {...rest}\n        availableHeight={\n          availableHeight - recordNavigationHeight - recordOptionsHeight\n        }\n      />\n    )\n  },\n  style: { overflow: 'auto' },\n}\nconst resultTable = {\n  key: 'resultTable',\n  renderRow: ({ availableHeight, currentTableRowNumber, ...rest }) => {\n    return (\n      <div className=\"ui fluid dina background\" style={{ marginTop: '-1px' }}>\n        <ResultTableView\n          {...rest}\n          availableHeight={\n            availableHeight - recordNavigationHeight - recordOptionsHeight\n          }\n          currentTableRowNumber={currentTableRowNumber}\n        />\n      </div>\n    )\n  },\n}\nconst resultTableSettings = {\n  key: 'resultTableSettings',\n  renderRow: ({ onTableTabClick, ...rest }) => {\n    return (\n      <div className=\"ui fluid dina background\" style={{ padding: '20px' }}>\n        <ResultTableSettings {...rest} onTableTabClick={onTableTabClick} />\n      </div>\n    )\n  },\n  style: { overflow: 'auto' },\n}\n/* eslint-enable react/prop-types */\n\nconst getRows = createSelector(\n  mainColumnActiveTab => mainColumnActiveTab,\n  mainColumnActiveTab => {\n    const rows = [recordNavigation, recordOptions]\n\n    switch (mainColumnActiveTab) {\n      case 'recordEdit': {\n        rows.push(recordEdit)\n        break\n      }\n      case 'recordNew': {\n        rows.push(recordNew)\n        break\n      }\n      case 'resultTableSettings': {\n        rows.push(resultTableSettings)\n        break\n      }\n      case 'resultTable': {\n        rows.push(resultTable)\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    return rows\n  }\n)\n\nconst propTypes = {\n  mainColumnActiveTab: PropTypes.string.isRequired,\n  windowHeight: PropTypes.number.isRequired,\n}\n\nclass MainColumn extends PureComponent {\n  render() {\n    const { mainColumnActiveTab, windowHeight, ...rest } = this.props\n\n    return (\n      <RowLayout\n        {...rest}\n        availableHeight={windowHeight - emToPixels(3.4375)}\n        mainColumnActiveTab={mainColumnActiveTab}\n        rows={getRows(mainColumnActiveTab)}\n      />\n    )\n  }\n}\n\nMainColumn.propTypes = propTypes\n\nexport default compose(\n  withRouter,\n  injectWindowHeight\n)(MainColumn)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { isInvalid, isPristine } from 'redux-form'\nimport { Button, Grid } from 'semantic-ui-react'\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\n\nconst mapStateToProps = (state, { form }) => {\n  return {\n    invalid: isInvalid(form)(state),\n    pristine: isPristine(form)(state),\n  }\n}\n\nconst propTypes = {\n  invalid: PropTypes.bool.isRequired,\n  onResetFilters: PropTypes.func.isRequired,\n  onSearchSpecimens: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n}\nconst defaultProps = {}\n\nclass BottomBar extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleSearch = this.handleSearch.bind(this)\n    this.state = { loading: false }\n\n    this.shortcuts = [\n      {\n        command: 'enter',\n        description: 'Execute search',\n        onPress: this.handleSearch,\n      },\n    ]\n  }\n\n  handleSearch(event) {\n    event.preventDefault()\n    this.setState({ loading: true })\n    return this.props.onSearchSpecimens().then(() => {\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    const { invalid, onResetFilters: handleReset, pristine } = this.props\n\n    return (\n      <React.Fragment>\n        <KeyboardShortcuts shortcuts={this.shortcuts} />\n        <Grid padded>\n          <Grid.Column>\n            <Button\n              disabled={invalid}\n              loading={this.state.loading}\n              onClick={this.handleSearch}\n              size=\"large\"\n              style={{ float: 'left' }}\n            >\n              Search\n            </Button>\n            <Button\n              basic\n              disabled={pristine}\n              onClick={handleReset}\n              size=\"large\"\n              style={{ float: 'right' }}\n            >\n              Clear all filters\n            </Button>\n          </Grid.Column>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nBottomBar.propTypes = propTypes\nBottomBar.defaultProps = defaultProps\n\nexport default compose(connect(mapStateToProps))(BottomBar)\n","import { createSelector } from 'reselect'\n\n/*\n  Functions to extract filter information from form field name\n*/\nexport const hasFilterParams = key => {\n  const filterParams = key.split('|')\n  return filterParams.length > 1\n}\n\nexport const extractFilterParams = key => {\n  const filterParams = key.split('|')[1]\n  const parts = filterParams.split('-')\n  return {\n    filterFunction: parts[1],\n    filterType: parts[0],\n  }\n}\n\nexport const getFilterFunction = key => {\n  return extractFilterParams(key).filterFunction\n}\n\nexport const getFilterType = key => {\n  return extractFilterParams(key).filterType\n}\n\nexport const getTrimmedExcludeKey = excludeKey => {\n  const indexOfFirstDot = excludeKey.indexOf('.')\n  if (indexOfFirstDot === -1) {\n    return excludeKey\n  }\n\n  return excludeKey.slice(indexOfFirstDot + 1)\n}\n\n/*\n  Functions to build the query for filters based on one form field\n*/\nconst getFilterKeyValueMap = filterFormPartials =>\n  filterFormPartials.reduce((map, filterFormPartial) => {\n    return {\n      ...map,\n      ...Object.keys(filterFormPartial).reduce((obj, key) => {\n        return {\n          ...obj,\n          [key]: filterFormPartial[key],\n        }\n      }, {}),\n    }\n  }, {})\n\n/*\n  Filter building functions\n*/\nconst getMultipleChoiceFilter = (key, filterValue) => {\n  return {\n    or: filterValue.map(item => {\n      return {\n        filter: {\n          filterFunction: getFilterFunction(key),\n          input: {\n            value: item,\n          },\n        },\n      }\n    }),\n  }\n}\n\nconst getAndFiltersFromFilterKeyValueMap = (\n  filterKeyValueMap,\n  excludeKey = ''\n) =>\n  Object.keys(filterKeyValueMap)\n    .map(key => {\n      const filterValue = filterKeyValueMap[key]\n\n      if (!filterValue || key === getTrimmedExcludeKey(excludeKey)) {\n        return null\n      }\n      if (hasFilterParams(key)) {\n        switch (getFilterType(key)) {\n          case 'multipleChoice': {\n            return getMultipleChoiceFilter(key, filterValue)\n          }\n          case 'searchTags': {\n            return {\n              or: Object.values(filterValue)\n                .reduce((acc, arr) => {\n                  return acc.concat(arr)\n                }, [])\n                .map(item => {\n                  if (!item.selected) {\n                    return null\n                  }\n\n                  return {\n                    filter: {\n                      filterFunction: `match${getFilterFunction(key)}`,\n                      input: {\n                        value: item.id,\n                      },\n                    },\n                  }\n                })\n                .filter(filter => !!filter),\n            }\n          }\n          case 'singleMatch': {\n            return {\n              filter: {\n                filterFunction: getFilterFunction(key),\n                input: {\n                  value: filterValue,\n                },\n              },\n            }\n          }\n          default:\n            return null\n        }\n      }\n\n      return {\n        filter: {\n          filterFunction: key,\n          input: {\n            value: filterValue,\n          },\n        },\n      }\n    })\n    .filter(item => {\n      return !!item\n    })\n\n/*\n  Functions to build the query for filters based on a form partial, i.e. a collection of fields\n*/\nconst OBJECT_FILTER_FORM_PARTIAL_KEYS = [\n  'ageAndStage',\n  'date',\n  'length',\n  'weight',\n]\n\nconst buildRangeDateFilter = (dateType, { startDate, endDate }) => {\n  if (\n    dateType === undefined &&\n    startDate === undefined &&\n    endDate === undefined\n  ) {\n    return null\n  }\n\n  return {\n    filter: {\n      filterFunction: 'searchDates',\n      input: {\n        value: {\n          dateType,\n          end: endDate && endDate.interpretedTimestamp,\n          start: startDate && startDate.interpretedTimestamp,\n        },\n      },\n    },\n  }\n}\n\nconst createBuildRangeFilter = ({ filterFunction, typeKey }) => (\n  type,\n  { min, max }\n) => {\n  if (type === undefined && min === undefined && max === undefined) {\n    return null\n  }\n\n  if (!typeKey) {\n    return {\n      filter: {\n        filterFunction,\n        input: {\n          value: {\n            max,\n            min,\n          },\n        },\n      },\n    }\n  }\n\n  return {\n    filter: {\n      filterFunction,\n      input: {\n        value: {\n          max,\n          min,\n          [typeKey]: type,\n        },\n      },\n    },\n  }\n}\n\nconst getAndFiltersFromObjectFilters = objectFiltersMap => {\n  return Object.keys(objectFiltersMap)\n    .map(partialKey => {\n      const values = objectFiltersMap[partialKey]\n      const { endDate, max, min, startDate } = values\n\n      switch (partialKey) {\n        case 'ageAndStage': {\n          const ageStageFieldName = 'ageStage|multipleChoice-matchAgeStageTags'\n          const ageStageTags = values[ageStageFieldName]\n          const buildRangeLengthFilter = createBuildRangeFilter({\n            filterFunction: 'rangeAge',\n          })\n\n          if (ageStageTags && ageStageTags.length) {\n            if (max === undefined && min === undefined) {\n              return getMultipleChoiceFilter(ageStageFieldName, ageStageTags)\n            }\n\n            return {\n              and: [\n                getMultipleChoiceFilter(ageStageFieldName, ageStageTags),\n                {\n                  or: ageStageTags.map(ageStage => {\n                    return buildRangeLengthFilter(ageStage, values)\n                  }),\n                },\n              ],\n            }\n          }\n\n          if (max === undefined && min === undefined) {\n            return null\n          }\n\n          return buildRangeLengthFilter(undefined, values)\n        }\n\n        case 'date': {\n          const dateTypeFieldName = 'dateType|multipleChoice-matchDateTags'\n          const dateTypeTags = values[dateTypeFieldName]\n          if (dateTypeTags && dateTypeTags.length) {\n            if (startDate === undefined && endDate === undefined) {\n              return getMultipleChoiceFilter(dateTypeFieldName, dateTypeTags)\n            }\n\n            return {\n              and: [\n                getMultipleChoiceFilter(dateTypeFieldName, dateTypeTags),\n                {\n                  or: dateTypeTags.map(dateType => {\n                    return buildRangeDateFilter(dateType, values)\n                  }),\n                },\n              ],\n            }\n          }\n\n          if (startDate === undefined && endDate === undefined) {\n            return null\n          }\n\n          return buildRangeDateFilter(undefined, values)\n        }\n\n        case 'length': {\n          const lengthTypeFieldName =\n            'lengthType|multipleChoice-matchLengthTags'\n          const lengthTypeTags = values[lengthTypeFieldName]\n          const buildRangeLengthFilter = createBuildRangeFilter({\n            filterFunction: 'rangeLength',\n            typeKey: 'lengthType',\n          })\n\n          if (lengthTypeTags && lengthTypeTags.length) {\n            if (max === undefined && min === undefined) {\n              return getMultipleChoiceFilter(\n                lengthTypeFieldName,\n                lengthTypeTags\n              )\n            }\n\n            return {\n              and: [\n                getMultipleChoiceFilter(lengthTypeFieldName, lengthTypeTags),\n                {\n                  or: lengthTypeTags.map(lengthType => {\n                    return buildRangeLengthFilter(lengthType, values)\n                  }),\n                },\n              ],\n            }\n          }\n\n          if (max === undefined && min === undefined) {\n            return null\n          }\n\n          return buildRangeLengthFilter(undefined, values)\n        }\n\n        case 'weight': {\n          const weightTypeFieldName =\n            'weightType|multipleChoice-matchWeightTags'\n          const weightTypeTags = values[weightTypeFieldName]\n          const buildRangeWeightFilter = createBuildRangeFilter({\n            filterFunction: 'rangeWeight',\n            typeKey: 'weightType',\n          })\n\n          if (weightTypeTags && weightTypeTags.length) {\n            if (max === undefined && min === undefined) {\n              return getMultipleChoiceFilter(\n                weightTypeFieldName,\n                weightTypeTags\n              )\n            }\n\n            return {\n              and: [\n                getMultipleChoiceFilter(weightTypeFieldName, weightTypeTags),\n                {\n                  or: weightTypeTags.map(weightType => {\n                    return buildRangeWeightFilter(weightType, values)\n                  }),\n                },\n              ],\n            }\n          }\n\n          if (max === undefined && min === undefined) {\n            return null\n          }\n\n          return buildRangeWeightFilter(undefined, values)\n        }\n\n        default: {\n          return null\n        }\n      }\n    })\n    .filter(item => !!item)\n}\n\nconst buildQuery = createSelector(\n  filterFormValues => filterFormValues,\n  (_, excludeKey) => excludeKey,\n  (filterFormValues = {}, excludeKey = '') => {\n    const keyValueFilters = []\n    const objectFiltersMap = {}\n\n    Object.keys(filterFormValues).forEach(formPartialKey => {\n      if (OBJECT_FILTER_FORM_PARTIAL_KEYS.includes(formPartialKey)) {\n        objectFiltersMap[formPartialKey] = filterFormValues[formPartialKey]\n      } else {\n        keyValueFilters.push(filterFormValues[formPartialKey])\n      }\n    })\n\n    const filterKeyValueMap = getFilterKeyValueMap(keyValueFilters)\n    const andFiltersFromKeyValues = getAndFiltersFromFilterKeyValueMap(\n      filterKeyValueMap,\n      excludeKey\n    )\n\n    const andFiltersFromObjectFilters = getAndFiltersFromObjectFilters(\n      objectFiltersMap\n    )\n\n    return {\n      and: [...andFiltersFromKeyValues, ...andFiltersFromObjectFilters],\n    }\n  }\n)\nexport default buildQuery\n","import React, { PureComponent } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\n\nimport { Field, FieldLabel, Input } from 'coreModules/form/components'\nimport { MultipleChoiceCheckboxesField } from 'coreModules/search/components'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nclass AgeStageFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Form.Field\n            style={{\n              position: 'relative',\n              width: '100%',\n            }}\n          >\n            <FieldLabel label=\"Age in years\" />\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Column width={7}>\n                <Field\n                  autoComplete=\"off\"\n                  component={Input}\n                  enableHelpNotifications={false}\n                  fluid\n                  label=\"from\"\n                  module=\"collectionMammals\"\n                  name=\"ageAndStage.age.min\"\n                  subLabel\n                  type=\"number\"\n                />\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Field\n                  autoComplete=\"off\"\n                  component={Input}\n                  enableHelpNotifications={false}\n                  fluid\n                  label=\"to\"\n                  module=\"collectionMammals\"\n                  name=\"ageAndStage.age.max\"\n                  subLabel\n                  type=\"number\"\n                />\n              </Grid.Column>\n            </Grid>\n          </Form.Field>\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Developmental stage\"\n            name=\"ageAndStage.stages\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default AgeStageFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport { Field } from 'coreModules/form/components'\n\nimport { MultipleSearchTagsSelectField } from 'coreModules/search/components'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleSearchTagsSelectField = higherOrderComponents.createFieldHoc()(\n  MultipleSearchTagsSelectField\n)\n\nclass AgentFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            label=\"Name\"\n            name=\"agent.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue=\"collector\"\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any agent type\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default AgentFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport { MultipleChoiceCheckboxesField } from 'coreModules/search/components'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nclass BonesFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"\"\n            name=\"bones.bones\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default BonesFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport { MultipleChoiceCheckboxesField } from 'coreModules/search/components'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nclass CollectingConditionFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"\"\n            name=\"collectingCondition.collectingConditions\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default CollectingConditionFilterForm\n","import React, { PureComponent } from 'react'\n\nimport { Grid } from 'semantic-ui-react'\nimport { RangeDate, Field } from 'coreModules/form/components'\n\nclass DatePeriodFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            component={RangeDate}\n            displayDateTypeRadios={false}\n            displayEndDateLabel\n            displayStartDateLabel\n            displaySubLabels\n            enableHelpNotifications={false}\n            endDateLabel=\"Latest date\"\n            initialDateType=\"range\"\n            module=\"collectionMammals\"\n            name=\"datePeriod.date\"\n            stack\n            startDateLabel=\"Earliest date\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default DatePeriodFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport { MultipleSearchTagsSelectField } from 'coreModules/search/components'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleSearchTagsSelectField = higherOrderComponents.createFieldHoc()(\n  MultipleSearchTagsSelectField\n)\n\nclass IdentifierFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            label=\"Identifier value\"\n            module=\"collectionMammals\"\n            name=\"identifier.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue=\"catalog-no\"\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any identifier type\"\n            translationScope=\"enums.identifiers\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default IdentifierFilterForm\n","import React, { PureComponent } from 'react'\n\nimport { FeatureTypeRange } from 'coreModules/search/components'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedFeatureTypeRange = higherOrderComponents.createFieldHoc()(\n  FeatureTypeRange\n)\n\nconst unitOptions = [\n  {\n    key: 'unspecified',\n    text: 'not set',\n    value: 'unspecified',\n  },\n  {\n    key: 'm',\n    text: 'm',\n    value: 'm',\n  },\n  {\n    key: 'cm',\n    text: 'cm',\n    value: 'cm',\n  },\n  {\n    key: 'mm',\n    text: 'mm',\n    value: 'mm',\n  },\n]\n\nclass WeightFilterForm extends PureComponent {\n  render() {\n    return (\n      <WrappedFeatureTypeRange\n        capitalize\n        disableClearUnitValue\n        module=\"collectionMammals\"\n        name=\"length\"\n        resource=\"searchSpecimen\"\n        tagTypeDropdownPlaceholder=\"Choose length type\"\n        translationScope=\"enums.length\"\n        unitOptions={unitOptions}\n      />\n    )\n  }\n}\n\nexport default WeightFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport { Field } from 'coreModules/form/components'\nimport {\n  MultipleChoiceCheckboxesField,\n  MultipleSearchTagsSelectField,\n} from 'coreModules/search/components'\n\nimport { ANY } from 'coreModules/search/constants'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nconst WrappedMultipleSearchTagsSelectField = higherOrderComponents.createFieldHoc()(\n  MultipleSearchTagsSelectField\n)\n\nclass LocalityFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            addTagTypeToText={false}\n            autoComplete=\"off\"\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            fluid\n            label=\"Higher geography (collecting)\"\n            name=\"locality.higherGeography.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue={ANY}\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any geographic level\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            fluid\n            label=\"Locality (collecting or origin)\"\n            module=\"collectionMammals\"\n            name=\"locality.localities.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue=\"collecting-interpreted\"\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any locality type\"\n            translationScope=\"enums.locality\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Appearance\"\n            name=\"collectingInformation.establishmentMeansType\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Selective breeding\"\n            name=\"originInformation.isResultOfSelectiveBreeding\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\nexport default LocalityFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport { MultipleChoiceCheckboxesField } from 'coreModules/search/components'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nclass BonesFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Skeleton\"\n            name=\"physicalObject.skeleton\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Skin\"\n            name=\"physicalObject.skin\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Wet preparation\"\n            name=\"physicalObject.wetPreparation\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"Other preparation\"\n            name=\"physicalObject.otherPreparation\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default BonesFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport {\n  SearchPreviewField,\n  TagTypeDropdownField,\n} from 'coreModules/search/components'\nimport { ANY } from 'coreModules/search/constants'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedTagTypeDropdownField = higherOrderComponents.createFieldHoc()(\n  TagTypeDropdownField\n)\n\nconst WrappedSearchPreviewField = higherOrderComponents.createFieldHoc()(\n  SearchPreviewField\n)\n\nclass Remarks extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Row>\n          <Grid.Column\n            style={{\n              // to be above grid margin inside WrappedSearchPreviewField\n              zIndex: 10,\n            }}\n            width={16}\n          >\n            <Field\n              autoComplete=\"off\"\n              capitalize\n              component={WrappedTagTypeDropdownField}\n              enableHelpNotifications={false}\n              inline\n              module=\"collectionMammals\"\n              name=\"remarks.srcField\"\n              resource=\"searchSpecimen\"\n              tagTypeInitialOptionValue={ANY}\n              tagTypeMatchAllOptionText=\"Any remarks type\"\n              translationScope=\"enums.remarks\"\n            />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Field\n              autoComplete=\"off\"\n              component={WrappedSearchPreviewField}\n              enableHelpNotifications={false}\n              name=\"remarks.search\"\n              resource=\"searchSpecimen\"\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nexport default Remarks\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Field } from 'coreModules/form/components'\nimport { MultipleChoiceCheckboxesField } from 'coreModules/search/components'\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleChoiceCheckboxesField = higherOrderComponents.createFieldHoc()(\n  MultipleChoiceCheckboxesField\n)\n\nclass SexFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            component={WrappedMultipleChoiceCheckboxesField}\n            displayCount\n            enableHelpNotifications={false}\n            label=\"\"\n            name=\"sex.sex\"\n            resource=\"searchSpecimen\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default SexFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport { Field } from 'coreModules/form/components'\nimport {\n  MultipleSearchTagsSelectField,\n  TagTypeDropdownField,\n} from 'coreModules/search/components'\n\nimport { ANY } from 'coreModules/search/constants'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleSearchTagsSelectField = higherOrderComponents.createFieldHoc()(\n  MultipleSearchTagsSelectField\n)\n\nconst WrappedTagTypeDropdownField = higherOrderComponents.createFieldHoc()(\n  TagTypeDropdownField\n)\n\nclass StorageFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            addTagTypeToText={false}\n            autoComplete=\"off\"\n            capitalize\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            label=\"Normal storage location\"\n            module=\"collectionMammals\"\n            name=\"storage.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue={ANY}\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any storage level\"\n            translationScope=\"enums.storageLocations\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            capitalize\n            component={WrappedTagTypeDropdownField}\n            enableHelpNotifications={false}\n            label=\"Limit to specimens with storage level\"\n            module=\"collectionMammals\"\n            name=\"storage.tagType\"\n            resource=\"searchSpecimen\"\n            tagTypeInitialOptionValue={ANY}\n            tagTypeMatchAllOptionText=\"Any storage level\"\n            translationScope=\"enums.storageLocations\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default StorageFilterForm\n","import React, { PureComponent } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport { Field } from 'coreModules/form/components'\nimport {\n  MultipleSearchTagsSelectField,\n  TagTypeDropdownField,\n} from 'coreModules/search/components'\n\nimport { ANY } from 'coreModules/search/constants'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedMultipleSearchTagsSelectField = higherOrderComponents.createFieldHoc()(\n  MultipleSearchTagsSelectField\n)\n\nconst WrappedTagTypeDropdownField = higherOrderComponents.createFieldHoc()(\n  TagTypeDropdownField\n)\n\nclass TaxonomyFilterForm extends PureComponent {\n  render() {\n    return (\n      <Grid textAlign=\"left\" verticalAlign=\"top\">\n        <Grid.Column width={16}>\n          <Field\n            addTagTypeToText\n            autoComplete=\"off\"\n            component={WrappedMultipleSearchTagsSelectField}\n            enableHelpNotifications={false}\n            label=\"Taxon\"\n            name=\"taxonomy.tagValues\"\n            resource=\"searchSpecimen\"\n            tagTypeFilterEnabled\n            tagTypeInitialOptionValue={ANY}\n            tagTypeInlineDescription=\"Suggesting from\"\n            tagTypeMatchAllOptionText=\"any rank\"\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Field\n            autoComplete=\"off\"\n            component={WrappedTagTypeDropdownField}\n            enableHelpNotifications={false}\n            label=\"Limit to specimens of rank\"\n            name=\"taxonomy.tagType\"\n            resource=\"searchSpecimen\"\n            tagTypeInitialOptionValue={ANY}\n            tagTypeMatchAllOptionText=\"Any rank\"\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default TaxonomyFilterForm\n","import React, { PureComponent } from 'react'\n\nimport { FeatureTypeRange } from 'coreModules/search/components'\n\nimport { higherOrderComponents } from '../../../queryBuilder'\n\nconst WrappedFeatureTypeRange = higherOrderComponents.createFieldHoc()(\n  FeatureTypeRange\n)\n\nconst unitOptions = [\n  {\n    key: 'unspecified',\n    text: 'not set',\n    value: 'unspecified',\n  },\n  {\n    key: 'kg',\n    text: 'kg',\n    value: 'kg',\n  },\n  {\n    key: 'g',\n    text: 'g',\n    value: 'g',\n  },\n]\n\nclass WeightFilterForm extends PureComponent {\n  render() {\n    return (\n      <WrappedFeatureTypeRange\n        capitalize\n        disableClearUnitValue\n        module=\"collectionMammals\"\n        name=\"weight\"\n        resource=\"searchSpecimen\"\n        tagTypeDropdownPlaceholder=\"Choose weight type\"\n        translationScope=\"enums.weight\"\n        unitOptions={unitOptions}\n      />\n    )\n  }\n}\n\nexport default WeightFilterForm\n","import AgeAndStage from './AgeAndStage'\nimport Agent from './Agent'\nimport Bones from './Bones'\nimport CollectingCondition from './CollectingCondition'\nimport DatePeriod from './DatePeriod'\nimport Identifier from './Identifier'\nimport Length from './Length'\nimport Locality from './Locality'\nimport PhysicalObject from './PhysicalObject'\nimport Remarks from './Remarks'\nimport Sex from './Sex'\nimport Storage from './Storage'\nimport Taxonomy from './Taxonomy'\nimport Weight from './Weight'\n\nexport const components = {\n  AgeAndStage,\n  Agent,\n  Bones,\n  CollectingCondition,\n  DatePeriod,\n  Identifier,\n  Length,\n  Locality,\n  PhysicalObject,\n  Remarks,\n  Sex,\n  Storage,\n  Taxonomy,\n  Weight,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\nimport { components as FilterFormSections } from './FilterFormSections'\n\nconst propTypes = {\n  name: PropTypes.string.isRequired,\n}\n\nconst FilterContent = props => {\n  const { name } = props\n  const Component = FilterFormSections[capitalizeFirstLetter(name)]\n\n  if (!Component) {\n    throw new Error(`No filter component found for name: ${name}`)\n  }\n\n  return <Component {...props} />\n}\n\nFilterContent.propTypes = propTypes\n\nexport default FilterContent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Icon } from 'semantic-ui-react'\nimport { isEqual } from 'lodash'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport capitalizeFirstLetter from 'common/es5/stringFormatters/capitalizeFirstLetter'\n\nconst mapStateToProps = (\n  state,\n  {\n    doDeepEqualInitialValuesComparison,\n    formValueSelector,\n    getFormInitialValues,\n    name,\n  }\n) => {\n  const initialFormValues = getFormInitialValues(state)\n  const initialSectionValues = initialFormValues && initialFormValues[name]\n  const sectionValues = formValueSelector(state, name)\n\n  return {\n    hasChanged: doDeepEqualInitialValuesComparison\n      ? !isEqual(initialSectionValues, sectionValues)\n      : initialSectionValues !== sectionValues,\n    hasValues: !!Object.keys(sectionValues || {}).length,\n  }\n}\n\nconst propTypes = {\n  hasChanged: PropTypes.bool.isRequired,\n  hasValues: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n}\n\nconst FilterTitle = ({ hasChanged, hasValues, name }) => {\n  return (\n    <Grid>\n      <Grid.Column width={14}>\n        {hasValues && hasChanged && <Icon name=\"check circle\" />}\n        <ModuleTranslate\n          fallback={capitalizeFirstLetter(name)}\n          module=\"collectionMammals\"\n          textKey={`filterTitles.${name}`}\n        />\n      </Grid.Column>\n      <Grid.Column width={2}>\n        <Icon name=\"dropdown\" />\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nFilterTitle.propTypes = propTypes\n\nexport default connect(mapStateToProps)(FilterTitle)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { getFormValues, reduxForm } from 'redux-form'\n\nimport { Accordion } from 'coreModules/commonUi/components'\nimport { MULTI } from 'coreModules/commonUi/constants'\nimport { ANY } from 'coreModules/search/constants'\nimport buildQuery from '../../../../utilities/buildQuery'\nimport FilterContent from './FilterContent'\nimport FilterTitle from './FilterTitle'\n\nconst items = [\n  { name: 'identifier' },\n  { doDeepEqualInitialValuesComparison: true, name: 'taxonomy' },\n  { name: 'locality' },\n  { name: 'datePeriod' },\n  { name: 'agent' },\n  { name: 'physicalObject' },\n  { doDeepEqualInitialValuesComparison: true, name: 'storage' },\n  { name: 'ageAndStage' },\n  { name: 'sex' },\n  { name: 'collectingCondition' },\n  { doDeepEqualInitialValuesComparison: true, name: 'weight' },\n  { doDeepEqualInitialValuesComparison: true, name: 'length' },\n  { name: 'bones' },\n  { doDeepEqualInitialValuesComparison: true, name: 'remarks' },\n]\n\nconst mapStateToProps = (state, { form }) => {\n  const formValues = getFormValues(form)(state)\n  return {\n    formValues,\n  }\n}\nconst propTypes = {\n  formValues: PropTypes.object,\n}\nconst defaultProps = {\n  formValues: undefined,\n}\n\nexport class RawFilters extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.getDrilldownQuery = this.getDrilldownQuery.bind(this)\n    this.renderContent = this.renderContent.bind(this)\n    this.renderTitle = this.renderTitle.bind(this)\n  }\n\n  getDrilldownQuery(excludeKey) {\n    return buildQuery(this.props.formValues, excludeKey)\n  }\n\n  renderContent(props) {\n    return (\n      <FilterContent\n        {...this.props}\n        {...props}\n        getDrilldownQuery={this.getDrilldownQuery}\n      />\n    )\n  }\n\n  renderTitle(props) {\n    return <FilterTitle {...this.props} {...props} />\n  }\n\n  render() {\n    return (\n      <Accordion\n        className=\"ui form\"\n        delayItemRenderUntilActive\n        items={items}\n        renderContent={this.renderContent}\n        renderTitle={this.renderTitle}\n        selectMode={MULTI}\n      />\n    )\n  }\n}\n\nRawFilters.propTypes = propTypes\nRawFilters.defaultProps = defaultProps\n\nconst EnhancedFilters = compose(connect(mapStateToProps))(RawFilters)\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  enableReinitialize: true,\n  initialValues: {\n    length: { rangeType: 'total-length', rangeUnit: 'unspecified' },\n    remarks: { srcField: ANY },\n    storage: { tagType: ANY },\n    taxonomy: { tagType: ANY },\n    weight: { rangeType: 'complete-body-weight', rangeUnit: 'unspecified' },\n  },\n  keepDirtyOnReinitialize: true,\n  updateUnregisteredFields: true,\n})(EnhancedFilters)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport {\n  formValueSelector as formValueSelectorFactory,\n  getFormInitialValues as getFormInitialValuesFactory,\n} from 'redux-form'\n\nimport { ColumnRowHeader } from 'coreModules/commonUi/components'\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport { SPECIMEN_FILTERS_FORM_NAME } from '../../../constants'\nimport BottomBar from './BottomBar'\nimport Filters from './Filters'\n\nconst formValueSelector = formValueSelectorFactory(SPECIMEN_FILTERS_FORM_NAME)\nconst getFormInitialValues = getFormInitialValuesFactory(\n  SPECIMEN_FILTERS_FORM_NAME\n)\n\nconst main = {\n  key: 'main',\n  renderRow: props => <Filters {...props} />,\n  style: { overflow: 'auto' },\n}\n\nconst header = {\n  height: emToPixels(4.25),\n  key: 'header',\n  renderRow: () => <ColumnRowHeader text=\"Find specimens\" />,\n}\n\nconst bottomBar = {\n  height: emToPixels(4.625),\n  key: 'bottomBar',\n  renderRow: props => <BottomBar {...props} />,\n}\n\nconst rows = [header, main, bottomBar]\n\nconst propTypes = {\n  windowHeight: PropTypes.number.isRequired,\n}\n\nclass FilterColumn extends PureComponent {\n  render() {\n    const { windowHeight } = this.props\n\n    return (\n      <RowLayout\n        availableHeight={windowHeight - emToPixels(3.4375)}\n        form={SPECIMEN_FILTERS_FORM_NAME}\n        formValueSelector={formValueSelector}\n        getFormInitialValues={getFormInitialValues}\n        rows={rows}\n        {...this.props}\n      />\n    )\n  }\n}\n\nFilterColumn.propTypes = propTypes\n\nexport default compose(injectWindowHeight)(FilterColumn)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { isDirty, reset, getFormValues } from 'redux-form'\nimport { createSelector } from 'reselect'\nimport { push } from 'react-router-redux'\nimport objectPath from 'object-path'\n\nimport { createGetResourceCount } from 'coreModules/crud/higherOrderComponents'\nimport { KeyboardShortcuts } from 'coreModules/keyboardShortcuts/components'\nimport { createShortcutLayer } from 'coreModules/keyboardShortcuts/higherOrderComponents'\nimport { ColumnLayout, InformationSidebar } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport layoutSelectors from 'coreModules/layout/globalSelectors'\nimport {\n  CREATE_SUCCESS,\n  DEL_SUCCESS,\n} from 'coreModules/resourceManager/constants'\nimport userSelectors from 'coreModules/user/globalSelectors'\nimport {\n  createInjectSearch,\n  createInjectSearchResult,\n} from 'coreModules/search/higherOrderComponents'\nimport { globalSelectors as searchSelectors } from 'coreModules/search/keyObjectModule'\nimport sizeSelectors from 'coreModules/size/globalSelectors'\nimport { updateUserPreference } from 'coreModules/user/actionCreators'\nimport {\n  SPECIMEN_FILTERS_FORM_NAME,\n  SPECIMENS_MAMMALS_TABLE_COLUMNS,\n  SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING,\n} from '../../constants'\nimport {\n  actionCreators as keyObjectActionCreators,\n  globalSelectors as keyObjectGlobalSelectors,\n} from '../../keyObjectModule'\nimport { higherOrderComponents } from './FilterColumn/queryBuilder'\nimport MainColumn from './MainColumn'\nimport FilterColumn from './FilterColumn'\n\nconst main = {\n  key: 'main',\n  renderColumn: props => <MainColumn {...props} />,\n}\n\nconst secondaryColumnStyle = {\n  background: 'white',\n  borderLeft: '1px solid #D4D4D5',\n  zIndex: 100,\n}\n\nconst createFilter = createSelector(\n  (width = emToPixels(25)) => width,\n  width => {\n    return {\n      key: 'filter',\n      renderColumn: props => <FilterColumn {...props} />,\n      style: secondaryColumnStyle,\n      width,\n    }\n  }\n)\n\nconst createRightSidebar = createSelector(\n  width => width,\n  width => {\n    return {\n      key: 'rightSidebar',\n      renderColumn: props => <InformationSidebar {...props} />,\n      style: secondaryColumnStyle,\n      width,\n    }\n  }\n)\n\nconst getColumns = createSelector(\n  ({ filterColumnIsOpen }) => filterColumnIsOpen,\n  ({ isSmall }) => isSmall,\n  ({ rightSidebarIsOpen }) => rightSidebarIsOpen,\n  ({ rightSidebarWidth }) => rightSidebarWidth,\n  (filterColumnIsOpen, isSmall, rightSidebarIsOpen, rightSidebarWidth) => {\n    const columns = [main]\n    if (filterColumnIsOpen) {\n      if (isSmall) {\n        return [createFilter('100%')]\n      }\n      columns.push(createFilter())\n    }\n\n    if (rightSidebarIsOpen) {\n      if (isSmall) {\n        return [createRightSidebar('100%')]\n      }\n      columns.push(\n        createRightSidebar(rightSidebarWidth && `${rightSidebarWidth}px`)\n      )\n    }\n\n    return columns\n  }\n)\n\nconst getMainColumnActiveTab = createSelector(\n  url => url,\n  url => {\n    if (url.includes('edit')) {\n      return 'recordEdit'\n    } else if (url.includes('create')) {\n      return 'recordNew'\n    } else if (url.includes('settings')) {\n      return 'resultTableSettings'\n    }\n    return 'resultTable'\n  }\n)\n\nconst mapStateToProps = (\n  state,\n  { match: { params, url }, resourceCount, searchResultResourceType: resource }\n) => {\n  const userPreferences = userSelectors.getUserPreferences(state)\n  const tableColumnsToShow =\n    (userPreferences && userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS]) ||\n    undefined\n  const tableColumnsToSort =\n    (userPreferences &&\n      userPreferences[SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING]) ||\n    undefined\n\n  const specimenSearchState = searchSelectors.get[':resource.searchState'](\n    state,\n    {\n      resource,\n    }\n  )\n\n  const mainColumnActiveTab = getMainColumnActiveTab(url)\n\n  const totalNumberOfRecords = resourceCount\n  const numberOfListItems =\n    specimenSearchState &&\n    specimenSearchState.items &&\n    specimenSearchState.items.length\n\n  const currentTableRowNumber = keyObjectGlobalSelectors.get.currentTableRowNumber(\n    state\n  )\n\n  const isEditRecordView = mainColumnActiveTab === 'recordEdit'\n  const isNewRecordView = mainColumnActiveTab === 'recordNew'\n  const isItemViewOrSettings = mainColumnActiveTab.startsWith('record')\n  const isTableView = mainColumnActiveTab === 'resultTable'\n  const isTableViewOrSettings = mainColumnActiveTab.startsWith('resultTable')\n\n  const showSelectNextRecordButton =\n    !isNewRecordView && currentTableRowNumber < numberOfListItems\n  const showSelectPreviousRecordButton =\n    !isNewRecordView && currentTableRowNumber > 1\n\n  const filterFormIsDirty = isDirty(SPECIMEN_FILTERS_FORM_NAME)(state)\n  const enableShowAllRecordsButton =\n    !isEditRecordView &&\n    filterFormIsDirty &&\n    numberOfListItems !== totalNumberOfRecords\n\n  return {\n    currentTableRowNumber,\n    enableShowAllRecordsButton,\n    filterColumnIsOpen: keyObjectGlobalSelectors.get.filterColumnIsOpen(state),\n    filterValues: getFormValues(SPECIMEN_FILTERS_FORM_NAME)(state),\n    focusedSpecimenId: keyObjectGlobalSelectors.get.focusedSpecimenId(state),\n    isEditRecordView,\n    isItemViewOrSettings,\n    isNewRecordView,\n    isSmall: sizeSelectors.getIsSmall(state),\n    isTableView,\n    isTableViewOrSettings,\n    mainColumnActiveTab,\n    numberOfListItems,\n    rightSidebarIsOpen: layoutSelectors.getRightSidebarIsOpen(state),\n    showSelectNextRecordButton,\n    showSelectPreviousRecordButton,\n    specimenId: objectPath.get(params, 'specimenId'),\n    tableColumnsToShow,\n    tableColumnsToSort,\n    totalNumberOfRecords,\n  }\n}\n\nconst mapDispatchToProps = {\n  delCurrentTableRowNumber: keyObjectActionCreators.del.currentTableRowNumber,\n  delFocusedSpecimenId: keyObjectActionCreators.del.focusedSpecimenId,\n  push,\n  reset,\n  setCurrentTableRowNumber: keyObjectActionCreators.set.currentTableRowNumber,\n  setFilterColumnIsOpen: keyObjectActionCreators.set.filterColumnIsOpen,\n  setFocusedSpecimenId: keyObjectActionCreators.set.focusedSpecimenId,\n  updateUserPreference,\n}\n\nconst propTypes = {\n  currentTableRowNumber: PropTypes.number,\n  delCurrentTableRowNumber: PropTypes.func.isRequired,\n  delFocusedSpecimenId: PropTypes.func.isRequired,\n  enableShowAllRecordsButton: PropTypes.bool.isRequired,\n  filterColumnIsOpen: PropTypes.bool.isRequired,\n  filterValues: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n  focusedSpecimenId: PropTypes.string,\n  isEditRecordView: PropTypes.bool.isRequired,\n  isItemViewOrSettings: PropTypes.bool.isRequired,\n  isNewRecordView: PropTypes.bool.isRequired,\n  isSmall: PropTypes.bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  isTableView: PropTypes.bool.isRequired,\n  isTableViewOrSettings: PropTypes.bool.isRequired,\n  mainColumnActiveTab: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n  numberOfListItems: PropTypes.number,\n  prefetchLimit: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  push: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  rightSidebarIsOpen: PropTypes.bool.isRequired, // eslint-disable-line react/no-unused-prop-types\n  rightSidebarWidth: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n  search: PropTypes.func.isRequired,\n  searchResult: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n  setCurrentTableRowNumber: PropTypes.func.isRequired,\n  setFilterColumnIsOpen: PropTypes.func.isRequired,\n  setFocusedSpecimenId: PropTypes.func.isRequired,\n  showSelectNextRecordButton: PropTypes.bool.isRequired,\n  showSelectPreviousRecordButton: PropTypes.bool.isRequired,\n  specimenId: PropTypes.string,\n  tableColumnsToSort: PropTypes.array, // eslint-disable-line react/no-unused-prop-types\n  totalNumberOfRecords: PropTypes.number,\n  updateUserPreference: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  currentTableRowNumber: undefined,\n  filterValues: undefined,\n  focusedSpecimenId: undefined,\n  numberOfListItems: undefined,\n  prefetchLimit: 50,\n  rightSidebarWidth: emToPixels(25),\n  searchResult: undefined,\n  specimenId: undefined,\n  tableColumnsToSort: undefined,\n  totalNumberOfRecords: 0,\n}\n\nclass MammalManager extends Component {\n  constructor(props) {\n    super(props)\n\n    this.getColumns = this.getColumns.bind(this)\n    this.handleExportToCsv = this.handleExportToCsv.bind(this)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.handleOpenEditRecordView = this.handleOpenEditRecordView.bind(this)\n    this.handleOpenNewRecordForm = this.handleOpenNewRecordForm.bind(this)\n    this.handleOpenTableView = this.handleOpenTableView.bind(this)\n    this.handleResetFilters = this.handleResetFilters.bind(this)\n    this.handleSearchSpecimens = this.handleSearchSpecimens.bind(this)\n    this.handleSelectNextRecord = this.handleSelectNextRecord.bind(this)\n    this.handleSelectPreviousRecord = this.handleSelectPreviousRecord.bind(this)\n    this.handleSetCurrentTableRowNumber = this.handleSetCurrentTableRowNumber.bind(\n      this\n    )\n    this.handleSettingClick = this.handleSettingClick.bind(this)\n    this.handleShowAllRecords = this.handleShowAllRecords.bind(this)\n    this.handleSpecimenIdUpdate = this.handleSpecimenIdUpdate.bind(this)\n    this.handleToggleFilters = this.handleToggleFilters.bind(this)\n\n    this.shortcuts = [\n      {\n        command: 'down',\n        description: 'Move focus to next record',\n        onPress: this.handleSelectNextRecord,\n      },\n      {\n        command: 'up',\n        description: 'Move focus to previous record',\n        onPress: this.handleSelectPreviousRecord,\n      },\n      {\n        command: 'n n',\n        description: 'Open new record form',\n        onPress: this.handleOpenNewRecordForm,\n      },\n      {\n        command: 'n t',\n        description: 'Open table view',\n        onPress: this.handleOpenTableView,\n      },\n    ]\n  }\n  componentWillMount() {\n    this.handleSpecimenIdUpdate()\n  }\n\n  componentDidMount() {\n    this.handleSearchSpecimens(this.props, {\n      openTableView: false,\n      usePrefetchLimit: true,\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      objectPath.get(this.props, 'tableColumnsToSort') !==\n      objectPath.get(nextProps, 'tableColumnsToSort')\n    ) {\n      let currentId\n      // Need to check that we are not in the edit record view.\n      // If not this check the user will be redirected away from a newly created specimen\n\n      if (\n        !this.props.isNewRecordView &&\n        !this.props.isEditRecordView &&\n        nextProps.currentTableRowNumber > 0\n      ) {\n        const currentSpecimen =\n          nextProps.searchResult.items &&\n          nextProps.searchResult.items[nextProps.currentTableRowNumber - 1]\n        currentId = currentSpecimen.id\n      }\n\n      this.handleSearchSpecimens(nextProps, {\n        openTableView: false,\n        skipFilter: nextProps.isItemViewOrSettings,\n        usePrefetchLimit: false,\n      }).then(() => {\n        if (currentId) {\n          const newIndex = this.props.searchResult.items.findIndex(\n            ({ id }) => id === currentId\n          )\n\n          this.handleSetCurrentTableRowNumber(null, newIndex + 1)\n        }\n      })\n    }\n\n    if (\n      objectPath.get(this.props, 'tableColumnsToShow') !==\n      objectPath.get(nextProps, 'tableColumnsToShow')\n    ) {\n      this.handleSearchSpecimens(nextProps, {\n        openTableView: true,\n        usePrefetchLimit: false,\n      })\n    }\n\n    if (\n      nextProps.isEditRecordView &&\n      (this.props.specimenId !== nextProps.specimenId ||\n        objectPath.get(this.props, 'searchResult.items') !==\n          objectPath.get(nextProps, 'searchResult.items'))\n    ) {\n      this.handleSpecimenIdUpdate(nextProps)\n    }\n  }\n\n  getColumns() {\n    return getColumns(this.props)\n  }\n\n  handleInteraction(type) {\n    switch (type) {\n      case CREATE_SUCCESS: {\n        this.props.updateUserPreference(\n          SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING,\n          [{ name: 'idNumeric', sort: 'asc' }]\n        )\n\n        break\n      }\n      case DEL_SUCCESS: {\n        const { currentTableRowNumber, isTableView } = this.props\n\n        this.handleSearchSpecimens(undefined, { openTableView: false }).then(\n          () => {\n            if (!isTableView) {\n              setTimeout(() => {\n                this.handleOpenTableView()\n                this.handleSetCurrentTableRowNumber(\n                  null,\n                  Math.min(\n                    currentTableRowNumber,\n                    this.props.searchResult.items.length\n                  )\n                )\n              })\n            }\n          }\n        )\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  handleSpecimenIdUpdate(props = this.props) {\n    const specimenId = objectPath.get(props, 'match.params.specimenId')\n\n    if (specimenId) {\n      this.props.setFocusedSpecimenId(specimenId)\n\n      if (objectPath.get(props, 'searchResult.items')) {\n        const index = props.searchResult.items.findIndex(\n          ({ id }) => id === specimenId\n        )\n\n        if (index > -1) {\n          this.props.setCurrentTableRowNumber(index + 1)\n        }\n      }\n    }\n  }\n\n  handleSetCurrentTableRowNumber(event, newTableRowNumber) {\n    if (event) {\n      event.preventDefault()\n    }\n\n    const {\n      mainColumnActiveTab,\n      match: { path, params },\n    } = this.props\n\n    this.props.setCurrentTableRowNumber(newTableRowNumber)\n\n    const index = newTableRowNumber - 1\n    const specimenId = objectPath.get(\n      this.props,\n      `searchResult.items.${index}.id`\n    )\n\n    if (specimenId) {\n      if (mainColumnActiveTab === 'recordEdit') {\n        return this.props.push(\n          path\n            .replace(':specimenId', specimenId)\n            .replace(':sectionId', params.sectionId)\n        )\n      }\n\n      return this.props.setFocusedSpecimenId(specimenId)\n    }\n\n    return this.props.setFocusedSpecimenId(undefined)\n  }\n\n  handleSelectNextRecord(event) {\n    const { currentTableRowNumber, numberOfListItems } = this.props\n\n    if (numberOfListItems && currentTableRowNumber < numberOfListItems) {\n      this.handleSetCurrentTableRowNumber(event, currentTableRowNumber + 1)\n    }\n  }\n\n  handleSelectPreviousRecord(event) {\n    const { currentTableRowNumber, numberOfListItems } = this.props\n\n    if (numberOfListItems && currentTableRowNumber > 1) {\n      this.handleSetCurrentTableRowNumber(event, currentTableRowNumber - 1)\n    }\n  }\n\n  handleToggleFilters(event) {\n    event.preventDefault()\n\n    if (!this.props.filterColumnIsOpen) {\n      this.handleOpenTableView(event)\n    }\n\n    this.props.setFilterColumnIsOpen(!this.props.filterColumnIsOpen)\n  }\n\n  handleSearchSpecimens(\n    props = this.props,\n    { openTableView = true, skipFilter = false, usePrefetchLimit = true } = {}\n  ) {\n    if (!props.isTableView && openTableView) {\n      this.handleOpenTableView()\n    }\n\n    const {\n      buildQuery,\n      currentTableRowNumber,\n      focusedSpecimenId,\n      tableColumnsToSort,\n      prefetchLimit,\n    } = props\n\n    const sort =\n      tableColumnsToSort &&\n      tableColumnsToSort.map(({ name, sort: order }) => {\n        return `attributes.${name}:${order}`\n      })\n\n    const { query } = buildQuery()\n    return this.props\n      .search({\n        limit: usePrefetchLimit ? prefetchLimit : 50000,\n        query: skipFilter ? {} : query,\n        sort,\n      })\n      .then(items => {\n        if (items && items.length) {\n          if (\n            (!currentTableRowNumber && !focusedSpecimenId) ||\n            !items.find(({ id }) => id === focusedSpecimenId)\n          ) {\n            this.props.setCurrentTableRowNumber(1)\n            this.props.setFocusedSpecimenId(items[0].id)\n          } else if (items.length < currentTableRowNumber) {\n            this.props.setCurrentTableRowNumber(items.length)\n            this.props.setFocusedSpecimenId(items[items.length - 1].id)\n          }\n        } else {\n          this.props.delCurrentTableRowNumber()\n          this.props.delFocusedSpecimenId()\n        }\n\n        const limitReached = items && items.length === prefetchLimit\n        if (limitReached) {\n          return this.props.search({\n            query,\n            sort,\n          })\n        }\n        return null\n      })\n  }\n\n  handleShowAllRecords(event) {\n    event.preventDefault()\n    this.props.reset(SPECIMEN_FILTERS_FORM_NAME)\n    setTimeout(() => this.handleSearchSpecimens())\n  }\n\n  handleResetFilters(event) {\n    this.handleShowAllRecords(event)\n  }\n\n  handleOpenNewRecordForm(event) {\n    event.preventDefault()\n    this.props.setFilterColumnIsOpen(false)\n    this.props.push(`/app/specimens/mammals/create/sections/0`)\n  }\n\n  handleOpenTableView(event) {\n    if (event) event.preventDefault()\n    this.props.push(`/app/specimens/mammals/search`)\n  }\n\n  handleOpenEditRecordView(event) {\n    if (event) event.preventDefault()\n\n    this.props.setFilterColumnIsOpen(false)\n    const specimenId = this.props.focusedSpecimenId\n    if (specimenId) {\n      this.props.push(`/app/specimens/mammals/${specimenId}/edit/sections/0`)\n    }\n  }\n\n  /* eslint-disable class-methods-use-this, no-alert */\n  handleExportToCsv(event) {\n    event.preventDefault()\n    window.alert('Not implemented')\n  }\n  /* eslint-enable class-methods-use-this, no-alert */\n\n  handleSettingClick(event) {\n    if (event) event.preventDefault()\n    this.props.push(`/app/specimens/mammals/search/settings`)\n  }\n\n  render() {\n    const {\n      currentTableRowNumber,\n      enableShowAllRecordsButton,\n      focusedSpecimenId,\n      isItemViewOrSettings,\n      isNewRecordView,\n      isTableView,\n      isTableViewOrSettings,\n      mainColumnActiveTab,\n      numberOfListItems,\n      showSelectNextRecordButton,\n      showSelectPreviousRecordButton,\n      totalNumberOfRecords,\n    } = this.props\n\n    return (\n      <React.Fragment>\n        <KeyboardShortcuts\n          activeInLayer=\"mammalManager\"\n          shortcuts={this.shortcuts}\n        />\n        <ColumnLayout\n          columns={this.getColumns()}\n          currentTableRowNumber={currentTableRowNumber}\n          focusedItemId={focusedSpecimenId}\n          isItemViewOrSettings={isItemViewOrSettings}\n          isNewRecordView={isNewRecordView}\n          isTableViewOrSettings={isTableViewOrSettings}\n          mainColumnActiveTab={mainColumnActiveTab}\n          numberOfListItems={numberOfListItems}\n          onExportCsv={isTableView && this.handleExportToCsv}\n          onFormTabClick={isTableView && this.handleOpenEditRecordView}\n          onInteraction={this.handleInteraction}\n          onOpenNewRecordForm={!isNewRecordView && this.handleOpenNewRecordForm}\n          onResetFilters={this.handleResetFilters}\n          onSearchSpecimens={this.handleSearchSpecimens}\n          onSelectNextRecord={\n            showSelectNextRecordButton && this.handleSelectNextRecord\n          }\n          onSelectPreviousRecord={\n            showSelectPreviousRecordButton && this.handleSelectPreviousRecord\n          }\n          onSetCurrentTableRowNumber={\n            !isNewRecordView && this.handleSetCurrentTableRowNumber\n          }\n          onSettingClick={isTableView && this.handleSettingClick}\n          onShowAllRecords={\n            enableShowAllRecordsButton && this.handleShowAllRecords\n          }\n          onTableTabClick={!isTableView && this.handleOpenTableView}\n          onToggleFilters={!isNewRecordView && this.handleToggleFilters}\n          totalNumberOfRecords={totalNumberOfRecords}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nMammalManager.propTypes = propTypes\nMammalManager.defaultProps = defaultProps\n\nexport default compose(\n  withRouter,\n  createGetResourceCount({ resource: 'specimen' }),\n  createInjectSearch({\n    includeFields: ['id'],\n    resource: 'searchSpecimen',\n  }),\n  createInjectSearchResult({\n    resource: 'searchSpecimen',\n  }),\n  higherOrderComponents.createFormHoc(),\n  createShortcutLayer({ layer: 'mammalManager' }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(MammalManager)\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","import immutable from 'object-path-immutable'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nconst models = schemaInterface.getModels()\n\nconst createFormModels = () => {\n  let updatedModels = { ...models }\n\n  updatedModels = immutable.set(updatedModels, 'place.required', [\n    'group',\n    'name',\n    'parent',\n  ])\n\n  updatedModels = immutable.set(updatedModels, 'place.properties.group', {\n    minLength: 1,\n    type: 'string',\n  })\n\n  updatedModels = immutable.set(updatedModels, 'place.properties.name', {\n    minLength: 1,\n    type: 'string',\n  })\n\n  updatedModels = immutable.set(updatedModels, 'place.properties.parent', {\n    properties: {\n      id: {\n        minLength: 1,\n        type: 'string',\n      },\n    },\n    required: ['id'],\n    type: 'object',\n  })\n\n  return updatedModels\n}\n\nconst formModels = createFormModels()\n\nexport { formModels }\n","import place from './place'\n\nexport default [place]\n","import { recordHistoryEvents } from 'coreModules/form/components/units'\nimport unitSpecs from '../../unitSpecs'\n\nconst { place } = unitSpecs\n\nconst units = [place, recordHistoryEvents]\n\nexport default {\n  name: 'place',\n  units,\n}\n","import place from './place'\n\nexport default {\n  place,\n}\n","import { PLANET } from '../../../../../../constants'\n\nconst parts = [\n  {\n    componentName: 'TranslatedHeader',\n    componentProps: {\n      as: 'h2',\n      textKey: 'headers.geography',\n    },\n  },\n  {\n    componentName: 'Input',\n    componentProps: {\n      columnProps: { width: 9 },\n      fluid: true,\n      type: 'text',\n    },\n    name: 'name',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'GeographicLevelDropdown',\n    componentProps: {\n      columnProps: { width: 9 },\n      disableLevels: [PLANET],\n    },\n    name: 'group',\n    required: true,\n    wrapInField: true,\n  },\n  {\n    componentName: 'LocalityDropdownPickerSearch',\n    componentProps: {\n      columnProps: { width: 9 },\n      excludeRootNode: false,\n    },\n    name: 'parent.id',\n    required: true,\n    wrapInField: true,\n  },\n]\n\nexport default {\n  name: 'place',\n  parts,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport {\n  formValueSelector as formValueSelectorFactory,\n  reduxForm,\n} from 'redux-form'\n\nimport customFormValidator from 'common/es5/error/validators/customFormValidator'\nimport { Form, FormRow } from 'coreModules/form/components'\nimport {\n  createMapRequiredStrings,\n  mapParentError,\n} from 'coreModules/form/utilities/errorTransformations'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { formModels } from '../../../../schemas'\nimport customParts from '../../../formParts'\nimport sectionSpecs from './sectionSpecs'\n\nconst formActionBarHeight = emToPixels(4.625)\n\nconst propTypes = {\n  availableHeight: PropTypes.number.isRequired,\n  form: PropTypes.string.isRequired,\n  getAllowTransition: PropTypes.func,\n  handleSubmit: PropTypes.func.isRequired,\n  itemHeader: PropTypes.node.isRequired,\n  itemSubHeader: PropTypes.node,\n  preventLeavingForm: PropTypes.bool,\n  unsavedChangesMessage: PropTypes.string,\n}\nconst defaultProps = {\n  getAllowTransition: undefined,\n  itemSubHeader: undefined,\n  preventLeavingForm: false,\n  unsavedChangesMessage: undefined,\n}\n\nclass BaseForm extends Component {\n  constructor(props) {\n    super(props)\n    this.formValueSelector = formValueSelectorFactory(props.form)\n  }\n\n  render() {\n    const {\n      availableHeight,\n      form,\n      getAllowTransition,\n      handleSubmit,\n      itemHeader,\n      itemSubHeader,\n      preventLeavingForm,\n      unsavedChangesMessage,\n      ...rest\n    } = this.props\n\n    return (\n      <Form\n        formName={form}\n        getAllowTransition={getAllowTransition}\n        onSubmit={handleSubmit(() => {\n          /* submit handled in resource manager */\n        })}\n        preventLeavingForm={preventLeavingForm}\n        sectionSpecs={sectionSpecs}\n        setFormRef={this.setFormRef}\n        unsavedChangesMessage={unsavedChangesMessage}\n      >\n        <FormRow\n          {...rest}\n          availableHeight={availableHeight - formActionBarHeight}\n          customParts={customParts}\n          formName={form}\n          formValueSelector={this.formValueSelector}\n          itemHeader={itemHeader}\n          itemSubHeader={itemSubHeader}\n          module=\"locality\"\n          moduleName=\"locality\"\n          sectionSpecs={sectionSpecs}\n        />\n      </Form>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  enableReinitialize: true,\n  validate: compose(\n    mapParentError,\n    createMapRequiredStrings(['group', 'name']),\n    customFormValidator({\n      model: 'place',\n      models: formModels,\n    })\n  ),\n})(BaseForm)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ModuleTranslate } from 'coreModules/i18n/components'\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  itemId: PropTypes.string,\n  onInteraction: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  itemId: undefined,\n}\n\nconst getAllowTransition = (location, action) => {\n  if (action === 'POP') {\n    return false\n  }\n  return location.search.includes('mainColumn=edit')\n}\n\nexport class Create extends PureComponent {\n  render() {\n    const { itemId, onInteraction, ...rest } = this.props\n    const initialValues = itemId ? { parent: { id: itemId } } : {}\n\n    return (\n      <BaseForm\n        {...rest}\n        displayBackButton\n        displayResetButton\n        form=\"placeCreate\"\n        getAllowTransition={getAllowTransition}\n        initialValues={initialValues}\n        itemHeader={\n          <ModuleTranslate capitalize module=\"locality\" textKey=\"newLocality\" />\n        }\n        onClose={event => {\n          event.preventDefault()\n          onInteraction('FORM_CANCEL')\n        }}\n        preventLeavingForm\n        unsavedChangesMessage=\"You have not saved the new record, are you sure you want to leave?\"\n      />\n    )\n  }\n}\n\nCreate.propTypes = propTypes\nCreate.defaultProps = defaultProps\n\nexport default Create\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport BaseForm from './BaseForm'\n\nconst propTypes = {\n  nestedItem: PropTypes.object,\n  onInteraction: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  nestedItem: undefined,\n}\n\nexport class Edit extends PureComponent {\n  render() {\n    const { nestedItem, onInteraction, ...rest } = this.props\n\n    if (!nestedItem) {\n      return null\n    }\n\n    const { resourceActivities } = nestedItem\n\n    return (\n      <React.Fragment>\n        <BaseForm\n          {...rest}\n          displayBackButton\n          displayResetButton\n          form=\"placeEdit\"\n          initialValues={nestedItem}\n          onClose={event => {\n            event.preventDefault()\n            onInteraction('FORM_CANCEL')\n          }}\n          onInteraction={onInteraction}\n          resourceActivities={resourceActivities}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nEdit.propTypes = propTypes\nEdit.defaultProps = defaultProps\n\nexport default Edit\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { reduxForm } from 'redux-form'\n\nimport createLog from 'utilities/log'\nimport FieldWrapper from 'coreModules/form/components/FieldWrapper'\nimport { Input, DropdownSearch } from 'coreModules/form/components'\nimport {\n  CONTINENT,\n  COUNTRY,\n  DISTRICT,\n  PLANET,\n  PROVINCE,\n} from '../../../constants'\n\nexport const FORM_NAME = 'placeFilter'\n\nconst log = createLog('modules:locality:BaseForm')\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nconst groups = [CONTINENT, COUNTRY, DISTRICT, PROVINCE, PLANET]\n\nconst dropdownOptions = groups.map(group => {\n  return {\n    key: group,\n    text: group,\n    value: group,\n  }\n})\n\nconst noop = () => {}\n\nexport class BaseForm extends Component {\n  render() {\n    log.render()\n    const { error, handleSubmit } = this.props\n    return (\n      <Grid padded>\n        <Grid.Column>\n          <Form error={!!error} onSubmit={handleSubmit(noop)}>\n            <Grid textAlign=\"left\" verticalAlign=\"top\">\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={Input}\n                    enableHelpNotifications={false}\n                    label=\"Name\"\n                    model=\"place\"\n                    module=\"locality\"\n                    name=\"name\"\n                    type=\"text\"\n                  />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                  <FieldWrapper\n                    autoComplete=\"off\"\n                    component={DropdownSearch}\n                    enableHelpNotifications={false}\n                    fluid\n                    label=\"Geographic level\"\n                    model=\"place\"\n                    module=\"locality\"\n                    name=\"group\"\n                    options={dropdownOptions}\n                    type=\"dropdown-search-local\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nBaseForm.propTypes = propTypes\nBaseForm.defaultProps = defaultProps\n\nexport default reduxForm({\n  destroyOnUnmount: false,\n  form: FORM_NAME,\n})(BaseForm)\n","export default function buildFilterQuery({ excludeRootNode, values }) {\n  const and = []\n\n  if (excludeRootNode) {\n    and.push({\n      filter: {\n        filterFunction: 'excludeRootNode',\n        input: {\n          value: true,\n        },\n      },\n    })\n  }\n\n  if (values.name) {\n    and.push({\n      filter: {\n        filterFunction: 'nameSearch',\n        input: {\n          value: values.name,\n        },\n      },\n    })\n  }\n\n  if (values.group) {\n    and.push({\n      filter: {\n        filterFunction: 'group',\n        input: {\n          value: values.group,\n        },\n      },\n    })\n  }\n\n  if (!and.length) {\n    return {}\n  }\n\n  return {\n    and,\n  }\n}\n","import React from 'react'\n\nconst findParentWithSpecificGroup = (item, group) => {\n  if (!item) {\n    return null\n  }\n\n  if (item.group === group) {\n    return item\n  }\n\n  if (!(item && item.parent)) {\n    return null\n  }\n\n  return findParentWithSpecificGroup(item.parent, group)\n}\n\nconst tableColumnSpecifications = [\n  {\n    fieldPath: 'name',\n    label: 'modules.locality.fieldLabels.place.name',\n    width: 250,\n  },\n  {\n    fieldPath: 'group',\n    label: 'modules.locality.fieldLabels.place.group',\n    width: 180,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(\n        value.parent,\n        'continent-ocean'\n      )\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.locality.fieldLabels.continent',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value.parent, 'country')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.locality.fieldLabels.country',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value.parent, 'province')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.locality.fieldLabels.province',\n    width: 250,\n  },\n  {\n    buildText: ({ value }) => {\n      const parent = findParentWithSpecificGroup(value.parent, 'district')\n      if (!parent) {\n        return ''\n      }\n      if (parent.deactivatedAt) {\n        return (\n          <span style={{ color: 'red' }}>{`${parent.name} (removed)`}</span>\n        )\n      }\n\n      return parent.name\n    },\n    fieldPath: '',\n    label: 'modules.locality.fieldLabels.district',\n    width: 250,\n  },\n]\n\nexport default tableColumnSpecifications\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  nestedItem: PropTypes.object.isRequired,\n}\n\nconst ItemTitle = ({ nestedItem = {} }) => {\n  const {\n    group,\n    name,\n    parent: { name: parentName, isRoot: parentIsRoot } = {},\n  } = nestedItem\n  if (!name) {\n    return ''\n  }\n\n  if (parentName && !parentIsRoot) {\n    return (\n      <React.Fragment>\n        <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>{name}</span>\n        <span>\n          [{group} in {parentName}]\n        </span>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <span style={{ fontWeight: 'bold', marginRight: '0.5em' }}>{name}</span>\n      <span>[{group}]</span>\n    </React.Fragment>\n  )\n}\n\nItemTitle.propTypes = propTypes\n\nexport default ItemTitle\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ResourceManager } from 'coreModules/resourceManager/components'\n\nimport CreateForm from './item/CreateForm'\nimport EditForm from './item/EditForm'\nimport FilterForm from './filter/Form'\nimport buildFilterQuery from './filter/buildFilterQuery'\nimport tableColumnSpecifications from './tableColumnSpecifications'\nimport ItemTitle from './ItemTitle'\n\nconst resource = 'place'\nconst include = ['parent', 'resourceActivities']\nconst createGetNestedItemHocInput = {\n  include,\n  refresh: true,\n  relationships: include,\n  resolveRelationships: ['place', 'resourceActivity'],\n  resource,\n}\n\nconst relationshipsToCheckBeforeDelete = ['children', 'specimens']\n\nconst propTypes = {\n  itemId: PropTypes.string,\n  onNavigation: PropTypes.func.isRequired,\n}\n\nconst defaultProps = {\n  itemId: undefined,\n}\n\nconst baseTreeFilter = {\n  name: 'The Earth',\n}\n\nconst sortOrder = ['attributes.name:asc']\n\nconst tableBatchFetchOptions = {\n  include: ['parent.parent.parent.parent.parent'],\n  relationships: [\n    'parent',\n    'parent.parent',\n    'parent.parent.parent',\n    'parent.parent.parent.parent',\n    'parent.parent.parent.parent.parent',\n  ],\n  resolveRelationships: ['place'],\n}\n\nconst itemFetchOptions = {\n  include: ['parent'],\n  relationships: ['parent', 'children'],\n  resolveRelationships: ['place'],\n}\n\nclass LocalityManager extends Component {\n  constructor(props) {\n    super(props)\n    this.handleInteraction = this.handleInteraction.bind(this)\n    this.renderCreateForm = this.renderCreateForm.bind(this)\n    this.renderEditForm = this.renderEditForm.bind(this)\n    this.renderFilterForm = this.renderFilterForm.bind(this)\n  }\n\n  handleInteraction(type, data = {}) {\n    this.props.onNavigation(type, data)\n  }\n\n  renderEditForm(props = {}) {\n    const { itemId } = this.props\n    return (\n      <EditForm\n        {...props}\n        itemId={itemId}\n        onInteraction={this.handleInteraction}\n      />\n    )\n  }\n  renderCreateForm(props = {}) {\n    return <CreateForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  renderFilterForm(props = {}) {\n    return <FilterForm {...props} onInteraction={this.handleInteraction} />\n  }\n\n  render() {\n    return (\n      <ResourceManager\n        {...this.props}\n        baseTreeFilter={baseTreeFilter}\n        buildFilterQuery={buildFilterQuery}\n        createGetNestedItemHocInput={createGetNestedItemHocInput}\n        filterHeader=\"Find geography\"\n        itemFetchOptions={itemFetchOptions}\n        ItemTitle={ItemTitle}\n        onInteraction={this.handleInteraction}\n        relationshipsToCheckBeforeDelete={relationshipsToCheckBeforeDelete}\n        renderCreateForm={this.renderCreateForm}\n        renderEditForm={this.renderEditForm}\n        renderFilterForm={this.renderFilterForm}\n        resource=\"place\"\n        sortOrder={sortOrder}\n        tableBatchFetchOptions={tableBatchFetchOptions}\n        tableColumnSpecifications={tableColumnSpecifications}\n        treeEnabled\n      />\n    )\n  }\n}\n\nLocalityManager.propTypes = propTypes\nLocalityManager.defaultProps = defaultProps\n\nexport default LocalityManager\n","import { compose } from 'redux'\nimport {\n  createLocalState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport LocalityManager from './Base'\n\nexport default compose(\n  createLocalState(),\n  createNavigationState()\n)(LocalityManager)\n","import { compose } from 'redux'\nimport {\n  createQueryState,\n  createNavigationState,\n} from 'coreModules/resourceManager/higherOrderComponents'\n\nimport LocalityManager from './Base'\n\nexport default compose(\n  createQueryState(),\n  createNavigationState()\n)(LocalityManager)\n","import LocalLocalityManager from './LocalityManager/Local'\nimport LocalityDropdownPickerSearch, {\n  setLocalManager,\n} from './LocalityDropdownPickerSearch'\nimport LocalityDropdownSearch from './LocalityDropdownSearch'\nimport LocalityManager from './LocalityManager/Query'\n\nsetLocalManager(LocalLocalityManager)\n\nexport { LocalityDropdownPickerSearch, LocalityDropdownSearch, LocalityManager }\n","export default function extractModelFromSpecification({\n  modelId,\n  specification,\n}) {\n  return Object.keys(specification.components.schemas)\n    .map(key => {\n      return { key, ...specification.components.schemas[key] }\n    })\n    .find(model => {\n      return model.key === modelId\n    })\n}\n","export default function getPropertyIsArray(property) {\n  const { type } = property\n  return type === 'array'\n}\n","export default function getPropertyIsModel(property) {\n  return property && property.$ref\n}\n","export default function getPropertyIsAnyOf(property) {\n  return property && property.anyOf\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  property: PropTypes.object.isRequired,\n  Type: PropTypes.func.isRequired,\n  version: PropTypes.string.isRequired,\n}\n\nfunction getAnyOfLinksFromProperty({ property, Type, version }) {\n  const { anyOf } = property\n\n  return (\n    <span>\n      One of:{' '}\n      {anyOf.map(ref => {\n        return <Type key={property.key} property={ref} version={version} />\n      })}\n    </span>\n  )\n}\n\ngetAnyOfLinksFromProperty.propTypes = propTypes\n\nexport default getAnyOfLinksFromProperty\n","export default function getArrayLinkFromProperty(property) {\n  const segments =\n    property.items && property.items.$ref && property.items.$ref.split('/')\n\n  if (!segments) {\n    return ''\n  }\n\n  const len = segments.length\n\n  if (!len) {\n    return ''\n  }\n\n  return segments[len - 1]\n}\n","export default function getModelLinkFromProperty(property) {\n  const segments = property && property.$ref && property.$ref.split('/')\n\n  if (!segments) {\n    return ''\n  }\n\n  const len = segments.length\n\n  if (!len) {\n    return ''\n  }\n\n  return segments[len - 1]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport createModelLink from '../../utilities/createModelLink'\nimport getPropertyIsArray from '../../utilities/getPropertyIsArray'\nimport getPropertyIsModel from '../../utilities/getPropertyIsModel'\nimport getPropertyIsAnyOf from '../../utilities/getPropertyIsAnyOf'\nimport getAnyOfLinksFromProperty from '../../utilities/getAnyOfLinksFromProperty'\nimport getArrayLinkFromProperty from '../../utilities/getArrayLinkFromProperty'\nimport getModelLinkFromProperty from '../../utilities/getModelLinkFromProperty'\n\nconst propTypes = {\n  property: PropTypes.object.isRequired,\n  version: PropTypes.string.isRequired,\n}\n\nconst Type = ({ property, version }) => {\n  if (getPropertyIsAnyOf(property)) {\n    return getAnyOfLinksFromProperty({\n      property,\n      Type,\n      version,\n    })\n  }\n\n  if (getPropertyIsArray(property)) {\n    const to = createModelLink({\n      modelName: getArrayLinkFromProperty(property),\n      version,\n    })\n    return (\n      <Link className=\"item\" href={to} to={to}>\n        {`<ARRAY> ${getArrayLinkFromProperty(property)}`}\n      </Link>\n    )\n  }\n\n  if (getPropertyIsModel(property)) {\n    const to = createModelLink({\n      modelName: getModelLinkFromProperty(property),\n      version,\n    })\n    return (\n      <Link className=\"item\" href={to} to={to}>\n        {`<MODEL> ${getModelLinkFromProperty(property)}`}\n      </Link>\n    )\n  }\n\n  const type = property.type || ''\n\n  if (!property.enum) {\n    return type\n  }\n\n  return `${type}, enum: [${property.enum.join(', ')}]`\n}\n\nType.propTypes = propTypes\n\nexport default Type\n","export default function createParameterLink({\n  version = 1,\n  modelName,\n  parameterName,\n}) {\n  return `/docs/${version}/models/${modelName}/${parameterName}`\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Segment, Table } from 'semantic-ui-react'\n\nimport Type from './Type'\nimport createParameterLink from '../../utilities/createParameterLink'\nimport getPropertyIsArray from '../../utilities/getPropertyIsArray'\nimport getPropertyIsModel from '../../utilities/getPropertyIsModel'\nimport getPropertyIsAnyOf from '../../utilities/getPropertyIsAnyOf'\nimport getPropertySummary from '../../utilities/getPropertySummary'\n\nconst propTypes = {\n  model: PropTypes.object.isRequired,\n  properties: PropTypes.array.isRequired,\n  specification: PropTypes.object.isRequired,\n  version: PropTypes.string.isRequired,\n}\n\nconst PropertyOverview = ({ properties, model, version, specification }) => {\n  return (\n    <Segment color=\"green\" style={{ marginTop: '40px' }}>\n      <h2>Properties</h2>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Key</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Example</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {properties.map(property => {\n            const propertyIsArray = getPropertyIsArray(property)\n            const propertyIsModel = getPropertyIsModel(property)\n            const propertyIsAnyOf = getPropertyIsAnyOf(property)\n            const propertySummary = getPropertySummary({\n              property,\n              propertyIsAnyOf,\n              propertyIsArray,\n              propertyIsModel,\n              specification,\n            })\n            return (\n              <Table.Row key={property.key}>\n                <Table.Cell>\n                  {propertyIsArray || propertyIsModel || propertyIsAnyOf ? (\n                    property.key\n                  ) : (\n                    <Link\n                      to={createParameterLink({\n                        modelName: model.key,\n                        parameterName: property.key,\n                        version,\n                      })}\n                    >\n                      {property.key}\n                    </Link>\n                  )}\n                </Table.Cell>\n                <Table.Cell>{propertySummary}</Table.Cell>\n                <Table.Cell>\n                  <Type property={property} version={version} />\n                </Table.Cell>\n                <Table.Cell>{property.example}</Table.Cell>\n              </Table.Row>\n            )\n          })}\n        </Table.Body>\n      </Table>\n    </Segment>\n  )\n}\n\nPropertyOverview.propTypes = propTypes\n\nexport default PropertyOverview\n","import extractModelFromSpecification from './extractModelFromSpecification'\n\nexport default function getPropertySummary({\n  property,\n  // propertyIsAnyOf,\n  propertyIsArray,\n  propertyIsModel,\n  specification,\n}) {\n  let summary = property && property['x-summary']\n  if (propertyIsModel || propertyIsArray) {\n    let refModelId\n    if (propertyIsModel) {\n      refModelId = property.$ref.replace('#/components/schemas/', '')\n    }\n\n    if (propertyIsArray) {\n      refModelId =\n        property.items &&\n        property.items.$ref &&\n        property.items.$ref.replace('#/components/schemas/', '')\n    }\n\n    const refModel =\n      refModelId &&\n      extractModelFromSpecification({\n        modelId: refModelId,\n        specification,\n      })\n\n    if (refModel && refModel['x-summary']) {\n      summary = refModel['x-summary']\n    }\n  }\n\n  return property && summary\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Segment } from 'semantic-ui-react'\n\nimport MarkdownToHtmlAsync from 'coreModules/i18n/components/MarkdownToHtmlAsync'\nimport PropertyOverview from './PropertyOverview'\n\nconst propTypes = {\n  model: PropTypes.object.isRequired,\n  specification: PropTypes.object.isRequired,\n  version: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {}\n\nconst Model = ({ model, version, specification }) => {\n  const properties = Object.keys(model.properties).map(key => {\n    return { key, ...model.properties[key] }\n  })\n\n  return (\n    <Segment basic id={model.key}>\n      {model.description && (\n        <MarkdownToHtmlAsync markdown={model.description} />\n      )}\n\n      <PropertyOverview\n        model={model}\n        properties={properties}\n        specification={specification}\n        version={version}\n      />\n    </Segment>\n  )\n}\n\nModel.propTypes = propTypes\nModel.defaultProps = defaultProps\n\nexport default Model\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Segment, Table } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport MarkdownToHtmlAsync from 'coreModules/i18n/components/MarkdownToHtmlAsync'\nimport createModelLink from '../../utilities/createModelLink'\n\nconst propTypes = {\n  model: PropTypes.object.isRequired,\n  property: PropTypes.object.isRequired,\n  version: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {}\n\nconst Property = ({ model, property, version }) => {\n  const id = `${model.key}.${property.key}`\n\n  return (\n    <Segment basic id={id}>\n      {property.description && (\n        <MarkdownToHtmlAsync markdown={property.description} />\n      )}\n      <Segment color=\"blue\" style={{ marginTop: '40px' }}>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Key</Table.HeaderCell>\n              <Table.HeaderCell>Value</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {Object.keys(property)\n              .filter(key => key !== 'description')\n              .map(key => {\n                return (\n                  <Table.Row>\n                    <Table.Cell>{key}</Table.Cell>\n                    <Table.Cell>{JSON.stringify(property[key])}</Table.Cell>\n                  </Table.Row>\n                )\n              })}\n          </Table.Body>\n        </Table>\n      </Segment>\n      <Link\n        className=\"item\"\n        to={createModelLink({\n          modelName: model.key,\n          version,\n        })}\n      >\n        Model: {model.key}\n      </Link>\n    </Segment>\n  )\n}\n\nProperty.propTypes = propTypes\nProperty.defaultProps = defaultProps\n\nexport default Property\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nimport extractModelFromSpecification from '../../utilities/extractModelFromSpecification'\nimport Model from './Model'\nimport Property from './Property'\n\nconst specification = schemaInterface.getOpenApiSpec()\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      modelId: PropTypes.string.isRequired,\n      parameterId: PropTypes.string,\n      schemaVersion: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nclass DataModel extends Component {\n  render() {\n    const {\n      match: {\n        params: { modelId, parameterId, schemaVersion },\n      },\n    } = this.props\n\n    if (!schemaVersion) {\n      return <div>Unknown version: {schemaVersion}</div>\n    }\n\n    const model = extractModelFromSpecification({\n      modelId,\n      specification,\n    })\n\n    if (parameterId) {\n      const property = model.properties[parameterId]\n      if (model && property) {\n        return (\n          <div>\n            <Property\n              model={model}\n              property={{ ...property, key: parameterId }}\n              version={schemaVersion}\n            />\n          </div>\n        )\n      }\n    }\n\n    return (\n      <Model\n        model={model}\n        specification={specification}\n        version={schemaVersion}\n      />\n    )\n  }\n}\n\nDataModel.propTypes = propTypes\n\nexport default DataModel\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Button, Form, Message, Segment } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { reduxForm, SubmissionError } from 'redux-form'\nimport formValidator from 'common/es5/error/validators/formValidator'\nimport createLog from 'utilities/log'\nimport { createModuleTranslate } from 'coreModules/i18n/components'\nimport { Field, Input } from 'coreModules/form/components'\nimport login from '../actionCreators/login'\nimport { loginRequest as loginRequestSchema } from '../schemas'\n\nconst log = createLog('modules:user:LoginForm')\nconst ModuleTranslate = createModuleTranslate('user')\n\nconst mapDispatchToProps = {\n  login,\n}\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired,\n}\n\nconst defaultProps = {\n  error: '',\n}\n\nexport class RawLoginForm extends Component {\n  constructor(props) {\n    super(props)\n    this.handleLogin = this.handleLogin.bind(this)\n  }\n  handleLogin(data) {\n    return this.props.login(data).catch(error => {\n      throw new SubmissionError({\n        _error: error.error_description,\n      })\n    })\n  }\n  render() {\n    log.render()\n    const { error, handleSubmit, pristine, submitting } = this.props\n    return (\n      <Form error={!!error} onSubmit={handleSubmit(this.handleLogin)}>\n        <Segment size=\"large\" stacked>\n          <Field\n            autoComplete=\"off\"\n            component={Input}\n            displayLabel={false}\n            icon=\"user\"\n            module=\"user\"\n            name=\"username\"\n            placeholder=\"Username\"\n            type=\"text\"\n          />\n          <Field\n            autoComplete=\"off\"\n            component={Input}\n            displayLabel={false}\n            icon=\"lock\"\n            module=\"user\"\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n          />\n\n          <Button\n            color=\"green\"\n            disabled={pristine || submitting}\n            fluid\n            name=\"btn-login\" // used for trying cucumber test script\n            size=\"large\"\n            type=\"submit\"\n          >\n            <ModuleTranslate textKey=\"LoginForm.login\" />\n          </Button>\n          {error && <Message error>{error}</Message>}\n        </Segment>\n      </Form>\n    )\n  }\n}\n\nRawLoginForm.propTypes = propTypes\nRawLoginForm.defaultProps = defaultProps\n\nexport const LoginForm = reduxForm({\n  form: 'simple',\n  validate: formValidator({ schema: loginRequestSchema }),\n})(RawLoginForm)\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  )\n)(LoginForm)\n","export const loginRequest = {\n  additionalProperties: false,\n  properties: {\n    password: {\n      type: 'string',\n    },\n    username: {\n      type: 'string',\n    },\n  },\n  required: ['username', 'password'],\n  type: 'object',\n}\n","import LoginForm from './LoginForm'\n\nexport { LoginForm }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport schemaInterface from 'common/es5/schemaInterface'\n\nimport i18nSelectors from 'coreModules/i18n/globalSelectors'\nimport { NavigationSidebar } from 'coreModules/layout/components'\n\nimport createModelLink from '../utilities/createModelLink'\nimport getAvailableSchemaVersions from '../utilities/getAvailableSchemaVersions'\n\nconst specification = schemaInterface.getOpenApiSpec()\nconst { schemas } = specification.components\n\nconst availableVersions = getAvailableSchemaVersions()\n\nconst models = Object.keys(schemas)\n  .map(key => {\n    return {\n      ...schemas[key],\n      key,\n    }\n  })\n  .filter(model => {\n    if (model['x-internal']) {\n      return false\n    }\n    return model['x-modelType'] === 'model'\n  })\n\nconst mapStateToProps = state => {\n  return {\n    markdownKeys: i18nSelectors.getMarkdownKeysByPath(state, 'docs.overview'),\n  }\n}\n\nconst propTypes = {\n  markdownKeys: PropTypes.array.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      schemaVersion: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nclass Nav extends Component {\n  render() {\n    const {\n      match: {\n        params: { schemaVersion: version },\n      },\n    } = this.props\n\n    const markdownNavItems = this.props.markdownKeys.map(markdownKey => {\n      return {\n        exact: true,\n        name: markdownKey,\n        path: `/docs/${version}/${markdownKey}`,\n        translate: false,\n      }\n    })\n\n    const versionNavItems = availableVersions.map(availableVersion => {\n      return {\n        exact: false,\n        name: availableVersion,\n        path: `/docs/${availableVersion}`,\n        translate: false,\n      }\n    })\n\n    const modelCategories = models\n      .map(model => {\n        return {\n          category: model['x-category'],\n          exact: false,\n          name: model.key,\n          path: createModelLink({ modelName: model.key, version }),\n          translate: false,\n        }\n      })\n      .reduce((obj, modelNavItem) => {\n        const { category } = modelNavItem\n        let group = obj[category] || []\n        group = [...group, modelNavItem]\n        return {\n          ...obj,\n          [category]: group,\n        }\n      }, {})\n\n    const markdownNavItemsGroup = {\n      items: markdownNavItems,\n      name: 'overview',\n    }\n\n    const versionItemsGroup = {\n      items: versionNavItems,\n      name: 'versions',\n    }\n\n    const modelItemGroups = Object.keys(modelCategories).map(category => {\n      return {\n        items: modelCategories[category],\n        name: category,\n        translate: false,\n      }\n    })\n\n    const navigationItems = [\n      markdownNavItemsGroup,\n      versionItemsGroup,\n      ...modelItemGroups,\n    ]\n\n    return (\n      <NavigationSidebar\n        displayHome\n        displayLogout={false}\n        navigationItems={navigationItems}\n        nested\n        width={180}\n      />\n    )\n  }\n}\n\nNav.propTypes = propTypes\n\nexport default compose(connect(mapStateToProps))(Nav)\n","export default function getAvailableSchemaVersions() {\n  return ['current']\n}\n","export const formatBooleanRadio = value => {\n  if (value === true) return 'true'\n  if (value === false) return 'false'\n  return undefined\n}\nexport const parseBooleanRadio = value => {\n  if (value === 'true') return true\n  if (value === 'false') return false\n  return undefined\n}\n","export const createErrorKey = ({\n  context,\n  errorCode,\n  module,\n  parameterKey,\n}) => {\n  return ['modules', module, context, parameterKey, errorCode]\n    .filter(segment => {\n      return !!segment\n    })\n    .join('.')\n}\n\nexport default function createErrorKeys({\n  context,\n  errorCode,\n  module,\n  parameterKey,\n}) {\n  if (!errorCode) {\n    return undefined\n  }\n\n  const errorKeys = []\n  if (module) {\n    errorKeys.push(\n      createErrorKey({\n        context,\n        errorCode,\n        module,\n        parameterKey,\n      })\n    )\n\n    errorKeys.push(\n      createErrorKey({\n        context,\n        module,\n        parameterKey,\n      })\n    )\n\n    errorKeys.push(\n      createErrorKey({\n        context,\n        errorCode,\n        module,\n      })\n    )\n  }\n\n  errorKeys.push(\n    createErrorKey({\n      errorCode,\n      module: 'error',\n      parameterKey,\n    })\n  )\n\n  errorKeys.push(\n    createErrorKey({\n      module: 'error',\n      parameterKey,\n    })\n  )\n\n  errorKeys.push(\n    createErrorKey({\n      errorCode,\n      module: 'error',\n    })\n  )\n\n  return errorKeys\n}\n","export default function createHelpNotificationProps({\n  context,\n  labelKey,\n  module,\n  parameterKey,\n}) {\n  const descriptionHeaderKey = labelKey\n\n  const model = parameterKey.split('.')[0]\n  const descriptionKey = ['modules', module, context, parameterKey].join('.')\n  const linkTo = `/docs/0.1.0/models/${model}`\n  const linkTextKey = `${parameterKey}`\n\n  return {\n    descriptionHeaderKey,\n    descriptionKey,\n    linkTextKey,\n    linkTo,\n  }\n}\n","export const MODULE_NAME = 'documentation'\n","import * as api from './api'\nimport * as bootstrap from './bootstrap'\nimport * as commonUi from './commonUi'\nimport * as crud from './crud'\nimport * as devToolsExtension from './devToolsExtension'\nimport * as documentation from './documentation'\nimport * as error from './error'\nimport * as form from './form'\nimport * as formSupport from './formSupport'\nimport * as i18n from './i18n'\nimport * as keyboardShortcuts from './keyboardShortcuts'\nimport * as layout from './layout'\nimport * as localStorage from './localStorage'\nimport * as logger from './logger'\nimport * as notifications from './notifications'\nimport * as resourceManager from './resourceManager'\nimport * as routing from './routing'\nimport * as search from './search'\nimport * as size from './size'\nimport * as user from './user'\n\nconst modules = [\n  api,\n  bootstrap,\n  crud,\n  search,\n  commonUi,\n  layout,\n  devToolsExtension,\n  error,\n  form,\n  formSupport,\n  i18n,\n  localStorage,\n  logger,\n  notifications,\n  routing,\n  size,\n  user,\n  keyboardShortcuts,\n  resourceManager,\n  documentation,\n]\n\nexport default modules\n","import * as components from './components'\nimport * as constants from './constants'\nimport * as globalSelectorFactories from './globalSelectorFactories'\nimport globalSelectors from './globalSelectors'\n\nconst name = constants.MODULE_NAME\n\nexport { components, constants, globalSelectors, globalSelectorFactories, name }\n","import * as agent from './agent'\nimport * as collectionMammals from './collectionMammals'\nimport * as curatedList from './curatedList'\nimport * as locality from './locality'\nimport * as storage from './storage'\nimport * as taxon from './taxon'\n\nconst modules = [\n  agent,\n  collectionMammals,\n  curatedList,\n  locality,\n  storage,\n  taxon,\n]\n\nexport default modules\n","import createHistory from 'history/createMemoryHistory'\n\nexport default function createConfig() {\n  const history = createHistory()\n\n  return {\n    api: {\n      enableEndpointMocks: true,\n    },\n    i18n: {},\n    logger: {\n      collapsed: true,\n      diff: true,\n    },\n    routing: history,\n    size: {\n      // maxWidts from https://semantic-ui.com/elements/container.html\n      breakpoints: [\n        {\n          maxWidth: 768,\n          size: 'small',\n        },\n        {\n          maxWidth: 1200,\n          size: 'medium',\n        },\n        {\n          size: 'large',\n        },\n      ],\n      currentBreakpoint: { size: 'large' },\n    },\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'react-router-redux'\nimport { mount } from 'enzyme'\nimport createTestStore from 'utilities/test/createTestStore'\nimport defaultTestConfig from 'utilities/test/defaultTestConfig'\nimport I18nProvider from 'coreModules/i18n/components/I18nProvider'\n\nconst defaultConfig = defaultTestConfig()\n\nexport default function setupTestComponent({\n  component,\n  config: customConfig,\n  fullExport = false,\n  initialState,\n  wrap = true,\n}) {\n  const config = customConfig || defaultConfig\n  const store = createTestStore({ config, initialState })\n\n  const rootComponent = !wrap\n    ? mount(component)\n    : mount(\n        <Provider store={store}>\n          <ConnectedRouter history={config.routing}>\n            <I18nProvider>{component}</I18nProvider>\n          </ConnectedRouter>\n        </Provider>\n      )\n\n  if (fullExport) {\n    return {\n      config,\n      rootComponent,\n      store,\n    }\n  }\n  return rootComponent\n}\n","import allCoreModules from 'coreModules/allModules'\nimport allDomainModules from 'domainModules/allModules'\nimport createStore from 'store'\nimport createDefaultTestConfig from './defaultTestConfig'\n\nexport default function createTestStore({\n  bootstrap = false,\n  config = createDefaultTestConfig(),\n  initialState,\n  modules = [...allCoreModules, ...allDomainModules],\n  viewOrder = [],\n} = {}) {\n  return createStore({\n    bootstrap,\n    config,\n    initialState,\n    modules,\n    viewOrder,\n  })\n}\n","/* eslint-disable no-console, prefer-destructuring */\nimport React from 'react'\nimport setupTestComponent from 'utilities/test/setupTestComponent'\n\nconst createInputObjectMock = (overrides = {}) => {\n  return {\n    onBlur: jest.fn(),\n    onChange: jest.fn(),\n    onFocus: jest.fn(),\n    ...overrides,\n  }\n}\n\nexport default function createInputTest({\n  elementToSelect = 'input',\n  getValue = props => props.value,\n  initialValue = 'initialValue',\n  InputComponent,\n  updateValue = 'updateValue',\n}) {\n  let inputObject\n  let wrapper\n  beforeEach(() => {\n    inputObject = createInputObjectMock()\n  })\n\n  it('renders without crashing when given required props', () => {\n    setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n  })\n\n  it('sets initial value if provided', () => {\n    inputObject = createInputObjectMock({\n      value: initialValue,\n    })\n\n    wrapper = setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n\n    const props = wrapper.find(elementToSelect).props()\n    expect(props).toBeTruthy()\n    expect(getValue(props)).toBe(initialValue)\n  })\n\n  it('onChange is called with new value when value is changed', () => {\n    inputObject = createInputObjectMock({ value: initialValue })\n    const value = updateValue\n    const e = { target: { value } }\n    wrapper = setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n\n    wrapper.find(elementToSelect).simulate('change', e)\n\n    expect(inputObject.onChange.mock.calls.length).toEqual(1)\n    expect(inputObject.onChange.mock.calls[0]).toMatchObject([e, { value }])\n  })\n\n  it('value is updated if new value is provided through props', () => {\n    inputObject = createInputObjectMock({\n      value: initialValue,\n    })\n    wrapper = setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n\n    const props = wrapper.find(elementToSelect).props()\n    expect(props).toBeTruthy()\n    expect(getValue(props)).toBe(initialValue)\n\n    wrapper.setProps({ input: { ...inputObject, value: updateValue } })\n\n    const updatedProps = wrapper.find(elementToSelect).props()\n    expect(updatedProps).toBeTruthy()\n    expect(getValue(updatedProps)).toBe(updateValue)\n  })\n\n  it('onFocus is called when input is focused', () => {\n    inputObject = createInputObjectMock({})\n    const e = {}\n    wrapper = setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n\n    wrapper.find(elementToSelect).simulate('focus', e)\n\n    expect(inputObject.onFocus.mock.calls.length).toEqual(1)\n    expect(inputObject.onFocus.mock.calls[0]).toMatchObject([e])\n  })\n\n  it('onBlur is called when input is blurred', () => {\n    inputObject = createInputObjectMock({})\n    const e = {}\n    wrapper = setupTestComponent({\n      component: <InputComponent input={inputObject} />,\n      wrap: false,\n    })\n\n    wrapper.find(elementToSelect).simulate('blur', e)\n    expect(inputObject.onBlur.mock.calls.length).toEqual(1)\n    expect(inputObject.onBlur.mock.calls[0]).toMatchObject([e])\n  })\n}\n","export default function createLabelKey({ context, module, parameterKey }) {\n  if (!module || !parameterKey) {\n    return undefined\n  }\n  return ['modules', module, context, parameterKey].join('.')\n}\n","export default function createParameterKey({ model: baseModel, name } = {}) {\n  if (!name) {\n    return undefined\n  }\n\n  const segments = name.split('.')\n\n  const { model: modelSegment, parameter: parameterSegment } = segments\n    .reverse()\n    .filter(segment => {\n      const isNumeric = !Number.isNaN(parseFloat(segment))\n      return !isNumeric\n    })\n    .reduce(\n      ({ model, parameter }, segment) => {\n        if (model) {\n          return {\n            model,\n            parameter,\n          }\n        }\n        if (segment === 'id') {\n          return {\n            model,\n            parameter,\n          }\n        }\n        if (!parameter) {\n          return {\n            model,\n            parameter: segment,\n          }\n        }\n        return {\n          model: segment,\n          parameter,\n        }\n      },\n      {\n        model: undefined,\n        parameter: undefined,\n      }\n    )\n  if (!parameterSegment) {\n    return undefined\n  }\n\n  return [baseModel, modelSegment, parameterSegment]\n    .filter(str => !!str)\n    .join('.')\n}\n","import immutable from 'object-path-immutable'\n\nconst createUpdateFormPartStatus = ({ propName, name, callback }) => ({\n  prevState,\n  childName,\n  value,\n}) => {\n  if (value === prevState[propName]) {\n    return immutable.set(\n      prevState,\n      `childStatuses.${childName}.${propName}`,\n      value\n    )\n  }\n\n  if (value) {\n    if (callback) {\n      callback(name, true)\n    }\n\n    return immutable.set(\n      { ...prevState, [propName]: true },\n      `childStatuses.${childName}.${propName}`,\n      value\n    )\n  }\n\n  const otherChildHasTrue = Object.keys(prevState.childStatuses).reduce(\n    (flag, key) => {\n      if (flag || key === childName) {\n        return flag\n      }\n\n      return prevState.childStatuses[key][propName]\n    },\n    false\n  )\n\n  if (!otherChildHasTrue) {\n    if (callback) {\n      callback(name, false)\n    }\n\n    return immutable.set(\n      { ...prevState, [propName]: false },\n      `childStatuses.${childName}.${propName}`,\n      value\n    )\n  }\n\n  return immutable.set(\n    prevState,\n    `childStatuses.${childName}.${propName}`,\n    value\n  )\n}\n\nexport default createUpdateFormPartStatus\n","import objectPath from 'object-path'\nimport { SubmissionError } from 'redux-form'\n\nexport default function handleReduxFormSubmitError(error) {\n  const errorMessage = `Status: ${error.status}, message: ${\n    error.error ? error.error.message : error.message\n  }`\n\n  const options = {\n    _error: errorMessage,\n    requestError: error,\n  }\n\n  if (error.parameterErrors) {\n    error.parameterErrors.forEach(parameterError => {\n      if (parameterError.fullPath && parameterError.errorCode) {\n        objectPath.set(options, parameterError.fullPath, parameterError)\n      }\n    })\n  }\n\n  throw new SubmissionError(options)\n}\n","import * as errorTransformations from './errorTransformations'\nimport { formatBooleanRadio, parseBooleanRadio } from './radioTransformations'\nimport createErrorKeys from './createErrorKeys'\nimport createHelpNotificationProps from './createHelpNotificationProps'\nimport createInputTest from './createInputTest'\nimport createLabelKey from './createLabelKey'\nimport createParameterKey from './createParameterKey'\nimport createUpdateFormPartStatus from './createUpdateFormPartStatus'\nimport handleReduxFormSubmitError from './handleReduxFormSubmitError'\n\nexport {\n  createErrorKeys,\n  createHelpNotificationProps,\n  createInputTest,\n  createLabelKey,\n  createParameterKey,\n  createUpdateFormPartStatus,\n  errorTransformations,\n  formatBooleanRadio,\n  handleReduxFormSubmitError,\n  parseBooleanRadio,\n}\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\nimport { MODULE_NAME, KEY_OBJECT_NAMSPACE } from './constants'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  reducer,\n} = keyObjectModuleFactory({\n  actionPrefix: 'CRUD',\n  keys: [\n    ':resource.allItems.fetched',\n    ':resource.allItems.fetching',\n    ':resource.count.value',\n    ':resource.count.fetched',\n    ':resource.count.fetching',\n    'nestedCache',\n    'nestedCache.:namespace.items',\n    'nestedCache.:namespace.items.:id',\n  ],\n  name: MODULE_NAME,\n  reducerKey: KEY_OBJECT_NAMSPACE,\n})\n\nexport { actionCreators, actionTypes, constants, globalSelectors, reducer }\n","export const ANY = 'any'\nexport const MODULE_NAME = 'search'\n","export const COLLISION_REPLACE = 'replace'\nexport const COLLISION_STACK = 'stack'\nexport const FIXED = 'fixed'\nexport const MODULE_NAME = 'notifications'\nexport const NOTIFICATIONS = 'notifications'\nexport const NOTIFICATION_SPECIFICATIONS = 'specifications'\nexport const INLINE = 'inline'\nexport const STATIC = 'static'\n","export const MAMMAL_FORM_NAME = 'mammalForm'\nexport const MODULE_NAME = 'collectionMammals'\nexport const SPECIMEN_FILTERS_FORM_NAME = 'specimenFilters'\nexport const SPECIMENS_MAMMALS_TABLE_COLUMNS = 'specimensMammalsTableColumns'\nexport const SPECIMENS_MAMMALS_TABLE_COLUMNS_SORTING =\n  'specimensMammalsTableColumnsSorting'\n","export const MODULE_NAME = 'curatedList'\nexport const OTHER_PREPARATION = 'other-preparation'\nexport const SKELETON = 'skeleton'\nexport const SKIN = 'skin'\nexport const WET_PREPARATION = 'wet-preparation'\n\nexport const UNSPECIFIED_OTHER_PREPARATION_PREPARATION_TYPE_ID = '23'\nexport const UNSPECIFIED_SKELETON_PREPARATION_TYPE_ID = '11'\nexport const UNSPECIFIED_SKIN_PREPARATION_TYPE_ID = '18'\nexport const UNSPECIFIED_WET_PREPARATION_PREPARATION_TYPE_ID = '22'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Message } from 'semantic-ui-react'\n\nimport { withI18n } from 'coreModules/i18n/higherOrderComponents'\n\nconst propTypes = {\n  description: PropTypes.node,\n  descriptionKey: PropTypes.string,\n  descriptionParams: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  header: PropTypes.node,\n  headerKey: PropTypes.string,\n  headerParams: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  i18n: PropTypes.shape({\n    translate: PropTypes.func.isRequired,\n  }).isRequired,\n  level: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  removeNotification: PropTypes.func.isRequired,\n  sequentialId: PropTypes.number.isRequired,\n  ttl: PropTypes.number,\n}\nconst defaultProps = {\n  description: undefined,\n  descriptionKey: undefined,\n  descriptionParams: undefined,\n  header: undefined,\n  headerKey: undefined,\n  headerParams: undefined,\n  level: 'info',\n  ttl: undefined,\n}\n\nexport class Flash extends Component {\n  componentDidMount() {\n    const { removeNotification, sequentialId, ttl } = this.props\n\n    if (ttl) {\n      this.ttlTimeout = setTimeout(\n        () => removeNotification({ sequentialId }),\n        ttl\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.ttlTimeout) {\n      clearInterval(this.ttlTimeout) // clearTimeout throws timeout.close is not a function, must use clearInterval\n    }\n  }\n\n  render() {\n    const {\n      description,\n      descriptionKey,\n      descriptionParams,\n      header,\n      headerKey,\n      headerParams,\n      i18n: { translate },\n      level,\n      removeNotification,\n      sequentialId,\n    } = this.props\n\n    return (\n      <Message\n        className=\"flash\"\n        content={\n          description ||\n          (descriptionKey &&\n            translate({ params: descriptionParams, textKey: descriptionKey }))\n        }\n        error={level === 'error'}\n        header={\n          header ||\n          (headerKey && translate({ params: headerParams, textKey: headerKey }))\n        }\n        info={level === 'info'}\n        onClick={() => removeNotification({ sequentialId })}\n        onDismiss={() => removeNotification({ sequentialId })}\n        success={level === 'success'}\n        warning={level === 'warning'}\n      />\n    )\n  }\n}\n\nFlash.propTypes = propTypes\nFlash.defaultProps = defaultProps\n\nexport default withI18n()(Flash)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Icon } from 'semantic-ui-react'\n\nimport layoutGlobalSelectors from 'coreModules/layout/globalSelectors'\nimport globalSizeSelectors from 'coreModules/size/globalSelectors'\nimport createNotificationAC from 'coreModules/notifications/actionCreators/createNotification'\n\nconst mapStateToProps = state => {\n  return {\n    applicationInModalLayer: layoutGlobalSelectors.getApplicationInModalLayer(\n      state\n    ),\n    isLarge: globalSizeSelectors.getIsLarge(state),\n  }\n}\nconst mapDispatchToProps = { createNotification: createNotificationAC }\n\nconst propTypes = {\n  applicationInModalLayer: PropTypes.bool.isRequired,\n  createNotification: PropTypes.func.isRequired,\n  helpNotificationProps: PropTypes.shape({\n    description: PropTypes.node,\n    descriptionHeaderKey: PropTypes.string,\n    descriptionKey: PropTypes.string,\n    headerKey: PropTypes.string,\n    linkTextKey: PropTypes.string,\n    linkTo: PropTypes.string,\n    size: PropTypes.string,\n  }).isRequired,\n  isLarge: PropTypes.bool.isRequired,\n}\n\nexport const FormFieldHelpIcon = ({\n  applicationInModalLayer,\n  createNotification,\n  helpNotificationProps,\n  isLarge,\n}) => {\n  let displayType = 'inline'\n  if (applicationInModalLayer || !isLarge) {\n    displayType = 'fixed'\n  }\n  return (\n    <Icon\n      color=\"blue\"\n      link\n      name=\"help circle outline\"\n      onClick={event => {\n        event.preventDefault()\n        event.stopPropagation()\n        createNotification({\n          componentProps: helpNotificationProps,\n          displayType,\n          type: 'HELP_TEXT',\n        })\n      }}\n    />\n  )\n}\n\nFormFieldHelpIcon.propTypes = propTypes\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormFieldHelpIcon)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from 'semantic-ui-react'\n\nimport { Translate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  description: PropTypes.node,\n  descriptionKey: PropTypes.string,\n  linkTextKey: PropTypes.string,\n  linkTo: PropTypes.string,\n}\nconst defaultProps = {\n  description: undefined,\n  descriptionKey: undefined,\n  linkTextKey: undefined,\n  linkTo: undefined,\n}\n\nconst InlineNotificationBody = ({\n  description,\n  descriptionKey,\n  linkTextKey,\n  linkTo,\n}) => {\n  return (\n    <Grid padded>\n      <Grid.Column>\n        {description && description}\n        {descriptionKey && (\n          <p style={{ whiteSpace: 'pre-line' }}>\n            <Translate capitalize textKey={descriptionKey} />\n          </p>\n        )}\n        {false && // temporary disable links\n          linkTextKey &&\n          linkTo && (\n            <p key=\"link\">\n              <a href={linkTo} rel=\"noopener noreferrer\" target=\"_blank\">\n                <Translate textKey={linkTextKey} />\n              </a>\n            </p>\n          )}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nInlineNotificationBody.propTypes = propTypes\nInlineNotificationBody.defaultProps = defaultProps\n\nexport default InlineNotificationBody\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\n\nimport { RowLayout } from 'coreModules/layout/components'\nimport { emToPixels } from 'coreModules/layout/utilities'\nimport { injectWindowHeight } from 'coreModules/size/higherOrderComponents'\nimport { ColumnRowHeader } from 'coreModules/commonUi/components'\nimport extractProps from 'utilities/extractProps'\nimport Body from './Body'\n\nconst propTypes = {\n  descriptionHeaderKey: PropTypes.string,\n  removeNotification: PropTypes.func.isRequired,\n  sequentialId: PropTypes.number.isRequired,\n  windowHeight: PropTypes.number.isRequired,\n}\nconst defaultProps = {\n  descriptionHeaderKey: undefined,\n}\n\nconst rows = [\n  {\n    height: '50px',\n    key: 'header',\n  },\n  {\n    key: 'body',\n  },\n]\n\nclass InlineWrapper extends Component {\n  constructor(props) {\n    super(props)\n\n    this.renderRow = this.renderRow.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  handleClose(event) {\n    event.preventDefault()\n\n    const { removeNotification, sequentialId } = this.props\n\n    removeNotification({ sequentialId })\n  }\n\n  renderRow(key) {\n    switch (key) {\n      case 'header': {\n        return (\n          <ColumnRowHeader\n            onClose={this.handleClose}\n            textKey={this.props.descriptionHeaderKey}\n          />\n        )\n      }\n      case 'body': {\n        const { extractedProps } = extractProps({\n          keys: ['description', 'descriptionKey', 'linkTextKey', 'linkTo'],\n          props: this.props,\n        })\n\n        return <Body {...extractedProps} />\n      }\n      default: {\n        throw new Error(`Unknown row: ${key}`)\n      }\n    }\n  }\n\n  render() {\n    const { windowHeight } = this.props\n\n    return (\n      <RowLayout\n        availableHeight={windowHeight - emToPixels(3.4375)}\n        renderRow={this.renderRow}\n        rows={rows}\n      />\n    )\n  }\n}\n\nInlineWrapper.propTypes = propTypes\nInlineWrapper.defaultProps = defaultProps\n\nexport default compose(injectWindowHeight)(InlineWrapper)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Header, Modal } from 'semantic-ui-react'\n\nimport { Translate } from 'coreModules/i18n/components'\n\nconst propTypes = {\n  description: PropTypes.node,\n  descriptionHeaderKey: PropTypes.string,\n  descriptionKey: PropTypes.string,\n  headerKey: PropTypes.string,\n  linkTextKey: PropTypes.string,\n  linkTo: PropTypes.string,\n  open: PropTypes.bool,\n  removeNotification: PropTypes.func.isRequired,\n  sequentialId: PropTypes.number.isRequired,\n  size: PropTypes.string,\n}\nconst defaultProps = {\n  description: undefined,\n  descriptionHeaderKey: undefined,\n  descriptionKey: undefined,\n  headerKey: undefined,\n  linkTextKey: undefined,\n  linkTo: undefined,\n  open: true,\n  size: undefined,\n}\n\nexport const NotificationModal = ({\n  description,\n  descriptionHeaderKey,\n  descriptionKey,\n  headerKey,\n  linkTextKey,\n  linkTo,\n  open,\n  removeNotification,\n  sequentialId,\n  size,\n}) => {\n  return (\n    <Modal\n      onClose={() => removeNotification({ sequentialId })}\n      open={open}\n      size={size}\n    >\n      {headerKey && (\n        <Modal.Header>\n          <Translate capitalize textKey={headerKey} />\n        </Modal.Header>\n      )}\n      <Modal.Content>\n        <Modal.Description>\n          {descriptionHeaderKey && (\n            <Header>\n              <Translate capitalize textKey={descriptionHeaderKey} />\n            </Header>\n          )}\n          {description && description}\n          {descriptionKey && (\n            <p style={{ whiteSpace: 'pre-line' }}>\n              <Translate capitalize textKey={descriptionKey} />\n            </p>\n          )}\n          {false && // temporary disable links\n            linkTextKey &&\n            linkTo && (\n              <p key=\"link\">\n                <a href={linkTo} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <Translate textKey={linkTextKey} />\n                </a>\n              </p>\n            )}\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nNotificationModal.propTypes = propTypes\nNotificationModal.defaultProps = defaultProps\n\nexport default NotificationModal\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { removeNotification } from '../actionCreators'\nimport globalSelectors from '../globalSelectors'\n\nconst mapStateToProps = (state, { displayType }) => {\n  return {\n    activeNotification: globalSelectors.getPrioritizedNotificationByDisplayType(\n      state,\n      displayType\n    ),\n  }\n}\nconst mapDispatchToProps = { removeNotification }\n\nconst propTypes = {\n  activeNotification: PropTypes.shape({\n    component: PropTypes.func.isRequired,\n    componentProps: PropTypes.object,\n    sequentialId: PropTypes.number.isRequired,\n  }),\n  displayType: PropTypes.oneOf(['fixed', 'static', 'inline']).isRequired,\n  removeNotification: PropTypes.func.isRequired,\n}\nconst defaultProps = {\n  activeNotification: undefined,\n}\n\nexport class NotificationDisplay extends Component {\n  render() {\n    const { activeNotification, displayType } = this.props\n\n    if (activeNotification) {\n      const {\n        component: NotificationComponent,\n        componentProps,\n        ...rest\n      } = activeNotification\n\n      return (\n        <NotificationComponent\n          {...componentProps}\n          {...rest}\n          displayType={displayType}\n          removeNotification={this.props.removeNotification}\n        />\n      )\n    }\n\n    return null\n  }\n}\n\nNotificationDisplay.propTypes = propTypes\nNotificationDisplay.defaultProps = defaultProps\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(NotificationDisplay)\n","import Flash from './Flash'\nimport FormFieldHelpIcon from './FormFieldHelpIcon'\nimport Inline from './Inline'\nimport Modal from './Modal'\nimport NotificationDisplay from './NotificationDisplay'\n\nexport { Flash, FormFieldHelpIcon, Inline, Modal, NotificationDisplay }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Inspector from 'react-json-inspector'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst propTypes = {\n  defaultExpanded: PropTypes.bool,\n  input: PropTypes.object.isRequired,\n}\n\nconst defaultProps = {\n  defaultExpanded: false,\n}\n\nclass ReadOnly extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isExpanded: props.defaultExpanded,\n    }\n    this.handleOnClick = this.handleOnClick.bind(this)\n  }\n\n  handleOnClick() {\n    this.setState({\n      isExpanded: true,\n    })\n  }\n\n  render() {\n    const { value } = this.props.input\n    let buttonText = 'Display'\n    let disabled = false\n    if (!(value && Object.keys(value).length)) {\n      buttonText = 'No legacy data'\n      disabled = true\n    }\n\n    if (!this.state.isExpanded) {\n      return (\n        <Button\n          disabled={disabled}\n          icon\n          labelPosition=\"left\"\n          onClick={event => {\n            event.preventDefault()\n            this.handleOnClick()\n          }}\n        >\n          {buttonText}\n          <Icon name=\"plus\" />\n        </Button>\n      )\n    }\n\n    return (\n      <div style={{ minHeight: 600 }}>\n        <Inspector data={value} isExpanded={() => true} />\n      </div>\n    )\n  }\n}\n\nReadOnly.defaultProps = defaultProps\nReadOnly.propTypes = propTypes\n\nexport default ReadOnly\n","import React, { Component } from 'react'\n\nconst createInjectScrollLeft = elementId => ComposedComponent => {\n  class ScrollLeftInjector extends Component {\n    constructor(props) {\n      super(props)\n      this.state = { scrollLeft: undefined }\n      this.handleScroll = this.handleScroll.bind(this)\n    }\n\n    componentDidMount() {\n      if (document) {\n        const element = document.getElementById(elementId)\n        if (element) {\n          element.addEventListener('scroll', this.handleScroll)\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      if (document) {\n        const element = document.getElementById(elementId)\n        if (element) {\n          element.removeEventListener('scroll', this.handleScroll)\n        }\n      }\n    }\n\n    handleScroll() {\n      const { scrollLeft } = document.getElementById(elementId)\n\n      this.setState({ scrollLeft })\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} scrollLeft={this.state.scrollLeft} />\n      )\n    }\n  }\n\n  return ScrollLeftInjector\n}\n\nexport default createInjectScrollLeft\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport globalSelectors from '../globalSelectors'\n\nconst injectWindowHeight = ComposedComponent => {\n  const mapStateToProps = state => {\n    return {\n      windowHeight: globalSelectors.getHeight(state),\n    }\n  }\n\n  const propTypes = {\n    windowHeight: PropTypes.number,\n  }\n\n  const defaultProps = {\n    windowHeight: 0,\n  }\n\n  const WindowHeight = props => {\n    return <ComposedComponent {...props} windowHeight={props.windowHeight} />\n  }\n\n  WindowHeight.propTypes = propTypes\n  WindowHeight.defaultProps = defaultProps\n\n  return connect(mapStateToProps)(WindowHeight)\n}\n\nexport default injectWindowHeight\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport globalSelectors from '../globalSelectors'\n\nconst injectWindowWidth = ComposedComponent => {\n  const mapStateToProps = state => {\n    return {\n      windowWidth: globalSelectors.getWidth(state),\n    }\n  }\n\n  const propTypes = {\n    windowWidth: PropTypes.number,\n  }\n\n  const defaultProps = {\n    windowWidth: 0,\n  }\n\n  const WindowWidth = props => {\n    return <ComposedComponent {...props} windowWidth={props.windowWidth} />\n  }\n\n  WindowWidth.propTypes = propTypes\n  WindowWidth.defaultProps = defaultProps\n\n  return connect(mapStateToProps)(WindowWidth)\n}\n\nexport default injectWindowWidth\n","export { default as createInjectScrollLeft } from './createInjectScrollLeft'\nexport { default as injectWindowHeight } from './injectWindowHeight'\nexport { default as injectWindowWidth } from './injectWindowWidth'\n","export default function wrapSelectors(selectors, globalSelectors = {}) {\n  const { getLocalState, ...selectorsToWrap } = selectors\n\n  if (!getLocalState) {\n    throw new Error('getLocalState selector is required')\n  }\n\n  const wrappedSelectors = Object.keys(selectorsToWrap).reduce(\n    (result, selectorName) => {\n      return {\n        ...result,\n        [selectorName]: (state, ...args) =>\n          selectors[selectorName](getLocalState(state), ...args),\n      }\n    },\n    {}\n  )\n\n  return {\n    ...wrappedSelectors,\n    ...globalSelectors,\n  }\n}\n","import keyObjectModuleFactory from 'utilities/keyObjectModuleFactory'\nimport { MODULE_NAME as name } from './constants'\n\nconst {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n} = keyObjectModuleFactory({\n  initialValues: {\n    leftSidebar: {\n      isOpen: false,\n    },\n  },\n  keys: ['applicationLayer', 'leftSidebar.isOpen', ':name.layoutMode'],\n  name,\n})\nexport {\n  actionCreators,\n  actionTypes,\n  constants,\n  globalSelectors,\n  selectors,\n  reducer,\n}\n","export const KEYBOARD_SHORTCUTS_REGISTER = 'KEYBOARD_SHORTCUTS_REGISTER'\nexport const KEYBOARD_SHORTCUTS_UNREGISTER = 'KEYBOARD_SHORTCUTS_UNREGISTER'\nexport const KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN =\n  'KEYBOARD_SHORTCUTS_SET_MODAL_HIDDEN'\nexport const KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE =\n  'KEYBOARD_SHORTCUTS_SET_MODAL_VISIBLE'\nexport const KEYBOARD_SHORTCUTS_TRIGGER = 'KEYBOARD_SHORTCUTS_TRIGGER'\nexport const KEYBOARD_SHORTCUTS_SET_LAYER = 'KEYBOARD_SHORTCUTS_SET_LAYER'\n","import { actionTypes, constants, reducer } from './keyObjectModule'\nimport { MODULE_NAME as name } from './constants'\n\nexport { actionTypes, constants, name, reducer }\n","export const getRelationshipFormat = ({ item, relationKey }) => {\n  const data =\n    item &&\n    item.relationships &&\n    item.relationships[relationKey] &&\n    item.relationships[relationKey].data\n  if (data === undefined) {\n    return undefined\n  }\n\n  if (Array.isArray(data)) {\n    return 'array'\n  }\n\n  return 'object'\n}\n\nexport const getRelationshipItem = ({ item, relationKey }) => {\n  return (\n    (item &&\n      item.relationships &&\n      item.relationships[relationKey] &&\n      item.relationships[relationKey].data) ||\n    null\n  )\n}\n\nexport const getRelationshipItems = ({ item, relationKey }) => {\n  return (\n    getRelationshipItem({\n      item,\n      relationKey,\n    }) || []\n  )\n}\n\nexport const getRelationshipItemId = ({ item, relationKey }) => {\n  const relationshipItem = getRelationshipItem({\n    item,\n    relationKey,\n  })\n\n  return relationshipItem && relationshipItem.id\n}\n\nexport const getRelationshipItemIds = ({ item, relationKey }) => {\n  const relationshipItems = getRelationshipItems({\n    item,\n    relationKey,\n  })\n\n  return relationshipItems.map(relationshipItem => {\n    return relationshipItem.id\n  })\n}\n\nexport const getParent = item => {\n  return getRelationshipItem({\n    item,\n    relationKey: 'parent',\n  })\n}\n\nexport const getParentId = item => {\n  return getRelationshipItemId({\n    item,\n    relationKey: 'parent',\n  })\n}\n\nexport const getChildren = item => {\n  return getRelationshipItems({\n    item,\n    relationKey: 'children',\n  })\n}\n\nexport const getChildrenIds = item => {\n  return getRelationshipItemIds({\n    item,\n    relationKey: 'children',\n  })\n}\n\nexport const getItemWithSpecificedRelationships = ({\n  item,\n  relationshipKeys = [],\n}) => {\n  if (!item) {\n    return item\n  }\n\n  if (!item.relationships) {\n    return item\n  }\n\n  return {\n    ...item,\n    relationships: Object.keys(item.relationships).reduce(\n      (relationships, relationshipKey) => {\n        if (\n          relationshipKeys.includes(relationshipKey) ||\n          relationshipKeys.includes('all')\n        ) {\n          return {\n            ...relationships,\n            [relationshipKey]: item.relationships[relationshipKey],\n          }\n        }\n        return relationships\n      },\n      {}\n    ),\n  }\n}\n\nexport const getItemsWithSpecificedRelationships = ({\n  items = [],\n  relationshipKeys,\n}) => {\n  return items.map(item => {\n    return getItemWithSpecificedRelationships({\n      item,\n      relationshipKeys,\n    })\n  })\n}\n","import * as components from './components'\nimport * as constants from './constants'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport translations from './translations.json'\nimport {\n  actionCreators,\n  actionTypes,\n  globalSelectors,\n  reducer,\n} from './keyObjectModule'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  components,\n  constants,\n  globalSelectors,\n  higherOrderComponents,\n  name,\n  reducer,\n  translations,\n}\n","import * as actionCreators from './actionCreators'\n// import * as components from './components'\nimport * as constants from './constants'\nimport translations from './translations.json'\nimport { actionTypes, globalSelectors, reducer } from './keyObjectModule'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  // components,\n  constants,\n  globalSelectors,\n  name,\n  reducer,\n  translations,\n}\n","import * as components from './components'\nimport * as constants from './constants'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport { components, constants, name, translations }\n","import * as components from './components'\nimport * as constants from './constants'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport { components, constants, name, translations }\n","import * as components from './components'\nimport * as constants from './constants'\nimport markdown from './__markdown__/index.json'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport { components, constants, markdown, name, translations }\n","import wrapSelectors from 'utilities/wrapSelectors'\nimport * as selectors from './selectors'\n\nexport default wrapSelectors(selectors)\n","export const COLLECTION_MAMMALS_CLEAR_SEARCH_PARAMETERS =\n  'COLLECTION_MAMMALS_CLEAR_SEARCH_PARAMETERS'\nexport const COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_FAIL =\n  'COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_FAIL'\nexport const COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_REQUEST =\n  'COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_REQUEST'\nexport const COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_SUCCESS =\n  'COLLECTION_MAMMALS_GET_BY_CATALOG_NUMBER_SUCCESS'\nexport const COLLECTION_MAMMALS_LOOKUP_MAMMALS_FAIL =\n  'COLLECTION_MAMMALS_LOOKUP_MAMMALS_FAIL'\nexport const COLLECTION_MAMMALS_LOOKUP_MAMMALS_REQUEST =\n  'COLLECTION_MAMMALS_LOOKUP_MAMMALS_REQUEST'\nexport const COLLECTION_MAMMALS_LOOKUP_MAMMALS_SUCCESS =\n  'COLLECTION_MAMMALS_LOOKUP_MAMMALS_SUCCESS'\nexport const COLLECTION_MAMMALS_SET_ACCORDION_ACTIVE_INDEX =\n  'COLLECTION_MAMMALS_SET_ACCORDION_ACTIVE_INDEX'\nexport const COLLECTION_MAMMALS_UPDATE_SEARCH_PARAMETER =\n  'COLLECTION_MAMMALS_UPDATE_SEARCH_PARAMETER'\n","import { COLLECTION_MAMMALS_CLEAR_SEARCH_PARAMETERS } from '../actionTypes'\n\nexport default function clearSearchParameters() {\n  return {\n    type: COLLECTION_MAMMALS_CLEAR_SEARCH_PARAMETERS,\n  }\n}\n","export const flattenRelationships = relationships => {\n  if (!relationships) {\n    return relationships\n  }\n\n  const relationshipKeys = Object.keys(relationships)\n\n  if (!relationshipKeys.length) {\n    return {}\n  }\n\n  return relationshipKeys.reduce((flatRelations, relationKey) => {\n    return {\n      ...flatRelations,\n      [relationKey]: relationships[relationKey].data,\n    }\n  }, {})\n}\n\nexport default function flattenObjectResponse(responseData = {}) {\n  const { id, attributes, relationships, type } = responseData || {}\n\n  const flattenedRelationships = flattenRelationships(relationships)\n\n  return {\n    ...attributes,\n    ...flattenedRelationships,\n    id,\n    type,\n  }\n}\n","import flattenObjectResponse from '../flattenObjectResponse'\n\nexport default flattenObjectResponse\n","import createEndpoint from 'utilities/endpointFactory/client'\n\nconst extractData = result => {\n  return result.data\n}\nconst flattenDataAttributes = data => {\n  if (!data) {\n    return data\n  }\n\n  if (Array.isArray(data)) {\n    return data.map(dataItem => flattenDataAttributes(dataItem))\n  }\n\n  const { attributes, id, type } = data\n\n  return {\n    id,\n    type,\n    ...attributes,\n  }\n}\n\nexport const GET_INDIVIDUAL_GROUP_BY_CATALOG_NUMBER = createEndpoint({\n  mapResponse: result => {\n    const data = extractData(result)\n    const firstDataItem = data && data[0] // should only be one result, which holds for mammals\n    return flattenDataAttributes(firstDataItem)\n  },\n\n  operationId: 'specimenGetMany',\n})\n\nexport const GET_SPECIMEN = createEndpoint({\n  operationId: 'specimenGetOne',\n})\n\nexport const LOOKUP_MAMMALS = createEndpoint({\n  operationId: 'specimenGetMany',\n})\n\nexport const REGISTER_MAMMAL = createEndpoint({\n  mapResponse: result => flattenDataAttributes(extractData(result)),\n  operationId: 'specimenCreate',\n})\n\nexport const UPDATE_SPECIMEN = createEndpoint({\n  mapResponse: result => flattenDataAttributes(extractData(result)),\n  operationId: 'specimenUpdate',\n})\n","import { flattenArrayResponse } from 'utilities/transformations'\n\nimport {\n  COLLECTION_MAMMALS_LOOKUP_MAMMALS_FAIL,\n  COLLECTION_MAMMALS_LOOKUP_MAMMALS_REQUEST,\n  COLLECTION_MAMMALS_LOOKUP_MAMMALS_SUCCESS,\n} from '../actionTypes'\nimport { LOOKUP_MAMMALS } from '../endpoints'\n\nexport default function lookupMammals(filterParams = {}) {\n  const queryParams = { filter: filterParams, relationships: ['taxonNames'] }\n\n  return (dispatch, getState, { apiClient }) => {\n    dispatch({\n      type: COLLECTION_MAMMALS_LOOKUP_MAMMALS_REQUEST,\n    })\n    return apiClient\n      .call(LOOKUP_MAMMALS, {\n        queryParams,\n      })\n      .then(\n        response => {\n          const transformedResponse = flattenArrayResponse(response.data)\n          dispatch({\n            payload: transformedResponse,\n            type: COLLECTION_MAMMALS_LOOKUP_MAMMALS_SUCCESS,\n          })\n          return transformedResponse\n        },\n        error => {\n          dispatch({\n            error: true,\n            payload: error,\n            type: COLLECTION_MAMMALS_LOOKUP_MAMMALS_FAIL,\n          })\n        }\n      )\n  }\n}\n","import flattenObjectResponse from '../flattenObjectResponse'\n\nexport default function flattenArrayResponse(responseData = {}) {\n  if (!responseData || !Array.isArray(responseData) || !responseData.length) {\n    return []\n  }\n\n  return responseData.map(flattenObjectResponse)\n}\n","import { COLLECTION_MAMMALS_UPDATE_SEARCH_PARAMETER } from '../actionTypes'\n\nexport default function updateSearchParameter(key, value) {\n  return {\n    payload: { key, value },\n    type: COLLECTION_MAMMALS_UPDATE_SEARCH_PARAMETER,\n  }\n}\n","import { reducer } from './keyObjectModule'\nimport * as actionCreators from './actionCreators'\nimport * as actionTypes from './actionTypes'\nimport * as components from './components'\nimport * as constants from './constants'\nimport * as endpoints from './endpoints'\nimport globalSelectors from './globalSelectors'\nimport markdown from './__markdown__/index.json'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionCreators,\n  actionTypes,\n  components,\n  constants,\n  endpoints,\n  globalSelectors,\n  markdown,\n  name,\n  reducer,\n  translations,\n}\n","export const TAXON_SERVICE_UPDATE_SEARCH_QUERY =\n  'TAXON_SERVICE_UPDATE_SEARCH_QUERY'\n","import { createSelector } from 'reselect'\n\nimport getSecondArgument from 'utilities/getSecondArgument'\nimport { MODULE_NAME } from './constants'\nimport { mapTaxonNameToOption } from './utilities'\n\nexport const getLocalState = state => {\n  return state[MODULE_NAME]\n}\n\nexport const getLookup = state => {\n  return state.lookup\n}\n\nexport const getLookupError = createSelector(\n  getLookup,\n  lookup => lookup.error\n)\n\nexport const getLookupLoading = createSelector(\n  getLookup,\n  lookup => lookup.loading\n)\n\nexport const getLookupResult = createSelector(\n  getLookup,\n  lookup => {\n    return lookup.result || []\n  }\n)\n\nexport const getLookupDropdownOptions = createSelector(\n  getLookupResult,\n  lookupResult => {\n    return lookupResult.map(mapTaxonNameToOption)\n  }\n)\n\nexport const getLookupSearchQueries = createSelector(\n  getLookup,\n  lookup => lookup.searchQueries\n)\n\nexport const getLookupSearchQuery = createSelector(\n  [getLookupSearchQueries, getSecondArgument],\n  (searchQueries, inputName) => searchQueries[inputName]\n)\n","import { createSelector } from 'reselect'\n\nimport crudSelectors from 'coreModules/crud/globalSelectors'\nimport getSecondArgument from 'utilities/getSecondArgument'\nimport wrapSelectors from 'utilities/wrapSelectors'\nimport { capitalizeFirstLetter } from 'common/es5/stringFormatters'\nimport { getParentId, getRelationshipItemId } from 'coreModules/crud/utilities'\nimport { mapTaxonNameToOption } from './utilities'\nimport * as selectors from './selectors'\nimport { MISSING_RANK } from './constants'\n\nconst {\n  taxon: { getItemsObject: getTaxa, getAll: getTaxaArray },\n  taxonName: {\n    getItemsObject: getTaxonNames,\n    getAll: getTaxonNamesArray,\n    getOne: getTaxonName,\n  },\n} = crudSelectors\n\nconst getTaxonNamesSortedArray = createSelector(\n  getTaxonNamesArray,\n  taxaArray => {\n    return taxaArray.sort(({ attributes: a = {} }, { attributes: b = {} }) => {\n      if (a.name < b.name) return -1\n      if (a.name > b.name) return 1\n      return 0\n    })\n  }\n)\n\nconst getTaxonNamesArrayByFilter = createSelector(\n  getTaxonNamesSortedArray,\n  getSecondArgument,\n  (taxaArray, filter = {}) => {\n    const {\n      group: groupFilter,\n      limit: limitFilter,\n      offset = 0,\n      searchQuery: searchQueryFilter,\n    } = filter\n    let filteredTaxonNames = [...taxaArray]\n    if (searchQueryFilter) {\n      const lowerCaseSearchQuery = searchQueryFilter.toLowerCase()\n      const firstLetterMatches = filteredTaxonNames.filter(\n        ({ attributes: { name } = {} }) => {\n          return name && name.toLowerCase().indexOf(lowerCaseSearchQuery) === 0\n        }\n      )\n\n      const otherMatches = filteredTaxonNames.filter(\n        ({ attributes: { name } = {} }) => {\n          return name && name.toLowerCase().indexOf(lowerCaseSearchQuery) > 0\n        }\n      )\n\n      filteredTaxonNames = [...firstLetterMatches, ...otherMatches]\n    }\n\n    if (groupFilter) {\n      filteredTaxonNames = filteredTaxonNames.filter(\n        ({ attributes: { rank } = {} }) => {\n          return rank ? rank === groupFilter : groupFilter === MISSING_RANK\n        }\n      )\n    }\n\n    if (limitFilter) {\n      return filteredTaxonNames.splice(offset, limitFilter)\n    }\n\n    return filteredTaxonNames\n  }\n)\n\nconst getTaxonNameOptions = createSelector(\n  [getTaxonNamesSortedArray],\n  taxonNames => {\n    return taxonNames\n      .map(({ id, attributes = {} }) => {\n        const { name } = attributes\n        if (!name) {\n          return null\n        }\n\n        return {\n          key: id,\n          text: capitalizeFirstLetter(name),\n          value: id,\n        }\n      })\n      .filter(option => !!option)\n  }\n)\n\nconst getTaxonNamesWithAcceptedToTaxon = createSelector(\n  getTaxa,\n  getTaxonNamesSortedArray,\n  (taxonObject, taxonNames) => {\n    return taxonNames.filter(\n      ({ attributes: { acceptedToTaxon } = {} }) => !!acceptedToTaxon\n    )\n  }\n)\n\nconst getTaxonNameOption = createSelector(\n  getTaxonName,\n  taxonName => {\n    return taxonName && mapTaxonNameToOption(taxonName)\n  }\n)\n\nconst getTaxaSortedArray = createSelector(\n  getTaxaArray,\n  taxaArray => {\n    return taxaArray.sort(({ attributes: a = {} }, { attributes: b = {} }) => {\n      if (a.name < b.name) return -1\n      if (a.name > b.name) return 1\n      return 0\n    })\n  }\n)\n\nconst getTaxonOptions = createSelector(\n  getTaxaSortedArray,\n  getTaxonNames,\n  (taxaArray, taxonNames) => {\n    return taxaArray\n      .map(taxon => {\n        const acceptedTaxonNameId = getRelationshipItemId({\n          item: taxon,\n          relationKey: 'acceptedTaxonName',\n        })\n        if (!acceptedTaxonNameId) {\n          return null\n        }\n\n        const acceptedTaxonName = taxonNames[acceptedTaxonNameId]\n        const name =\n          acceptedTaxonName &&\n          acceptedTaxonName.attributes &&\n          acceptedTaxonName.attributes.name\n\n        return {\n          key: taxon.id,\n          text: capitalizeFirstLetter(name),\n          value: taxon.id,\n        }\n      })\n      .filter(item => !!item)\n  }\n)\n\nconst getTaxaArrayByFilter = createSelector(\n  getTaxaSortedArray,\n  getTaxonNames,\n  getSecondArgument,\n  (taxaArray, taxonNames, filter = {}) => {\n    const {\n      group: groupFilter,\n      limit: limitFilter,\n      offset = 0,\n      parentId: parentIdFilter,\n      searchQuery: searchQueryFilter,\n    } = filter\n    let filteredTaxa = [...taxaArray]\n\n    if (parentIdFilter) {\n      filteredTaxa = filteredTaxa.filter(taxon => {\n        return getParentId(taxon) === parentIdFilter\n      })\n    }\n\n    if (searchQueryFilter) {\n      const lowerCaseSearchQuery = searchQueryFilter.toLowerCase()\n      const firstLetterMatches = filteredTaxa.filter(taxon => {\n        const acceptedTaxonNameId = getRelationshipItemId({\n          item: taxon,\n          relationKey: 'acceptedTaxonName',\n        })\n\n        const taxonName = taxonNames[acceptedTaxonNameId]\n        return (\n          taxonName &&\n          taxonName.attributes &&\n          taxonName.attributes.name &&\n          taxonName.attributes.name\n            .toLowerCase()\n            .indexOf(lowerCaseSearchQuery) === 0\n        )\n      })\n\n      const otherMatches = filteredTaxa.filter(taxon => {\n        const acceptedTaxonNameId = getRelationshipItemId({\n          item: taxon,\n          relationKey: 'acceptedTaxonName',\n        })\n\n        const taxonName = taxonNames[acceptedTaxonNameId]\n\n        return (\n          taxonName &&\n          taxonName.attributes &&\n          taxonName.attributes.name &&\n          taxonName.attributes.name\n            .toLowerCase()\n            .indexOf(lowerCaseSearchQuery) > 0\n        )\n      })\n\n      filteredTaxa = [...firstLetterMatches, ...otherMatches]\n    }\n\n    if (groupFilter) {\n      filteredTaxa = filteredTaxa.filter(taxon => {\n        const acceptedTaxonNameId = getRelationshipItemId({\n          item: taxon,\n          relationKey: 'acceptedTaxonName',\n        })\n\n        const taxonName = taxonNames[acceptedTaxonNameId]\n        return taxonName &&\n          taxonName.attributes.rank &&\n          taxonName.attributes.rank\n          ? taxonName.attributes.rank === groupFilter\n          : groupFilter === MISSING_RANK\n      })\n    }\n\n    if (limitFilter) {\n      return filteredTaxa.splice(offset, limitFilter)\n    }\n\n    return filteredTaxa\n  }\n)\n\nconst getTaxonAncestorsAcceptedTaxonNameById = createSelector(\n  getTaxa,\n  getTaxonNames,\n  getSecondArgument,\n  (taxa, taxonNames, currentId) => {\n    const ancestors = []\n    const walkUp = taxon => {\n      const acceptedTaxonNameId = getRelationshipItemId({\n        item: taxon,\n        relationKey: 'acceptedTaxonName',\n      })\n      if (taxonNames && acceptedTaxonNameId) {\n        ancestors.push(taxonNames[acceptedTaxonNameId])\n      }\n      const parentId = getParentId(taxon)\n      if (parentId) {\n        const next = taxa[parentId]\n        if (next) {\n          walkUp(next)\n        }\n      }\n    }\n\n    const current = taxa[currentId]\n    if (!current) {\n      return ancestors\n    }\n\n    walkUp(current)\n\n    return ancestors.reverse()\n  }\n)\n\nexport default wrapSelectors(selectors, {\n  getTaxaArrayByFilter,\n  getTaxaSortedArray,\n  getTaxonAncestorsAcceptedTaxonNameById,\n  getTaxonNameOption,\n  getTaxonNameOptions,\n  getTaxonNamesArrayByFilter,\n  getTaxonNamesSortedArray,\n  getTaxonNamesWithAcceptedToTaxon,\n  getTaxonOptions,\n})\n","import { debounce } from 'lodash'\n\nimport createLog from 'utilities/log'\nimport actionCreators from 'coreModules/crud/actionCreators'\nimport globalSelectors from './globalSelectors'\nimport { TAXON_SERVICE_UPDATE_SEARCH_QUERY } from './actionTypes'\n\nconst log = createLog('dataModules:taxonService:middleware')\n\nconst getTaxonNames = actionCreators.taxonName.getMany\n\nconst debounceTaxonSearch = debounce(\n  ({ dispatch, getState, inputName }) => {\n    log.debug('Debounce getTaxa')\n    const searchQuery = globalSelectors.getLookupSearchQuery(\n      getState(),\n      inputName\n    )\n\n    if (searchQuery) {\n      dispatch(\n        getTaxonNames({\n          isLookup: true,\n          queryParams: {\n            filter: {\n              nameSearch: searchQuery,\n            },\n            limit: 10,\n          },\n        })\n      )\n    }\n  },\n  100,\n  {\n    maxWait: 500,\n  }\n)\n\nexport default function createTaxonMiddleware() {\n  return ({ dispatch, getState }) => next => action => {\n    const result = next(action)\n    switch (action.type) {\n      case TAXON_SERVICE_UPDATE_SEARCH_QUERY: {\n        if (action.payload) {\n          const { inputName } = action.meta\n          debounceTaxonSearch({ dispatch, getState, inputName })\n        }\n        break\n      }\n\n      default:\n        break\n    }\n    return result\n  }\n}\n","import { createSetter } from 'utilities/stateHelper'\n\nimport actionTypes from 'coreModules/crud/actionTypes'\nimport { TAXON_SERVICE_UPDATE_SEARCH_QUERY } from '../../actionTypes'\n\nconst {\n  taxonName: {\n    getMany: {\n      fail: failActionType,\n      request: requestActionType,\n      success: successActionType,\n    },\n  },\n} = actionTypes\n\nconst setLookupError = createSetter(['error'])\nconst setLookupLoading = createSetter(['loading'])\nconst setLookupResult = createSetter(['result'])\n\nexport const getInitialState = () => {\n  return {\n    error: null,\n    loading: false,\n    result: [],\n    searchQueries: {},\n  }\n}\n\nexport default function reducer(state = getInitialState(), action) {\n  switch (action.type) {\n    case requestActionType: {\n      if (action.meta.isLookup) {\n        return setLookupLoading(state, true)\n      }\n\n      return state\n    }\n\n    case failActionType: {\n      if (action.meta.isLookup) {\n        const emptyResultState = setLookupResult(\n          setLookupLoading(state, false),\n          []\n        )\n        return setLookupError(emptyResultState, action.payload)\n      }\n\n      return state\n    }\n\n    case successActionType: {\n      if (action.meta.isLookup) {\n        const emptyErrorState = setLookupError(\n          setLookupLoading(state, false),\n          null\n        )\n        return setLookupResult(emptyErrorState, action.payload || [])\n      }\n\n      return state\n    }\n\n    case TAXON_SERVICE_UPDATE_SEARCH_QUERY: {\n      return {\n        ...state,\n        searchQueries: {\n          ...state.searchQueries,\n          [action.meta.inputName]: action.payload,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport lookup from './lookup'\n\nexport default combineReducers({\n  lookup,\n})\n","import * as components from './components'\nimport * as actionTypes from './actionTypes'\nimport * as constants from './constants'\nimport middleware from './middleware'\nimport reducer from './reducer'\nimport translations from './translations.json'\n\nconst name = constants.MODULE_NAME\n\nexport {\n  actionTypes,\n  components,\n  constants,\n  middleware,\n  name,\n  reducer,\n  translations,\n}\n","import { LOCATION_CHANGE } from 'react-router-redux'\nimport { actionTypes as keyObjectModuleActionTypes } from 'coreModules/layout/keyObjectModule'\n\nimport { SIZE_SET_BREAKPOINT } from 'coreModules/size/actionTypes'\nimport { Flash } from 'coreModules/notifications/components'\nimport {\n  COLLISION_REPLACE,\n  FIXED,\n  INLINE,\n} from 'coreModules/notifications/constants'\nimport HelpTextNotification from '../components/migrate/HelpTextNotification'\n\nconst fieldHelpTextDefaults = {\n  collision: COLLISION_REPLACE,\n  component: HelpTextNotification,\n  displayType: INLINE,\n  priority: 10,\n  terminateActions: [\n    keyObjectModuleActionTypes.set.applicationLayer,\n    LOCATION_CHANGE,\n    SIZE_SET_BREAKPOINT,\n  ],\n  type: 'HELP_TEXT',\n}\n\nconst HELP_TEXT = {\n  ...fieldHelpTextDefaults,\n}\n\nconst FIELD_CHANGE_WARNING = {\n  collision: COLLISION_REPLACE,\n  component: Flash,\n  displayType: FIXED,\n  level: 'warning',\n  priority: 10,\n  terminateActions: [LOCATION_CHANGE],\n  ttl: 8000,\n  type: 'FIELD_CHANGE_WARNING',\n}\n\nexport { FIELD_CHANGE_WARNING, HELP_TEXT }\n","import { reducer } from 'redux-form'\n\nexport default reducer\n","import * as components from './components'\nimport * as higherOrderComponents from './higherOrderComponents'\nimport * as notifications from './notifications'\nimport * as selectors from './selectors'\nimport * as utilities from './utilities'\nimport globalSelectors from './globalSelectors'\nimport reducer from './reducer'\nimport translations from './translations.json'\nimport { MODULE_NAME as name } from './constants'\n\nexport {\n  components,\n  higherOrderComponents,\n  selectors,\n  globalSelectors,\n  notifications,\n  name,\n  reducer,\n  translations,\n  utilities,\n}\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport actionCreators from 'coreModules/crud/actionCreators'\nimport { search } from '../actionCreators'\n\nconst createInjectSearch = ({\n  excludeFields: defaultExcludeFields,\n  includeFields: defaultIncludeFields,\n  resource,\n  storeSearchResult = true,\n} = {}) => ComposedComponent => {\n  const mapDispatchToProps = {\n    search,\n  }\n\n  const propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    resource: PropTypes.string,\n    search: PropTypes.func.isRequired,\n  }\n\n  const defaultProps = {\n    resource,\n  }\n\n  class Search extends Component {\n    constructor(props) {\n      super(props)\n      this.search = this.search.bind(this)\n      this.getManySearch = this.getManySearch.bind(this)\n    }\n\n    getManySearch({ resource: resourceInput, queryParams } = {}) {\n      const { dispatch } = this.props\n      const { resource: propResource } = this.props\n      const usedResource = resourceInput || propResource || resource\n\n      const getManyActionCreator =\n        actionCreators[usedResource] && actionCreators[usedResource].getMany\n\n      if (!getManyActionCreator) {\n        throw new Error(\n          `Missing getManyActionCreator for resource ${usedResource}`\n        )\n      }\n      return dispatch(\n        getManyActionCreator({\n          queryParams,\n        })\n      )\n    }\n    search({\n      aggregations,\n      excludeFields: excludeFieldsInput,\n      includeDeactivated,\n      includeFields: includeFieldsInput,\n      limit,\n      query,\n      resource: resourceInput,\n      sort,\n      useScroll = true,\n    } = {}) {\n      const { resource: propResource } = this.props\n      return this.props.search({\n        aggregations,\n        excludeFields: excludeFieldsInput || defaultExcludeFields,\n        includeDeactivated,\n        includeFields: includeFieldsInput || defaultIncludeFields,\n        limit,\n        query,\n        resource: resourceInput || propResource || resource,\n        sort,\n        storeSearchResult,\n        useScroll,\n      })\n    }\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          getManySearch={this.getManySearch}\n          search={this.search}\n        />\n      )\n    }\n  }\n\n  Search.propTypes = propTypes\n  Search.defaultProps = defaultProps\n\n  return compose(\n    connect(\n      null,\n      mapDispatchToProps\n    ),\n    connect()\n  )(Search)\n}\n\nexport default createInjectSearch\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { globalSelectors } from '../keyObjectModule'\n\nconst createInjectSearchResult = ({\n  resource = 'searchSpecimen',\n} = {}) => ComposedComponent => {\n  const mapStateToProps = (state, ownProps) => {\n    const { resource: propResource } = ownProps\n    return {\n      searchResult: globalSelectors.get[':resource.searchState'](state, {\n        resource: propResource || resource,\n      }),\n    }\n  }\n\n  const propTypes = {\n    resource: PropTypes.string,\n    searchResult: PropTypes.object,\n  }\n\n  const defaultProps = {\n    resource,\n    searchResult: undefined,\n  }\n\n  class SearchResultInjector extends Component {\n    render() {\n      const { resource: propResource } = this.props\n      return (\n        <ComposedComponent\n          {...this.props}\n          searchResult={this.props.searchResult}\n          searchResultResourceType={propResource || resource}\n        />\n      )\n    }\n  }\n\n  SearchResultInjector.propTypes = propTypes\n  SearchResultInjector.defaultProps = defaultProps\n\n  return compose(connect(mapStateToProps))(SearchResultInjector)\n}\n\nexport default createInjectSearchResult\n","export { default as createInjectSearch } from './createInjectSearch'\nexport { default as createInjectSearchResult } from './createInjectSearchResult'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\n\nconst PARSE_AS_NUMBER_TYPES = ['numberAsText', 'number']\nconst FORMAT_AS_STRING_TYPES = ['numberAsText']\n\nconst parseToNumber = value => {\n  if (value === '' || value === undefined || value === null) {\n    return value\n  }\n\n  return Number(value)\n}\n\nconst formatToString = value => {\n  if (value === '' || value === undefined || value === null) {\n    return value\n  }\n\n  return String(value)\n}\n\nconst propTypes = {\n  format: PropTypes.func,\n  parse: PropTypes.func,\n  type: PropTypes.string,\n}\nconst defaultProps = {\n  format: undefined,\n  parse: undefined,\n  type: undefined,\n}\n\nconst FieldWrapper = ({ format, parse, type, ...rest }) => {\n  const parseAsNumber = !parse && PARSE_AS_NUMBER_TYPES.includes(type)\n  const formatAsString = !format && FORMAT_AS_STRING_TYPES.includes(type)\n  return (\n    <Field\n      format={formatAsString ? formatToString : format}\n      parse={parseAsNumber ? parseToNumber : parse}\n      type={type}\n      {...rest}\n    />\n  )\n}\n\nFieldWrapper.propTypes = propTypes\nFieldWrapper.defaultProps = defaultProps\n\nexport default FieldWrapper\n"],"sourceRoot":""}