version: '3.3'
services:
  dockerhub-hook:
    image: maccyber/micro-dockerhub-hook
    ports:
      - "8004:3000"
    env_file:
      - ./env/.docker-hook
    volumes:
      - ./docker-hooks:/src/scripts
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/var/dina-collections

  ui:
    image: dina/dina-collections-ui
    container_name: dina-collections-ui
    expose:
    - "80"
    env_file:
      - ./env/.ui
    command: /bin/bash -c "envsubst '$$NGINX_TAXONOMY_API_BASE_URL $$NGINX_API_BASE_URL $$NGINX_HOST $$NGINX_PORT $$NGINX_AUTH_BASE_URL' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - api

  ui-mock:
    image: dina/dina-collections-ui-mock
    container_name: dina-collections-ui-mock
    expose:
    - "80"
    env_file:
      - ./env/.ui-mock
    command: /bin/bash -c "envsubst '$$NGINX_TAXONOMY_API_BASE_URL $$NGINX_API_BASE_URL $$NGINX_HOST $$NGINX_PORT $$NGINX_AUTH_BASE_URL' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  style:
    image: dina/dina-semantic-ui-docs
    container_name: dina-semantic-ui-docs
    expose:
    - "80"
    env_file:
      - ./env/.style
    command: /bin/bash -c "envsubst '$$NGINX_HOST $$NGINX_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  api:
    image: dina/dina-collections-api
    container_name: dina-api
    expose:
    - "80"
    env_file:
      - ./env/.api

    command: pm2-runtime start /etc/api/src/apps/core/index.js
    depends_on:
      - postgres
    volumes:
      - ./data:/data

  searchEngine:
    image: dina/dina-collections-api
    container_name: dina-search-engine
    env_file:
      - ./env/.api
    command: pm2-runtime start /etc/api/src/apps/searchEngine/index.js
    depends_on:
      - postgres
    volumes:
      - ./data:/data

  postgres:
    image: postgres
    container_name: postgres
    ports:
    - "5432:5432"
    env_file:
      - ./env/.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  postgres_data:
  es_data:
